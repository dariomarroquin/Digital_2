Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\MAESTRO.X.production.sym \
  --cmf=dist/default/production\MAESTRO.X.production.cmf -z -Q16F887 \
  -oC:\Users\crade\AppData\Local\Temp\s13f4.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MAESTRO.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\crade\AppData\Local\Temp\s13f4.o \
  dist/default/production\MAESTRO.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\crade\AppData\Local\Temp\s13f4.o
                end_init                              E        E        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\MAESTRO.X.production.o
                cinit                                11       11        E        8       0
                intentry                              4        4        A        8       0
                config                             2007     2007        2        0       4
                text16                              560      560       21      888       0
                text15                              5B8      5B8       10      888       0
                text14                              5A6      5A6       12      888       0
                text13                              480      480       31      888       0
                text12                              581      581       13      888       0
                text11                              4E1      4E1       2D      888       0
                text10                              4B1      4B1       30      888       0
                text9                               5C8      5C8        C      888       0
                text8                               539      539       27      888       0
                text7                               2AC      2AC       9D        8       0
                text6                               349      349       73        8       0
                text5                               3BC      3BC       46        8       0
                text4                               444      444       3C      888       0
                text3                               50E      50E       2B      888       0
                text2                               594      594       12      888       0
                text1                                1F       1F      188        8       0
                maintext                            1A7      1A7      105        8       0
                cstackBANK0                          20       20       2B       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             5D4      5D4        8      888       0
                bssBANK0                             4B       4B       20       20       1
                bssCOMMON                            79       79        1       70       1
                strings                             402      402       42      804       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              E        E        3         0
                cinit                                11       11        E         0
                intentry                              4        4        A         0
                reset_vec                             0        0        3         0
                text16                              560      560       21         0
                text15                              5B8      5B8       10         0
                text14                              5A6      5A6       12         0
                text13                              480      480       31         0
                text12                              581      581       13         0
                text11                              4E1      4E1       2D         0
                text10                              4B1      4B1       30         0
                text9                               5C8      5C8        C         0
                text8                               539      539       27         0
                text7                               2AC      2AC       9D         0
                text6                               349      349       73         0
                text5                               3BC      3BC       46         0
                text4                               444      444       3C         0
                text3                               50E      50E       2B         0
                text2                               594      594       12         0
                text1                                1F       1F      188         0
                maintext                            1A7      1A7      105         0
                clrtext                             5D4      5D4        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             402      402       42         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       2B         1
                bssBANK0                             4B       4B       20         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0003FE  000402         8       0  CODE        2
                cstackBANK0                    000020  00004B  00006B        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                strings                        000402  000042  000444       804       0  STRING      2
                text4                          000444  000198  0005DC       888       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006B-006F              5           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         05DC-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         05DC-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         05DC-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006B-006F              5           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         05DC-1FFF           1A24
        STRING           0003-0003              1           2
                         05DC-1FFF            100

                                  Symbol Table

?___aldiv                  cstackBANK0  0020
?___lwdiv                  cstackCOMMON 0074
?___lwmod                  cstackBANK0  0023
?___wmul                   cstackCOMMON 0074
?_sprintf                  cstackBANK0  0029
LCDGoto@ln                 cstackBANK0  0020
LCDGoto@pos                cstackBANK0  0025
LCDPutChar@ch              cstackCOMMON 0078
LCDPutCmd@ch               cstackCOMMON 0078
LCDPutStr@i                cstackBANK0  0023
LCDPutStr@str              cstackBANK0  0020
LCDWrite@ch                cstackCOMMON 0075
LCDWrite@rs                cstackCOMMON 0074
USART_Initialize@baudrate  cstackBANK0  002E
USART_Initialize@x         cstackCOMMON 0075
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_BAUDCTLbits               (abs)        0187
_INTCONbits                (abs)        000B
_IOCB                      (abs)        0096
_ISR                       text16       0560
_LCDGoto                   text13       0480
_LCDGoto$497               cstackBANK0  0023
_LCDPutChar                text12       0581
_LCDPutCmd                 text14       05A6
_LCDPutStr                 text11       04E1
_LCDWrite                  text15       05B8
_LCD_Initialize            text10       04B1
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTBbits                 (abs)        0006
_PORTC                     (abs)        0007
_PORTCbits                 (abs)        0007
_PORTD                     (abs)        0008
_PORTE                     (abs)        0009
_RCSTAbits                 (abs)        0018
_SPBRG                     (abs)        0099
_SPIMas                    text9        05C8
_SSPBUF                    (abs)        0013
_SSPCON                    (abs)        0014
_SSPSTAT                   (abs)        0094
_SSPSTATbits               (abs)        0094
_Setup                     text8        0539
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISCbits                 (abs)        0087
_TRISD                     (abs)        0088
_TRISE                     (abs)        0089
_TXREG                     (abs)        0019
_TXSTAbits                 (abs)        0098
_USART_Initialize          text6        0349
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        001F
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0011
__Hfunctab                 functab      0000
__Hinit                    init         000E
__Hintentry                intentry     000E
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        05DC
__Hspace_1                 (abs)        007A
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0011
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000E
__Lfunctab                 functab      0000
__Linit                    init         000E
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        05DC
__S1                       (abs)        007A
__S2                       (abs)        0000
__S3                       (abs)        0000
___aldiv                   text7        02AC
___aldiv@counter           cstackBANK0  0028
___aldiv@dividend          cstackBANK0  0024
___aldiv@divisor           cstackBANK0  0020
___aldiv@quotient          cstackBANK0  002A
___aldiv@sign              cstackBANK0  0029
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text5        03BC
___lwdiv@counter           cstackBANK0  0022
___lwdiv@dividend          cstackCOMMON 0076
___lwdiv@divisor           cstackCOMMON 0074
___lwdiv@quotient          cstackBANK0  0020
___lwmod                   text4        0444
___lwmod@counter           cstackBANK0  0028
___lwmod@dividend          cstackBANK0  0025
___lwmod@divisor           cstackBANK0  0023
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text3        050E
___wmul@multiplicand       cstackCOMMON 0076
___wmul@multiplier         cstackCOMMON 0074
___wmul@product            cstackBANK0  0020
__end_of_ISR               text16       0581
__end_of_LCDGoto           text13       04B1
__end_of_LCDPutChar        text12       0594
__end_of_LCDPutCmd         text14       05B8
__end_of_LCDPutStr         text11       050E
__end_of_LCDWrite          text15       05C8
__end_of_LCD_Initialize    text10       04E1
__end_of_SPIMas            text9        05D4
__end_of_Setup             text8        0560
__end_of_USART_Initialize  text6        03BC
__end_of___aldiv           text7        0349
__end_of___lwdiv           text5        0402
__end_of___lwmod           text4        0480
__end_of___wmul            text3        0539
__end_of__initialization   cinit        001B
__end_of__stringtab        strings      0412
__end_of_dpowers           strings      041C
__end_of_isdigit           text2        05A6
__end_of_main              maintext     02AC
__end_of_sprintf           text1        01A7
__initialization           cinit        0011
__pbssBANK0                bssBANK0     004B
__pbssCOMMON               bssCOMMON    0079
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     01A7
__pstrings                 strings      0402
__ptext1                   text1        001F
__ptext10                  text10       04B1
__ptext11                  text11       04E1
__ptext12                  text12       0581
__ptext13                  text13       0480
__ptext14                  text14       05A6
__ptext15                  text15       05B8
__ptext16                  text16       0560
__ptext2                   text2        0594
__ptext3                   text3        050E
__ptext4                   text4        0444
__ptext5                   text5        03BC
__ptext6                   text6        0349
__ptext7                   text7        02AC
__ptext8                   text8        0539
__ptext9                   text9        05C8
__size_of_ISR              (abs)        0000
__size_of_LCDGoto          (abs)        0000
__size_of_LCDPutChar       (abs)        0000
__size_of_LCDPutCmd        (abs)        0000
__size_of_LCDPutStr        (abs)        0000
__size_of_LCDWrite         (abs)        0000
__size_of_LCD_Initialize   (abs)        0000
__size_of_SPIMas           (abs)        0000
__size_of_Setup            (abs)        0000
__size_of_USART_Initialize (abs)        0000
__size_of___aldiv          (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of_isdigit          (abs)        0000
__size_of_main             (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      0411
__stringtab                strings      0402
_buff                      bssBANK0     0057
_c1                        bssCOMMON    0079
_c2                        bssBANK0     0055
_dpowers                   strings      0412
_isdigit                   text2        0594
_isdigit$983               cstackCOMMON 0074
_main                      maintext     01A7
_sprintf                   text1        001F
_temp                      bssBANK0     0054
_v                         bssBANK0     0056
_valores                   bssBANK0     004F
_vint                      bssBANK0     0052
btemp                      (abs)        007E
clear_ram0                 clrtext      05D4
end_of_initialization      cinit        001B
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
isdigit@c                  cstackCOMMON 0075
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  0037
sprintf@c                  cstackBANK0  003F
sprintf@f                  cstackBANK0  0029
sprintf@flag               cstackBANK0  0039
sprintf@prec               cstackBANK0  0038
sprintf@sp                 cstackBANK0  003C
sprintf@val                cstackBANK0  003A
sprintf@width              cstackBANK0  003D
start                      init         000E
start_initialization       cinit        0011
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 108 in file "MAESTRO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0      11       0       0       0
      Totals:         0      11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCDGoto
		_LCDPutStr
		_LCD_Initialize
		_SPIMas
		_Setup
		_USART_Initialize
		___lwdiv
		___lwmod
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> buff(20), 
  f               1    9[BANK0 ] PTR const unsigned char 
		 -> STR_2(21), 
 Auto vars:     Size  Location     Type
  sp              1   28[BANK0 ] PTR unsigned char 
		 -> buff(20), 
  tmpval          4    0        struct .
  width           2   29[BANK0 ] int 
  val             2   26[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   31[BANK0 ] unsigned char 
  flag            1   25[BANK0 ] unsigned char 
  prec            1   24[BANK0 ] char 
  ap              1   23[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    9[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0      11       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      23       0       0       0
Total ram usage:       23 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
		___wmul
		_isdigit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    4[COMMON] unsigned int 
  multiplicand    2    6[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    4[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       2       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    4[COMMON] unsigned int 
  dividend        2    6[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    0[BANK0 ] unsigned int 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       3       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_sprintf
 This function uses a non-reentrant model


 *************** function _USART_Initialize *****************
 Defined at:
		line 13 in file "usart.c"
 Parameters:    Size  Location     Type
  baudrate        4   14[BANK0 ] const long 
 Auto vars:     Size  Location     Type
  x               4    5[COMMON] long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         4       0       0       0       0
      Temps:          0      12       0       0       0
      Totals:         4      16       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] long 
  dividend        4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   10[BANK0 ] long 
  sign            1    9[BANK0 ] unsigned char 
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      14       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_USART_Initialize
 This function uses a non-reentrant model


 *************** function _Setup *****************
 Defined at:
		line 62 in file "MAESTRO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SPIMas *****************
 Defined at:
		line 11 in file "SPI.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Initialize *****************
 Defined at:
		line 47 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDPutCmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDPutStr *****************
 Defined at:
		line 110 in file "lcd.c"
 Parameters:    Size  Location     Type
  str             2    0[BANK0 ] PTR const unsigned char 
		 -> STR_1(19), buff(20), 
 Auto vars:     Size  Location     Type
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDPutChar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDPutChar *****************
 Defined at:
		line 94 in file "lcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCDWrite
 This function is called by:
		_LCDPutStr
 This function uses a non-reentrant model


 *************** function _LCDGoto *****************
 Defined at:
		line 122 in file "lcd.c"
 Parameters:    Size  Location     Type
  pos             1    wreg     unsigned char 
  ln              1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pos             1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDPutCmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDPutCmd *****************
 Defined at:
		line 102 in file "lcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCDWrite
 This function is called by:
		_LCD_Initialize
		_LCDGoto
 This function uses a non-reentrant model


 *************** function _LCDWrite *****************
 Defined at:
		line 73 in file "lcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  rs              1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCDPutChar
		_LCDPutCmd
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 91 in file "MAESTRO.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
MAESTRO.c
		_ISR           		CODE           	0560	0000	33
		_main          		CODE           	01A7	0000	261
		_Setup         		CODE           	0539	0000	39

MAESTRO.c estimated size: 333

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	001F	0000	392

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c estimated size: 392

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	0444	0000	60

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c estimated size: 60

usart.c
		_USART_Initialize		CODE           	0349	0000	115

usart.c estimated size: 115

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	050E	0000	43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c
		_isdigit       		CODE           	0594	0000	18

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c estimated size: 18

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	03BC	0000	70

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c estimated size: 70

shared
		__stringtab    		STRING         	0402	0000	16
		_dpowers       		STRING         	0412	0000	10
		__initialization		CODE           	0011	0000	10

shared estimated size: 36

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	02AC	0000	157

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c estimated size: 157

lcd.c
		_LCDPutCmd     		CODE           	05A6	0000	18
		_LCDPutStr     		CODE           	04E1	0000	45
		_LCDWrite      		CODE           	05B8	0000	16
		_LCDPutChar    		CODE           	0581	0000	19
		_LCD_Initialize		CODE           	04B1	0000	48
		_LCDGoto       		CODE           	0480	0000	49

lcd.c estimated size: 195

SPI.c
		_SPIMas        		CODE           	05C8	0000	12

SPI.c estimated size: 12

