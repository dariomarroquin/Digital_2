

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:29:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463                           
   464                           	psect	strings
   465  0800                     __pstrings:
   466  0800                     stringtab:
   467  0800                     __stringtab:
   468                           
   469                           ;	String table - string pointers are 1 byte each
   470  0800  1BFF               	btfsc	btemp+1,7
   471  0801  280A               	ljmp	stringcode
   472  0802  1383               	bcf	3,7
   473  0803  187F               	btfsc	btemp+1,0
   474  0804  1783               	bsf	3,7
   475  0805  0800               	movf	0,w
   476  0806  0A84               	incf	4,f
   477  0807  1903               	skipnz
   478  0808  0AFF               	incf	btemp+1,f
   479  0809  0008               	return
   480  080A                     stringcode:
   481  080A                     stringdir:
   482  080A  3008               	movlw	high stringdir
   483  080B  008A               	movwf	10
   484  080C  0804               	movf	4,w
   485  080D  0A84               	incf	4,f
   486  080E  0782               	addwf	2,f
   487  080F                     __stringbase:
   488  080F  3400               	retlw	0
   489  0810                     __end_of__stringtab:
   490  0810                     _dpowers:
   491  0810  3401               	retlw	1
   492  0811  3400               	retlw	0
   493  0812  340A               	retlw	10
   494  0813  3400               	retlw	0
   495  0814  3464               	retlw	100
   496  0815  3400               	retlw	0
   497  0816  34E8               	retlw	232
   498  0817  3403               	retlw	3
   499  0818  3410               	retlw	16
   500  0819  3427               	retlw	39
   501  081A                     __end_of_dpowers:
   502  0014                     _SSPCON	set	20
   503  0006                     _PORTBbits	set	6
   504  000B                     _INTCONbits	set	11
   505  0018                     _RCSTAbits	set	24
   506  0013                     _SSPBUF	set	19
   507  0007                     _PORTCbits	set	7
   508  0019                     _TXREG	set	25
   509  000C                     _PIR1bits	set	12
   510  0009                     _PORTE	set	9
   511  0008                     _PORTD	set	8
   512  0006                     _PORTB	set	6
   513  0005                     _PORTA	set	5
   514  0094                     _SSPSTAT	set	148
   515  008C                     _PIE1bits	set	140
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  0094                     _SSPSTATbits	set	148
   519  0087                     _TRISCbits	set	135
   520  0096                     _IOCB	set	150
   521  0089                     _TRISE	set	137
   522  0088                     _TRISD	set	136
   523  0086                     _TRISB	set	134
   524  0085                     _TRISA	set	133
   525  0187                     _BAUDCTLbits	set	391
   526  0189                     _ANSELH	set	393
   527  0188                     _ANSEL	set	392
   528  081A                     STR_2:
   529  081A  3425               	retlw	37	;'%'
   530  081B  3469               	retlw	105	;'i'
   531  081C  342E               	retlw	46	;'.'
   532  081D  3425               	retlw	37	;'%'
   533  081E  3469               	retlw	105	;'i'
   534  081F  3425               	retlw	37	;'%'
   535  0820  3469               	retlw	105	;'i'
   536  0821  3456               	retlw	86	;'V'
   537  0822  3420               	retlw	32	;' '
   538  0823  3425               	retlw	37	;'%'
   539  0824  3433               	retlw	51	;'3'
   540  0825  3469               	retlw	105	;'i'
   541  0826  3443               	retlw	67	;'C'
   542  0827  3420               	retlw	32	;' '
   543  0828  3425               	retlw	37	;'%'
   544  0829  3433               	retlw	51	;'3'
   545  082A  3469               	retlw	105	;'i'
   546  082B  3454               	retlw	84	;'T'
   547  082C  340D               	retlw	13
   548  082D  340A               	retlw	10
   549  082E  3400               	retlw	0
   550  082F                     STR_1:
   551  082F  3420               	retlw	32	;' '
   552  0830  3453               	retlw	83	;'S'
   553  0831  3431               	retlw	49	;'1'
   554  0832  343A               	retlw	58	;':'
   555  0833  3420               	retlw	32	;' '
   556  0834  3420               	retlw	32	;' '
   557  0835  3420               	retlw	32	;' '
   558  0836  3420               	retlw	32	;' '
   559  0837  3453               	retlw	83	;'S'
   560  0838  3432               	retlw	50	;'2'
   561  0839  343A               	retlw	58	;':'
   562  083A  3420               	retlw	32	;' '
   563  083B  3420               	retlw	32	;' '
   564  083C  3420               	retlw	32	;' '
   565  083D  3420               	retlw	32	;' '
   566  083E  3453               	retlw	83	;'S'
   567  083F  3433               	retlw	51	;'3'
   568  0840  343A               	retlw	58	;':'
   569  0841  3400               	retlw	0
   570                           
   571                           	psect	cinit
   572  0011                     start_initialization:	
   573                           ; #config settings
   574                           
   575  0011                     __initialization:
   576                           
   577                           ; Clear objects allocated to COMMON
   578  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   579  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   580  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   581                           
   582                           ; Clear objects allocated to BANK0
   583  0014  1283               	bcf	3,5	;RP0=0, select bank0
   584  0015  1303               	bcf	3,6	;RP1=0, select bank0
   585  0016  01E6               	clrf	__pbssBANK0& (0+127)
   586  0017  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   587  0018  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   588                           
   589                           ; Clear objects allocated to BANK1
   590  0019  1383               	bcf	3,7	;select IRP bank0
   591  001A  30A0               	movlw	low __pbssBANK1
   592  001B  0084               	movwf	4
   593  001C  30BB               	movlw	low (__pbssBANK1+27)
   594  001D  120A  158A  22EE  120A  118A  	fcall	clear_ram0
   595  0022                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  0022                     __end_of__initialization:
   599  0022  0183               	clrf	3
   600  0023  120A  118A  2B87   	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssCOMMON
   603  0077                     __pbssCOMMON:
   604  0077                     _vint:
   605  0077                     	ds	2
   606  0079                     _c1:
   607  0079                     	ds	1
   608                           
   609                           	psect	bssBANK0
   610  0066                     __pbssBANK0:
   611  0066                     _temp:
   612  0066                     	ds	1
   613  0067                     _c2:
   614  0067                     	ds	1
   615  0068                     _v:
   616  0068                     	ds	1
   617                           
   618                           	psect	bssBANK1
   619  00A0                     __pbssBANK1:
   620  00A0                     _V1:
   621  00A0                     	ds	4
   622  00A4                     _valores:
   623  00A4                     	ds	3
   624  00A7                     _buff:
   625  00A7                     	ds	20
   626                           
   627                           	psect	clrtext
   628  0AEE                     clear_ram0:	
   629                           ;	Called with FSR containing the base address, and
   630                           ;	W with the last address+1
   631                           
   632  0AEE  0064               	clrwdt	;clear the watchdog before getting into this loop
   633  0AEF                     clrloop0:
   634  0AEF  0180               	clrf	0	;clear RAM location pointed to by FSR
   635  0AF0  0A84               	incf	4,f	;increment pointer
   636  0AF1  0604               	xorwf	4,w	;XOR with final address
   637  0AF2  1903               	btfsc	3,2	;have we reached the end yet?
   638  0AF3  3400               	retlw	0	;all done for this memory range, return
   639  0AF4  0604               	xorwf	4,w	;XOR again to restore value
   640  0AF5  2AEF               	goto	clrloop0	;do the next byte
   641                           
   642                           	psect	cstackBANK1
   643  00BB                     __pcstackBANK1:
   644  00BB                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x0
   647  00BB                     	ds	11
   648                           
   649                           	psect	cstackCOMMON
   650  0070                     __pcstackCOMMON:
   651  0070                     ?_isdigit:
   652  0070                     ?_LCD_Initialize:	
   653                           ; 1 bit 
   654                           
   655  0070                     ?_SPIMas:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_LCDPutCmd:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Setup:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_myISR:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_myISR:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_main:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_LCDPutChar:	
   674                           ; 1 bytes @ 0x0
   675                           
   676                           
   677                           ; 1 bytes @ 0x0
   678  0070                     	ds	4
   679  0074                     ??_SPIMas:
   680  0074                     ??_isdigit:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??_Setup:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ?_LCDWrite:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??___wmul:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___aldiv:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??___lwdiv:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ?__Umul8_16:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     LCDWrite@rs:	
   702                           ; 2 bytes @ 0x4
   703                           
   704  0074                     __Umul8_16@multiplicand:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     _isdigit$993:	
   708                           ; 1 bytes @ 0x4
   709                           
   710  0074                     ___wmul@product:	
   711                           ; 1 bytes @ 0x4
   712                           
   713                           
   714                           ; 2 bytes @ 0x4
   715  0074                     	ds	1
   716  0075                     ??_LCDWrite:
   717  0075                     ??___lwmod:	
   718                           ; 1 bytes @ 0x5
   719                           
   720  0075                     LCDWrite@ch:	
   721                           ; 1 bytes @ 0x5
   722                           
   723  0075                     isdigit@c:	
   724                           ; 1 bytes @ 0x5
   725                           
   726                           
   727                           ; 1 bytes @ 0x5
   728  0075                     	ds	1
   729  0076                     LCDPutChar@ch:
   730  0076                     LCDPutCmd@ch:	
   731                           ; 1 bytes @ 0x6
   732                           
   733  0076                     ___lwmod@counter:	
   734                           ; 1 bytes @ 0x6
   735                           
   736                           
   737                           ; 1 bytes @ 0x6
   738  0076                     	ds	1
   739                           
   740                           	psect	cstackBANK0
   741  0020                     __pcstackBANK0:
   742  0020                     ??_LCDPutCmd:
   743  0020                     ??__Umul8_16:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0020                     ??_LCDPutChar:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0020                     ?___wmul:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0020                     ?___lwdiv:	
   753                           ; 2 bytes @ 0x0
   754                           
   755  0020                     ?___aldiv:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0020                     ?___xxtofl:	
   759                           ; 4 bytes @ 0x0
   760                           
   761  0020                     ___wmul@multiplier:	
   762                           ; 4 bytes @ 0x0
   763                           
   764  0020                     ___lwdiv@divisor:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0020                     ___aldiv@divisor:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0020                     ___xxtofl@val:	
   771                           ; 4 bytes @ 0x0
   772                           
   773                           
   774                           ; 4 bytes @ 0x0
   775  0020                     	ds	2
   776  0022                     ??_LCD_Initialize:
   777  0022                     ?_LCDGoto:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0022                     ?_LCDPutStr:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0022                     LCDGoto@ln:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     LCDPutStr@str:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0022                     ___wmul@multiplicand:	
   790                           ; 2 bytes @ 0x2
   791                           
   792  0022                     ___lwdiv@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795  0022                     __Umul8_16@product:	
   796                           ; 2 bytes @ 0x2
   797                           
   798                           
   799                           ; 2 bytes @ 0x2
   800  0022                     	ds	1
   801  0023                     ??_LCDGoto:
   802                           
   803                           ; 1 bytes @ 0x3
   804  0023                     	ds	1
   805  0024                     ??_LCDPutStr:
   806  0024                     ??___xxtofl:	
   807                           ; 1 bytes @ 0x4
   808                           
   809  0024                     ___lwdiv@counter:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0024                     __Umul8_16@word_mpld:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0024                     ___aldiv@dividend:	
   816                           ; 2 bytes @ 0x4
   817                           
   818                           
   819                           ; 4 bytes @ 0x4
   820  0024                     	ds	1
   821  0025                     LCDPutStr@i:
   822  0025                     _LCDGoto$524:	
   823                           ; 1 bytes @ 0x5
   824                           
   825  0025                     ___lwdiv@quotient:	
   826                           ; 2 bytes @ 0x5
   827                           
   828                           
   829                           ; 2 bytes @ 0x5
   830  0025                     	ds	1
   831  0026                     __Umul8_16@multiplier:
   832                           
   833                           ; 1 bytes @ 0x6
   834  0026                     	ds	1
   835  0027                     ?___lwmod:
   836  0027                     ?___flmul:	
   837                           ; 2 bytes @ 0x7
   838                           
   839  0027                     LCDGoto@pos:	
   840                           ; 4 bytes @ 0x7
   841                           
   842  0027                     ___lwmod@divisor:	
   843                           ; 1 bytes @ 0x7
   844                           
   845  0027                     ___flmul@b:	
   846                           ; 2 bytes @ 0x7
   847                           
   848                           
   849                           ; 4 bytes @ 0x7
   850  0027                     	ds	1
   851  0028                     ___aldiv@counter:
   852  0028                     ___xxtofl@sign:	
   853                           ; 1 bytes @ 0x8
   854                           
   855                           
   856                           ; 1 bytes @ 0x8
   857  0028                     	ds	1
   858  0029                     ___aldiv@sign:
   859  0029                     ___xxtofl@exp:	
   860                           ; 1 bytes @ 0x9
   861                           
   862  0029                     ___lwmod@dividend:	
   863                           ; 1 bytes @ 0x9
   864                           
   865                           
   866                           ; 2 bytes @ 0x9
   867  0029                     	ds	1
   868  002A                     ___aldiv@quotient:
   869  002A                     ___xxtofl@arg:	
   870                           ; 4 bytes @ 0xA
   871                           
   872                           
   873                           ; 4 bytes @ 0xA
   874  002A                     	ds	1
   875  002B                     ?_sprintf:
   876  002B                     sprintf@f:	
   877                           ; 2 bytes @ 0xB
   878                           
   879  002B                     ___flmul@a:	
   880                           ; 1 bytes @ 0xB
   881                           
   882                           
   883                           ; 4 bytes @ 0xB
   884  002B                     	ds	3
   885  002E                     ?_USART_Initialize:
   886  002E                     USART_Initialize@baudrate:	
   887                           ; 1 bytes @ 0xE
   888                           
   889                           
   890                           ; 4 bytes @ 0xE
   891  002E                     	ds	1
   892  002F                     ??___flmul:
   893                           
   894                           ; 1 bytes @ 0xF
   895  002F                     	ds	3
   896  0032                     ??_USART_Initialize:
   897                           
   898                           ; 1 bytes @ 0x12
   899  0032                     	ds	2
   900  0034                     ___flmul@sign:
   901                           
   902                           ; 1 bytes @ 0x14
   903  0034                     	ds	1
   904  0035                     ___flmul@aexp:
   905                           
   906                           ; 1 bytes @ 0x15
   907  0035                     	ds	1
   908  0036                     ??_sprintf:
   909  0036                     ___flmul@grs:	
   910                           ; 1 bytes @ 0x16
   911                           
   912                           
   913                           ; 4 bytes @ 0x16
   914  0036                     	ds	3
   915  0039                     sprintf@ap:
   916                           
   917                           ; 1 bytes @ 0x19
   918  0039                     	ds	1
   919  003A                     sprintf@prec:
   920  003A                     ___flmul@bexp:	
   921                           ; 1 bytes @ 0x1A
   922                           
   923                           
   924                           ; 1 bytes @ 0x1A
   925  003A                     	ds	1
   926  003B                     sprintf@flag:
   927  003B                     ___flmul@prod:	
   928                           ; 1 bytes @ 0x1B
   929                           
   930                           
   931                           ; 4 bytes @ 0x1B
   932  003B                     	ds	1
   933  003C                     sprintf@val:
   934                           
   935                           ; 2 bytes @ 0x1C
   936  003C                     	ds	2
   937  003E                     sprintf@sp:
   938  003E                     USART_Initialize@x:	
   939                           ; 1 bytes @ 0x1E
   940                           
   941                           
   942                           ; 4 bytes @ 0x1E
   943  003E                     	ds	1
   944  003F                     sprintf@width:
   945  003F                     ___flmul@temp:	
   946                           ; 2 bytes @ 0x1F
   947                           
   948                           
   949                           ; 2 bytes @ 0x1F
   950  003F                     	ds	2
   951  0041                     ?___fldiv:
   952  0041                     sprintf@c:	
   953                           ; 4 bytes @ 0x21
   954                           
   955  0041                     ___fldiv@a:	
   956                           ; 1 bytes @ 0x21
   957                           
   958                           
   959                           ; 4 bytes @ 0x21
   960  0041                     	ds	4
   961  0045                     ___fldiv@b:
   962                           
   963                           ; 4 bytes @ 0x25
   964  0045                     	ds	4
   965  0049                     ??___fldiv:
   966                           
   967                           ; 1 bytes @ 0x29
   968  0049                     	ds	5
   969  004E                     ___fldiv@rem:
   970                           
   971                           ; 4 bytes @ 0x2E
   972  004E                     	ds	4
   973  0052                     ___fldiv@sign:
   974                           
   975                           ; 1 bytes @ 0x32
   976  0052                     	ds	1
   977  0053                     ___fldiv@new_exp:
   978                           
   979                           ; 2 bytes @ 0x33
   980  0053                     	ds	2
   981  0055                     ___fldiv@grs:
   982                           
   983                           ; 4 bytes @ 0x35
   984  0055                     	ds	4
   985  0059                     ___fldiv@bexp:
   986                           
   987                           ; 1 bytes @ 0x39
   988  0059                     	ds	1
   989  005A                     ___fldiv@aexp:
   990                           
   991                           ; 1 bytes @ 0x3A
   992  005A                     	ds	1
   993  005B                     ?___fltol:
   994  005B                     ___fltol@f1:	
   995                           ; 4 bytes @ 0x3B
   996                           
   997                           
   998                           ; 4 bytes @ 0x3B
   999  005B                     	ds	4
  1000  005F                     ??___fltol:
  1001                           
  1002                           ; 1 bytes @ 0x3F
  1003  005F                     	ds	5
  1004  0064                     ___fltol@sign1:
  1005                           
  1006                           ; 1 bytes @ 0x44
  1007  0064                     	ds	1
  1008  0065                     ___fltol@exp1:
  1009                           
  1010                           ; 1 bytes @ 0x45
  1011  0065                     	ds	1
  1012                           
  1013                           	psect	maintext
  1014  0387                     __pmaintext:	
  1015 ;;
  1016 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  1017 ;;
  1018 ;; *************** function _main *****************
  1019 ;; Defined at:
  1020 ;;		line 108 in file "MAESTRO.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : B00/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0
  1036 ;;      Temps:          0       0      11       0       0
  1037 ;;      Totals:         0       0      11       0       0
  1038 ;;Total ram usage:       11 bytes
  1039 ;; Hardware stack levels required when called:    4
  1040 ;; This function calls:
  1041 ;;		_LCDGoto
  1042 ;;		_LCDPutStr
  1043 ;;		_LCD_Initialize
  1044 ;;		_SPIMas
  1045 ;;		_Setup
  1046 ;;		_USART_Initialize
  1047 ;;		___fldiv
  1048 ;;		___flmul
  1049 ;;		___fltol
  1050 ;;		___lwdiv
  1051 ;;		___lwmod
  1052 ;;		___xxtofl
  1053 ;;		_sprintf
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _main
  1061  0387                     _main:
  1062  0387                     l2800:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1065                           
  1066                           
  1067                           ;MAESTRO.c: 109:     Setup();
  1068  0387  120A  158A  234B  120A  118A  	fcall	_Setup
  1069  038C                     l2802:
  1070                           
  1071                           ;MAESTRO.c: 110:     LCD_Initialize();
  1072  038C  120A  158A  2409  120A  118A  	fcall	_LCD_Initialize
  1073  0391                     l2804:
  1074                           
  1075                           ;MAESTRO.c: 111:     USART_Initialize(9600);
  1076  0391  3000               	movlw	0
  1077  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0394  00B1               	movwf	USART_Initialize@baudrate+3
  1080  0395  3000               	movlw	0
  1081  0396  00B0               	movwf	USART_Initialize@baudrate+2
  1082  0397  3025               	movlw	37
  1083  0398  00AF               	movwf	USART_Initialize@baudrate+1
  1084  0399  3080               	movlw	128
  1085  039A  00AE               	movwf	USART_Initialize@baudrate
  1086  039B  120A  158A  24EC  120A  118A  	fcall	_USART_Initialize
  1087  03A0                     l2806:
  1088                           
  1089                           ;MAESTRO.c: 112:     SPIMas();
  1090  03A0  120A  158A  22F6  120A  118A  	fcall	_SPIMas
  1091  03A5                     l2808:
  1092                           
  1093                           ;MAESTRO.c: 114:     LCDGoto(0,0);
  1094  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1095  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1096  03A7  01A2               	clrf	LCDGoto@ln
  1097  03A8  3000               	movlw	0
  1098  03A9  120A  158A  2439  120A  118A  	fcall	_LCDGoto
  1099  03AE                     l2810:
  1100                           
  1101                           ;MAESTRO.c: 115:     LCDPutStr(" S1:    S2:    S3:");
  1102  03AE  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1103  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1104  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1105  03B1  00A2               	movwf	LCDPutStr@str
  1106  03B2  3080               	movlw	128
  1107  03B3  00A3               	movwf	LCDPutStr@str+1
  1108  03B4  120A  158A  23DC  120A  118A  	fcall	_LCDPutStr
  1109  03B9                     l2812:
  1110                           
  1111                           ;MAESTRO.c: 117:     TRISCbits.TRISC0 = 0;
  1112  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1113  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  1114  03BB  1007               	bcf	7,0	;volatile
  1115  03BC                     l2814:
  1116                           
  1117                           ;MAESTRO.c: 118:     PORTCbits.RC0 = 0;
  1118  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1119  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1120  03BE  1007               	bcf	7,0	;volatile
  1121  03BF                     l2816:
  1122                           
  1123                           ;MAESTRO.c: 120:     TRISCbits.TRISC1 = 0;
  1124  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  1125  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  1126  03C1  1087               	bcf	7,1	;volatile
  1127  03C2                     l2818:
  1128                           
  1129                           ;MAESTRO.c: 121:     PORTCbits.RC1 = 1;
  1130  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1131  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1132  03C4  1487               	bsf	7,1	;volatile
  1133  03C5                     l2820:
  1134                           
  1135                           ;MAESTRO.c: 123:     TRISCbits.TRISC2 = 0;
  1136  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1137  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1138  03C7  1107               	bcf	7,2	;volatile
  1139  03C8                     l2822:
  1140                           
  1141                           ;MAESTRO.c: 124:     PORTCbits.RC2 = 1;
  1142  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1143  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1144  03CA  1507               	bsf	7,2	;volatile
  1145  03CB                     l2824:
  1146                           
  1147                           ;MAESTRO.c: 127:         PORTCbits.RC0 = 0;
  1148  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1149  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1150  03CD  1007               	bcf	7,0	;volatile
  1151  03CE                     l2826:
  1152                           
  1153                           ;MAESTRO.c: 128:         SSPBUF = 1;
  1154  03CE  3001               	movlw	1
  1155  03CF  0093               	movwf	19	;volatile
  1156  03D0                     l2828:
  1157                           
  1158                           ;MAESTRO.c: 129:         if (!SSPSTATbits.BF){
  1159  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1160  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1161  03D2  1814               	btfsc	20,0	;volatile
  1162  03D3  2BD5               	goto	u4111
  1163  03D4  2BD6               	goto	u4110
  1164  03D5                     u4111:
  1165  03D5  2C13               	goto	l2832
  1166  03D6                     u4110:
  1167  03D6                     l2830:
  1168                           
  1169                           ;MAESTRO.c: 130:             V1=SSPBUF;
  1170  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1171  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1172  03D8  0813               	movf	19,w	;volatile
  1173  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1174  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1175  03DB  00BB               	movwf	??_main^(0+128)
  1176  03DC  01BC               	clrf	(??_main^(0+128)+1)
  1177  03DD  01BD               	clrf	(??_main^(0+128)+2)
  1178  03DE  01BE               	clrf	(??_main^(0+128)+3)
  1179  03DF  083E               	movf	(??_main+3)^(0+128),w
  1180  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1181  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1182  03E2  00A3               	movwf	___xxtofl@val+3
  1183  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1184  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1185  03E5  083D               	movf	(??_main+2)^(0+128),w
  1186  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1187  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1188  03E8  00A2               	movwf	___xxtofl@val+2
  1189  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1190  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1191  03EB  083C               	movf	(??_main+1)^(0+128),w
  1192  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1193  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1194  03EE  00A1               	movwf	___xxtofl@val+1
  1195  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  1196  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  1197  03F1  083B               	movf	??_main^(0+128),w
  1198  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1199  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1200  03F4  00A0               	movwf	___xxtofl@val
  1201  03F5  3000               	movlw	0
  1202  03F6  120A  118A  2741  120A  118A  	fcall	___xxtofl
  1203  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1204  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1205  03FD  0823               	movf	?___xxtofl+3,w
  1206  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  1207  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0400  00A3               	movwf	(_V1+3)^(0+128)
  1209  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0403  0822               	movf	?___xxtofl+2,w
  1212  0404  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0405  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0406  00A2               	movwf	(_V1+2)^(0+128)
  1215  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0409  0821               	movf	?___xxtofl+1,w
  1218  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1219  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1220  040C  00A1               	movwf	(_V1+1)^(0+128)
  1221  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1222  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1223  040F  0820               	movf	?___xxtofl,w
  1224  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1225  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1226  0412  00A0               	movwf	_V1^(0+128)
  1227  0413                     l2832:
  1228                           
  1229                           ;MAESTRO.c: 132:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1230  0413  3003               	movlw	3
  1231  0414  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0415  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0416  00BC               	movwf	(??_main^(0+128)+1)
  1234  0417  3097               	movlw	151
  1235  0418  00BB               	movwf	??_main^(0+128)
  1236  0419                     u4157:
  1237  0419  0BBB               	decfsz	??_main^(0+128),f
  1238  041A  2C19               	goto	u4157
  1239  041B  0BBC               	decfsz	(??_main^(0+128)+1),f
  1240  041C  2C19               	goto	u4157
  1241  041D                     l2834:
  1242                           
  1243                           ;MAESTRO.c: 134:         PORTCbits.RC0 = 1;
  1244  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1245  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1246  041F  1407               	bsf	7,0	;volatile
  1247  0420                     l2836:
  1248                           
  1249                           ;MAESTRO.c: 135:         PORTCbits.RC1 = 0;
  1250  0420  1087               	bcf	7,1	;volatile
  1251  0421                     l2838:
  1252                           
  1253                           ;MAESTRO.c: 136:         SSPBUF = 1;
  1254  0421  3001               	movlw	1
  1255  0422  0093               	movwf	19	;volatile
  1256  0423                     l2840:
  1257                           
  1258                           ;MAESTRO.c: 138:         if(!SSPSTATbits.BF){
  1259  0423  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0424  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0425  1814               	btfsc	20,0	;volatile
  1262  0426  2C28               	goto	u4121
  1263  0427  2C29               	goto	u4120
  1264  0428                     u4121:
  1265  0428  2C33               	goto	l82
  1266  0429                     u4120:
  1267  0429                     l2842:
  1268                           
  1269                           ;MAESTRO.c: 139:             c2 = SSPBUF;
  1270  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1271  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1272  042B  0813               	movf	19,w	;volatile
  1273  042C  1683               	bsf	3,5	;RP0=1, select bank1
  1274  042D  1303               	bcf	3,6	;RP1=0, select bank1
  1275  042E  00BB               	movwf	??_main^(0+128)
  1276  042F  083B               	movf	??_main^(0+128),w
  1277  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0432  00E7               	movwf	_c2
  1280  0433                     l82:	
  1281                           ;MAESTRO.c: 140:         }
  1282                           
  1283                           
  1284                           ;MAESTRO.c: 141:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1285  0433  3003               	movlw	3
  1286  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0436  00BC               	movwf	(??_main^(0+128)+1)
  1289  0437  3097               	movlw	151
  1290  0438  00BB               	movwf	??_main^(0+128)
  1291  0439                     u4167:
  1292  0439  0BBB               	decfsz	??_main^(0+128),f
  1293  043A  2C39               	goto	u4167
  1294  043B  0BBC               	decfsz	(??_main^(0+128)+1),f
  1295  043C  2C39               	goto	u4167
  1296  043D                     l2844:
  1297                           
  1298                           ;MAESTRO.c: 143:         PORTCbits.RC1 = 1;
  1299  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1300  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1301  043F  1487               	bsf	7,1	;volatile
  1302  0440                     l2846:
  1303                           
  1304                           ;MAESTRO.c: 144:         PORTCbits.RC2 = 0;
  1305  0440  1107               	bcf	7,2	;volatile
  1306                           
  1307                           ;MAESTRO.c: 145:         SSPBUF = 1;
  1308  0441  3001               	movlw	1
  1309  0442  0093               	movwf	19	;volatile
  1310  0443                     l2848:
  1311                           
  1312                           ;MAESTRO.c: 147:         if(!SSPSTATbits.BF){
  1313  0443  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0444  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0445  1814               	btfsc	20,0	;volatile
  1316  0446  2C48               	goto	u4131
  1317  0447  2C49               	goto	u4130
  1318  0448                     u4131:
  1319  0448  2C53               	goto	l83
  1320  0449                     u4130:
  1321  0449                     l2850:
  1322                           
  1323                           ;MAESTRO.c: 148:             temp = SSPBUF;
  1324  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1325  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1326  044B  0813               	movf	19,w	;volatile
  1327  044C  1683               	bsf	3,5	;RP0=1, select bank1
  1328  044D  1303               	bcf	3,6	;RP1=0, select bank1
  1329  044E  00BB               	movwf	??_main^(0+128)
  1330  044F  083B               	movf	??_main^(0+128),w
  1331  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0452  00E6               	movwf	_temp
  1334  0453                     l83:	
  1335                           ;MAESTRO.c: 149:         }
  1336                           
  1337                           
  1338                           ;MAESTRO.c: 150:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1339  0453  3003               	movlw	3
  1340  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0456  00BC               	movwf	(??_main^(0+128)+1)
  1343  0457  3097               	movlw	151
  1344  0458  00BB               	movwf	??_main^(0+128)
  1345  0459                     u4177:
  1346  0459  0BBB               	decfsz	??_main^(0+128),f
  1347  045A  2C59               	goto	u4177
  1348  045B  0BBC               	decfsz	(??_main^(0+128)+1),f
  1349  045C  2C59               	goto	u4177
  1350  045D                     l2852:
  1351                           
  1352                           ;MAESTRO.c: 153:         PORTCbits.RC2 = 1;
  1353  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1354  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1355  045F  1507               	bsf	7,2	;volatile
  1356  0460                     l2854:
  1357                           
  1358                           ;MAESTRO.c: 155:         vint = (uint16_t)(((V1*500)/255));
  1359  0460  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0461  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0462  0823               	movf	(_V1+3)^(0+128),w
  1362  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0465  00AE               	movwf	___flmul@a+3
  1365  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1366  0467  1303               	bcf	3,6	;RP1=0, select bank1
  1367  0468  0822               	movf	(_V1+2)^(0+128),w
  1368  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1369  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1370  046B  00AD               	movwf	___flmul@a+2
  1371  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1372  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1373  046E  0821               	movf	(_V1+1)^(0+128),w
  1374  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0471  00AC               	movwf	___flmul@a+1
  1377  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1378  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1379  0474  0820               	movf	_V1^(0+128),w
  1380  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0477  00AB               	movwf	___flmul@a
  1383  0478  3043               	movlw	67
  1384  0479  00AA               	movwf	___flmul@b+3
  1385  047A  30FA               	movlw	250
  1386  047B  00A9               	movwf	___flmul@b+2
  1387  047C  3000               	movlw	0
  1388  047D  00A8               	movwf	___flmul@b+1
  1389  047E  3000               	movlw	0
  1390  047F  00A7               	movwf	___flmul@b
  1391  0480  120A  118A  2026  120A  118A  	fcall	___flmul
  1392  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0487  082A               	movf	?___flmul+3,w
  1395  0488  00C8               	movwf	___fldiv@b+3
  1396  0489  0829               	movf	?___flmul+2,w
  1397  048A  00C7               	movwf	___fldiv@b+2
  1398  048B  0828               	movf	?___flmul+1,w
  1399  048C  00C6               	movwf	___fldiv@b+1
  1400  048D  0827               	movf	?___flmul,w
  1401  048E  00C5               	movwf	___fldiv@b
  1402  048F  3043               	movlw	67
  1403  0490  00C4               	movwf	___fldiv@a+3
  1404  0491  307F               	movlw	127
  1405  0492  00C3               	movwf	___fldiv@a+2
  1406  0493  3000               	movlw	0
  1407  0494  00C2               	movwf	___fldiv@a+1
  1408  0495  3000               	movlw	0
  1409  0496  00C1               	movwf	___fldiv@a
  1410  0497  120A  118A  2564  120A  118A  	fcall	___fldiv
  1411  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1412  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1413  049E  0844               	movf	?___fldiv+3,w
  1414  049F  00DE               	movwf	___fltol@f1+3
  1415  04A0  0843               	movf	?___fldiv+2,w
  1416  04A1  00DD               	movwf	___fltol@f1+2
  1417  04A2  0842               	movf	?___fldiv+1,w
  1418  04A3  00DC               	movwf	___fltol@f1+1
  1419  04A4  0841               	movf	?___fldiv,w
  1420  04A5  00DB               	movwf	___fltol@f1
  1421  04A6  120A  158A  255F  120A  118A  	fcall	___fltol
  1422  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1423  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1424  04AD  085C               	movf	?___fltol+1,w
  1425  04AE  00F8               	movwf	_vint+1
  1426  04AF  085B               	movf	?___fltol,w
  1427  04B0  00F7               	movwf	_vint
  1428  04B1                     l2856:
  1429                           
  1430                           ;MAESTRO.c: 156:         for (v = 0; v < 3; v++)
  1431  04B1  01E8               	clrf	_v
  1432  04B2                     l2862:
  1433                           
  1434                           ;MAESTRO.c: 157:         {;MAESTRO.c: 158:            valores[v] = (char)(vint % 10);
  1435  04B2  300A               	movlw	10
  1436  04B3  00A7               	movwf	___lwmod@divisor
  1437  04B4  3000               	movlw	0
  1438  04B5  00A8               	movwf	___lwmod@divisor+1
  1439  04B6  0878               	movf	_vint+1,w
  1440  04B7  00AA               	movwf	___lwmod@dividend+1
  1441  04B8  0877               	movf	_vint,w
  1442  04B9  00A9               	movwf	___lwmod@dividend
  1443  04BA  120A  158A  246A  120A  118A  	fcall	___lwmod
  1444  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1445  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1446  04C1  0827               	movf	?___lwmod,w
  1447  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1448  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1449  04C4  00BB               	movwf	??_main^(0+128)
  1450  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1451  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1452  04C7  0868               	movf	_v,w
  1453  04C8  3EA4               	addlw	(low (_valores| 0))& (0+255)
  1454  04C9  0084               	movwf	4
  1455  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1456  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1457  04CC  083B               	movf	??_main^(0+128),w
  1458  04CD  1383               	bcf	3,7	;select IRP bank1
  1459  04CE  0080               	movwf	0
  1460  04CF                     l2864:
  1461                           
  1462                           ;MAESTRO.c: 159:            vint /= 10;
  1463  04CF  300A               	movlw	10
  1464  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1465  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1466  04D2  00A0               	movwf	___lwdiv@divisor
  1467  04D3  3000               	movlw	0
  1468  04D4  00A1               	movwf	___lwdiv@divisor+1
  1469  04D5  0878               	movf	_vint+1,w
  1470  04D6  00A3               	movwf	___lwdiv@dividend+1
  1471  04D7  0877               	movf	_vint,w
  1472  04D8  00A2               	movwf	___lwdiv@dividend
  1473  04D9  120A  158A  24A6  120A  118A  	fcall	___lwdiv
  1474  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1475  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1476  04E0  0821               	movf	?___lwdiv+1,w
  1477  04E1  00F8               	movwf	_vint+1
  1478  04E2  0820               	movf	?___lwdiv,w
  1479  04E3  00F7               	movwf	_vint
  1480  04E4                     l2866:
  1481                           
  1482                           ;MAESTRO.c: 160:         }
  1483  04E4  3001               	movlw	1
  1484  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  1485  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  1486  04E7  00BB               	movwf	??_main^(0+128)
  1487  04E8  083B               	movf	??_main^(0+128),w
  1488  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1489  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1490  04EB  07E8               	addwf	_v,f
  1491  04EC                     l2868:
  1492  04EC  3003               	movlw	3
  1493  04ED  0268               	subwf	_v,w
  1494  04EE  1C03               	skipc
  1495  04EF  2CF1               	goto	u4141
  1496  04F0  2CF2               	goto	u4140
  1497  04F1                     u4141:
  1498  04F1  2CB2               	goto	l2862
  1499  04F2                     u4140:
  1500  04F2                     l2870:
  1501                           
  1502                           ;MAESTRO.c: 161:         sprintf(buff, "%i.%i%iV %3iC %3iT\r\n", valores[2],valores[1],v
      +                          alores[0],
  1503  04F2  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1504  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  1505  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  1506  04F5  00BB               	movwf	??_main^(0+128)
  1507  04F6  083B               	movf	??_main^(0+128),w
  1508  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1509  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1510  04F9  00AB               	movwf	sprintf@f
  1511  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1512  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1513  04FC  0826               	movf	(_valores^(0+128)+2),w
  1514  04FD  00BC               	movwf	(??_main+1)^(0+128)
  1515  04FE  01BD               	clrf	((??_main+1)^(0+128)+1)
  1516  04FF  083C               	movf	(??_main+1)^(0+128),w
  1517  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0502  00AC               	movwf	?_sprintf+1
  1520  0503  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0504  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0505  083D               	movf	(??_main+2)^(0+128),w
  1523  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0508  00AD               	movwf	?_sprintf+2
  1526  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1527  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1528  050B  0825               	movf	(_valores^(0+128)+1),w
  1529  050C  00BE               	movwf	(??_main+3)^(0+128)
  1530  050D  01BF               	clrf	((??_main+3)^(0+128)+1)
  1531  050E  083E               	movf	(??_main+3)^(0+128),w
  1532  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0511  00AE               	movwf	?_sprintf+3
  1535  0512  1683               	bsf	3,5	;RP0=1, select bank1
  1536  0513  1303               	bcf	3,6	;RP1=0, select bank1
  1537  0514  083F               	movf	(??_main+4)^(0+128),w
  1538  0515  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0516  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0517  00AF               	movwf	?_sprintf+4
  1541  0518  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0519  1303               	bcf	3,6	;RP1=0, select bank1
  1543  051A  0824               	movf	_valores^(0+128),w
  1544  051B  00C0               	movwf	(??_main+5)^(0+128)
  1545  051C  01C1               	clrf	((??_main+5)^(0+128)+1)
  1546  051D  0840               	movf	(??_main+5)^(0+128),w
  1547  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1548  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0520  00B0               	movwf	?_sprintf+5
  1550  0521  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0522  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0523  0841               	movf	(??_main+6)^(0+128),w
  1553  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0526  00B1               	movwf	?_sprintf+6
  1556  0527  0867               	movf	_c2,w
  1557  0528  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0529  1303               	bcf	3,6	;RP1=0, select bank1
  1559  052A  00C2               	movwf	(??_main+7)^(0+128)
  1560  052B  01C3               	clrf	((??_main+7)^(0+128)+1)
  1561  052C  0842               	movf	(??_main+7)^(0+128),w
  1562  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1563  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1564  052F  00B2               	movwf	?_sprintf+7
  1565  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0532  0843               	movf	(??_main+8)^(0+128),w
  1568  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0535  00B3               	movwf	?_sprintf+8
  1571  0536  0866               	movf	_temp,w
  1572  0537  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0538  1303               	bcf	3,6	;RP1=0, select bank1
  1574  0539  00C4               	movwf	(??_main+9)^(0+128)
  1575  053A  01C5               	clrf	((??_main+9)^(0+128)+1)
  1576  053B  0844               	movf	(??_main+9)^(0+128),w
  1577  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1578  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1579  053E  00B4               	movwf	?_sprintf+9
  1580  053F  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0540  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0541  0845               	movf	(??_main+10)^(0+128),w
  1583  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0544  00B5               	movwf	?_sprintf+10
  1586  0545  30A7               	movlw	(low (_buff| 0))& (0+255)
  1587  0546  120A  158A  2678  120A  118A  	fcall	_sprintf
  1588  054B                     l2872:
  1589                           
  1590                           ;MAESTRO.c: 163:         LCDGoto(0,1);
  1591  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1592  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1593  054D  01A2               	clrf	LCDGoto@ln
  1594  054E  0AA2               	incf	LCDGoto@ln,f
  1595  054F  3000               	movlw	0
  1596  0550  120A  158A  2439  120A  118A  	fcall	_LCDGoto
  1597  0555                     l2874:
  1598                           
  1599                           ;MAESTRO.c: 164:         LCDPutStr(buff);
  1600  0555  30A7               	movlw	(low (_buff| 0))& (0+255)
  1601  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0558  00A2               	movwf	LCDPutStr@str
  1604  0559  3000               	movlw	0
  1605  055A  00A3               	movwf	LCDPutStr@str+1
  1606  055B  120A  158A  23DC  120A  118A  	fcall	_LCDPutStr
  1607  0560  2BCB               	goto	l2824
  1608  0561  120A  118A  280E   	ljmp	start
  1609  0564                     __end_of_main:
  1610                           
  1611                           	psect	text1
  1612  0E78                     __ptext1:	
  1613 ;; *************** function _sprintf *****************
  1614 ;; Defined at:
  1615 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  sp              1    wreg     PTR unsigned char 
  1618 ;;		 -> buff(20), 
  1619 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1620 ;;		 -> STR_2(21), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  1623 ;;		 -> buff(20), 
  1624 ;;  tmpval          4    0        struct .
  1625 ;;  width           2   31[BANK0 ] int 
  1626 ;;  val             2   28[BANK0 ] unsigned int 
  1627 ;;  cp              2    0        PTR const unsigned char 
  1628 ;;  len             2    0        unsigned int 
  1629 ;;  c               1   33[BANK0 ] unsigned char 
  1630 ;;  flag            1   27[BANK0 ] unsigned char 
  1631 ;;  prec            1   26[BANK0 ] char 
  1632 ;;  ap              1   25[BANK0 ] PTR void [1]
  1633 ;;		 -> ?_sprintf(2), 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2   11[BANK0 ] int 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0      11       0       0       0
  1644 ;;      Locals:         0       9       0       0       0
  1645 ;;      Temps:          0       3       0       0       0
  1646 ;;      Totals:         0      23       0       0       0
  1647 ;;Total ram usage:       23 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    2
  1650 ;; This function calls:
  1651 ;;		___lwdiv
  1652 ;;		___lwmod
  1653 ;;		___wmul
  1654 ;;		_isdigit
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _sprintf
  1662  0E78                     _sprintf:
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1666                           ;sprintf@sp stored from wreg
  1667  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0E7A  00BE               	movwf	sprintf@sp
  1670  0E7B                     l2488:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1673  0E7B  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1674  0E7C  00B6               	movwf	??_sprintf
  1675  0E7D  0836               	movf	??_sprintf,w
  1676  0E7E  00B9               	movwf	sprintf@ap
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1679  0E7F  2FE9               	goto	l2570
  1680  0E80                     l2490:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1683  0E80  3025               	movlw	37
  1684  0E81  0641               	xorwf	sprintf@c,w
  1685  0E82  1903               	btfsc	3,2
  1686  0E83  2E85               	goto	u3361
  1687  0E84  2E86               	goto	u3360
  1688  0E85                     u3361:
  1689  0E85  2E92               	goto	l2496
  1690  0E86                     u3360:
  1691  0E86                     l2492:
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1694  0E86  0841               	movf	sprintf@c,w
  1695  0E87  00B6               	movwf	??_sprintf
  1696  0E88  083E               	movf	sprintf@sp,w
  1697  0E89  0084               	movwf	4
  1698  0E8A  0836               	movf	??_sprintf,w
  1699  0E8B  1383               	bcf	3,7	;select IRP bank0
  1700  0E8C  0080               	movwf	0
  1701  0E8D                     l2494:
  1702  0E8D  3001               	movlw	1
  1703  0E8E  00B6               	movwf	??_sprintf
  1704  0E8F  0836               	movf	??_sprintf,w
  1705  0E90  07BE               	addwf	sprintf@sp,f
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1708  0E91  2FE9               	goto	l2570
  1709  0E92                     l2496:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1712  0E92  01BF               	clrf	sprintf@width
  1713  0E93  01C0               	clrf	sprintf@width+1
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1716  0E94  01BB               	clrf	sprintf@flag
  1717  0E95                     l2498:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1720  0E95  082B               	movf	sprintf@f,w
  1721  0E96  0084               	movwf	4
  1722  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  1723  0E9C  120A  158A  2312  120A  158A  	fcall	_isdigit
  1724  0EA1  1C03               	btfss	3,0
  1725  0EA2  2EA4               	goto	u3371
  1726  0EA3  2EA5               	goto	u3370
  1727  0EA4                     u3371:
  1728  0EA4  2EE5               	goto	l2512
  1729  0EA5                     u3370:
  1730  0EA5                     l2500:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1733  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1734  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  1735  0EA7  01BF               	clrf	sprintf@width
  1736  0EA8  01C0               	clrf	sprintf@width+1
  1737  0EA9                     l2502:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1740  0EA9  300A               	movlw	10
  1741  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0EAC  00A0               	movwf	___wmul@multiplier
  1744  0EAD  3000               	movlw	0
  1745  0EAE  00A1               	movwf	___wmul@multiplier+1
  1746  0EAF  0840               	movf	sprintf@width+1,w
  1747  0EB0  00A3               	movwf	___wmul@multiplicand+1
  1748  0EB1  083F               	movf	sprintf@width,w
  1749  0EB2  00A2               	movwf	___wmul@multiplicand
  1750  0EB3  120A  158A  238C  120A  158A  	fcall	___wmul
  1751  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0EBA  0821               	movf	?___wmul+1,w
  1754  0EBB  00C0               	movwf	sprintf@width+1
  1755  0EBC  0820               	movf	?___wmul,w
  1756  0EBD  00BF               	movwf	sprintf@width
  1757  0EBE                     l2504:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1760  0EBE  082B               	movf	sprintf@f,w
  1761  0EBF  0084               	movwf	4
  1762  0EC0  120A  158A  200A  120A  158A  	fcall	stringdir
  1763  0EC5  3ED0               	addlw	208
  1764  0EC6  00B6               	movwf	??_sprintf
  1765  0EC7  30FF               	movlw	255
  1766  0EC8  1803               	skipnc
  1767  0EC9  3000               	movlw	0
  1768  0ECA  00B7               	movwf	??_sprintf+1
  1769  0ECB  0836               	movf	??_sprintf,w
  1770  0ECC  07BF               	addwf	sprintf@width,f
  1771  0ECD  1803               	skipnc
  1772  0ECE  0AC0               	incf	sprintf@width+1,f
  1773  0ECF  0837               	movf	??_sprintf+1,w
  1774  0ED0  07C0               	addwf	sprintf@width+1,f
  1775  0ED1                     l2506:
  1776  0ED1  3001               	movlw	1
  1777  0ED2  00B6               	movwf	??_sprintf
  1778  0ED3  0836               	movf	??_sprintf,w
  1779  0ED4  07AB               	addwf	sprintf@f,f
  1780  0ED5                     l2508:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1783  0ED5  082B               	movf	sprintf@f,w
  1784  0ED6  0084               	movwf	4
  1785  0ED7  120A  158A  200A  120A  158A  	fcall	stringdir
  1786  0EDC  120A  158A  2312  120A  158A  	fcall	_isdigit
  1787  0EE1  1803               	btfsc	3,0
  1788  0EE2  2EE4               	goto	u3381
  1789  0EE3  2EE5               	goto	u3380
  1790  0EE4                     u3381:
  1791  0EE4  2EA9               	goto	l2502
  1792  0EE5                     u3380:
  1793  0EE5                     l2512:
  1794  0EE5  3001               	movlw	1
  1795  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0EE8  07AB               	addwf	sprintf@f,f
  1798  0EE9  30FF               	movlw	-1
  1799  0EEA  072B               	addwf	sprintf@f,w
  1800  0EEB  0084               	movwf	4
  1801  0EEC  120A  158A  200A  120A  158A  	fcall	stringdir
  1802  0EF1  00C1               	movwf	sprintf@c
  1803  0EF2  00B6               	movwf	??_sprintf
  1804  0EF3  01B7               	clrf	??_sprintf+1
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ; direct_byte           11     8 (fixed)
  1813                           ; jumptable            260     6 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  0EF4  0837               	movf	??_sprintf+1,w
  1816  0EF5  3A00               	xorlw	0	; case 0
  1817  0EF6  1903               	skipnz
  1818  0EF7  2EF9               	goto	l2896
  1819  0EF8  2FE9               	goto	l2570
  1820  0EF9                     l2896:
  1821                           
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 3, Range of values is 0 to 105
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           10     6 (average)
  1827                           ; jumptable            260     6 (fixed)
  1828                           ;	Chosen strategy is simple_byte
  1829  0EF9  0836               	movf	??_sprintf,w
  1830  0EFA  3A00               	xorlw	0	; case 0
  1831  0EFB  1903               	skipnz
  1832  0EFC  2FFB               	goto	l2572
  1833  0EFD  3A64               	xorlw	100	; case 100
  1834  0EFE  1903               	skipnz
  1835  0EFF  2F04               	goto	l2514
  1836  0F00  3A0D               	xorlw	13	; case 105
  1837  0F01  1903               	skipnz
  1838  0F02  2F04               	goto	l2514
  1839  0F03  2FE9               	goto	l2570
  1840  0F04                     l2514:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1843  0F04  0839               	movf	sprintf@ap,w
  1844  0F05  0084               	movwf	4
  1845  0F06  1383               	bcf	3,7	;select IRP bank0
  1846  0F07  0800               	movf	0,w
  1847  0F08  00BC               	movwf	sprintf@val
  1848  0F09  0A84               	incf	4,f
  1849  0F0A  0800               	movf	0,w
  1850  0F0B  00BD               	movwf	sprintf@val+1
  1851  0F0C                     l2516:
  1852  0F0C  3002               	movlw	2
  1853  0F0D  00B6               	movwf	??_sprintf
  1854  0F0E  0836               	movf	??_sprintf,w
  1855  0F0F  07B9               	addwf	sprintf@ap,f
  1856  0F10                     l2518:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1859  0F10  1FBD               	btfss	sprintf@val+1,7
  1860  0F11  2F13               	goto	u3391
  1861  0F12  2F14               	goto	u3390
  1862  0F13                     u3391:
  1863  0F13  2F1D               	goto	l2524
  1864  0F14                     u3390:
  1865  0F14                     l2520:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1868  0F14  3003               	movlw	3
  1869  0F15  00B6               	movwf	??_sprintf
  1870  0F16  0836               	movf	??_sprintf,w
  1871  0F17  04BB               	iorwf	sprintf@flag,f
  1872  0F18                     l2522:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1875  0F18  09BC               	comf	sprintf@val,f
  1876  0F19  09BD               	comf	sprintf@val+1,f
  1877  0F1A  0ABC               	incf	sprintf@val,f
  1878  0F1B  1903               	skipnz
  1879  0F1C  0ABD               	incf	sprintf@val+1,f
  1880  0F1D                     l2524:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1883  0F1D  01C1               	clrf	sprintf@c
  1884  0F1E  0AC1               	incf	sprintf@c,f
  1885  0F1F                     l2530:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1888  0F1F  0841               	movf	sprintf@c,w
  1889  0F20  00B6               	movwf	??_sprintf
  1890  0F21  0736               	addwf	??_sprintf,w
  1891  0F22  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1892  0F23  0084               	movwf	4
  1893  0F24  120A  158A  200A  120A  158A  	fcall	stringdir
  1894  0F29  00B7               	movwf	??_sprintf+1
  1895  0F2A  120A  158A  200A  120A  158A  	fcall	stringdir
  1896  0F2F  00B8               	movwf	??_sprintf+2
  1897  0F30  0838               	movf	??_sprintf+2,w
  1898  0F31  023D               	subwf	sprintf@val+1,w
  1899  0F32  1D03               	skipz
  1900  0F33  2F36               	goto	u3405
  1901  0F34  0837               	movf	??_sprintf+1,w
  1902  0F35  023C               	subwf	sprintf@val,w
  1903  0F36                     u3405:
  1904  0F36  1803               	skipnc
  1905  0F37  2F39               	goto	u3401
  1906  0F38  2F3A               	goto	u3400
  1907  0F39                     u3401:
  1908  0F39  2F3B               	goto	l2534
  1909  0F3A                     u3400:
  1910  0F3A  2F45               	goto	l2536
  1911  0F3B                     l2534:
  1912  0F3B  3001               	movlw	1
  1913  0F3C  00B6               	movwf	??_sprintf
  1914  0F3D  0836               	movf	??_sprintf,w
  1915  0F3E  07C1               	addwf	sprintf@c,f
  1916  0F3F  3005               	movlw	5
  1917  0F40  0641               	xorwf	sprintf@c,w
  1918  0F41  1D03               	btfss	3,2
  1919  0F42  2F44               	goto	u3411
  1920  0F43  2F45               	goto	u3410
  1921  0F44                     u3411:
  1922  0F44  2F1F               	goto	l2530
  1923  0F45                     u3410:
  1924  0F45                     l2536:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1927  0F45  083F               	movf	sprintf@width,w
  1928  0F46  0440               	iorwf	sprintf@width+1,w
  1929  0F47  1903               	btfsc	3,2
  1930  0F48  2F4A               	goto	u3421
  1931  0F49  2F4B               	goto	u3420
  1932  0F4A                     u3421:
  1933  0F4A  2F57               	goto	l260
  1934  0F4B                     u3420:
  1935  0F4B                     l2538:
  1936  0F4B  083B               	movf	sprintf@flag,w
  1937  0F4C  3903               	andlw	3
  1938  0F4D  1903               	btfsc	3,2
  1939  0F4E  2F50               	goto	u3431
  1940  0F4F  2F51               	goto	u3430
  1941  0F50                     u3431:
  1942  0F50  2F57               	goto	l260
  1943  0F51                     u3430:
  1944  0F51                     l2540:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1947  0F51  30FF               	movlw	255
  1948  0F52  07BF               	addwf	sprintf@width,f
  1949  0F53  1803               	skipnc
  1950  0F54  0AC0               	incf	sprintf@width+1,f
  1951  0F55  30FF               	movlw	255
  1952  0F56  07C0               	addwf	sprintf@width+1,f
  1953  0F57                     l260:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1956  0F57  0840               	movf	sprintf@width+1,w
  1957  0F58  3A80               	xorlw	128
  1958  0F59  3C80               	sublw	128
  1959  0F5A  1D03               	skipz
  1960  0F5B  2F5E               	goto	u3445
  1961  0F5C  083F               	movf	sprintf@width,w
  1962  0F5D  0241               	subwf	sprintf@c,w
  1963  0F5E                     u3445:
  1964  0F5E  1803               	skipnc
  1965  0F5F  2F61               	goto	u3441
  1966  0F60  2F62               	goto	u3440
  1967  0F61                     u3441:
  1968  0F61  2F6E               	goto	l2544
  1969  0F62                     u3440:
  1970  0F62                     l2542:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1973  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0F64  0841               	movf	sprintf@c,w
  1976  0F65  00B6               	movwf	??_sprintf
  1977  0F66  01B7               	clrf	??_sprintf+1
  1978  0F67  0836               	movf	??_sprintf,w
  1979  0F68  02BF               	subwf	sprintf@width,f
  1980  0F69  0837               	movf	??_sprintf+1,w
  1981  0F6A  1C03               	skipc
  1982  0F6B  03C0               	decf	sprintf@width+1,f
  1983  0F6C  02C0               	subwf	sprintf@width+1,f
  1984  0F6D  2F72               	goto	l2546
  1985  0F6E                     l2544:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1988  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0F70  01BF               	clrf	sprintf@width
  1991  0F71  01C0               	clrf	sprintf@width+1
  1992  0F72                     l2546:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1995  0F72  083F               	movf	sprintf@width,w
  1996  0F73  0440               	iorwf	sprintf@width+1,w
  1997  0F74  1903               	btfsc	3,2
  1998  0F75  2F77               	goto	u3451
  1999  0F76  2F78               	goto	u3450
  2000  0F77                     u3451:
  2001  0F77  2F8F               	goto	l2554
  2002  0F78                     u3450:
  2003  0F78                     l2548:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2006  0F78  3020               	movlw	32
  2007  0F79  00B6               	movwf	??_sprintf
  2008  0F7A  083E               	movf	sprintf@sp,w
  2009  0F7B  0084               	movwf	4
  2010  0F7C  0836               	movf	??_sprintf,w
  2011  0F7D  1383               	bcf	3,7	;select IRP bank0
  2012  0F7E  0080               	movwf	0
  2013  0F7F                     l2550:
  2014  0F7F  3001               	movlw	1
  2015  0F80  00B6               	movwf	??_sprintf
  2016  0F81  0836               	movf	??_sprintf,w
  2017  0F82  07BE               	addwf	sprintf@sp,f
  2018  0F83                     l2552:
  2019  0F83  30FF               	movlw	255
  2020  0F84  07BF               	addwf	sprintf@width,f
  2021  0F85  1803               	skipnc
  2022  0F86  0AC0               	incf	sprintf@width+1,f
  2023  0F87  30FF               	movlw	255
  2024  0F88  07C0               	addwf	sprintf@width+1,f
  2025  0F89  083F               	movf	sprintf@width,w
  2026  0F8A  0440               	iorwf	sprintf@width+1,w
  2027  0F8B  1D03               	btfss	3,2
  2028  0F8C  2F8E               	goto	u3461
  2029  0F8D  2F8F               	goto	u3460
  2030  0F8E                     u3461:
  2031  0F8E  2F78               	goto	l2548
  2032  0F8F                     u3460:
  2033  0F8F                     l2554:
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2036  0F8F  083B               	movf	sprintf@flag,w
  2037  0F90  3903               	andlw	3
  2038  0F91  1903               	btfsc	3,2
  2039  0F92  2F94               	goto	u3471
  2040  0F93  2F95               	goto	u3470
  2041  0F94                     u3471:
  2042  0F94  2FA0               	goto	l2560
  2043  0F95                     u3470:
  2044  0F95                     l2556:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2047  0F95  302D               	movlw	45
  2048  0F96  00B6               	movwf	??_sprintf
  2049  0F97  083E               	movf	sprintf@sp,w
  2050  0F98  0084               	movwf	4
  2051  0F99  0836               	movf	??_sprintf,w
  2052  0F9A  1383               	bcf	3,7	;select IRP bank0
  2053  0F9B  0080               	movwf	0
  2054  0F9C                     l2558:
  2055  0F9C  3001               	movlw	1
  2056  0F9D  00B6               	movwf	??_sprintf
  2057  0F9E  0836               	movf	??_sprintf,w
  2058  0F9F  07BE               	addwf	sprintf@sp,f
  2059  0FA0                     l2560:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2062  0FA0  0841               	movf	sprintf@c,w
  2063  0FA1  00B6               	movwf	??_sprintf
  2064  0FA2  0836               	movf	??_sprintf,w
  2065  0FA3  00BA               	movwf	sprintf@prec
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2068  0FA4  2FE0               	goto	l2568
  2069  0FA5                     l2562:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2072  0FA5  300A               	movlw	10
  2073  0FA6  00A7               	movwf	___lwmod@divisor
  2074  0FA7  3000               	movlw	0
  2075  0FA8  00A8               	movwf	___lwmod@divisor+1
  2076  0FA9  083A               	movf	sprintf@prec,w
  2077  0FAA  00B6               	movwf	??_sprintf
  2078  0FAB  0736               	addwf	??_sprintf,w
  2079  0FAC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2080  0FAD  0084               	movwf	4
  2081  0FAE  120A  158A  200A  120A  158A  	fcall	stringdir
  2082  0FB3  00A0               	movwf	___lwdiv@divisor
  2083  0FB4  120A  158A  200A  120A  158A  	fcall	stringdir
  2084  0FB9  00A1               	movwf	___lwdiv@divisor+1
  2085  0FBA  083D               	movf	sprintf@val+1,w
  2086  0FBB  00A3               	movwf	___lwdiv@dividend+1
  2087  0FBC  083C               	movf	sprintf@val,w
  2088  0FBD  00A2               	movwf	___lwdiv@dividend
  2089  0FBE  120A  158A  24A6  120A  158A  	fcall	___lwdiv
  2090  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0FC5  0821               	movf	?___lwdiv+1,w
  2093  0FC6  00AA               	movwf	___lwmod@dividend+1
  2094  0FC7  0820               	movf	?___lwdiv,w
  2095  0FC8  00A9               	movwf	___lwmod@dividend
  2096  0FC9  120A  158A  246A  120A  158A  	fcall	___lwmod
  2097  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0FD0  0827               	movf	?___lwmod,w
  2100  0FD1  3E30               	addlw	48
  2101  0FD2  00B7               	movwf	??_sprintf+1
  2102  0FD3  0837               	movf	??_sprintf+1,w
  2103  0FD4  00C1               	movwf	sprintf@c
  2104  0FD5                     l2564:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2107  0FD5  0841               	movf	sprintf@c,w
  2108  0FD6  00B6               	movwf	??_sprintf
  2109  0FD7  083E               	movf	sprintf@sp,w
  2110  0FD8  0084               	movwf	4
  2111  0FD9  0836               	movf	??_sprintf,w
  2112  0FDA  1383               	bcf	3,7	;select IRP bank0
  2113  0FDB  0080               	movwf	0
  2114  0FDC                     l2566:
  2115  0FDC  3001               	movlw	1
  2116  0FDD  00B6               	movwf	??_sprintf
  2117  0FDE  0836               	movf	??_sprintf,w
  2118  0FDF  07BE               	addwf	sprintf@sp,f
  2119  0FE0                     l2568:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2122  0FE0  30FF               	movlw	255
  2123  0FE1  00B6               	movwf	??_sprintf
  2124  0FE2  0836               	movf	??_sprintf,w
  2125  0FE3  07BA               	addwf	sprintf@prec,f
  2126  0FE4  0A3A               	incf	sprintf@prec,w
  2127  0FE5  1D03               	btfss	3,2
  2128  0FE6  2FE8               	goto	u3481
  2129  0FE7  2FE9               	goto	u3480
  2130  0FE8                     u3481:
  2131  0FE8  2FA5               	goto	l2562
  2132  0FE9                     u3480:
  2133  0FE9                     l2570:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2136  0FE9  3001               	movlw	1
  2137  0FEA  07AB               	addwf	sprintf@f,f
  2138  0FEB  30FF               	movlw	-1
  2139  0FEC  072B               	addwf	sprintf@f,w
  2140  0FED  0084               	movwf	4
  2141  0FEE  120A  158A  200A  120A  158A  	fcall	stringdir
  2142  0FF3  00B6               	movwf	??_sprintf
  2143  0FF4  0836               	movf	??_sprintf,w
  2144  0FF5  00C1               	movwf	sprintf@c
  2145  0FF6  0841               	movf	sprintf@c,w
  2146  0FF7  1D03               	btfss	3,2
  2147  0FF8  2FFA               	goto	u3491
  2148  0FF9  2FFB               	goto	u3490
  2149  0FFA                     u3491:
  2150  0FFA  2E80               	goto	l2490
  2151  0FFB                     u3490:
  2152  0FFB                     l2572:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2155  0FFB  083E               	movf	sprintf@sp,w
  2156  0FFC  0084               	movwf	4
  2157  0FFD  1383               	bcf	3,7	;select IRP bank0
  2158  0FFE  0180               	clrf	0
  2159  0FFF                     l271:
  2160  0FFF  0008               	return
  2161  1000                     __end_of_sprintf:
  2162                           
  2163                           	psect	text2
  2164  0B12                     __ptext2:	
  2165 ;; *************** function _isdigit *****************
  2166 ;; Defined at:
  2167 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  c               1    wreg     unsigned char 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  c               1    5[COMMON] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;		None               void
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       0       0       0
  2182 ;;      Locals:         2       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0
  2184 ;;      Totals:         2       0       0       0       0
  2185 ;;Total ram usage:        2 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_sprintf
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _isdigit
  2197  0B12                     _isdigit:
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2201                           ;isdigit@c stored from wreg
  2202  0B12  00F5               	movwf	isdigit@c
  2203  0B13                     l1568:
  2204  0B13  01F4               	clrf	_isdigit$993
  2205  0B14                     l1570:
  2206  0B14  303A               	movlw	58
  2207  0B15  0275               	subwf	isdigit@c,w
  2208  0B16  1803               	skipnc
  2209  0B17  2B19               	goto	u1501
  2210  0B18  2B1A               	goto	u1500
  2211  0B19                     u1501:
  2212  0B19  2B22               	goto	l1576
  2213  0B1A                     u1500:
  2214  0B1A                     l1572:
  2215  0B1A  3030               	movlw	48
  2216  0B1B  0275               	subwf	isdigit@c,w
  2217  0B1C  1C03               	skipc
  2218  0B1D  2B1F               	goto	u1511
  2219  0B1E  2B20               	goto	u1510
  2220  0B1F                     u1511:
  2221  0B1F  2B22               	goto	l1576
  2222  0B20                     u1510:
  2223  0B20                     l1574:
  2224  0B20  01F4               	clrf	_isdigit$993
  2225  0B21  0AF4               	incf	_isdigit$993,f
  2226  0B22                     l1576:
  2227  0B22  0C74               	rrf	_isdigit$993,w
  2228  0B23                     l728:
  2229  0B23  0008               	return
  2230  0B24                     __end_of_isdigit:
  2231                           
  2232                           	psect	text3
  2233  0B8C                     __ptext3:	
  2234 ;; *************** function ___wmul *****************
  2235 ;; Defined at:
  2236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2239 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  product         2    4[COMMON] unsigned int 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    0[BANK0 ] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       4       0       0       0
  2252 ;;      Locals:         2       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         2       4       0       0       0
  2255 ;;Total ram usage:        6 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_sprintf
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function ___wmul
  2267  0B8C                     ___wmul:
  2268  0B8C                     l2322:	
  2269                           ;incstack = 0
  2270                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2271                           
  2272  0B8C  01F4               	clrf	___wmul@product
  2273  0B8D  01F5               	clrf	___wmul@product+1
  2274  0B8E                     l2324:
  2275  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0B90  1C20               	btfss	___wmul@multiplier,0
  2278  0B91  2B93               	goto	u2991
  2279  0B92  2B94               	goto	u2990
  2280  0B93                     u2991:
  2281  0B93  2B9A               	goto	l275
  2282  0B94                     u2990:
  2283  0B94                     l2326:
  2284  0B94  0822               	movf	___wmul@multiplicand,w
  2285  0B95  07F4               	addwf	___wmul@product,f
  2286  0B96  1803               	skipnc
  2287  0B97  0AF5               	incf	___wmul@product+1,f
  2288  0B98  0823               	movf	___wmul@multiplicand+1,w
  2289  0B99  07F5               	addwf	___wmul@product+1,f
  2290  0B9A                     l275:
  2291  0B9A  3001               	movlw	1
  2292  0B9B                     u3005:
  2293  0B9B  1003               	clrc
  2294  0B9C  0DA2               	rlf	___wmul@multiplicand,f
  2295  0B9D  0DA3               	rlf	___wmul@multiplicand+1,f
  2296  0B9E  3EFF               	addlw	-1
  2297  0B9F  1D03               	skipz
  2298  0BA0  2B9B               	goto	u3005
  2299  0BA1                     l2328:
  2300  0BA1  3001               	movlw	1
  2301  0BA2                     u3015:
  2302  0BA2  1003               	clrc
  2303  0BA3  0CA1               	rrf	___wmul@multiplier+1,f
  2304  0BA4  0CA0               	rrf	___wmul@multiplier,f
  2305  0BA5  3EFF               	addlw	-1
  2306  0BA6  1D03               	skipz
  2307  0BA7  2BA2               	goto	u3015
  2308  0BA8                     l2330:
  2309  0BA8  0820               	movf	___wmul@multiplier,w
  2310  0BA9  0421               	iorwf	___wmul@multiplier+1,w
  2311  0BAA  1D03               	btfss	3,2
  2312  0BAB  2BAD               	goto	u3021
  2313  0BAC  2BAE               	goto	u3020
  2314  0BAD                     u3021:
  2315  0BAD  2B8E               	goto	l2324
  2316  0BAE                     u3020:
  2317  0BAE                     l2332:
  2318  0BAE  0875               	movf	___wmul@product+1,w
  2319  0BAF  00A1               	movwf	?___wmul+1
  2320  0BB0  0874               	movf	___wmul@product,w
  2321  0BB1  00A0               	movwf	?___wmul
  2322  0BB2                     l277:
  2323  0BB2  0008               	return
  2324  0BB3                     __end_of___wmul:
  2325                           
  2326                           	psect	text4
  2327  0C6A                     __ptext4:	
  2328 ;; *************** function ___lwmod *****************
  2329 ;; Defined at:
  2330 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  divisor         2    7[BANK0 ] unsigned int 
  2333 ;;  dividend        2    9[BANK0 ] unsigned int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  counter         1    6[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    7[BANK0 ] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       4       0       0       0
  2346 ;;      Locals:         1       0       0       0       0
  2347 ;;      Temps:          1       0       0       0       0
  2348 ;;      Totals:         2       4       0       0       0
  2349 ;;Total ram usage:        6 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;;		_sprintf
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function ___lwmod
  2362  0C6A                     ___lwmod:
  2363  0C6A                     l2402:	
  2364                           ;incstack = 0
  2365                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2366                           
  2367  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0C6C  0827               	movf	___lwmod@divisor,w
  2370  0C6D  0428               	iorwf	___lwmod@divisor+1,w
  2371  0C6E  1903               	btfsc	3,2
  2372  0C6F  2C71               	goto	u3201
  2373  0C70  2C72               	goto	u3200
  2374  0C71                     u3201:
  2375  0C71  2CA1               	goto	l2420
  2376  0C72                     u3200:
  2377  0C72                     l2404:
  2378  0C72  01F6               	clrf	___lwmod@counter
  2379  0C73  0AF6               	incf	___lwmod@counter,f
  2380  0C74  2C80               	goto	l2410
  2381  0C75                     l2406:
  2382  0C75  3001               	movlw	1
  2383  0C76                     u3215:
  2384  0C76  1003               	clrc
  2385  0C77  0DA7               	rlf	___lwmod@divisor,f
  2386  0C78  0DA8               	rlf	___lwmod@divisor+1,f
  2387  0C79  3EFF               	addlw	-1
  2388  0C7A  1D03               	skipz
  2389  0C7B  2C76               	goto	u3215
  2390  0C7C                     l2408:
  2391  0C7C  3001               	movlw	1
  2392  0C7D  00F5               	movwf	??___lwmod
  2393  0C7E  0875               	movf	??___lwmod,w
  2394  0C7F  07F6               	addwf	___lwmod@counter,f
  2395  0C80                     l2410:
  2396  0C80  1FA8               	btfss	___lwmod@divisor+1,7
  2397  0C81  2C83               	goto	u3221
  2398  0C82  2C84               	goto	u3220
  2399  0C83                     u3221:
  2400  0C83  2C75               	goto	l2406
  2401  0C84                     u3220:
  2402  0C84                     l2412:
  2403  0C84  0828               	movf	___lwmod@divisor+1,w
  2404  0C85  022A               	subwf	___lwmod@dividend+1,w
  2405  0C86  1D03               	skipz
  2406  0C87  2C8A               	goto	u3235
  2407  0C88  0827               	movf	___lwmod@divisor,w
  2408  0C89  0229               	subwf	___lwmod@dividend,w
  2409  0C8A                     u3235:
  2410  0C8A  1C03               	skipc
  2411  0C8B  2C8D               	goto	u3231
  2412  0C8C  2C8E               	goto	u3230
  2413  0C8D                     u3231:
  2414  0C8D  2C94               	goto	l2416
  2415  0C8E                     u3230:
  2416  0C8E                     l2414:
  2417  0C8E  0827               	movf	___lwmod@divisor,w
  2418  0C8F  02A9               	subwf	___lwmod@dividend,f
  2419  0C90  0828               	movf	___lwmod@divisor+1,w
  2420  0C91  1C03               	skipc
  2421  0C92  03AA               	decf	___lwmod@dividend+1,f
  2422  0C93  02AA               	subwf	___lwmod@dividend+1,f
  2423  0C94                     l2416:
  2424  0C94  3001               	movlw	1
  2425  0C95                     u3245:
  2426  0C95  1003               	clrc
  2427  0C96  0CA8               	rrf	___lwmod@divisor+1,f
  2428  0C97  0CA7               	rrf	___lwmod@divisor,f
  2429  0C98  3EFF               	addlw	-1
  2430  0C99  1D03               	skipz
  2431  0C9A  2C95               	goto	u3245
  2432  0C9B                     l2418:
  2433  0C9B  3001               	movlw	1
  2434  0C9C  02F6               	subwf	___lwmod@counter,f
  2435  0C9D  1D03               	btfss	3,2
  2436  0C9E  2CA0               	goto	u3251
  2437  0C9F  2CA1               	goto	u3250
  2438  0CA0                     u3251:
  2439  0CA0  2C84               	goto	l2412
  2440  0CA1                     u3250:
  2441  0CA1                     l2420:
  2442  0CA1  082A               	movf	___lwmod@dividend+1,w
  2443  0CA2  00A8               	movwf	?___lwmod+1
  2444  0CA3  0829               	movf	___lwmod@dividend,w
  2445  0CA4  00A7               	movwf	?___lwmod
  2446  0CA5                     l557:
  2447  0CA5  0008               	return
  2448  0CA6                     __end_of___lwmod:
  2449                           
  2450                           	psect	text5
  2451  0CA6                     __ptext5:	
  2452 ;; *************** function ___lwdiv *****************
  2453 ;; Defined at:
  2454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  divisor         2    0[BANK0 ] unsigned int 
  2457 ;;  dividend        2    2[BANK0 ] unsigned int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  quotient        2    5[BANK0 ] unsigned int 
  2460 ;;  counter         1    4[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  2    0[BANK0 ] unsigned int 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       4       0       0       0
  2471 ;;      Locals:         0       3       0       0       0
  2472 ;;      Temps:          1       0       0       0       0
  2473 ;;      Totals:         1       7       0       0       0
  2474 ;;Total ram usage:        8 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;;		_sprintf
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function ___lwdiv
  2487  0CA6                     ___lwdiv:
  2488  0CA6                     l2376:	
  2489                           ;incstack = 0
  2490                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2491                           
  2492  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0CA8  01A5               	clrf	___lwdiv@quotient
  2495  0CA9  01A6               	clrf	___lwdiv@quotient+1
  2496  0CAA                     l2378:
  2497  0CAA  0820               	movf	___lwdiv@divisor,w
  2498  0CAB  0421               	iorwf	___lwdiv@divisor+1,w
  2499  0CAC  1903               	btfsc	3,2
  2500  0CAD  2CAF               	goto	u3131
  2501  0CAE  2CB0               	goto	u3130
  2502  0CAF                     u3131:
  2503  0CAF  2CE7               	goto	l2398
  2504  0CB0                     u3130:
  2505  0CB0                     l2380:
  2506  0CB0  01A4               	clrf	___lwdiv@counter
  2507  0CB1  0AA4               	incf	___lwdiv@counter,f
  2508  0CB2  2CBE               	goto	l2386
  2509  0CB3                     l2382:
  2510  0CB3  3001               	movlw	1
  2511  0CB4                     u3145:
  2512  0CB4  1003               	clrc
  2513  0CB5  0DA0               	rlf	___lwdiv@divisor,f
  2514  0CB6  0DA1               	rlf	___lwdiv@divisor+1,f
  2515  0CB7  3EFF               	addlw	-1
  2516  0CB8  1D03               	skipz
  2517  0CB9  2CB4               	goto	u3145
  2518  0CBA                     l2384:
  2519  0CBA  3001               	movlw	1
  2520  0CBB  00F4               	movwf	??___lwdiv
  2521  0CBC  0874               	movf	??___lwdiv,w
  2522  0CBD  07A4               	addwf	___lwdiv@counter,f
  2523  0CBE                     l2386:
  2524  0CBE  1FA1               	btfss	___lwdiv@divisor+1,7
  2525  0CBF  2CC1               	goto	u3151
  2526  0CC0  2CC2               	goto	u3150
  2527  0CC1                     u3151:
  2528  0CC1  2CB3               	goto	l2382
  2529  0CC2                     u3150:
  2530  0CC2                     l2388:
  2531  0CC2  3001               	movlw	1
  2532  0CC3                     u3165:
  2533  0CC3  1003               	clrc
  2534  0CC4  0DA5               	rlf	___lwdiv@quotient,f
  2535  0CC5  0DA6               	rlf	___lwdiv@quotient+1,f
  2536  0CC6  3EFF               	addlw	-1
  2537  0CC7  1D03               	skipz
  2538  0CC8  2CC3               	goto	u3165
  2539  0CC9  0821               	movf	___lwdiv@divisor+1,w
  2540  0CCA  0223               	subwf	___lwdiv@dividend+1,w
  2541  0CCB  1D03               	skipz
  2542  0CCC  2CCF               	goto	u3175
  2543  0CCD  0820               	movf	___lwdiv@divisor,w
  2544  0CCE  0222               	subwf	___lwdiv@dividend,w
  2545  0CCF                     u3175:
  2546  0CCF  1C03               	skipc
  2547  0CD0  2CD2               	goto	u3171
  2548  0CD1  2CD3               	goto	u3170
  2549  0CD2                     u3171:
  2550  0CD2  2CDA               	goto	l2394
  2551  0CD3                     u3170:
  2552  0CD3                     l2390:
  2553  0CD3  0820               	movf	___lwdiv@divisor,w
  2554  0CD4  02A2               	subwf	___lwdiv@dividend,f
  2555  0CD5  0821               	movf	___lwdiv@divisor+1,w
  2556  0CD6  1C03               	skipc
  2557  0CD7  03A3               	decf	___lwdiv@dividend+1,f
  2558  0CD8  02A3               	subwf	___lwdiv@dividend+1,f
  2559  0CD9                     l2392:
  2560  0CD9  1425               	bsf	___lwdiv@quotient,0
  2561  0CDA                     l2394:
  2562  0CDA  3001               	movlw	1
  2563  0CDB                     u3185:
  2564  0CDB  1003               	clrc
  2565  0CDC  0CA1               	rrf	___lwdiv@divisor+1,f
  2566  0CDD  0CA0               	rrf	___lwdiv@divisor,f
  2567  0CDE  3EFF               	addlw	-1
  2568  0CDF  1D03               	skipz
  2569  0CE0  2CDB               	goto	u3185
  2570  0CE1                     l2396:
  2571  0CE1  3001               	movlw	1
  2572  0CE2  02A4               	subwf	___lwdiv@counter,f
  2573  0CE3  1D03               	btfss	3,2
  2574  0CE4  2CE6               	goto	u3191
  2575  0CE5  2CE7               	goto	u3190
  2576  0CE6                     u3191:
  2577  0CE6  2CC2               	goto	l2388
  2578  0CE7                     u3190:
  2579  0CE7                     l2398:
  2580  0CE7  0826               	movf	___lwdiv@quotient+1,w
  2581  0CE8  00A1               	movwf	?___lwdiv+1
  2582  0CE9  0825               	movf	___lwdiv@quotient,w
  2583  0CEA  00A0               	movwf	?___lwdiv
  2584  0CEB                     l547:
  2585  0CEB  0008               	return
  2586  0CEC                     __end_of___lwdiv:
  2587                           
  2588                           	psect	text6
  2589  0741                     __ptext6:	
  2590 ;; *************** function ___xxtofl *****************
  2591 ;; Defined at:
  2592 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  sign            1    wreg     unsigned char 
  2595 ;;  val             4    0[BANK0 ] long 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  sign            1    8[BANK0 ] unsigned char 
  2598 ;;  arg             4   10[BANK0 ] unsigned long 
  2599 ;;  exp             1    9[BANK0 ] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  4    0[BANK0 ] unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       4       0       0       0
  2610 ;;      Locals:         0       6       0       0       0
  2611 ;;      Temps:          0       4       0       0       0
  2612 ;;      Totals:         0      14       0       0       0
  2613 ;;Total ram usage:       14 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function ___xxtofl
  2625  0741                     ___xxtofl:
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2629                           ;___xxtofl@sign stored from wreg
  2630  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0743  00A8               	movwf	___xxtofl@sign
  2633  0744                     l2756:
  2634  0744  0828               	movf	___xxtofl@sign,w
  2635  0745  1903               	btfsc	3,2
  2636  0746  2F48               	goto	u3971
  2637  0747  2F49               	goto	u3970
  2638  0748                     u3971:
  2639  0748  2F5D               	goto	l2762
  2640  0749                     u3970:
  2641  0749                     l2758:
  2642  0749  1FA3               	btfss	___xxtofl@val+3,7
  2643  074A  2F4C               	goto	u3981
  2644  074B  2F4D               	goto	u3980
  2645  074C                     u3981:
  2646  074C  2F5D               	goto	l2762
  2647  074D                     u3980:
  2648  074D                     l2760:
  2649  074D  0920               	comf	___xxtofl@val,w
  2650  074E  00AA               	movwf	___xxtofl@arg
  2651  074F  0921               	comf	___xxtofl@val+1,w
  2652  0750  00AB               	movwf	___xxtofl@arg+1
  2653  0751  0922               	comf	___xxtofl@val+2,w
  2654  0752  00AC               	movwf	___xxtofl@arg+2
  2655  0753  0923               	comf	___xxtofl@val+3,w
  2656  0754  00AD               	movwf	___xxtofl@arg+3
  2657  0755  0AAA               	incf	___xxtofl@arg,f
  2658  0756  1903               	skipnz
  2659  0757  0AAB               	incf	___xxtofl@arg+1,f
  2660  0758  1903               	skipnz
  2661  0759  0AAC               	incf	___xxtofl@arg+2,f
  2662  075A  1903               	skipnz
  2663  075B  0AAD               	incf	___xxtofl@arg+3,f
  2664  075C  2F65               	goto	l708
  2665  075D                     l2762:
  2666  075D  0823               	movf	___xxtofl@val+3,w
  2667  075E  00AD               	movwf	___xxtofl@arg+3
  2668  075F  0822               	movf	___xxtofl@val+2,w
  2669  0760  00AC               	movwf	___xxtofl@arg+2
  2670  0761  0821               	movf	___xxtofl@val+1,w
  2671  0762  00AB               	movwf	___xxtofl@arg+1
  2672  0763  0820               	movf	___xxtofl@val,w
  2673  0764  00AA               	movwf	___xxtofl@arg
  2674  0765                     l708:
  2675  0765  0823               	movf	___xxtofl@val+3,w
  2676  0766  0422               	iorwf	___xxtofl@val+2,w
  2677  0767  0421               	iorwf	___xxtofl@val+1,w
  2678  0768  0420               	iorwf	___xxtofl@val,w
  2679  0769  1D03               	skipz
  2680  076A  2F6C               	goto	u3991
  2681  076B  2F6D               	goto	u3990
  2682  076C                     u3991:
  2683  076C  2F76               	goto	l2768
  2684  076D                     u3990:
  2685  076D                     l2764:
  2686  076D  3000               	movlw	0
  2687  076E  00A3               	movwf	?___xxtofl+3
  2688  076F  3000               	movlw	0
  2689  0770  00A2               	movwf	?___xxtofl+2
  2690  0771  3000               	movlw	0
  2691  0772  00A1               	movwf	?___xxtofl+1
  2692  0773  3000               	movlw	0
  2693  0774  00A0               	movwf	?___xxtofl
  2694  0775  2FFC               	goto	l710
  2695  0776                     l2768:
  2696  0776  3096               	movlw	150
  2697  0777  00A4               	movwf	??___xxtofl
  2698  0778  0824               	movf	??___xxtofl,w
  2699  0779  00A9               	movwf	___xxtofl@exp
  2700  077A  2F88               	goto	l2772
  2701  077B                     l2770:
  2702  077B  3001               	movlw	1
  2703  077C  00A4               	movwf	??___xxtofl
  2704  077D  0824               	movf	??___xxtofl,w
  2705  077E  07A9               	addwf	___xxtofl@exp,f
  2706  077F  3001               	movlw	1
  2707  0780                     u4005:
  2708  0780  1003               	clrc
  2709  0781  0CAD               	rrf	___xxtofl@arg+3,f
  2710  0782  0CAC               	rrf	___xxtofl@arg+2,f
  2711  0783  0CAB               	rrf	___xxtofl@arg+1,f
  2712  0784  0CAA               	rrf	___xxtofl@arg,f
  2713  0785  3EFF               	addlw	-1
  2714  0786  1D03               	skipz
  2715  0787  2F80               	goto	u4005
  2716  0788                     l2772:
  2717  0788  30FE               	movlw	254
  2718  0789  052D               	andwf	___xxtofl@arg+3,w
  2719  078A  1D03               	btfss	3,2
  2720  078B  2F8D               	goto	u4011
  2721  078C  2F8E               	goto	u4010
  2722  078D                     u4011:
  2723  078D  2F7B               	goto	l2770
  2724  078E                     u4010:
  2725  078E  2FAA               	goto	l714
  2726  078F                     l2774:
  2727  078F  3001               	movlw	1
  2728  0790  00A4               	movwf	??___xxtofl
  2729  0791  0824               	movf	??___xxtofl,w
  2730  0792  07A9               	addwf	___xxtofl@exp,f
  2731  0793                     l2776:
  2732  0793  3001               	movlw	1
  2733  0794  07AA               	addwf	___xxtofl@arg,f
  2734  0795  3000               	movlw	0
  2735  0796  1803               	skipnc
  2736  0797  3001               	movlw	1
  2737  0798  07AB               	addwf	___xxtofl@arg+1,f
  2738  0799  3000               	movlw	0
  2739  079A  1803               	skipnc
  2740  079B  3001               	movlw	1
  2741  079C  07AC               	addwf	___xxtofl@arg+2,f
  2742  079D  3000               	movlw	0
  2743  079E  1803               	skipnc
  2744  079F  3001               	movlw	1
  2745  07A0  07AD               	addwf	___xxtofl@arg+3,f
  2746  07A1                     l2778:
  2747  07A1  3001               	movlw	1
  2748  07A2                     u4025:
  2749  07A2  1003               	clrc
  2750  07A3  0CAD               	rrf	___xxtofl@arg+3,f
  2751  07A4  0CAC               	rrf	___xxtofl@arg+2,f
  2752  07A5  0CAB               	rrf	___xxtofl@arg+1,f
  2753  07A6  0CAA               	rrf	___xxtofl@arg,f
  2754  07A7  3EFF               	addlw	-1
  2755  07A8  1D03               	skipz
  2756  07A9  2FA2               	goto	u4025
  2757  07AA                     l714:
  2758  07AA  30FF               	movlw	255
  2759  07AB  052D               	andwf	___xxtofl@arg+3,w
  2760  07AC  1D03               	btfss	3,2
  2761  07AD  2FAF               	goto	u4031
  2762  07AE  2FB0               	goto	u4030
  2763  07AF                     u4031:
  2764  07AF  2F8F               	goto	l2774
  2765  07B0                     u4030:
  2766  07B0  2FBC               	goto	l2782
  2767  07B1                     l2780:
  2768  07B1  3001               	movlw	1
  2769  07B2  02A9               	subwf	___xxtofl@exp,f
  2770  07B3  3001               	movlw	1
  2771  07B4  00A4               	movwf	??___xxtofl
  2772  07B5                     u4045:
  2773  07B5  1003               	clrc
  2774  07B6  0DAA               	rlf	___xxtofl@arg,f
  2775  07B7  0DAB               	rlf	___xxtofl@arg+1,f
  2776  07B8  0DAC               	rlf	___xxtofl@arg+2,f
  2777  07B9  0DAD               	rlf	___xxtofl@arg+3,f
  2778  07BA  0BA4               	decfsz	??___xxtofl,f
  2779  07BB  2FB5               	goto	u4045
  2780  07BC                     l2782:
  2781  07BC  1BAC               	btfsc	___xxtofl@arg+2,7
  2782  07BD  2FBF               	goto	u4051
  2783  07BE  2FC0               	goto	u4050
  2784  07BF                     u4051:
  2785  07BF  2FC6               	goto	l721
  2786  07C0                     u4050:
  2787  07C0                     l2784:
  2788  07C0  3002               	movlw	2
  2789  07C1  0229               	subwf	___xxtofl@exp,w
  2790  07C2  1803               	skipnc
  2791  07C3  2FC5               	goto	u4061
  2792  07C4  2FC6               	goto	u4060
  2793  07C5                     u4061:
  2794  07C5  2FB1               	goto	l2780
  2795  07C6                     u4060:
  2796  07C6                     l721:
  2797  07C6  1829               	btfsc	___xxtofl@exp,0
  2798  07C7  2FC9               	goto	u4071
  2799  07C8  2FCA               	goto	u4070
  2800  07C9                     u4071:
  2801  07C9  2FD2               	goto	l722
  2802  07CA                     u4070:
  2803  07CA                     l2786:
  2804  07CA  30FF               	movlw	255
  2805  07CB  05AA               	andwf	___xxtofl@arg,f
  2806  07CC  30FF               	movlw	255
  2807  07CD  05AB               	andwf	___xxtofl@arg+1,f
  2808  07CE  307F               	movlw	127
  2809  07CF  05AC               	andwf	___xxtofl@arg+2,f
  2810  07D0  30FF               	movlw	255
  2811  07D1  05AD               	andwf	___xxtofl@arg+3,f
  2812  07D2                     l722:
  2813  07D2  1003               	clrc
  2814  07D3  0CA9               	rrf	___xxtofl@exp,f
  2815  07D4                     l2788:
  2816  07D4  0829               	movf	___xxtofl@exp,w
  2817  07D5  00A4               	movwf	??___xxtofl
  2818  07D6  01A5               	clrf	??___xxtofl+1
  2819  07D7  01A6               	clrf	??___xxtofl+2
  2820  07D8  01A7               	clrf	??___xxtofl+3
  2821  07D9  3018               	movlw	24
  2822  07DA                     u4085:
  2823  07DA  1003               	clrc
  2824  07DB  0DA4               	rlf	??___xxtofl,f
  2825  07DC  0DA5               	rlf	??___xxtofl+1,f
  2826  07DD  0DA6               	rlf	??___xxtofl+2,f
  2827  07DE  0DA7               	rlf	??___xxtofl+3,f
  2828  07DF                     u4080:
  2829  07DF  3EFF               	addlw	-1
  2830  07E0  1D03               	skipz
  2831  07E1  2FDA               	goto	u4085
  2832  07E2  0824               	movf	??___xxtofl,w
  2833  07E3  04AA               	iorwf	___xxtofl@arg,f
  2834  07E4  0825               	movf	??___xxtofl+1,w
  2835  07E5  04AB               	iorwf	___xxtofl@arg+1,f
  2836  07E6  0826               	movf	??___xxtofl+2,w
  2837  07E7  04AC               	iorwf	___xxtofl@arg+2,f
  2838  07E8  0827               	movf	??___xxtofl+3,w
  2839  07E9  04AD               	iorwf	___xxtofl@arg+3,f
  2840  07EA                     l2790:
  2841  07EA  0828               	movf	___xxtofl@sign,w
  2842  07EB  1903               	btfsc	3,2
  2843  07EC  2FEE               	goto	u4091
  2844  07ED  2FEF               	goto	u4090
  2845  07EE                     u4091:
  2846  07EE  2FF4               	goto	l2796
  2847  07EF                     u4090:
  2848  07EF                     l2792:
  2849  07EF  1FA3               	btfss	___xxtofl@val+3,7
  2850  07F0  2FF2               	goto	u4101
  2851  07F1  2FF3               	goto	u4100
  2852  07F2                     u4101:
  2853  07F2  2FF4               	goto	l2796
  2854  07F3                     u4100:
  2855  07F3                     l2794:
  2856  07F3  17AD               	bsf	___xxtofl@arg+3,7
  2857  07F4                     l2796:
  2858  07F4  082D               	movf	___xxtofl@arg+3,w
  2859  07F5  00A3               	movwf	?___xxtofl+3
  2860  07F6  082C               	movf	___xxtofl@arg+2,w
  2861  07F7  00A2               	movwf	?___xxtofl+2
  2862  07F8  082B               	movf	___xxtofl@arg+1,w
  2863  07F9  00A1               	movwf	?___xxtofl+1
  2864  07FA  082A               	movf	___xxtofl@arg,w
  2865  07FB  00A0               	movwf	?___xxtofl
  2866  07FC                     l710:
  2867  07FC  0008               	return
  2868  07FD                     __end_of___xxtofl:
  2869                           
  2870                           	psect	text7
  2871  0D5F                     __ptext7:	
  2872 ;; *************** function ___fltol *****************
  2873 ;; Defined at:
  2874 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  f1              4   59[BANK0 ] unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  exp1            1   69[BANK0 ] unsigned char 
  2879 ;;  sign1           1   68[BANK0 ] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  4   59[BANK0 ] long 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       4       0       0       0
  2890 ;;      Locals:         0       2       0       0       0
  2891 ;;      Temps:          0       5       0       0       0
  2892 ;;      Totals:         0      11       0       0       0
  2893 ;;Total ram usage:       11 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function ___fltol
  2905  0D5F                     ___fltol:
  2906  0D5F                     l2580:	
  2907                           ;incstack = 0
  2908                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2909                           
  2910  0D5F  1003               	clrc
  2911  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0D62  0D5D               	rlf	___fltol@f1+2,w
  2914  0D63  0D5E               	rlf	___fltol@f1+3,w
  2915  0D64  00DF               	movwf	??___fltol
  2916  0D65  085F               	movf	??___fltol,w
  2917  0D66  00E5               	movwf	___fltol@exp1
  2918  0D67  0865               	movf	___fltol@exp1,w
  2919  0D68  1D03               	btfss	3,2
  2920  0D69  2D6B               	goto	u3501
  2921  0D6A  2D6C               	goto	u3500
  2922  0D6B                     u3501:
  2923  0D6B  2D75               	goto	l2586
  2924  0D6C                     u3500:
  2925  0D6C                     l2582:
  2926  0D6C  3000               	movlw	0
  2927  0D6D  00DE               	movwf	?___fltol+3
  2928  0D6E  3000               	movlw	0
  2929  0D6F  00DD               	movwf	?___fltol+2
  2930  0D70  3000               	movlw	0
  2931  0D71  00DC               	movwf	?___fltol+1
  2932  0D72  3000               	movlw	0
  2933  0D73  00DB               	movwf	?___fltol
  2934  0D74  2DDA               	goto	l461
  2935  0D75                     l2586:
  2936  0D75  085B               	movf	___fltol@f1,w
  2937  0D76  00DF               	movwf	??___fltol
  2938  0D77  085C               	movf	___fltol@f1+1,w
  2939  0D78  00E0               	movwf	??___fltol+1
  2940  0D79  085D               	movf	___fltol@f1+2,w
  2941  0D7A  00E1               	movwf	??___fltol+2
  2942  0D7B  085E               	movf	___fltol@f1+3,w
  2943  0D7C  00E2               	movwf	??___fltol+3
  2944  0D7D  301F               	movlw	31
  2945  0D7E                     u3515:
  2946  0D7E  1003               	clrc
  2947  0D7F  0CE2               	rrf	??___fltol+3,f
  2948  0D80  0CE1               	rrf	??___fltol+2,f
  2949  0D81  0CE0               	rrf	??___fltol+1,f
  2950  0D82  0CDF               	rrf	??___fltol,f
  2951  0D83                     u3510:
  2952  0D83  3EFF               	addlw	-1
  2953  0D84  1D03               	skipz
  2954  0D85  2D7E               	goto	u3515
  2955  0D86  085F               	movf	??___fltol,w
  2956  0D87  00E3               	movwf	??___fltol+4
  2957  0D88  0863               	movf	??___fltol+4,w
  2958  0D89  00E4               	movwf	___fltol@sign1
  2959  0D8A                     l2588:
  2960  0D8A  17DD               	bsf	___fltol@f1+2,7
  2961  0D8B                     l2590:
  2962  0D8B  30FF               	movlw	255
  2963  0D8C  05DB               	andwf	___fltol@f1,f
  2964  0D8D  30FF               	movlw	255
  2965  0D8E  05DC               	andwf	___fltol@f1+1,f
  2966  0D8F  30FF               	movlw	255
  2967  0D90  05DD               	andwf	___fltol@f1+2,f
  2968  0D91  3000               	movlw	0
  2969  0D92  05DE               	andwf	___fltol@f1+3,f
  2970  0D93                     l2592:
  2971  0D93  3096               	movlw	150
  2972  0D94  02E5               	subwf	___fltol@exp1,f
  2973  0D95                     l2594:
  2974  0D95  1FE5               	btfss	___fltol@exp1,7
  2975  0D96  2D98               	goto	u3521
  2976  0D97  2D99               	goto	u3520
  2977  0D98                     u3521:
  2978  0D98  2DB3               	goto	l2604
  2979  0D99                     u3520:
  2980  0D99                     l2596:
  2981  0D99  0865               	movf	___fltol@exp1,w
  2982  0D9A  3A80               	xorlw	128
  2983  0D9B  3E97               	addlw	151
  2984  0D9C  1803               	skipnc
  2985  0D9D  2D9F               	goto	u3531
  2986  0D9E  2DA0               	goto	u3530
  2987  0D9F                     u3531:
  2988  0D9F  2DA1               	goto	l2602
  2989  0DA0                     u3530:
  2990  0DA0  2D6C               	goto	l2582
  2991  0DA1                     l2602:
  2992  0DA1  3001               	movlw	1
  2993  0DA2                     u3545:
  2994  0DA2  1003               	clrc
  2995  0DA3  0CDE               	rrf	___fltol@f1+3,f
  2996  0DA4  0CDD               	rrf	___fltol@f1+2,f
  2997  0DA5  0CDC               	rrf	___fltol@f1+1,f
  2998  0DA6  0CDB               	rrf	___fltol@f1,f
  2999  0DA7  3EFF               	addlw	-1
  3000  0DA8  1D03               	skipz
  3001  0DA9  2DA2               	goto	u3545
  3002  0DAA  3001               	movlw	1
  3003  0DAB  00DF               	movwf	??___fltol
  3004  0DAC  085F               	movf	??___fltol,w
  3005  0DAD  07E5               	addwf	___fltol@exp1,f
  3006  0DAE  1D03               	btfss	3,2
  3007  0DAF  2DB1               	goto	u3551
  3008  0DB0  2DB2               	goto	u3550
  3009  0DB1                     u3551:
  3010  0DB1  2DA1               	goto	l2602
  3011  0DB2                     u3550:
  3012  0DB2  2DCA               	goto	l2612
  3013  0DB3                     l2604:
  3014  0DB3  3020               	movlw	32
  3015  0DB4  0265               	subwf	___fltol@exp1,w
  3016  0DB5  1C03               	skipc
  3017  0DB6  2DB8               	goto	u3561
  3018  0DB7  2DB9               	goto	u3560
  3019  0DB8                     u3561:
  3020  0DB8  2DC5               	goto	l468
  3021  0DB9                     u3560:
  3022  0DB9  2D6C               	goto	l2582
  3023  0DBA                     l2610:
  3024  0DBA  3001               	movlw	1
  3025  0DBB  00DF               	movwf	??___fltol
  3026  0DBC                     u3575:
  3027  0DBC  1003               	clrc
  3028  0DBD  0DDB               	rlf	___fltol@f1,f
  3029  0DBE  0DDC               	rlf	___fltol@f1+1,f
  3030  0DBF  0DDD               	rlf	___fltol@f1+2,f
  3031  0DC0  0DDE               	rlf	___fltol@f1+3,f
  3032  0DC1  0BDF               	decfsz	??___fltol,f
  3033  0DC2  2DBC               	goto	u3575
  3034  0DC3  3001               	movlw	1
  3035  0DC4  02E5               	subwf	___fltol@exp1,f
  3036  0DC5                     l468:
  3037  0DC5  0865               	movf	___fltol@exp1,w
  3038  0DC6  1D03               	btfss	3,2
  3039  0DC7  2DC9               	goto	u3581
  3040  0DC8  2DCA               	goto	u3580
  3041  0DC9                     u3581:
  3042  0DC9  2DBA               	goto	l2610
  3043  0DCA                     u3580:
  3044  0DCA                     l2612:
  3045  0DCA  0864               	movf	___fltol@sign1,w
  3046  0DCB  1903               	btfsc	3,2
  3047  0DCC  2DCE               	goto	u3591
  3048  0DCD  2DCF               	goto	u3590
  3049  0DCE                     u3591:
  3050  0DCE  2DDA               	goto	l471
  3051  0DCF                     u3590:
  3052  0DCF                     l2614:
  3053  0DCF  09DB               	comf	___fltol@f1,f
  3054  0DD0  09DC               	comf	___fltol@f1+1,f
  3055  0DD1  09DD               	comf	___fltol@f1+2,f
  3056  0DD2  09DE               	comf	___fltol@f1+3,f
  3057  0DD3  0ADB               	incf	___fltol@f1,f
  3058  0DD4  1903               	skipnz
  3059  0DD5  0ADC               	incf	___fltol@f1+1,f
  3060  0DD6  1903               	skipnz
  3061  0DD7  0ADD               	incf	___fltol@f1+2,f
  3062  0DD8  1903               	skipnz
  3063  0DD9  0ADE               	incf	___fltol@f1+3,f
  3064  0DDA                     l471:
  3065  0DDA                     l461:
  3066  0DDA  0008               	return
  3067  0DDB                     __end_of___fltol:
  3068                           
  3069                           	psect	text8
  3070  0026                     __ptext8:	
  3071 ;; *************** function ___flmul *****************
  3072 ;; Defined at:
  3073 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  b               4    7[BANK0 ] long 
  3076 ;;  a               4   11[BANK0 ] long 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  prod            4   27[BANK0 ] struct .
  3079 ;;  grs             4   22[BANK0 ] unsigned long 
  3080 ;;  temp            2   31[BANK0 ] struct .
  3081 ;;  bexp            1   26[BANK0 ] unsigned char 
  3082 ;;  aexp            1   21[BANK0 ] unsigned char 
  3083 ;;  sign            1   20[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  4    7[BANK0 ] unsigned char 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       8       0       0       0
  3094 ;;      Locals:         0      13       0       0       0
  3095 ;;      Temps:          0       5       0       0       0
  3096 ;;      Totals:         0      26       0       0       0
  3097 ;;Total ram usage:       26 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    2
  3100 ;; This function calls:
  3101 ;;		__Umul8_16
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___flmul
  3109  0026                     ___flmul:
  3110  0026                     l2616:	
  3111                           ;incstack = 0
  3112                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3113                           
  3114  0026  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0027  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0028  082A               	movf	___flmul@b+3,w
  3117  0029  3980               	andlw	128
  3118  002A  00AF               	movwf	??___flmul
  3119  002B  082F               	movf	??___flmul,w
  3120  002C  00B4               	movwf	___flmul@sign
  3121  002D                     l2618:
  3122  002D  082A               	movf	___flmul@b+3,w
  3123  002E  00AF               	movwf	??___flmul
  3124  002F  072F               	addwf	??___flmul,w
  3125  0030  00B0               	movwf	??___flmul+1
  3126  0031  0830               	movf	??___flmul+1,w
  3127  0032  00BA               	movwf	___flmul@bexp
  3128  0033                     l2620:
  3129  0033  1FA9               	btfss	___flmul@b+2,7
  3130  0034  2836               	goto	u3601
  3131  0035  2837               	goto	u3600
  3132  0036                     u3601:
  3133  0036  2838               	goto	l2624
  3134  0037                     u3600:
  3135  0037                     l2622:
  3136  0037  143A               	bsf	___flmul@bexp,0
  3137  0038                     l2624:
  3138  0038  083A               	movf	___flmul@bexp,w
  3139  0039  1903               	btfsc	3,2
  3140  003A  283C               	goto	u3611
  3141  003B  283D               	goto	u3610
  3142  003C                     u3611:
  3143  003C  284C               	goto	l2632
  3144  003D                     u3610:
  3145  003D                     l2626:
  3146  003D  0A3A               	incf	___flmul@bexp,w
  3147  003E  1D03               	btfss	3,2
  3148  003F  2841               	goto	u3621
  3149  0040  2842               	goto	u3620
  3150  0041                     u3621:
  3151  0041  284A               	goto	l2630
  3152  0042                     u3620:
  3153  0042                     l2628:
  3154  0042  3000               	movlw	0
  3155  0043  00AA               	movwf	___flmul@b+3
  3156  0044  3000               	movlw	0
  3157  0045  00A9               	movwf	___flmul@b+2
  3158  0046  3000               	movlw	0
  3159  0047  00A8               	movwf	___flmul@b+1
  3160  0048  3000               	movlw	0
  3161  0049  00A7               	movwf	___flmul@b
  3162  004A                     l2630:
  3163  004A  17A9               	bsf	___flmul@b+2,7
  3164  004B  2854               	goto	l2634
  3165  004C                     l2632:
  3166  004C  3000               	movlw	0
  3167  004D  00AA               	movwf	___flmul@b+3
  3168  004E  3000               	movlw	0
  3169  004F  00A9               	movwf	___flmul@b+2
  3170  0050  3000               	movlw	0
  3171  0051  00A8               	movwf	___flmul@b+1
  3172  0052  3000               	movlw	0
  3173  0053  00A7               	movwf	___flmul@b
  3174  0054                     l2634:
  3175  0054  082E               	movf	___flmul@a+3,w
  3176  0055  3980               	andlw	128
  3177  0056  00AF               	movwf	??___flmul
  3178  0057  082F               	movf	??___flmul,w
  3179  0058  06B4               	xorwf	___flmul@sign,f
  3180  0059                     l2636:
  3181  0059  082E               	movf	___flmul@a+3,w
  3182  005A  00AF               	movwf	??___flmul
  3183  005B  072F               	addwf	??___flmul,w
  3184  005C  00B0               	movwf	??___flmul+1
  3185  005D  0830               	movf	??___flmul+1,w
  3186  005E  00B5               	movwf	___flmul@aexp
  3187  005F                     l2638:
  3188  005F  1FAD               	btfss	___flmul@a+2,7
  3189  0060  2862               	goto	u3631
  3190  0061  2863               	goto	u3630
  3191  0062                     u3631:
  3192  0062  2864               	goto	l2642
  3193  0063                     u3630:
  3194  0063                     l2640:
  3195  0063  1435               	bsf	___flmul@aexp,0
  3196  0064                     l2642:
  3197  0064  0835               	movf	___flmul@aexp,w
  3198  0065  1903               	btfsc	3,2
  3199  0066  2868               	goto	u3641
  3200  0067  2869               	goto	u3640
  3201  0068                     u3641:
  3202  0068  2878               	goto	l2650
  3203  0069                     u3640:
  3204  0069                     l2644:
  3205  0069  0A35               	incf	___flmul@aexp,w
  3206  006A  1D03               	btfss	3,2
  3207  006B  286D               	goto	u3651
  3208  006C  286E               	goto	u3650
  3209  006D                     u3651:
  3210  006D  2876               	goto	l2648
  3211  006E                     u3650:
  3212  006E                     l2646:
  3213  006E  3000               	movlw	0
  3214  006F  00AE               	movwf	___flmul@a+3
  3215  0070  3000               	movlw	0
  3216  0071  00AD               	movwf	___flmul@a+2
  3217  0072  3000               	movlw	0
  3218  0073  00AC               	movwf	___flmul@a+1
  3219  0074  3000               	movlw	0
  3220  0075  00AB               	movwf	___flmul@a
  3221  0076                     l2648:
  3222  0076  17AD               	bsf	___flmul@a+2,7
  3223  0077  2880               	goto	l2652
  3224  0078                     l2650:
  3225  0078  3000               	movlw	0
  3226  0079  00AE               	movwf	___flmul@a+3
  3227  007A  3000               	movlw	0
  3228  007B  00AD               	movwf	___flmul@a+2
  3229  007C  3000               	movlw	0
  3230  007D  00AC               	movwf	___flmul@a+1
  3231  007E  3000               	movlw	0
  3232  007F  00AB               	movwf	___flmul@a
  3233  0080                     l2652:
  3234  0080  0835               	movf	___flmul@aexp,w
  3235  0081  1903               	btfsc	3,2
  3236  0082  2884               	goto	u3661
  3237  0083  2885               	goto	u3660
  3238  0084                     u3661:
  3239  0084  288A               	goto	l2656
  3240  0085                     u3660:
  3241  0085                     l2654:
  3242  0085  083A               	movf	___flmul@bexp,w
  3243  0086  1D03               	btfss	3,2
  3244  0087  2889               	goto	u3671
  3245  0088  288A               	goto	u3670
  3246  0089                     u3671:
  3247  0089  2893               	goto	l2660
  3248  008A                     u3670:
  3249  008A                     l2656:
  3250  008A  3000               	movlw	0
  3251  008B  00AA               	movwf	?___flmul+3
  3252  008C  3000               	movlw	0
  3253  008D  00A9               	movwf	?___flmul+2
  3254  008E  3000               	movlw	0
  3255  008F  00A8               	movwf	?___flmul+1
  3256  0090  3000               	movlw	0
  3257  0091  00A7               	movwf	?___flmul
  3258  0092  2B86               	goto	l664
  3259  0093                     l2660:
  3260  0093  0827               	movf	___flmul@b,w
  3261  0094  00AF               	movwf	??___flmul
  3262  0095  082F               	movf	??___flmul,w
  3263  0096  00F4               	movwf	__Umul8_16@multiplicand
  3264  0097  082D               	movf	___flmul@a+2,w
  3265  0098  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3266  009D  0875               	movf	?__Umul8_16+1,w
  3267  009E  1283               	bcf	3,5	;RP0=0, select bank0
  3268  009F  1303               	bcf	3,6	;RP1=0, select bank0
  3269  00A0  00C0               	movwf	___flmul@temp+1
  3270  00A1  0874               	movf	?__Umul8_16,w
  3271  00A2  00BF               	movwf	___flmul@temp
  3272  00A3                     l2662:
  3273  00A3  083F               	movf	___flmul@temp,w
  3274  00A4  00AF               	movwf	??___flmul
  3275  00A5  01B0               	clrf	??___flmul+1
  3276  00A6  01B1               	clrf	??___flmul+2
  3277  00A7  01B2               	clrf	??___flmul+3
  3278  00A8  0832               	movf	??___flmul+3,w
  3279  00A9  00B9               	movwf	___flmul@grs+3
  3280  00AA  0831               	movf	??___flmul+2,w
  3281  00AB  00B8               	movwf	___flmul@grs+2
  3282  00AC  0830               	movf	??___flmul+1,w
  3283  00AD  00B7               	movwf	___flmul@grs+1
  3284  00AE  082F               	movf	??___flmul,w
  3285  00AF  00B6               	movwf	___flmul@grs
  3286  00B0                     l2664:
  3287  00B0  0840               	movf	___flmul@temp+1,w
  3288  00B1  00AF               	movwf	??___flmul
  3289  00B2  01B0               	clrf	??___flmul+1
  3290  00B3  01B1               	clrf	??___flmul+2
  3291  00B4  01B2               	clrf	??___flmul+3
  3292  00B5  0832               	movf	??___flmul+3,w
  3293  00B6  00BE               	movwf	___flmul@prod+3
  3294  00B7  0831               	movf	??___flmul+2,w
  3295  00B8  00BD               	movwf	___flmul@prod+2
  3296  00B9  0830               	movf	??___flmul+1,w
  3297  00BA  00BC               	movwf	___flmul@prod+1
  3298  00BB  082F               	movf	??___flmul,w
  3299  00BC  00BB               	movwf	___flmul@prod
  3300  00BD  0828               	movf	___flmul@b+1,w
  3301  00BE  00AF               	movwf	??___flmul
  3302  00BF  082F               	movf	??___flmul,w
  3303  00C0  00F4               	movwf	__Umul8_16@multiplicand
  3304  00C1  082C               	movf	___flmul@a+1,w
  3305  00C2  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3306  00C7  0875               	movf	?__Umul8_16+1,w
  3307  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  3308  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  3309  00CA  00C0               	movwf	___flmul@temp+1
  3310  00CB  0874               	movf	?__Umul8_16,w
  3311  00CC  00BF               	movwf	___flmul@temp
  3312  00CD                     l2666:
  3313  00CD  083F               	movf	___flmul@temp,w
  3314  00CE  00AF               	movwf	??___flmul
  3315  00CF  01B0               	clrf	??___flmul+1
  3316  00D0  01B1               	clrf	??___flmul+2
  3317  00D1  01B2               	clrf	??___flmul+3
  3318  00D2  082F               	movf	??___flmul,w
  3319  00D3  07B6               	addwf	___flmul@grs,f
  3320  00D4  0830               	movf	??___flmul+1,w
  3321  00D5  1103               	clrz
  3322  00D6  1803               	skipnc
  3323  00D7  3E01               	addlw	1
  3324  00D8  1903               	skipnz
  3325  00D9  28DB               	goto	u3681
  3326  00DA  07B7               	addwf	___flmul@grs+1,f
  3327  00DB                     u3681:
  3328  00DB  0831               	movf	??___flmul+2,w
  3329  00DC  1103               	clrz
  3330  00DD  1803               	skipnc
  3331  00DE  3E01               	addlw	1
  3332  00DF  1903               	skipnz
  3333  00E0  28E2               	goto	u3682
  3334  00E1  07B8               	addwf	___flmul@grs+2,f
  3335  00E2                     u3682:
  3336  00E2  0832               	movf	??___flmul+3,w
  3337  00E3  1103               	clrz
  3338  00E4  1803               	skipnc
  3339  00E5  3E01               	addlw	1
  3340  00E6  1903               	skipnz
  3341  00E7  28E9               	goto	u3683
  3342  00E8  07B9               	addwf	___flmul@grs+3,f
  3343  00E9                     u3683:
  3344  00E9                     l2668:
  3345  00E9  0840               	movf	___flmul@temp+1,w
  3346  00EA  00AF               	movwf	??___flmul
  3347  00EB  01B0               	clrf	??___flmul+1
  3348  00EC  01B1               	clrf	??___flmul+2
  3349  00ED  01B2               	clrf	??___flmul+3
  3350  00EE  082F               	movf	??___flmul,w
  3351  00EF  07BB               	addwf	___flmul@prod,f
  3352  00F0  0830               	movf	??___flmul+1,w
  3353  00F1  1103               	clrz
  3354  00F2  1803               	skipnc
  3355  00F3  3E01               	addlw	1
  3356  00F4  1903               	skipnz
  3357  00F5  28F7               	goto	u3691
  3358  00F6  07BC               	addwf	___flmul@prod+1,f
  3359  00F7                     u3691:
  3360  00F7  0831               	movf	??___flmul+2,w
  3361  00F8  1103               	clrz
  3362  00F9  1803               	skipnc
  3363  00FA  3E01               	addlw	1
  3364  00FB  1903               	skipnz
  3365  00FC  28FE               	goto	u3692
  3366  00FD  07BD               	addwf	___flmul@prod+2,f
  3367  00FE                     u3692:
  3368  00FE  0832               	movf	??___flmul+3,w
  3369  00FF  1103               	clrz
  3370  0100  1803               	skipnc
  3371  0101  3E01               	addlw	1
  3372  0102  1903               	skipnz
  3373  0103  2905               	goto	u3693
  3374  0104  07BE               	addwf	___flmul@prod+3,f
  3375  0105                     u3693:
  3376  0105  0829               	movf	___flmul@b+2,w
  3377  0106  00AF               	movwf	??___flmul
  3378  0107  082F               	movf	??___flmul,w
  3379  0108  00F4               	movwf	__Umul8_16@multiplicand
  3380  0109  082B               	movf	___flmul@a,w
  3381  010A  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3382  010F  0875               	movf	?__Umul8_16+1,w
  3383  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0112  00C0               	movwf	___flmul@temp+1
  3386  0113  0874               	movf	?__Umul8_16,w
  3387  0114  00BF               	movwf	___flmul@temp
  3388  0115                     l2670:
  3389  0115  083F               	movf	___flmul@temp,w
  3390  0116  00AF               	movwf	??___flmul
  3391  0117  01B0               	clrf	??___flmul+1
  3392  0118  01B1               	clrf	??___flmul+2
  3393  0119  01B2               	clrf	??___flmul+3
  3394  011A  082F               	movf	??___flmul,w
  3395  011B  07B6               	addwf	___flmul@grs,f
  3396  011C  0830               	movf	??___flmul+1,w
  3397  011D  1103               	clrz
  3398  011E  1803               	skipnc
  3399  011F  3E01               	addlw	1
  3400  0120  1903               	skipnz
  3401  0121  2923               	goto	u3701
  3402  0122  07B7               	addwf	___flmul@grs+1,f
  3403  0123                     u3701:
  3404  0123  0831               	movf	??___flmul+2,w
  3405  0124  1103               	clrz
  3406  0125  1803               	skipnc
  3407  0126  3E01               	addlw	1
  3408  0127  1903               	skipnz
  3409  0128  292A               	goto	u3702
  3410  0129  07B8               	addwf	___flmul@grs+2,f
  3411  012A                     u3702:
  3412  012A  0832               	movf	??___flmul+3,w
  3413  012B  1103               	clrz
  3414  012C  1803               	skipnc
  3415  012D  3E01               	addlw	1
  3416  012E  1903               	skipnz
  3417  012F  2931               	goto	u3703
  3418  0130  07B9               	addwf	___flmul@grs+3,f
  3419  0131                     u3703:
  3420  0131                     l2672:
  3421  0131  0840               	movf	___flmul@temp+1,w
  3422  0132  00AF               	movwf	??___flmul
  3423  0133  01B0               	clrf	??___flmul+1
  3424  0134  01B1               	clrf	??___flmul+2
  3425  0135  01B2               	clrf	??___flmul+3
  3426  0136  082F               	movf	??___flmul,w
  3427  0137  07BB               	addwf	___flmul@prod,f
  3428  0138  0830               	movf	??___flmul+1,w
  3429  0139  1103               	clrz
  3430  013A  1803               	skipnc
  3431  013B  3E01               	addlw	1
  3432  013C  1903               	skipnz
  3433  013D  293F               	goto	u3711
  3434  013E  07BC               	addwf	___flmul@prod+1,f
  3435  013F                     u3711:
  3436  013F  0831               	movf	??___flmul+2,w
  3437  0140  1103               	clrz
  3438  0141  1803               	skipnc
  3439  0142  3E01               	addlw	1
  3440  0143  1903               	skipnz
  3441  0144  2946               	goto	u3712
  3442  0145  07BD               	addwf	___flmul@prod+2,f
  3443  0146                     u3712:
  3444  0146  0832               	movf	??___flmul+3,w
  3445  0147  1103               	clrz
  3446  0148  1803               	skipnc
  3447  0149  3E01               	addlw	1
  3448  014A  1903               	skipnz
  3449  014B  294D               	goto	u3713
  3450  014C  07BE               	addwf	___flmul@prod+3,f
  3451  014D                     u3713:
  3452  014D                     l2674:
  3453  014D  3008               	movlw	8
  3454  014E  00AF               	movwf	??___flmul
  3455  014F                     u3725:
  3456  014F  1003               	clrc
  3457  0150  0DB6               	rlf	___flmul@grs,f
  3458  0151  0DB7               	rlf	___flmul@grs+1,f
  3459  0152  0DB8               	rlf	___flmul@grs+2,f
  3460  0153  0DB9               	rlf	___flmul@grs+3,f
  3461  0154  0BAF               	decfsz	??___flmul,f
  3462  0155  294F               	goto	u3725
  3463  0156                     l2676:
  3464  0156  0828               	movf	___flmul@b+1,w
  3465  0157  00AF               	movwf	??___flmul
  3466  0158  082F               	movf	??___flmul,w
  3467  0159  00F4               	movwf	__Umul8_16@multiplicand
  3468  015A  082B               	movf	___flmul@a,w
  3469  015B  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3470  0160  0875               	movf	?__Umul8_16+1,w
  3471  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0163  00C0               	movwf	___flmul@temp+1
  3474  0164  0874               	movf	?__Umul8_16,w
  3475  0165  00BF               	movwf	___flmul@temp
  3476  0166                     l2678:
  3477  0166  083F               	movf	___flmul@temp,w
  3478  0167  00AF               	movwf	??___flmul
  3479  0168  0840               	movf	___flmul@temp+1,w
  3480  0169  00B0               	movwf	??___flmul+1
  3481  016A  01B1               	clrf	??___flmul+2
  3482  016B  01B2               	clrf	??___flmul+3
  3483  016C  082F               	movf	??___flmul,w
  3484  016D  07B6               	addwf	___flmul@grs,f
  3485  016E  0830               	movf	??___flmul+1,w
  3486  016F  1103               	clrz
  3487  0170  1803               	skipnc
  3488  0171  3E01               	addlw	1
  3489  0172  1903               	skipnz
  3490  0173  2975               	goto	u3731
  3491  0174  07B7               	addwf	___flmul@grs+1,f
  3492  0175                     u3731:
  3493  0175  0831               	movf	??___flmul+2,w
  3494  0176  1103               	clrz
  3495  0177  1803               	skipnc
  3496  0178  3E01               	addlw	1
  3497  0179  1903               	skipnz
  3498  017A  297C               	goto	u3732
  3499  017B  07B8               	addwf	___flmul@grs+2,f
  3500  017C                     u3732:
  3501  017C  0832               	movf	??___flmul+3,w
  3502  017D  1103               	clrz
  3503  017E  1803               	skipnc
  3504  017F  3E01               	addlw	1
  3505  0180  1903               	skipnz
  3506  0181  2983               	goto	u3733
  3507  0182  07B9               	addwf	___flmul@grs+3,f
  3508  0183                     u3733:
  3509  0183                     l2680:
  3510  0183  0827               	movf	___flmul@b,w
  3511  0184  00AF               	movwf	??___flmul
  3512  0185  082F               	movf	??___flmul,w
  3513  0186  00F4               	movwf	__Umul8_16@multiplicand
  3514  0187  082C               	movf	___flmul@a+1,w
  3515  0188  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3516  018D  0875               	movf	?__Umul8_16+1,w
  3517  018E  1283               	bcf	3,5	;RP0=0, select bank0
  3518  018F  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0190  00C0               	movwf	___flmul@temp+1
  3520  0191  0874               	movf	?__Umul8_16,w
  3521  0192  00BF               	movwf	___flmul@temp
  3522  0193                     l2682:
  3523  0193  083F               	movf	___flmul@temp,w
  3524  0194  00AF               	movwf	??___flmul
  3525  0195  0840               	movf	___flmul@temp+1,w
  3526  0196  00B0               	movwf	??___flmul+1
  3527  0197  01B1               	clrf	??___flmul+2
  3528  0198  01B2               	clrf	??___flmul+3
  3529  0199  082F               	movf	??___flmul,w
  3530  019A  07B6               	addwf	___flmul@grs,f
  3531  019B  0830               	movf	??___flmul+1,w
  3532  019C  1103               	clrz
  3533  019D  1803               	skipnc
  3534  019E  3E01               	addlw	1
  3535  019F  1903               	skipnz
  3536  01A0  29A2               	goto	u3741
  3537  01A1  07B7               	addwf	___flmul@grs+1,f
  3538  01A2                     u3741:
  3539  01A2  0831               	movf	??___flmul+2,w
  3540  01A3  1103               	clrz
  3541  01A4  1803               	skipnc
  3542  01A5  3E01               	addlw	1
  3543  01A6  1903               	skipnz
  3544  01A7  29A9               	goto	u3742
  3545  01A8  07B8               	addwf	___flmul@grs+2,f
  3546  01A9                     u3742:
  3547  01A9  0832               	movf	??___flmul+3,w
  3548  01AA  1103               	clrz
  3549  01AB  1803               	skipnc
  3550  01AC  3E01               	addlw	1
  3551  01AD  1903               	skipnz
  3552  01AE  29B0               	goto	u3743
  3553  01AF  07B9               	addwf	___flmul@grs+3,f
  3554  01B0                     u3743:
  3555  01B0                     l2684:
  3556  01B0  3008               	movlw	8
  3557  01B1  00AF               	movwf	??___flmul
  3558  01B2                     u3755:
  3559  01B2  1003               	clrc
  3560  01B3  0DB6               	rlf	___flmul@grs,f
  3561  01B4  0DB7               	rlf	___flmul@grs+1,f
  3562  01B5  0DB8               	rlf	___flmul@grs+2,f
  3563  01B6  0DB9               	rlf	___flmul@grs+3,f
  3564  01B7  0BAF               	decfsz	??___flmul,f
  3565  01B8  29B2               	goto	u3755
  3566  01B9  0827               	movf	___flmul@b,w
  3567  01BA  00AF               	movwf	??___flmul
  3568  01BB  082F               	movf	??___flmul,w
  3569  01BC  00F4               	movwf	__Umul8_16@multiplicand
  3570  01BD  082B               	movf	___flmul@a,w
  3571  01BE  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3572  01C3  0875               	movf	?__Umul8_16+1,w
  3573  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3574  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3575  01C6  00C0               	movwf	___flmul@temp+1
  3576  01C7  0874               	movf	?__Umul8_16,w
  3577  01C8  00BF               	movwf	___flmul@temp
  3578  01C9                     l2686:
  3579  01C9  083F               	movf	___flmul@temp,w
  3580  01CA  00AF               	movwf	??___flmul
  3581  01CB  0840               	movf	___flmul@temp+1,w
  3582  01CC  00B0               	movwf	??___flmul+1
  3583  01CD  01B1               	clrf	??___flmul+2
  3584  01CE  01B2               	clrf	??___flmul+3
  3585  01CF  082F               	movf	??___flmul,w
  3586  01D0  07B6               	addwf	___flmul@grs,f
  3587  01D1  0830               	movf	??___flmul+1,w
  3588  01D2  1103               	clrz
  3589  01D3  1803               	skipnc
  3590  01D4  3E01               	addlw	1
  3591  01D5  1903               	skipnz
  3592  01D6  29D8               	goto	u3761
  3593  01D7  07B7               	addwf	___flmul@grs+1,f
  3594  01D8                     u3761:
  3595  01D8  0831               	movf	??___flmul+2,w
  3596  01D9  1103               	clrz
  3597  01DA  1803               	skipnc
  3598  01DB  3E01               	addlw	1
  3599  01DC  1903               	skipnz
  3600  01DD  29DF               	goto	u3762
  3601  01DE  07B8               	addwf	___flmul@grs+2,f
  3602  01DF                     u3762:
  3603  01DF  0832               	movf	??___flmul+3,w
  3604  01E0  1103               	clrz
  3605  01E1  1803               	skipnc
  3606  01E2  3E01               	addlw	1
  3607  01E3  1903               	skipnz
  3608  01E4  29E6               	goto	u3763
  3609  01E5  07B9               	addwf	___flmul@grs+3,f
  3610  01E6                     u3763:
  3611  01E6                     l2688:
  3612  01E6  0828               	movf	___flmul@b+1,w
  3613  01E7  00AF               	movwf	??___flmul
  3614  01E8  082F               	movf	??___flmul,w
  3615  01E9  00F4               	movwf	__Umul8_16@multiplicand
  3616  01EA  082D               	movf	___flmul@a+2,w
  3617  01EB  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3618  01F0  0875               	movf	?__Umul8_16+1,w
  3619  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3620  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3621  01F3  00C0               	movwf	___flmul@temp+1
  3622  01F4  0874               	movf	?__Umul8_16,w
  3623  01F5  00BF               	movwf	___flmul@temp
  3624  01F6  083F               	movf	___flmul@temp,w
  3625  01F7  00AF               	movwf	??___flmul
  3626  01F8  0840               	movf	___flmul@temp+1,w
  3627  01F9  00B0               	movwf	??___flmul+1
  3628  01FA  01B1               	clrf	??___flmul+2
  3629  01FB  01B2               	clrf	??___flmul+3
  3630  01FC  082F               	movf	??___flmul,w
  3631  01FD  07BB               	addwf	___flmul@prod,f
  3632  01FE  0830               	movf	??___flmul+1,w
  3633  01FF  1103               	clrz
  3634  0200  1803               	skipnc
  3635  0201  3E01               	addlw	1
  3636  0202  1903               	skipnz
  3637  0203  2A05               	goto	u3771
  3638  0204  07BC               	addwf	___flmul@prod+1,f
  3639  0205                     u3771:
  3640  0205  0831               	movf	??___flmul+2,w
  3641  0206  1103               	clrz
  3642  0207  1803               	skipnc
  3643  0208  3E01               	addlw	1
  3644  0209  1903               	skipnz
  3645  020A  2A0C               	goto	u3772
  3646  020B  07BD               	addwf	___flmul@prod+2,f
  3647  020C                     u3772:
  3648  020C  0832               	movf	??___flmul+3,w
  3649  020D  1103               	clrz
  3650  020E  1803               	skipnc
  3651  020F  3E01               	addlw	1
  3652  0210  1903               	skipnz
  3653  0211  2A13               	goto	u3773
  3654  0212  07BE               	addwf	___flmul@prod+3,f
  3655  0213                     u3773:
  3656  0213                     l2690:
  3657  0213  0829               	movf	___flmul@b+2,w
  3658  0214  00AF               	movwf	??___flmul
  3659  0215  082F               	movf	??___flmul,w
  3660  0216  00F4               	movwf	__Umul8_16@multiplicand
  3661  0217  082C               	movf	___flmul@a+1,w
  3662  0218  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3663  021D  0875               	movf	?__Umul8_16+1,w
  3664  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3665  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0220  00C0               	movwf	___flmul@temp+1
  3667  0221  0874               	movf	?__Umul8_16,w
  3668  0222  00BF               	movwf	___flmul@temp
  3669  0223                     l2692:
  3670  0223  083F               	movf	___flmul@temp,w
  3671  0224  00AF               	movwf	??___flmul
  3672  0225  0840               	movf	___flmul@temp+1,w
  3673  0226  00B0               	movwf	??___flmul+1
  3674  0227  01B1               	clrf	??___flmul+2
  3675  0228  01B2               	clrf	??___flmul+3
  3676  0229  082F               	movf	??___flmul,w
  3677  022A  07BB               	addwf	___flmul@prod,f
  3678  022B  0830               	movf	??___flmul+1,w
  3679  022C  1103               	clrz
  3680  022D  1803               	skipnc
  3681  022E  3E01               	addlw	1
  3682  022F  1903               	skipnz
  3683  0230  2A32               	goto	u3781
  3684  0231  07BC               	addwf	___flmul@prod+1,f
  3685  0232                     u3781:
  3686  0232  0831               	movf	??___flmul+2,w
  3687  0233  1103               	clrz
  3688  0234  1803               	skipnc
  3689  0235  3E01               	addlw	1
  3690  0236  1903               	skipnz
  3691  0237  2A39               	goto	u3782
  3692  0238  07BD               	addwf	___flmul@prod+2,f
  3693  0239                     u3782:
  3694  0239  0832               	movf	??___flmul+3,w
  3695  023A  1103               	clrz
  3696  023B  1803               	skipnc
  3697  023C  3E01               	addlw	1
  3698  023D  1903               	skipnz
  3699  023E  2A40               	goto	u3783
  3700  023F  07BE               	addwf	___flmul@prod+3,f
  3701  0240                     u3783:
  3702  0240  0829               	movf	___flmul@b+2,w
  3703  0241  00AF               	movwf	??___flmul
  3704  0242  082F               	movf	??___flmul,w
  3705  0243  00F4               	movwf	__Umul8_16@multiplicand
  3706  0244  082D               	movf	___flmul@a+2,w
  3707  0245  120A  158A  23B3  120A  118A  	fcall	__Umul8_16
  3708  024A  0875               	movf	?__Umul8_16+1,w
  3709  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3710  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3711  024D  00C0               	movwf	___flmul@temp+1
  3712  024E  0874               	movf	?__Umul8_16,w
  3713  024F  00BF               	movwf	___flmul@temp
  3714  0250                     l2694:
  3715  0250  083F               	movf	___flmul@temp,w
  3716  0251  00AF               	movwf	??___flmul
  3717  0252  0840               	movf	___flmul@temp+1,w
  3718  0253  00B0               	movwf	??___flmul+1
  3719  0254  01B1               	clrf	??___flmul+2
  3720  0255  01B2               	clrf	??___flmul+3
  3721  0256  3008               	movlw	8
  3722  0257                     u3795:
  3723  0257  1003               	clrc
  3724  0258  0DAF               	rlf	??___flmul,f
  3725  0259  0DB0               	rlf	??___flmul+1,f
  3726  025A  0DB1               	rlf	??___flmul+2,f
  3727  025B  0DB2               	rlf	??___flmul+3,f
  3728  025C                     u3790:
  3729  025C  3EFF               	addlw	-1
  3730  025D  1D03               	skipz
  3731  025E  2A57               	goto	u3795
  3732  025F  082F               	movf	??___flmul,w
  3733  0260  07BB               	addwf	___flmul@prod,f
  3734  0261  0830               	movf	??___flmul+1,w
  3735  0262  1103               	clrz
  3736  0263  1803               	skipnc
  3737  0264  3E01               	addlw	1
  3738  0265  1903               	skipnz
  3739  0266  2A68               	goto	u3801
  3740  0267  07BC               	addwf	___flmul@prod+1,f
  3741  0268                     u3801:
  3742  0268  0831               	movf	??___flmul+2,w
  3743  0269  1103               	clrz
  3744  026A  1803               	skipnc
  3745  026B  3E01               	addlw	1
  3746  026C  1903               	skipnz
  3747  026D  2A6F               	goto	u3802
  3748  026E  07BD               	addwf	___flmul@prod+2,f
  3749  026F                     u3802:
  3750  026F  0832               	movf	??___flmul+3,w
  3751  0270  1103               	clrz
  3752  0271  1803               	skipnc
  3753  0272  3E01               	addlw	1
  3754  0273  1903               	skipnz
  3755  0274  2A76               	goto	u3803
  3756  0275  07BE               	addwf	___flmul@prod+3,f
  3757  0276                     u3803:
  3758  0276                     l2696:
  3759  0276  0836               	movf	___flmul@grs,w
  3760  0277  00AF               	movwf	??___flmul
  3761  0278  0837               	movf	___flmul@grs+1,w
  3762  0279  00B0               	movwf	??___flmul+1
  3763  027A  0838               	movf	___flmul@grs+2,w
  3764  027B  00B1               	movwf	??___flmul+2
  3765  027C  0839               	movf	___flmul@grs+3,w
  3766  027D  00B2               	movwf	??___flmul+3
  3767  027E  3018               	movlw	24
  3768  027F                     u3815:
  3769  027F  1003               	clrc
  3770  0280  0CB2               	rrf	??___flmul+3,f
  3771  0281  0CB1               	rrf	??___flmul+2,f
  3772  0282  0CB0               	rrf	??___flmul+1,f
  3773  0283  0CAF               	rrf	??___flmul,f
  3774  0284                     u3810:
  3775  0284  3EFF               	addlw	-1
  3776  0285  1D03               	skipz
  3777  0286  2A7F               	goto	u3815
  3778  0287  082F               	movf	??___flmul,w
  3779  0288  07BB               	addwf	___flmul@prod,f
  3780  0289  0830               	movf	??___flmul+1,w
  3781  028A  1103               	clrz
  3782  028B  1803               	skipnc
  3783  028C  3E01               	addlw	1
  3784  028D  1903               	skipnz
  3785  028E  2A90               	goto	u3821
  3786  028F  07BC               	addwf	___flmul@prod+1,f
  3787  0290                     u3821:
  3788  0290  0831               	movf	??___flmul+2,w
  3789  0291  1103               	clrz
  3790  0292  1803               	skipnc
  3791  0293  3E01               	addlw	1
  3792  0294  1903               	skipnz
  3793  0295  2A97               	goto	u3822
  3794  0296  07BD               	addwf	___flmul@prod+2,f
  3795  0297                     u3822:
  3796  0297  0832               	movf	??___flmul+3,w
  3797  0298  1103               	clrz
  3798  0299  1803               	skipnc
  3799  029A  3E01               	addlw	1
  3800  029B  1903               	skipnz
  3801  029C  2A9E               	goto	u3823
  3802  029D  07BE               	addwf	___flmul@prod+3,f
  3803  029E                     u3823:
  3804  029E                     l2698:
  3805  029E  3008               	movlw	8
  3806  029F  00AF               	movwf	??___flmul
  3807  02A0                     u3835:
  3808  02A0  1003               	clrc
  3809  02A1  0DB6               	rlf	___flmul@grs,f
  3810  02A2  0DB7               	rlf	___flmul@grs+1,f
  3811  02A3  0DB8               	rlf	___flmul@grs+2,f
  3812  02A4  0DB9               	rlf	___flmul@grs+3,f
  3813  02A5  0BAF               	decfsz	??___flmul,f
  3814  02A6  2AA0               	goto	u3835
  3815  02A7                     l2700:
  3816  02A7  083A               	movf	___flmul@bexp,w
  3817  02A8  0735               	addwf	___flmul@aexp,w
  3818  02A9  00AF               	movwf	??___flmul
  3819  02AA  01B0               	clrf	??___flmul+1
  3820  02AB  0DB0               	rlf	??___flmul+1,f
  3821  02AC  082F               	movf	??___flmul,w
  3822  02AD  3E82               	addlw	130
  3823  02AE  00BF               	movwf	___flmul@temp
  3824  02AF  0830               	movf	??___flmul+1,w
  3825  02B0  1803               	skipnc
  3826  02B1  3E01               	addlw	1
  3827  02B2  3EFF               	addlw	255
  3828  02B3  00C0               	movwf	___flmul@temp+1
  3829  02B4  2AD2               	goto	l2712
  3830  02B5                     l2702:
  3831  02B5  3001               	movlw	1
  3832  02B6  00AF               	movwf	??___flmul
  3833  02B7                     u3845:
  3834  02B7  1003               	clrc
  3835  02B8  0DBB               	rlf	___flmul@prod,f
  3836  02B9  0DBC               	rlf	___flmul@prod+1,f
  3837  02BA  0DBD               	rlf	___flmul@prod+2,f
  3838  02BB  0DBE               	rlf	___flmul@prod+3,f
  3839  02BC  0BAF               	decfsz	??___flmul,f
  3840  02BD  2AB7               	goto	u3845
  3841  02BE                     l2704:
  3842  02BE  1FB9               	btfss	___flmul@grs+3,7
  3843  02BF  2AC1               	goto	u3851
  3844  02C0  2AC2               	goto	u3850
  3845  02C1                     u3851:
  3846  02C1  2AC3               	goto	l2708
  3847  02C2                     u3850:
  3848  02C2                     l2706:
  3849  02C2  143B               	bsf	___flmul@prod,0
  3850  02C3                     l2708:
  3851  02C3  3001               	movlw	1
  3852  02C4  00AF               	movwf	??___flmul
  3853  02C5                     u3865:
  3854  02C5  1003               	clrc
  3855  02C6  0DB6               	rlf	___flmul@grs,f
  3856  02C7  0DB7               	rlf	___flmul@grs+1,f
  3857  02C8  0DB8               	rlf	___flmul@grs+2,f
  3858  02C9  0DB9               	rlf	___flmul@grs+3,f
  3859  02CA  0BAF               	decfsz	??___flmul,f
  3860  02CB  2AC5               	goto	u3865
  3861  02CC                     l2710:
  3862  02CC  30FF               	movlw	255
  3863  02CD  07BF               	addwf	___flmul@temp,f
  3864  02CE  1803               	skipnc
  3865  02CF  0AC0               	incf	___flmul@temp+1,f
  3866  02D0  30FF               	movlw	255
  3867  02D1  07C0               	addwf	___flmul@temp+1,f
  3868  02D2                     l2712:
  3869  02D2  1FBD               	btfss	___flmul@prod+2,7
  3870  02D3  2AD5               	goto	u3871
  3871  02D4  2AD6               	goto	u3870
  3872  02D5                     u3871:
  3873  02D5  2AB5               	goto	l2702
  3874  02D6                     u3870:
  3875  02D6                     l2714:
  3876  02D6  01B5               	clrf	___flmul@aexp
  3877  02D7                     l2716:
  3878  02D7  1FB9               	btfss	___flmul@grs+3,7
  3879  02D8  2ADA               	goto	u3881
  3880  02D9  2ADB               	goto	u3880
  3881  02DA                     u3881:
  3882  02DA  2AF7               	goto	l2724
  3883  02DB                     u3880:
  3884  02DB                     l2718:
  3885  02DB  30FF               	movlw	255
  3886  02DC  0536               	andwf	___flmul@grs,w
  3887  02DD  00AF               	movwf	??___flmul
  3888  02DE  30FF               	movlw	255
  3889  02DF  0537               	andwf	___flmul@grs+1,w
  3890  02E0  00B0               	movwf	??___flmul+1
  3891  02E1  30FF               	movlw	255
  3892  02E2  0538               	andwf	___flmul@grs+2,w
  3893  02E3  00B1               	movwf	??___flmul+2
  3894  02E4  307F               	movlw	127
  3895  02E5  0539               	andwf	___flmul@grs+3,w
  3896  02E6  00B2               	movwf	??___flmul+3
  3897  02E7  0832               	movf	??___flmul+3,w
  3898  02E8  0431               	iorwf	??___flmul+2,w
  3899  02E9  0430               	iorwf	??___flmul+1,w
  3900  02EA  042F               	iorwf	??___flmul,w
  3901  02EB  1903               	skipnz
  3902  02EC  2AEE               	goto	u3891
  3903  02ED  2AEF               	goto	u3890
  3904  02EE                     u3891:
  3905  02EE  2AF2               	goto	l670
  3906  02EF                     u3890:
  3907  02EF                     l2720:
  3908  02EF  01B5               	clrf	___flmul@aexp
  3909  02F0  0AB5               	incf	___flmul@aexp,f
  3910  02F1  2AF7               	goto	l2724
  3911  02F2                     l670:
  3912  02F2  1C3B               	btfss	___flmul@prod,0
  3913  02F3  2AF5               	goto	u3901
  3914  02F4  2AF6               	goto	u3900
  3915  02F5                     u3901:
  3916  02F5  2AF7               	goto	l2724
  3917  02F6                     u3900:
  3918  02F6  2AEF               	goto	l2720
  3919  02F7                     l2724:
  3920  02F7  0835               	movf	___flmul@aexp,w
  3921  02F8  1903               	btfsc	3,2
  3922  02F9  2AFB               	goto	u3911
  3923  02FA  2AFC               	goto	u3910
  3924  02FB                     u3911:
  3925  02FB  2B2D               	goto	l2734
  3926  02FC                     u3910:
  3927  02FC                     l2726:
  3928  02FC  3001               	movlw	1
  3929  02FD  07BB               	addwf	___flmul@prod,f
  3930  02FE  3000               	movlw	0
  3931  02FF  1803               	skipnc
  3932  0300  3001               	movlw	1
  3933  0301  07BC               	addwf	___flmul@prod+1,f
  3934  0302  3000               	movlw	0
  3935  0303  1803               	skipnc
  3936  0304  3001               	movlw	1
  3937  0305  07BD               	addwf	___flmul@prod+2,f
  3938  0306  3000               	movlw	0
  3939  0307  1803               	skipnc
  3940  0308  3001               	movlw	1
  3941  0309  07BE               	addwf	___flmul@prod+3,f
  3942  030A                     l2728:
  3943  030A  1C3E               	btfss	___flmul@prod+3,0
  3944  030B  2B0D               	goto	u3921
  3945  030C  2B0E               	goto	u3920
  3946  030D                     u3921:
  3947  030D  2B2D               	goto	l2734
  3948  030E                     u3920:
  3949  030E                     l2730:
  3950  030E  083B               	movf	___flmul@prod,w
  3951  030F  00AF               	movwf	??___flmul
  3952  0310  083C               	movf	___flmul@prod+1,w
  3953  0311  00B0               	movwf	??___flmul+1
  3954  0312  083D               	movf	___flmul@prod+2,w
  3955  0313  00B1               	movwf	??___flmul+2
  3956  0314  083E               	movf	___flmul@prod+3,w
  3957  0315  00B2               	movwf	??___flmul+3
  3958  0316  3001               	movlw	1
  3959  0317  00B3               	movwf	??___flmul+4
  3960  0318                     u3935:
  3961  0318  0D32               	rlf	??___flmul+3,w
  3962  0319  0CB2               	rrf	??___flmul+3,f
  3963  031A  0CB1               	rrf	??___flmul+2,f
  3964  031B  0CB0               	rrf	??___flmul+1,f
  3965  031C  0CAF               	rrf	??___flmul,f
  3966  031D                     u3930:
  3967  031D  0BB3               	decfsz	??___flmul+4,f
  3968  031E  2B18               	goto	u3935
  3969  031F  0832               	movf	??___flmul+3,w
  3970  0320  00BE               	movwf	___flmul@prod+3
  3971  0321  0831               	movf	??___flmul+2,w
  3972  0322  00BD               	movwf	___flmul@prod+2
  3973  0323  0830               	movf	??___flmul+1,w
  3974  0324  00BC               	movwf	___flmul@prod+1
  3975  0325  082F               	movf	??___flmul,w
  3976  0326  00BB               	movwf	___flmul@prod
  3977  0327                     l2732:
  3978  0327  3001               	movlw	1
  3979  0328  07BF               	addwf	___flmul@temp,f
  3980  0329  1803               	skipnc
  3981  032A  0AC0               	incf	___flmul@temp+1,f
  3982  032B  3000               	movlw	0
  3983  032C  07C0               	addwf	___flmul@temp+1,f
  3984  032D                     l2734:
  3985  032D  0840               	movf	___flmul@temp+1,w
  3986  032E  3A80               	xorlw	128
  3987  032F  00FF               	movwf	btemp+1
  3988  0330  3080               	movlw	128
  3989  0331  027F               	subwf	btemp+1,w
  3990  0332  1D03               	skipz
  3991  0333  2B36               	goto	u3945
  3992  0334  30FF               	movlw	255
  3993  0335  023F               	subwf	___flmul@temp,w
  3994  0336                     u3945:
  3995  0336  1C03               	skipc
  3996  0337  2B39               	goto	u3941
  3997  0338  2B3A               	goto	u3940
  3998  0339                     u3941:
  3999  0339  2B45               	goto	l2738
  4000  033A                     u3940:
  4001  033A                     l2736:
  4002  033A  307F               	movlw	127
  4003  033B  1283               	bcf	3,5	;RP0=0, select bank0
  4004  033C  1303               	bcf	3,6	;RP1=0, select bank0
  4005  033D  00BE               	movwf	___flmul@prod+3
  4006  033E  3080               	movlw	128
  4007  033F  00BD               	movwf	___flmul@prod+2
  4008  0340  3000               	movlw	0
  4009  0341  00BC               	movwf	___flmul@prod+1
  4010  0342  3000               	movlw	0
  4011  0343  00BB               	movwf	___flmul@prod
  4012  0344  2B7A               	goto	l676
  4013  0345                     l2738:
  4014  0345  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0346  1303               	bcf	3,6	;RP1=0, select bank0
  4016  0347  0840               	movf	___flmul@temp+1,w
  4017  0348  3A80               	xorlw	128
  4018  0349  00FF               	movwf	btemp+1
  4019  034A  3080               	movlw	128
  4020  034B  027F               	subwf	btemp+1,w
  4021  034C  1D03               	skipz
  4022  034D  2B50               	goto	u3955
  4023  034E  3001               	movlw	1
  4024  034F  023F               	subwf	___flmul@temp,w
  4025  0350                     u3955:
  4026  0350  1803               	skipnc
  4027  0351  2B53               	goto	u3951
  4028  0352  2B54               	goto	u3950
  4029  0353                     u3951:
  4030  0353  2B60               	goto	l2744
  4031  0354                     u3950:
  4032  0354                     l2740:
  4033  0354  3000               	movlw	0
  4034  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0357  00BE               	movwf	___flmul@prod+3
  4037  0358  3000               	movlw	0
  4038  0359  00BD               	movwf	___flmul@prod+2
  4039  035A  3000               	movlw	0
  4040  035B  00BC               	movwf	___flmul@prod+1
  4041  035C  3000               	movlw	0
  4042  035D  00BB               	movwf	___flmul@prod
  4043  035E                     l2742:
  4044  035E  01B4               	clrf	___flmul@sign
  4045  035F  2B7A               	goto	l676
  4046  0360                     l2744:
  4047  0360  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0361  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0362  083F               	movf	___flmul@temp,w
  4050  0363  00AF               	movwf	??___flmul
  4051  0364  082F               	movf	??___flmul,w
  4052  0365  00BA               	movwf	___flmul@bexp
  4053  0366  30FF               	movlw	255
  4054  0367  05BB               	andwf	___flmul@prod,f
  4055  0368  30FF               	movlw	255
  4056  0369  05BC               	andwf	___flmul@prod+1,f
  4057  036A  307F               	movlw	127
  4058  036B  05BD               	andwf	___flmul@prod+2,f
  4059  036C  3000               	movlw	0
  4060  036D  05BE               	andwf	___flmul@prod+3,f
  4061  036E                     l2746:
  4062  036E  1C3A               	btfss	___flmul@bexp,0
  4063  036F  2B71               	goto	u3961
  4064  0370  2B72               	goto	u3960
  4065  0371                     u3961:
  4066  0371  2B73               	goto	l2750
  4067  0372                     u3960:
  4068  0372                     l2748:
  4069  0372  17BD               	bsf	___flmul@prod+2,7
  4070  0373                     l2750:
  4071  0373  083A               	movf	___flmul@bexp,w
  4072  0374  00AF               	movwf	??___flmul
  4073  0375  1003               	clrc
  4074  0376  0C2F               	rrf	??___flmul,w
  4075  0377  00B0               	movwf	??___flmul+1
  4076  0378  0830               	movf	??___flmul+1,w
  4077  0379  00BE               	movwf	___flmul@prod+3
  4078  037A                     l676:
  4079  037A  0834               	movf	___flmul@sign,w
  4080  037B  00AF               	movwf	??___flmul
  4081  037C  082F               	movf	??___flmul,w
  4082  037D  04BE               	iorwf	___flmul@prod+3,f
  4083  037E                     l2752:
  4084  037E  083E               	movf	___flmul@prod+3,w
  4085  037F  00AA               	movwf	?___flmul+3
  4086  0380  083D               	movf	___flmul@prod+2,w
  4087  0381  00A9               	movwf	?___flmul+2
  4088  0382  083C               	movf	___flmul@prod+1,w
  4089  0383  00A8               	movwf	?___flmul+1
  4090  0384  083B               	movf	___flmul@prod,w
  4091  0385  00A7               	movwf	?___flmul
  4092  0386                     l664:
  4093  0386  0008               	return
  4094  0387                     __end_of___flmul:
  4095                           
  4096                           	psect	text9
  4097  0BB3                     __ptext9:	
  4098 ;; *************** function __Umul8_16 *****************
  4099 ;; Defined at:
  4100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  multiplier      1    wreg     unsigned char 
  4103 ;;  multiplicand    1    4[COMMON] unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4106 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  4107 ;;  product         2    2[BANK0 ] unsigned int 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2    4[COMMON] unsigned int 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         2       0       0       0       0
  4118 ;;      Locals:         0       5       0       0       0
  4119 ;;      Temps:          0       2       0       0       0
  4120 ;;      Totals:         2       7       0       0       0
  4121 ;;Total ram usage:        9 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		___flmul
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function __Umul8_16
  4133  0BB3                     __Umul8_16:
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4137                           ;__Umul8_16@multiplier stored from wreg
  4138  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0BB5  00A6               	movwf	__Umul8_16@multiplier
  4141  0BB6                     l2424:
  4142  0BB6  01A2               	clrf	__Umul8_16@product
  4143  0BB7  01A3               	clrf	__Umul8_16@product+1
  4144  0BB8                     l2426:
  4145  0BB8  0874               	movf	__Umul8_16@multiplicand,w
  4146  0BB9  00A0               	movwf	??__Umul8_16
  4147  0BBA  01A1               	clrf	??__Umul8_16+1
  4148  0BBB  0820               	movf	??__Umul8_16,w
  4149  0BBC  00A4               	movwf	__Umul8_16@word_mpld
  4150  0BBD  0821               	movf	??__Umul8_16+1,w
  4151  0BBE  00A5               	movwf	__Umul8_16@word_mpld+1
  4152  0BBF                     l2428:
  4153  0BBF  1C26               	btfss	__Umul8_16@multiplier,0
  4154  0BC0  2BC2               	goto	u3261
  4155  0BC1  2BC3               	goto	u3260
  4156  0BC2                     u3261:
  4157  0BC2  2BC9               	goto	l683
  4158  0BC3                     u3260:
  4159  0BC3                     l2430:
  4160  0BC3  0824               	movf	__Umul8_16@word_mpld,w
  4161  0BC4  07A2               	addwf	__Umul8_16@product,f
  4162  0BC5  1803               	skipnc
  4163  0BC6  0AA3               	incf	__Umul8_16@product+1,f
  4164  0BC7  0825               	movf	__Umul8_16@word_mpld+1,w
  4165  0BC8  07A3               	addwf	__Umul8_16@product+1,f
  4166  0BC9                     l683:
  4167  0BC9  3001               	movlw	1
  4168  0BCA                     u3275:
  4169  0BCA  1003               	clrc
  4170  0BCB  0DA4               	rlf	__Umul8_16@word_mpld,f
  4171  0BCC  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  4172  0BCD  3EFF               	addlw	-1
  4173  0BCE  1D03               	skipz
  4174  0BCF  2BCA               	goto	u3275
  4175  0BD0  1003               	clrc
  4176  0BD1  0CA6               	rrf	__Umul8_16@multiplier,f
  4177  0BD2                     l2432:
  4178  0BD2  0826               	movf	__Umul8_16@multiplier,w
  4179  0BD3  1D03               	btfss	3,2
  4180  0BD4  2BD6               	goto	u3281
  4181  0BD5  2BD7               	goto	u3280
  4182  0BD6                     u3281:
  4183  0BD6  2BBF               	goto	l2428
  4184  0BD7                     u3280:
  4185  0BD7                     l2434:
  4186  0BD7  0823               	movf	__Umul8_16@product+1,w
  4187  0BD8  00F5               	movwf	?__Umul8_16+1
  4188  0BD9  0822               	movf	__Umul8_16@product,w
  4189  0BDA  00F4               	movwf	?__Umul8_16
  4190  0BDB                     l685:
  4191  0BDB  0008               	return
  4192  0BDC                     __end_of__Umul8_16:
  4193                           
  4194                           	psect	text10
  4195  0564                     __ptext10:	
  4196 ;; *************** function ___fldiv *****************
  4197 ;; Defined at:
  4198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  a               4   33[BANK0 ] unsigned int 
  4201 ;;  b               4   37[BANK0 ] unsigned int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  grs             4   53[BANK0 ] unsigned long 
  4204 ;;  rem             4   46[BANK0 ] unsigned long 
  4205 ;;  new_exp         2   51[BANK0 ] int 
  4206 ;;  aexp            1   58[BANK0 ] unsigned char 
  4207 ;;  bexp            1   57[BANK0 ] unsigned char 
  4208 ;;  sign            1   50[BANK0 ] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  4   33[BANK0 ] unsigned char 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, btemp+1
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4218 ;;      Params:         0       8       0       0       0
  4219 ;;      Locals:         0      13       0       0       0
  4220 ;;      Temps:          0       5       0       0       0
  4221 ;;      Totals:         0      26       0       0       0
  4222 ;;Total ram usage:       26 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function ___fldiv
  4234  0564                     ___fldiv:
  4235  0564                     l1882:	
  4236                           ;incstack = 0
  4237                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4238                           
  4239  0564  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0565  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0566  0848               	movf	___fldiv@b+3,w
  4242  0567  3980               	andlw	128
  4243  0568  00C9               	movwf	??___fldiv
  4244  0569  0849               	movf	??___fldiv,w
  4245  056A  00D2               	movwf	___fldiv@sign
  4246  056B                     l1884:
  4247  056B  0848               	movf	___fldiv@b+3,w
  4248  056C  00C9               	movwf	??___fldiv
  4249  056D  0749               	addwf	??___fldiv,w
  4250  056E  00CA               	movwf	??___fldiv+1
  4251  056F  084A               	movf	??___fldiv+1,w
  4252  0570  00D9               	movwf	___fldiv@bexp
  4253  0571                     l1886:
  4254  0571  1FC7               	btfss	___fldiv@b+2,7
  4255  0572  2D74               	goto	u2131
  4256  0573  2D75               	goto	u2130
  4257  0574                     u2131:
  4258  0574  2D76               	goto	l1890
  4259  0575                     u2130:
  4260  0575                     l1888:
  4261  0575  1459               	bsf	___fldiv@bexp,0
  4262  0576                     l1890:
  4263  0576  0859               	movf	___fldiv@bexp,w
  4264  0577  1903               	btfsc	3,2
  4265  0578  2D7A               	goto	u2141
  4266  0579  2D7B               	goto	u2140
  4267  057A                     u2141:
  4268  057A  2D8B               	goto	l1900
  4269  057B                     u2140:
  4270  057B                     l1892:
  4271  057B  0A59               	incf	___fldiv@bexp,w
  4272  057C  1D03               	btfss	3,2
  4273  057D  2D7F               	goto	u2151
  4274  057E  2D80               	goto	u2150
  4275  057F                     u2151:
  4276  057F  2D88               	goto	l1896
  4277  0580                     u2150:
  4278  0580                     l1894:
  4279  0580  3000               	movlw	0
  4280  0581  00C8               	movwf	___fldiv@b+3
  4281  0582  3000               	movlw	0
  4282  0583  00C7               	movwf	___fldiv@b+2
  4283  0584  3000               	movlw	0
  4284  0585  00C6               	movwf	___fldiv@b+1
  4285  0586  3000               	movlw	0
  4286  0587  00C5               	movwf	___fldiv@b
  4287  0588                     l1896:
  4288  0588  17C7               	bsf	___fldiv@b+2,7
  4289  0589                     l1898:
  4290  0589  01C8               	clrf	___fldiv@b+3
  4291  058A  2D93               	goto	l1902
  4292  058B                     l1900:
  4293  058B  3000               	movlw	0
  4294  058C  00C8               	movwf	___fldiv@b+3
  4295  058D  3000               	movlw	0
  4296  058E  00C7               	movwf	___fldiv@b+2
  4297  058F  3000               	movlw	0
  4298  0590  00C6               	movwf	___fldiv@b+1
  4299  0591  3000               	movlw	0
  4300  0592  00C5               	movwf	___fldiv@b
  4301  0593                     l1902:
  4302  0593  0844               	movf	___fldiv@a+3,w
  4303  0594  3980               	andlw	128
  4304  0595  00C9               	movwf	??___fldiv
  4305  0596  0849               	movf	??___fldiv,w
  4306  0597  06D2               	xorwf	___fldiv@sign,f
  4307  0598                     l1904:
  4308  0598  0844               	movf	___fldiv@a+3,w
  4309  0599  00C9               	movwf	??___fldiv
  4310  059A  0749               	addwf	??___fldiv,w
  4311  059B  00CA               	movwf	??___fldiv+1
  4312  059C  084A               	movf	??___fldiv+1,w
  4313  059D  00DA               	movwf	___fldiv@aexp
  4314  059E                     l1906:
  4315  059E  1FC3               	btfss	___fldiv@a+2,7
  4316  059F  2DA1               	goto	u2161
  4317  05A0  2DA2               	goto	u2160
  4318  05A1                     u2161:
  4319  05A1  2DA3               	goto	l1910
  4320  05A2                     u2160:
  4321  05A2                     l1908:
  4322  05A2  145A               	bsf	___fldiv@aexp,0
  4323  05A3                     l1910:
  4324  05A3  085A               	movf	___fldiv@aexp,w
  4325  05A4  1903               	btfsc	3,2
  4326  05A5  2DA7               	goto	u2171
  4327  05A6  2DA8               	goto	u2170
  4328  05A7                     u2171:
  4329  05A7  2DB8               	goto	l1920
  4330  05A8                     u2170:
  4331  05A8                     l1912:
  4332  05A8  0A5A               	incf	___fldiv@aexp,w
  4333  05A9  1D03               	btfss	3,2
  4334  05AA  2DAC               	goto	u2181
  4335  05AB  2DAD               	goto	u2180
  4336  05AC                     u2181:
  4337  05AC  2DB5               	goto	l1916
  4338  05AD                     u2180:
  4339  05AD                     l1914:
  4340  05AD  3000               	movlw	0
  4341  05AE  00C4               	movwf	___fldiv@a+3
  4342  05AF  3000               	movlw	0
  4343  05B0  00C3               	movwf	___fldiv@a+2
  4344  05B1  3000               	movlw	0
  4345  05B2  00C2               	movwf	___fldiv@a+1
  4346  05B3  3000               	movlw	0
  4347  05B4  00C1               	movwf	___fldiv@a
  4348  05B5                     l1916:
  4349  05B5  17C3               	bsf	___fldiv@a+2,7
  4350  05B6                     l1918:
  4351  05B6  01C4               	clrf	___fldiv@a+3
  4352  05B7  2DC0               	goto	l624
  4353  05B8                     l1920:
  4354  05B8  3000               	movlw	0
  4355  05B9  00C4               	movwf	___fldiv@a+3
  4356  05BA  3000               	movlw	0
  4357  05BB  00C3               	movwf	___fldiv@a+2
  4358  05BC  3000               	movlw	0
  4359  05BD  00C2               	movwf	___fldiv@a+1
  4360  05BE  3000               	movlw	0
  4361  05BF  00C1               	movwf	___fldiv@a
  4362  05C0                     l624:
  4363  05C0  0844               	movf	___fldiv@a+3,w
  4364  05C1  0443               	iorwf	___fldiv@a+2,w
  4365  05C2  0442               	iorwf	___fldiv@a+1,w
  4366  05C3  0441               	iorwf	___fldiv@a,w
  4367  05C4  1D03               	skipz
  4368  05C5  2DC7               	goto	u2191
  4369  05C6  2DC8               	goto	u2190
  4370  05C7                     u2191:
  4371  05C7  2DE1               	goto	l1930
  4372  05C8                     u2190:
  4373  05C8                     l1922:
  4374  05C8  3000               	movlw	0
  4375  05C9  00C8               	movwf	___fldiv@b+3
  4376  05CA  3000               	movlw	0
  4377  05CB  00C7               	movwf	___fldiv@b+2
  4378  05CC  3000               	movlw	0
  4379  05CD  00C6               	movwf	___fldiv@b+1
  4380  05CE  3000               	movlw	0
  4381  05CF  00C5               	movwf	___fldiv@b
  4382  05D0  3080               	movlw	128
  4383  05D1  04C7               	iorwf	___fldiv@b+2,f
  4384  05D2  307F               	movlw	127
  4385  05D3  04C8               	iorwf	___fldiv@b+3,f
  4386  05D4                     l1924:
  4387  05D4  0852               	movf	___fldiv@sign,w
  4388  05D5  00C9               	movwf	??___fldiv
  4389  05D6  0849               	movf	??___fldiv,w
  4390  05D7  04C8               	iorwf	___fldiv@b+3,f
  4391  05D8                     l1926:
  4392  05D8  0848               	movf	___fldiv@b+3,w
  4393  05D9  00C4               	movwf	?___fldiv+3
  4394  05DA  0847               	movf	___fldiv@b+2,w
  4395  05DB  00C3               	movwf	?___fldiv+2
  4396  05DC  0846               	movf	___fldiv@b+1,w
  4397  05DD  00C2               	movwf	?___fldiv+1
  4398  05DE  0845               	movf	___fldiv@b,w
  4399  05DF  00C1               	movwf	?___fldiv
  4400  05E0  2F40               	goto	l626
  4401  05E1                     l1930:
  4402  05E1  0859               	movf	___fldiv@bexp,w
  4403  05E2  1D03               	btfss	3,2
  4404  05E3  2DE5               	goto	u2201
  4405  05E4  2DE6               	goto	u2200
  4406  05E5                     u2201:
  4407  05E5  2DEF               	goto	l1936
  4408  05E6                     u2200:
  4409  05E6                     l1932:
  4410  05E6  3000               	movlw	0
  4411  05E7  00C4               	movwf	?___fldiv+3
  4412  05E8  3000               	movlw	0
  4413  05E9  00C3               	movwf	?___fldiv+2
  4414  05EA  3000               	movlw	0
  4415  05EB  00C2               	movwf	?___fldiv+1
  4416  05EC  3000               	movlw	0
  4417  05ED  00C1               	movwf	?___fldiv
  4418  05EE  2F40               	goto	l626
  4419  05EF                     l1936:
  4420  05EF  0859               	movf	___fldiv@bexp,w
  4421  05F0  00C9               	movwf	??___fldiv
  4422  05F1  01CA               	clrf	??___fldiv+1
  4423  05F2  084A               	movf	??___fldiv+1,w
  4424  05F3  00CC               	movwf	??___fldiv+3
  4425  05F4  085A               	movf	___fldiv@aexp,w
  4426  05F5  0249               	subwf	??___fldiv,w
  4427  05F6  00CB               	movwf	??___fldiv+2
  4428  05F7  1C03               	skipc
  4429  05F8  03CC               	decf	??___fldiv+3,f
  4430  05F9  084B               	movf	??___fldiv+2,w
  4431  05FA  3E7F               	addlw	127
  4432  05FB  00D3               	movwf	___fldiv@new_exp
  4433  05FC  084C               	movf	??___fldiv+3,w
  4434  05FD  1803               	skipnc
  4435  05FE  3E01               	addlw	1
  4436  05FF  3E00               	addlw	0
  4437  0600  00D4               	movwf	___fldiv@new_exp+1
  4438  0601                     l1938:
  4439  0601  0848               	movf	___fldiv@b+3,w
  4440  0602  00D1               	movwf	___fldiv@rem+3
  4441  0603  0847               	movf	___fldiv@b+2,w
  4442  0604  00D0               	movwf	___fldiv@rem+2
  4443  0605  0846               	movf	___fldiv@b+1,w
  4444  0606  00CF               	movwf	___fldiv@rem+1
  4445  0607  0845               	movf	___fldiv@b,w
  4446  0608  00CE               	movwf	___fldiv@rem
  4447  0609                     l1940:
  4448  0609  3000               	movlw	0
  4449  060A  00C8               	movwf	___fldiv@b+3
  4450  060B  3000               	movlw	0
  4451  060C  00C7               	movwf	___fldiv@b+2
  4452  060D  3000               	movlw	0
  4453  060E  00C6               	movwf	___fldiv@b+1
  4454  060F  3000               	movlw	0
  4455  0610  00C5               	movwf	___fldiv@b
  4456  0611                     l1942:
  4457  0611  3000               	movlw	0
  4458  0612  00D8               	movwf	___fldiv@grs+3
  4459  0613  3000               	movlw	0
  4460  0614  00D7               	movwf	___fldiv@grs+2
  4461  0615  3000               	movlw	0
  4462  0616  00D6               	movwf	___fldiv@grs+1
  4463  0617  3000               	movlw	0
  4464  0618  00D5               	movwf	___fldiv@grs
  4465  0619                     l1944:
  4466  0619  01DA               	clrf	___fldiv@aexp
  4467  061A  2E65               	goto	l1964
  4468  061B                     l1946:
  4469  061B  085A               	movf	___fldiv@aexp,w
  4470  061C  1903               	btfsc	3,2
  4471  061D  2E1F               	goto	u2211
  4472  061E  2E20               	goto	u2210
  4473  061F                     u2211:
  4474  061F  2E40               	goto	l1956
  4475  0620                     u2210:
  4476  0620                     l1948:
  4477  0620  3001               	movlw	1
  4478  0621  00C9               	movwf	??___fldiv
  4479  0622                     u2225:
  4480  0622  1003               	clrc
  4481  0623  0DCE               	rlf	___fldiv@rem,f
  4482  0624  0DCF               	rlf	___fldiv@rem+1,f
  4483  0625  0DD0               	rlf	___fldiv@rem+2,f
  4484  0626  0DD1               	rlf	___fldiv@rem+3,f
  4485  0627  0BC9               	decfsz	??___fldiv,f
  4486  0628  2E22               	goto	u2225
  4487  0629  3001               	movlw	1
  4488  062A  00C9               	movwf	??___fldiv
  4489  062B                     u2235:
  4490  062B  1003               	clrc
  4491  062C  0DC5               	rlf	___fldiv@b,f
  4492  062D  0DC6               	rlf	___fldiv@b+1,f
  4493  062E  0DC7               	rlf	___fldiv@b+2,f
  4494  062F  0DC8               	rlf	___fldiv@b+3,f
  4495  0630  0BC9               	decfsz	??___fldiv,f
  4496  0631  2E2B               	goto	u2235
  4497  0632                     l1950:
  4498  0632  1FD8               	btfss	___fldiv@grs+3,7
  4499  0633  2E35               	goto	u2241
  4500  0634  2E36               	goto	u2240
  4501  0635                     u2241:
  4502  0635  2E37               	goto	l1954
  4503  0636                     u2240:
  4504  0636                     l1952:
  4505  0636  1445               	bsf	___fldiv@b,0
  4506  0637                     l1954:
  4507  0637  3001               	movlw	1
  4508  0638  00C9               	movwf	??___fldiv
  4509  0639                     u2255:
  4510  0639  1003               	clrc
  4511  063A  0DD5               	rlf	___fldiv@grs,f
  4512  063B  0DD6               	rlf	___fldiv@grs+1,f
  4513  063C  0DD7               	rlf	___fldiv@grs+2,f
  4514  063D  0DD8               	rlf	___fldiv@grs+3,f
  4515  063E  0BC9               	decfsz	??___fldiv,f
  4516  063F  2E39               	goto	u2255
  4517  0640                     l1956:
  4518  0640  0844               	movf	___fldiv@a+3,w
  4519  0641  0251               	subwf	___fldiv@rem+3,w
  4520  0642  1D03               	skipz
  4521  0643  2E4E               	goto	u2265
  4522  0644  0843               	movf	___fldiv@a+2,w
  4523  0645  0250               	subwf	___fldiv@rem+2,w
  4524  0646  1D03               	skipz
  4525  0647  2E4E               	goto	u2265
  4526  0648  0842               	movf	___fldiv@a+1,w
  4527  0649  024F               	subwf	___fldiv@rem+1,w
  4528  064A  1D03               	skipz
  4529  064B  2E4E               	goto	u2265
  4530  064C  0841               	movf	___fldiv@a,w
  4531  064D  024E               	subwf	___fldiv@rem,w
  4532  064E                     u2265:
  4533  064E  1C03               	skipc
  4534  064F  2E51               	goto	u2261
  4535  0650  2E52               	goto	u2260
  4536  0651                     u2261:
  4537  0651  2E61               	goto	l1962
  4538  0652                     u2260:
  4539  0652                     l1958:
  4540  0652  1758               	bsf	___fldiv@grs+3,6
  4541  0653                     l1960:
  4542  0653  0841               	movf	___fldiv@a,w
  4543  0654  02CE               	subwf	___fldiv@rem,f
  4544  0655  0842               	movf	___fldiv@a+1,w
  4545  0656  1C03               	skipc
  4546  0657  0F42               	incfsz	___fldiv@a+1,w
  4547  0658  02CF               	subwf	___fldiv@rem+1,f
  4548  0659  0843               	movf	___fldiv@a+2,w
  4549  065A  1C03               	skipc
  4550  065B  0F43               	incfsz	___fldiv@a+2,w
  4551  065C  02D0               	subwf	___fldiv@rem+2,f
  4552  065D  0844               	movf	___fldiv@a+3,w
  4553  065E  1C03               	skipc
  4554  065F  0F44               	incfsz	___fldiv@a+3,w
  4555  0660  02D1               	subwf	___fldiv@rem+3,f
  4556  0661                     l1962:
  4557  0661  3001               	movlw	1
  4558  0662  00C9               	movwf	??___fldiv
  4559  0663  0849               	movf	??___fldiv,w
  4560  0664  07DA               	addwf	___fldiv@aexp,f
  4561  0665                     l1964:
  4562  0665  301A               	movlw	26
  4563  0666  025A               	subwf	___fldiv@aexp,w
  4564  0667  1C03               	skipc
  4565  0668  2E6A               	goto	u2271
  4566  0669  2E6B               	goto	u2270
  4567  066A                     u2271:
  4568  066A  2E1B               	goto	l1946
  4569  066B                     u2270:
  4570  066B                     l1966:
  4571  066B  0851               	movf	___fldiv@rem+3,w
  4572  066C  0450               	iorwf	___fldiv@rem+2,w
  4573  066D  044F               	iorwf	___fldiv@rem+1,w
  4574  066E  044E               	iorwf	___fldiv@rem,w
  4575  066F  1903               	skipnz
  4576  0670  2E72               	goto	u2281
  4577  0671  2E73               	goto	u2280
  4578  0672                     u2281:
  4579  0672  2E92               	goto	l1980
  4580  0673                     u2280:
  4581  0673                     l1968:
  4582  0673  1455               	bsf	___fldiv@grs,0
  4583  0674  2E92               	goto	l1980
  4584  0675                     l1970:
  4585  0675  3001               	movlw	1
  4586  0676  00C9               	movwf	??___fldiv
  4587  0677                     u2295:
  4588  0677  1003               	clrc
  4589  0678  0DC5               	rlf	___fldiv@b,f
  4590  0679  0DC6               	rlf	___fldiv@b+1,f
  4591  067A  0DC7               	rlf	___fldiv@b+2,f
  4592  067B  0DC8               	rlf	___fldiv@b+3,f
  4593  067C  0BC9               	decfsz	??___fldiv,f
  4594  067D  2E77               	goto	u2295
  4595  067E                     l1972:
  4596  067E  1FD8               	btfss	___fldiv@grs+3,7
  4597  067F  2E81               	goto	u2301
  4598  0680  2E82               	goto	u2300
  4599  0681                     u2301:
  4600  0681  2E83               	goto	l1976
  4601  0682                     u2300:
  4602  0682                     l1974:
  4603  0682  1445               	bsf	___fldiv@b,0
  4604  0683                     l1976:
  4605  0683  3001               	movlw	1
  4606  0684  00C9               	movwf	??___fldiv
  4607  0685                     u2315:
  4608  0685  1003               	clrc
  4609  0686  0DD5               	rlf	___fldiv@grs,f
  4610  0687  0DD6               	rlf	___fldiv@grs+1,f
  4611  0688  0DD7               	rlf	___fldiv@grs+2,f
  4612  0689  0DD8               	rlf	___fldiv@grs+3,f
  4613  068A  0BC9               	decfsz	??___fldiv,f
  4614  068B  2E85               	goto	u2315
  4615  068C                     l1978:
  4616  068C  30FF               	movlw	255
  4617  068D  07D3               	addwf	___fldiv@new_exp,f
  4618  068E  1803               	skipnc
  4619  068F  0AD4               	incf	___fldiv@new_exp+1,f
  4620  0690  30FF               	movlw	255
  4621  0691  07D4               	addwf	___fldiv@new_exp+1,f
  4622  0692                     l1980:
  4623  0692  1FC7               	btfss	___fldiv@b+2,7
  4624  0693  2E95               	goto	u2321
  4625  0694  2E96               	goto	u2320
  4626  0695                     u2321:
  4627  0695  2E75               	goto	l1970
  4628  0696                     u2320:
  4629  0696                     l1982:
  4630  0696  01DA               	clrf	___fldiv@aexp
  4631  0697                     l1984:
  4632  0697  1FD8               	btfss	___fldiv@grs+3,7
  4633  0698  2E9A               	goto	u2331
  4634  0699  2E9B               	goto	u2330
  4635  069A                     u2331:
  4636  069A  2EB7               	goto	l1992
  4637  069B                     u2330:
  4638  069B                     l1986:
  4639  069B  30FF               	movlw	255
  4640  069C  0555               	andwf	___fldiv@grs,w
  4641  069D  00C9               	movwf	??___fldiv
  4642  069E  30FF               	movlw	255
  4643  069F  0556               	andwf	___fldiv@grs+1,w
  4644  06A0  00CA               	movwf	??___fldiv+1
  4645  06A1  30FF               	movlw	255
  4646  06A2  0557               	andwf	___fldiv@grs+2,w
  4647  06A3  00CB               	movwf	??___fldiv+2
  4648  06A4  307F               	movlw	127
  4649  06A5  0558               	andwf	___fldiv@grs+3,w
  4650  06A6  00CC               	movwf	??___fldiv+3
  4651  06A7  084C               	movf	??___fldiv+3,w
  4652  06A8  044B               	iorwf	??___fldiv+2,w
  4653  06A9  044A               	iorwf	??___fldiv+1,w
  4654  06AA  0449               	iorwf	??___fldiv,w
  4655  06AB  1903               	skipnz
  4656  06AC  2EAE               	goto	u2341
  4657  06AD  2EAF               	goto	u2340
  4658  06AE                     u2341:
  4659  06AE  2EB2               	goto	l640
  4660  06AF                     u2340:
  4661  06AF                     l1988:
  4662  06AF  01DA               	clrf	___fldiv@aexp
  4663  06B0  0ADA               	incf	___fldiv@aexp,f
  4664  06B1  2EB7               	goto	l1992
  4665  06B2                     l640:
  4666  06B2  1C45               	btfss	___fldiv@b,0
  4667  06B3  2EB5               	goto	u2351
  4668  06B4  2EB6               	goto	u2350
  4669  06B5                     u2351:
  4670  06B5  2EB7               	goto	l1992
  4671  06B6                     u2350:
  4672  06B6  2EAF               	goto	l1988
  4673  06B7                     l1992:
  4674  06B7  085A               	movf	___fldiv@aexp,w
  4675  06B8  1903               	btfsc	3,2
  4676  06B9  2EBB               	goto	u2361
  4677  06BA  2EBC               	goto	u2360
  4678  06BB                     u2361:
  4679  06BB  2EED               	goto	l2002
  4680  06BC                     u2360:
  4681  06BC                     l1994:
  4682  06BC  3001               	movlw	1
  4683  06BD  07C5               	addwf	___fldiv@b,f
  4684  06BE  3000               	movlw	0
  4685  06BF  1803               	skipnc
  4686  06C0  3001               	movlw	1
  4687  06C1  07C6               	addwf	___fldiv@b+1,f
  4688  06C2  3000               	movlw	0
  4689  06C3  1803               	skipnc
  4690  06C4  3001               	movlw	1
  4691  06C5  07C7               	addwf	___fldiv@b+2,f
  4692  06C6  3000               	movlw	0
  4693  06C7  1803               	skipnc
  4694  06C8  3001               	movlw	1
  4695  06C9  07C8               	addwf	___fldiv@b+3,f
  4696  06CA                     l1996:
  4697  06CA  1C48               	btfss	___fldiv@b+3,0
  4698  06CB  2ECD               	goto	u2371
  4699  06CC  2ECE               	goto	u2370
  4700  06CD                     u2371:
  4701  06CD  2EED               	goto	l2002
  4702  06CE                     u2370:
  4703  06CE                     l1998:
  4704  06CE  0845               	movf	___fldiv@b,w
  4705  06CF  00C9               	movwf	??___fldiv
  4706  06D0  0846               	movf	___fldiv@b+1,w
  4707  06D1  00CA               	movwf	??___fldiv+1
  4708  06D2  0847               	movf	___fldiv@b+2,w
  4709  06D3  00CB               	movwf	??___fldiv+2
  4710  06D4  0848               	movf	___fldiv@b+3,w
  4711  06D5  00CC               	movwf	??___fldiv+3
  4712  06D6  3001               	movlw	1
  4713  06D7  00CD               	movwf	??___fldiv+4
  4714  06D8                     u2385:
  4715  06D8  0D4C               	rlf	??___fldiv+3,w
  4716  06D9  0CCC               	rrf	??___fldiv+3,f
  4717  06DA  0CCB               	rrf	??___fldiv+2,f
  4718  06DB  0CCA               	rrf	??___fldiv+1,f
  4719  06DC  0CC9               	rrf	??___fldiv,f
  4720  06DD                     u2380:
  4721  06DD  0BCD               	decfsz	??___fldiv+4,f
  4722  06DE  2ED8               	goto	u2385
  4723  06DF  084C               	movf	??___fldiv+3,w
  4724  06E0  00C8               	movwf	___fldiv@b+3
  4725  06E1  084B               	movf	??___fldiv+2,w
  4726  06E2  00C7               	movwf	___fldiv@b+2
  4727  06E3  084A               	movf	??___fldiv+1,w
  4728  06E4  00C6               	movwf	___fldiv@b+1
  4729  06E5  0849               	movf	??___fldiv,w
  4730  06E6  00C5               	movwf	___fldiv@b
  4731  06E7                     l2000:
  4732  06E7  3001               	movlw	1
  4733  06E8  07D3               	addwf	___fldiv@new_exp,f
  4734  06E9  1803               	skipnc
  4735  06EA  0AD4               	incf	___fldiv@new_exp+1,f
  4736  06EB  3000               	movlw	0
  4737  06EC  07D4               	addwf	___fldiv@new_exp+1,f
  4738  06ED                     l2002:
  4739  06ED  0854               	movf	___fldiv@new_exp+1,w
  4740  06EE  3A80               	xorlw	128
  4741  06EF  00FF               	movwf	btemp+1
  4742  06F0  3080               	movlw	128
  4743  06F1  027F               	subwf	btemp+1,w
  4744  06F2  1D03               	skipz
  4745  06F3  2EF6               	goto	u2395
  4746  06F4  30FF               	movlw	255
  4747  06F5  0253               	subwf	___fldiv@new_exp,w
  4748  06F6                     u2395:
  4749  06F6  1C03               	skipc
  4750  06F7  2EF9               	goto	u2391
  4751  06F8  2EFA               	goto	u2390
  4752  06F9                     u2391:
  4753  06F9  2F08               	goto	l2006
  4754  06FA                     u2390:
  4755  06FA                     l2004:
  4756  06FA  30FF               	movlw	255
  4757  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4758  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  4759  06FD  00D3               	movwf	___fldiv@new_exp
  4760  06FE  3000               	movlw	0
  4761  06FF  00D4               	movwf	___fldiv@new_exp+1
  4762  0700  3000               	movlw	0
  4763  0701  00C8               	movwf	___fldiv@b+3
  4764  0702  3000               	movlw	0
  4765  0703  00C7               	movwf	___fldiv@b+2
  4766  0704  3000               	movlw	0
  4767  0705  00C6               	movwf	___fldiv@b+1
  4768  0706  3000               	movlw	0
  4769  0707  00C5               	movwf	___fldiv@b
  4770  0708                     l2006:
  4771  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4772  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4773  070A  0854               	movf	___fldiv@new_exp+1,w
  4774  070B  3A80               	xorlw	128
  4775  070C  00FF               	movwf	btemp+1
  4776  070D  3080               	movlw	128
  4777  070E  027F               	subwf	btemp+1,w
  4778  070F  1D03               	skipz
  4779  0710  2F13               	goto	u2405
  4780  0711  3001               	movlw	1
  4781  0712  0253               	subwf	___fldiv@new_exp,w
  4782  0713                     u2405:
  4783  0713  1803               	skipnc
  4784  0714  2F16               	goto	u2401
  4785  0715  2F17               	goto	u2400
  4786  0716                     u2401:
  4787  0716  2F24               	goto	l646
  4788  0717                     u2400:
  4789  0717                     l2008:
  4790  0717  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0718  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0719  01D3               	clrf	___fldiv@new_exp
  4793  071A  01D4               	clrf	___fldiv@new_exp+1
  4794  071B                     l2010:
  4795  071B  3000               	movlw	0
  4796  071C  00C8               	movwf	___fldiv@b+3
  4797  071D  3000               	movlw	0
  4798  071E  00C7               	movwf	___fldiv@b+2
  4799  071F  3000               	movlw	0
  4800  0720  00C6               	movwf	___fldiv@b+1
  4801  0721  3000               	movlw	0
  4802  0722  00C5               	movwf	___fldiv@b
  4803  0723                     l2012:
  4804  0723  01D2               	clrf	___fldiv@sign
  4805  0724                     l646:
  4806  0724  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0725  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0726  0853               	movf	___fldiv@new_exp,w
  4809  0727  00C9               	movwf	??___fldiv
  4810  0728  0849               	movf	??___fldiv,w
  4811  0729  00D9               	movwf	___fldiv@bexp
  4812  072A                     l2014:
  4813  072A  1C59               	btfss	___fldiv@bexp,0
  4814  072B  2F2D               	goto	u2411
  4815  072C  2F2E               	goto	u2410
  4816  072D                     u2411:
  4817  072D  2F30               	goto	l2018
  4818  072E                     u2410:
  4819  072E                     l2016:
  4820  072E  17C7               	bsf	___fldiv@b+2,7
  4821  072F  2F34               	goto	l648
  4822  0730                     l2018:
  4823  0730  307F               	movlw	127
  4824  0731  00C9               	movwf	??___fldiv
  4825  0732  0849               	movf	??___fldiv,w
  4826  0733  05C7               	andwf	___fldiv@b+2,f
  4827  0734                     l648:
  4828  0734  0859               	movf	___fldiv@bexp,w
  4829  0735  00C9               	movwf	??___fldiv
  4830  0736  1003               	clrc
  4831  0737  0C49               	rrf	??___fldiv,w
  4832  0738  00CA               	movwf	??___fldiv+1
  4833  0739  084A               	movf	??___fldiv+1,w
  4834  073A  00C8               	movwf	___fldiv@b+3
  4835  073B  0852               	movf	___fldiv@sign,w
  4836  073C  00C9               	movwf	??___fldiv
  4837  073D  0849               	movf	??___fldiv,w
  4838  073E  04C8               	iorwf	___fldiv@b+3,f
  4839  073F  2DD8               	goto	l1926
  4840  0740                     l626:
  4841  0740  0008               	return
  4842  0741                     __end_of___fldiv:
  4843                           
  4844                           	psect	text11
  4845  0CEC                     __ptext11:	
  4846 ;; *************** function _USART_Initialize *****************
  4847 ;; Defined at:
  4848 ;;		line 13 in file "usart.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  baudrate        4   14[BANK0 ] const long 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  x               4   30[BANK0 ] long 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       4       0       0       0
  4863 ;;      Locals:         0       4       0       0       0
  4864 ;;      Temps:          0      12       0       0       0
  4865 ;;      Totals:         0      20       0       0       0
  4866 ;;Total ram usage:       20 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    2
  4869 ;; This function calls:
  4870 ;;		___aldiv
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           
  4877                           ;psect for function _USART_Initialize
  4878  0CEC                     _USART_Initialize:
  4879  0CEC                     l2452:	
  4880                           ;incstack = 0
  4881                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4882                           
  4883                           
  4884                           ;usart.c: 14:     long int x;;usart.c: 17:     TXSTAbits.TX9 = 0;
  4885  0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  4886  0CED  1303               	bcf	3,6	;RP1=0, select bank1
  4887  0CEE  1318               	bcf	24,6	;volatile
  4888                           
  4889                           ;usart.c: 19:     TXSTAbits.TXEN = 1;
  4890  0CEF  1698               	bsf	24,5	;volatile
  4891                           
  4892                           ;usart.c: 21:     TXSTAbits.SYNC = 0;
  4893  0CF0  1218               	bcf	24,4	;volatile
  4894                           
  4895                           ;usart.c: 23:     TXSTAbits.BRGH = 0;
  4896  0CF1  1118               	bcf	24,2	;volatile
  4897                           
  4898                           ;usart.c: 24:     BAUDCTLbits.BRG16 = 0;
  4899  0CF2  1683               	bsf	3,5	;RP0=1, select bank3
  4900  0CF3  1703               	bsf	3,6	;RP1=1, select bank3
  4901  0CF4  1187               	bcf	7,3	;volatile
  4902                           
  4903                           ;usart.c: 27:     RCSTAbits.SPEN = 1;
  4904  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0CF7  1798               	bsf	24,7	;volatile
  4907                           
  4908                           ;usart.c: 29:     RCSTAbits.CREN = 1;
  4909  0CF8  1618               	bsf	24,4	;volatile
  4910  0CF9                     l2454:
  4911                           
  4912                           ;usart.c: 31:     x = (8000000 - baudrate*64)/(baudrate*64);
  4913  0CF9  082E               	movf	USART_Initialize@baudrate,w
  4914  0CFA  00B2               	movwf	??_USART_Initialize
  4915  0CFB  082F               	movf	USART_Initialize@baudrate+1,w
  4916  0CFC  00B3               	movwf	??_USART_Initialize+1
  4917  0CFD  0830               	movf	USART_Initialize@baudrate+2,w
  4918  0CFE  00B4               	movwf	??_USART_Initialize+2
  4919  0CFF  0831               	movf	USART_Initialize@baudrate+3,w
  4920  0D00  00B5               	movwf	??_USART_Initialize+3
  4921  0D01  3006               	movlw	6
  4922  0D02                     u3295:
  4923  0D02  1003               	clrc
  4924  0D03  0DB2               	rlf	??_USART_Initialize,f
  4925  0D04  0DB3               	rlf	??_USART_Initialize+1,f
  4926  0D05  0DB4               	rlf	??_USART_Initialize+2,f
  4927  0D06  0DB5               	rlf	??_USART_Initialize+3,f
  4928  0D07                     u3290:
  4929  0D07  3EFF               	addlw	-1
  4930  0D08  1D03               	skipz
  4931  0D09  2D02               	goto	u3295
  4932  0D0A  0835               	movf	??_USART_Initialize+3,w
  4933  0D0B  00A3               	movwf	___aldiv@divisor+3
  4934  0D0C  0834               	movf	??_USART_Initialize+2,w
  4935  0D0D  00A2               	movwf	___aldiv@divisor+2
  4936  0D0E  0833               	movf	??_USART_Initialize+1,w
  4937  0D0F  00A1               	movwf	___aldiv@divisor+1
  4938  0D10  0832               	movf	??_USART_Initialize,w
  4939  0D11  00A0               	movwf	___aldiv@divisor
  4940  0D12  082E               	movf	USART_Initialize@baudrate,w
  4941  0D13  00B6               	movwf	??_USART_Initialize+4
  4942  0D14  082F               	movf	USART_Initialize@baudrate+1,w
  4943  0D15  00B7               	movwf	??_USART_Initialize+5
  4944  0D16  0830               	movf	USART_Initialize@baudrate+2,w
  4945  0D17  00B8               	movwf	??_USART_Initialize+6
  4946  0D18  0831               	movf	USART_Initialize@baudrate+3,w
  4947  0D19  00B9               	movwf	??_USART_Initialize+7
  4948  0D1A  3006               	movlw	6
  4949  0D1B                     u3305:
  4950  0D1B  1003               	clrc
  4951  0D1C  0DB6               	rlf	??_USART_Initialize+4,f
  4952  0D1D  0DB7               	rlf	??_USART_Initialize+5,f
  4953  0D1E  0DB8               	rlf	??_USART_Initialize+6,f
  4954  0D1F  0DB9               	rlf	??_USART_Initialize+7,f
  4955  0D20                     u3300:
  4956  0D20  3EFF               	addlw	-1
  4957  0D21  1D03               	skipz
  4958  0D22  2D1B               	goto	u3305
  4959  0D23  3000               	movlw	0
  4960  0D24  00BA               	movwf	??_USART_Initialize+8
  4961  0D25  3012               	movlw	18
  4962  0D26  00BB               	movwf	??_USART_Initialize+9
  4963  0D27  307A               	movlw	122
  4964  0D28  00BC               	movwf	??_USART_Initialize+10
  4965  0D29  3000               	movlw	0
  4966  0D2A  00BD               	movwf	??_USART_Initialize+11
  4967  0D2B  0836               	movf	??_USART_Initialize+4,w
  4968  0D2C  02BA               	subwf	??_USART_Initialize+8,f
  4969  0D2D  0837               	movf	??_USART_Initialize+5,w
  4970  0D2E  1C03               	skipc
  4971  0D2F  0F37               	incfsz	??_USART_Initialize+5,w
  4972  0D30  2D32               	goto	u3311
  4973  0D31  2D33               	goto	u3312
  4974  0D32                     u3311:
  4975  0D32  02BB               	subwf	??_USART_Initialize+9,f
  4976  0D33                     u3312:
  4977  0D33  0838               	movf	??_USART_Initialize+6,w
  4978  0D34  1C03               	skipc
  4979  0D35  0F38               	incfsz	??_USART_Initialize+6,w
  4980  0D36  2D38               	goto	u3313
  4981  0D37  2D39               	goto	u3314
  4982  0D38                     u3313:
  4983  0D38  02BC               	subwf	??_USART_Initialize+10,f
  4984  0D39                     u3314:
  4985  0D39  0839               	movf	??_USART_Initialize+7,w
  4986  0D3A  1C03               	skipc
  4987  0D3B  0F39               	incfsz	??_USART_Initialize+7,w
  4988  0D3C  2D3E               	goto	u3315
  4989  0D3D  2D3F               	goto	u3316
  4990  0D3E                     u3315:
  4991  0D3E  02BD               	subwf	??_USART_Initialize+11,f
  4992  0D3F                     u3316:
  4993  0D3F  083D               	movf	??_USART_Initialize+11,w
  4994  0D40  00A7               	movwf	___aldiv@dividend+3
  4995  0D41  083C               	movf	??_USART_Initialize+10,w
  4996  0D42  00A6               	movwf	___aldiv@dividend+2
  4997  0D43  083B               	movf	??_USART_Initialize+9,w
  4998  0D44  00A5               	movwf	___aldiv@dividend+1
  4999  0D45  083A               	movf	??_USART_Initialize+8,w
  5000  0D46  00A4               	movwf	___aldiv@dividend
  5001  0D47  120A  158A  25DB  120A  158A  	fcall	___aldiv
  5002  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0D4E  0823               	movf	?___aldiv+3,w
  5005  0D4F  00C1               	movwf	USART_Initialize@x+3
  5006  0D50  0822               	movf	?___aldiv+2,w
  5007  0D51  00C0               	movwf	USART_Initialize@x+2
  5008  0D52  0821               	movf	?___aldiv+1,w
  5009  0D53  00BF               	movwf	USART_Initialize@x+1
  5010  0D54  0820               	movf	?___aldiv,w
  5011  0D55  00BE               	movwf	USART_Initialize@x
  5012  0D56                     l2456:
  5013                           
  5014                           ;usart.c: 32:     SPBRG = x;
  5015  0D56  083E               	movf	USART_Initialize@x,w
  5016  0D57  1683               	bsf	3,5	;RP0=1, select bank1
  5017  0D58  1303               	bcf	3,6	;RP1=0, select bank1
  5018  0D59  0099               	movwf	25	;volatile
  5019  0D5A                     l2458:
  5020                           
  5021                           ;usart.c: 35:     INTCONbits.GIE = 1;
  5022  0D5A  178B               	bsf	11,7	;volatile
  5023  0D5B                     l2460:
  5024                           
  5025                           ;usart.c: 37:     INTCONbits.PEIE = 1;
  5026  0D5B  170B               	bsf	11,6	;volatile
  5027  0D5C                     l2462:
  5028                           
  5029                           ;usart.c: 40:     PIE1bits.RCIE = 1;
  5030  0D5C  168C               	bsf	12,5	;volatile
  5031  0D5D                     l2464:
  5032                           
  5033                           ;usart.c: 42:     PIE1bits.TXIE = 1;
  5034  0D5D  160C               	bsf	12,4	;volatile
  5035  0D5E                     l103:
  5036  0D5E  0008               	return
  5037  0D5F                     __end_of_USART_Initialize:
  5038                           
  5039                           	psect	text12
  5040  0DDB                     __ptext12:	
  5041 ;; *************** function ___aldiv *****************
  5042 ;; Defined at:
  5043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  divisor         4    0[BANK0 ] long 
  5046 ;;  dividend        4    4[BANK0 ] long 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  quotient        4   10[BANK0 ] long 
  5049 ;;  sign            1    9[BANK0 ] unsigned char 
  5050 ;;  counter         1    8[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4    0[BANK0 ] long 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       8       0       0       0
  5061 ;;      Locals:         0       6       0       0       0
  5062 ;;      Temps:          1       0       0       0       0
  5063 ;;      Totals:         1      14       0       0       0
  5064 ;;Total ram usage:       15 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_USART_Initialize
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           
  5075                           ;psect for function ___aldiv
  5076  0DDB                     ___aldiv:
  5077  0DDB                     l2336:	
  5078                           ;incstack = 0
  5079                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5080                           
  5081  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0DDD  01A9               	clrf	___aldiv@sign
  5084  0DDE                     l2338:
  5085  0DDE  1FA3               	btfss	___aldiv@divisor+3,7
  5086  0DDF  2DE1               	goto	u3031
  5087  0DE0  2DE2               	goto	u3030
  5088  0DE1                     u3031:
  5089  0DE1  2DEF               	goto	l340
  5090  0DE2                     u3030:
  5091  0DE2                     l2340:
  5092  0DE2  09A0               	comf	___aldiv@divisor,f
  5093  0DE3  09A1               	comf	___aldiv@divisor+1,f
  5094  0DE4  09A2               	comf	___aldiv@divisor+2,f
  5095  0DE5  09A3               	comf	___aldiv@divisor+3,f
  5096  0DE6  0AA0               	incf	___aldiv@divisor,f
  5097  0DE7  1903               	skipnz
  5098  0DE8  0AA1               	incf	___aldiv@divisor+1,f
  5099  0DE9  1903               	skipnz
  5100  0DEA  0AA2               	incf	___aldiv@divisor+2,f
  5101  0DEB  1903               	skipnz
  5102  0DEC  0AA3               	incf	___aldiv@divisor+3,f
  5103  0DED  01A9               	clrf	___aldiv@sign
  5104  0DEE  0AA9               	incf	___aldiv@sign,f
  5105  0DEF                     l340:
  5106  0DEF  1FA7               	btfss	___aldiv@dividend+3,7
  5107  0DF0  2DF2               	goto	u3041
  5108  0DF1  2DF3               	goto	u3040
  5109  0DF2                     u3041:
  5110  0DF2  2E02               	goto	l2346
  5111  0DF3                     u3040:
  5112  0DF3                     l2342:
  5113  0DF3  09A4               	comf	___aldiv@dividend,f
  5114  0DF4  09A5               	comf	___aldiv@dividend+1,f
  5115  0DF5  09A6               	comf	___aldiv@dividend+2,f
  5116  0DF6  09A7               	comf	___aldiv@dividend+3,f
  5117  0DF7  0AA4               	incf	___aldiv@dividend,f
  5118  0DF8  1903               	skipnz
  5119  0DF9  0AA5               	incf	___aldiv@dividend+1,f
  5120  0DFA  1903               	skipnz
  5121  0DFB  0AA6               	incf	___aldiv@dividend+2,f
  5122  0DFC  1903               	skipnz
  5123  0DFD  0AA7               	incf	___aldiv@dividend+3,f
  5124  0DFE                     l2344:
  5125  0DFE  3001               	movlw	1
  5126  0DFF  00F4               	movwf	??___aldiv
  5127  0E00  0874               	movf	??___aldiv,w
  5128  0E01  06A9               	xorwf	___aldiv@sign,f
  5129  0E02                     l2346:
  5130  0E02  3000               	movlw	0
  5131  0E03  00AD               	movwf	___aldiv@quotient+3
  5132  0E04  3000               	movlw	0
  5133  0E05  00AC               	movwf	___aldiv@quotient+2
  5134  0E06  3000               	movlw	0
  5135  0E07  00AB               	movwf	___aldiv@quotient+1
  5136  0E08  3000               	movlw	0
  5137  0E09  00AA               	movwf	___aldiv@quotient
  5138  0E0A                     l2348:
  5139  0E0A  0823               	movf	___aldiv@divisor+3,w
  5140  0E0B  0422               	iorwf	___aldiv@divisor+2,w
  5141  0E0C  0421               	iorwf	___aldiv@divisor+1,w
  5142  0E0D  0420               	iorwf	___aldiv@divisor,w
  5143  0E0E  1903               	skipnz
  5144  0E0F  2E11               	goto	u3051
  5145  0E10  2E12               	goto	u3050
  5146  0E11                     u3051:
  5147  0E11  2E5F               	goto	l2368
  5148  0E12                     u3050:
  5149  0E12                     l2350:
  5150  0E12  01A8               	clrf	___aldiv@counter
  5151  0E13  0AA8               	incf	___aldiv@counter,f
  5152  0E14  2E22               	goto	l2354
  5153  0E15                     l2352:
  5154  0E15  3001               	movlw	1
  5155  0E16  00F4               	movwf	??___aldiv
  5156  0E17                     u3065:
  5157  0E17  1003               	clrc
  5158  0E18  0DA0               	rlf	___aldiv@divisor,f
  5159  0E19  0DA1               	rlf	___aldiv@divisor+1,f
  5160  0E1A  0DA2               	rlf	___aldiv@divisor+2,f
  5161  0E1B  0DA3               	rlf	___aldiv@divisor+3,f
  5162  0E1C  0BF4               	decfsz	??___aldiv,f
  5163  0E1D  2E17               	goto	u3065
  5164  0E1E  3001               	movlw	1
  5165  0E1F  00F4               	movwf	??___aldiv
  5166  0E20  0874               	movf	??___aldiv,w
  5167  0E21  07A8               	addwf	___aldiv@counter,f
  5168  0E22                     l2354:
  5169  0E22  1FA3               	btfss	___aldiv@divisor+3,7
  5170  0E23  2E25               	goto	u3071
  5171  0E24  2E26               	goto	u3070
  5172  0E25                     u3071:
  5173  0E25  2E15               	goto	l2352
  5174  0E26                     u3070:
  5175  0E26                     l2356:
  5176  0E26  3001               	movlw	1
  5177  0E27  00F4               	movwf	??___aldiv
  5178  0E28                     u3085:
  5179  0E28  1003               	clrc
  5180  0E29  0DAA               	rlf	___aldiv@quotient,f
  5181  0E2A  0DAB               	rlf	___aldiv@quotient+1,f
  5182  0E2B  0DAC               	rlf	___aldiv@quotient+2,f
  5183  0E2C  0DAD               	rlf	___aldiv@quotient+3,f
  5184  0E2D  0BF4               	decfsz	??___aldiv,f
  5185  0E2E  2E28               	goto	u3085
  5186  0E2F                     l2358:
  5187  0E2F  0823               	movf	___aldiv@divisor+3,w
  5188  0E30  0227               	subwf	___aldiv@dividend+3,w
  5189  0E31  1D03               	skipz
  5190  0E32  2E3D               	goto	u3095
  5191  0E33  0822               	movf	___aldiv@divisor+2,w
  5192  0E34  0226               	subwf	___aldiv@dividend+2,w
  5193  0E35  1D03               	skipz
  5194  0E36  2E3D               	goto	u3095
  5195  0E37  0821               	movf	___aldiv@divisor+1,w
  5196  0E38  0225               	subwf	___aldiv@dividend+1,w
  5197  0E39  1D03               	skipz
  5198  0E3A  2E3D               	goto	u3095
  5199  0E3B  0820               	movf	___aldiv@divisor,w
  5200  0E3C  0224               	subwf	___aldiv@dividend,w
  5201  0E3D                     u3095:
  5202  0E3D  1C03               	skipc
  5203  0E3E  2E40               	goto	u3091
  5204  0E3F  2E41               	goto	u3090
  5205  0E40                     u3091:
  5206  0E40  2E50               	goto	l2364
  5207  0E41                     u3090:
  5208  0E41                     l2360:
  5209  0E41  0820               	movf	___aldiv@divisor,w
  5210  0E42  02A4               	subwf	___aldiv@dividend,f
  5211  0E43  0821               	movf	___aldiv@divisor+1,w
  5212  0E44  1C03               	skipc
  5213  0E45  0F21               	incfsz	___aldiv@divisor+1,w
  5214  0E46  02A5               	subwf	___aldiv@dividend+1,f
  5215  0E47  0822               	movf	___aldiv@divisor+2,w
  5216  0E48  1C03               	skipc
  5217  0E49  0F22               	incfsz	___aldiv@divisor+2,w
  5218  0E4A  02A6               	subwf	___aldiv@dividend+2,f
  5219  0E4B  0823               	movf	___aldiv@divisor+3,w
  5220  0E4C  1C03               	skipc
  5221  0E4D  0F23               	incfsz	___aldiv@divisor+3,w
  5222  0E4E  02A7               	subwf	___aldiv@dividend+3,f
  5223  0E4F                     l2362:
  5224  0E4F  142A               	bsf	___aldiv@quotient,0
  5225  0E50                     l2364:
  5226  0E50  3001               	movlw	1
  5227  0E51                     u3105:
  5228  0E51  1003               	clrc
  5229  0E52  0CA3               	rrf	___aldiv@divisor+3,f
  5230  0E53  0CA2               	rrf	___aldiv@divisor+2,f
  5231  0E54  0CA1               	rrf	___aldiv@divisor+1,f
  5232  0E55  0CA0               	rrf	___aldiv@divisor,f
  5233  0E56  3EFF               	addlw	-1
  5234  0E57  1D03               	skipz
  5235  0E58  2E51               	goto	u3105
  5236  0E59                     l2366:
  5237  0E59  3001               	movlw	1
  5238  0E5A  02A8               	subwf	___aldiv@counter,f
  5239  0E5B  1D03               	btfss	3,2
  5240  0E5C  2E5E               	goto	u3111
  5241  0E5D  2E5F               	goto	u3110
  5242  0E5E                     u3111:
  5243  0E5E  2E26               	goto	l2356
  5244  0E5F                     u3110:
  5245  0E5F                     l2368:
  5246  0E5F  0829               	movf	___aldiv@sign,w
  5247  0E60  1903               	btfsc	3,2
  5248  0E61  2E63               	goto	u3121
  5249  0E62  2E64               	goto	u3120
  5250  0E63                     u3121:
  5251  0E63  2E6F               	goto	l2372
  5252  0E64                     u3120:
  5253  0E64                     l2370:
  5254  0E64  09AA               	comf	___aldiv@quotient,f
  5255  0E65  09AB               	comf	___aldiv@quotient+1,f
  5256  0E66  09AC               	comf	___aldiv@quotient+2,f
  5257  0E67  09AD               	comf	___aldiv@quotient+3,f
  5258  0E68  0AAA               	incf	___aldiv@quotient,f
  5259  0E69  1903               	skipnz
  5260  0E6A  0AAB               	incf	___aldiv@quotient+1,f
  5261  0E6B  1903               	skipnz
  5262  0E6C  0AAC               	incf	___aldiv@quotient+2,f
  5263  0E6D  1903               	skipnz
  5264  0E6E  0AAD               	incf	___aldiv@quotient+3,f
  5265  0E6F                     l2372:
  5266  0E6F  082D               	movf	___aldiv@quotient+3,w
  5267  0E70  00A3               	movwf	?___aldiv+3
  5268  0E71  082C               	movf	___aldiv@quotient+2,w
  5269  0E72  00A2               	movwf	?___aldiv+2
  5270  0E73  082B               	movf	___aldiv@quotient+1,w
  5271  0E74  00A1               	movwf	?___aldiv+1
  5272  0E75  082A               	movf	___aldiv@quotient,w
  5273  0E76  00A0               	movwf	?___aldiv
  5274  0E77                     l350:
  5275  0E77  0008               	return
  5276  0E78                     __end_of___aldiv:
  5277                           
  5278                           	psect	text13
  5279  0B4B                     __ptext13:	
  5280 ;; *************** function _Setup *****************
  5281 ;; Defined at:
  5282 ;;		line 62 in file "MAESTRO.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		status,2
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5296 ;;      Params:         0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _Setup
  5312  0B4B                     _Setup:
  5313  0B4B                     l1696:	
  5314                           ;incstack = 0
  5315                           ; Regs used in _Setup: [status,2]
  5316                           
  5317                           
  5318                           ;MAESTRO.c: 65:     ANSEL = 0;
  5319  0B4B  1683               	bsf	3,5	;RP0=1, select bank3
  5320  0B4C  1703               	bsf	3,6	;RP1=1, select bank3
  5321  0B4D  0188               	clrf	8	;volatile
  5322                           
  5323                           ;MAESTRO.c: 66:     ANSELH = 0;
  5324  0B4E  0189               	clrf	9	;volatile
  5325                           
  5326                           ;MAESTRO.c: 68:     TRISA= 0;
  5327  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  5328  0B50  1303               	bcf	3,6	;RP1=0, select bank1
  5329  0B51  0185               	clrf	5	;volatile
  5330                           
  5331                           ;MAESTRO.c: 69:     PORTA= 0;
  5332  0B52  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0B53  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0B54  0185               	clrf	5	;volatile
  5335                           
  5336                           ;MAESTRO.c: 71:     TRISB= 0;
  5337  0B55  1683               	bsf	3,5	;RP0=1, select bank1
  5338  0B56  1303               	bcf	3,6	;RP1=0, select bank1
  5339  0B57  0186               	clrf	6	;volatile
  5340                           
  5341                           ;MAESTRO.c: 72:     PORTB= 0;
  5342  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  5343  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  5344  0B5A  0186               	clrf	6	;volatile
  5345                           
  5346                           ;MAESTRO.c: 74:     TRISD = 0;
  5347  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  5348  0B5C  1303               	bcf	3,6	;RP1=0, select bank1
  5349  0B5D  0188               	clrf	8	;volatile
  5350                           
  5351                           ;MAESTRO.c: 75:     PORTD= 0;
  5352  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0B60  0188               	clrf	8	;volatile
  5355                           
  5356                           ;MAESTRO.c: 77:     TRISE = 0;
  5357  0B61  1683               	bsf	3,5	;RP0=1, select bank1
  5358  0B62  1303               	bcf	3,6	;RP1=0, select bank1
  5359  0B63  0189               	clrf	9	;volatile
  5360                           
  5361                           ;MAESTRO.c: 78:     PORTE = 0;
  5362  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0B66  0189               	clrf	9	;volatile
  5365                           
  5366                           ;MAESTRO.c: 80:     IOCB= 0;
  5367  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  5368  0B68  1303               	bcf	3,6	;RP1=0, select bank1
  5369  0B69  0196               	clrf	22	;volatile
  5370  0B6A                     l67:
  5371  0B6A  0008               	return
  5372  0B6B                     __end_of_Setup:
  5373                           
  5374                           	psect	text14
  5375  0AF6                     __ptext14:	
  5376 ;; *************** function _SPIMas *****************
  5377 ;; Defined at:
  5378 ;;		line 11 in file "SPI.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0
  5395 ;;      Totals:         0       0       0       0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _SPIMas
  5408  0AF6                     _SPIMas:
  5409  0AF6                     l1726:	
  5410                           ;incstack = 0
  5411                           ; Regs used in _SPIMas: [wreg+status,2]
  5412                           
  5413                           
  5414                           ;SPI.c: 12:     TRISCbits.TRISC3 = 0;
  5415  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  5416  0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  5417  0AF8  1187               	bcf	7,3	;volatile
  5418                           
  5419                           ;SPI.c: 13:     TRISCbits.TRISC5 = 0;
  5420  0AF9  1287               	bcf	7,5	;volatile
  5421  0AFA                     l1728:
  5422                           
  5423                           ;SPI.c: 14:     SSPCON = 0b00100000;
  5424  0AFA  3020               	movlw	32
  5425  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0AFD  0094               	movwf	20	;volatile
  5428  0AFE                     l1730:
  5429                           
  5430                           ;SPI.c: 15:     SSPSTAT = 0;
  5431  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0B00  0194               	clrf	20	;volatile
  5434  0B01                     l150:
  5435  0B01  0008               	return
  5436  0B02                     __end_of_SPIMas:
  5437                           
  5438                           	psect	text15
  5439  0C09                     __ptext15:	
  5440 ;; *************** function _LCD_Initialize *****************
  5441 ;; Defined at:
  5442 ;;		line 47 in file "lcd.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, pclath, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5456 ;;      Params:         0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0
  5458 ;;      Temps:          0       2       0       0       0
  5459 ;;      Totals:         0       2       0       0       0
  5460 ;;Total ram usage:        2 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    3
  5463 ;; This function calls:
  5464 ;;		_LCDPutCmd
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _LCD_Initialize
  5472  0C09                     _LCD_Initialize:
  5473  0C09                     l2438:	
  5474                           ;incstack = 0
  5475                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5476                           
  5477                           
  5478                           ;lcd.c: 49:     PORTD = 0;
  5479  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0C0B  0188               	clrf	8	;volatile
  5482                           
  5483                           ;lcd.c: 51:     TRISD = 0x00;
  5484  0C0C  1683               	bsf	3,5	;RP0=1, select bank1
  5485  0C0D  1303               	bcf	3,6	;RP1=0, select bank1
  5486  0C0E  0188               	clrf	8	;volatile
  5487  0C0F                     l2440:
  5488                           
  5489                           ;lcd.c: 54:     _delay((unsigned long)((15)*(8000000/4000.0)));
  5490  0C0F  3027               	movlw	39
  5491  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0C12  00A3               	movwf	??_LCD_Initialize+1
  5494  0C13  30F4               	movlw	244
  5495  0C14  00A2               	movwf	??_LCD_Initialize
  5496  0C15                     u4187:
  5497  0C15  0BA2               	decfsz	??_LCD_Initialize,f
  5498  0C16  2C15               	goto	u4187
  5499  0C17  0BA3               	decfsz	??_LCD_Initialize+1,f
  5500  0C18  2C15               	goto	u4187
  5501  0C19  0000               	nop
  5502  0C1A                     l2442:
  5503                           
  5504                           ;lcd.c: 57:     LCDPutCmd(0x32);
  5505  0C1A  3032               	movlw	50
  5506  0C1B  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5507  0C20                     l2444:
  5508                           
  5509                           ;lcd.c: 60:     LCDPutCmd(0x38);
  5510  0C20  3038               	movlw	56
  5511  0C21  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5512  0C26                     l2446:
  5513                           
  5514                           ;lcd.c: 63:     LCDPutCmd(0x0C);
  5515  0C26  300C               	movlw	12
  5516  0C27  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5517  0C2C                     l2448:
  5518                           
  5519                           ;lcd.c: 65:     LCDPutCmd(0x01);
  5520  0C2C  3001               	movlw	1
  5521  0C2D  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5522  0C32                     l2450:
  5523                           
  5524                           ;lcd.c: 68:     LCDPutCmd(0x06);
  5525  0C32  3006               	movlw	6
  5526  0C33  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5527  0C38                     l116:
  5528  0C38  0008               	return
  5529  0C39                     __end_of_LCD_Initialize:
  5530                           
  5531                           	psect	text16
  5532  0BDC                     __ptext16:	
  5533 ;; *************** function _LCDPutStr *****************
  5534 ;; Defined at:
  5535 ;;		line 110 in file "lcd.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  5538 ;;		 -> STR_1(19), buff(20), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  i               1    5[BANK0 ] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5550 ;;      Params:         0       2       0       0       0
  5551 ;;      Locals:         0       1       0       0       0
  5552 ;;      Temps:          0       1       0       0       0
  5553 ;;      Totals:         0       4       0       0       0
  5554 ;;Total ram usage:        4 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    3
  5557 ;; This function calls:
  5558 ;;		_LCDPutChar
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _LCDPutStr
  5566  0BDC                     _LCDPutStr:
  5567  0BDC                     l2480:	
  5568                           ;incstack = 0
  5569                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5570                           
  5571                           
  5572                           ;lcd.c: 111:     uint8_t i=0;
  5573  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  5575  0BDE  01A5               	clrf	LCDPutStr@i
  5576                           
  5577                           ;lcd.c: 114:     while (str[i])
  5578  0BDF  2BF7               	goto	l2486
  5579  0BE0                     l2482:
  5580                           
  5581                           ;lcd.c: 115:     {;lcd.c: 117:         LCDPutChar(str[i++]);
  5582  0BE0  0825               	movf	LCDPutStr@i,w
  5583  0BE1  0722               	addwf	LCDPutStr@str,w
  5584  0BE2  0084               	movwf	4
  5585  0BE3  0823               	movf	LCDPutStr@str+1,w
  5586  0BE4  1803               	skipnc
  5587  0BE5  0A23               	incf	LCDPutStr@str+1,w
  5588  0BE6  00FF               	movwf	btemp+1
  5589  0BE7  120A  158A  2000  120A  158A  	fcall	stringtab
  5590  0BEC  120A  158A  2337  120A  158A  	fcall	_LCDPutChar
  5591  0BF1                     l2484:
  5592  0BF1  3001               	movlw	1
  5593  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0BF4  00A4               	movwf	??_LCDPutStr
  5596  0BF5  0824               	movf	??_LCDPutStr,w
  5597  0BF6  07A5               	addwf	LCDPutStr@i,f
  5598  0BF7                     l2486:
  5599                           
  5600                           ;lcd.c: 114:     while (str[i])
  5601  0BF7  0825               	movf	LCDPutStr@i,w
  5602  0BF8  0722               	addwf	LCDPutStr@str,w
  5603  0BF9  0084               	movwf	4
  5604  0BFA  0823               	movf	LCDPutStr@str+1,w
  5605  0BFB  1803               	skipnc
  5606  0BFC  0A23               	incf	LCDPutStr@str+1,w
  5607  0BFD  00FF               	movwf	btemp+1
  5608  0BFE  120A  158A  2000  120A  158A  	fcall	stringtab
  5609  0C03  3A00               	xorlw	0
  5610  0C04  1D03               	skipz
  5611  0C05  2C07               	goto	u3351
  5612  0C06  2C08               	goto	u3350
  5613  0C07                     u3351:
  5614  0C07  2BE0               	goto	l2482
  5615  0C08                     u3350:
  5616  0C08                     l131:
  5617  0C08  0008               	return
  5618  0C09                     __end_of_LCDPutStr:
  5619                           
  5620                           	psect	text17
  5621  0B37                     __ptext17:	
  5622 ;; *************** function _LCDPutChar *****************
  5623 ;; Defined at:
  5624 ;;		line 94 in file "lcd.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  ch              1    wreg     unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  ch              1    6[COMMON] unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5638 ;;      Params:         0       0       0       0       0
  5639 ;;      Locals:         1       0       0       0       0
  5640 ;;      Temps:          0       2       0       0       0
  5641 ;;      Totals:         1       2       0       0       0
  5642 ;;Total ram usage:        3 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    2
  5645 ;; This function calls:
  5646 ;;		_LCDWrite
  5647 ;; This function is called by:
  5648 ;;		_LCDPutStr
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _LCDPutChar
  5654  0B37                     _LCDPutChar:
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  5658                           ;LCDPutChar@ch stored from wreg
  5659  0B37  00F6               	movwf	LCDPutChar@ch
  5660  0B38                     l2318:
  5661                           
  5662                           ;lcd.c: 95:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5663  0B38  300D               	movlw	13
  5664  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  5665  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  5666  0B3B  00A1               	movwf	??_LCDPutChar+1
  5667  0B3C  30FB               	movlw	251
  5668  0B3D  00A0               	movwf	??_LCDPutChar
  5669  0B3E                     u4197:
  5670  0B3E  0BA0               	decfsz	??_LCDPutChar,f
  5671  0B3F  2B3E               	goto	u4197
  5672  0B40  0BA1               	decfsz	??_LCDPutChar+1,f
  5673  0B41  2B3E               	goto	u4197
  5674  0B42                     l2320:
  5675                           
  5676                           ;lcd.c: 98:     LCDWrite(ch,1);
  5677  0B42  01F4               	clrf	LCDWrite@rs
  5678  0B43  0AF4               	incf	LCDWrite@rs,f
  5679  0B44  0876               	movf	LCDPutChar@ch,w
  5680  0B45  120A  158A  2302  120A  158A  	fcall	_LCDWrite
  5681  0B4A                     l122:
  5682  0B4A  0008               	return
  5683  0B4B                     __end_of_LCDPutChar:
  5684                           
  5685                           	psect	text18
  5686  0C39                     __ptext18:	
  5687 ;; *************** function _LCDGoto *****************
  5688 ;; Defined at:
  5689 ;;		line 122 in file "lcd.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  pos             1    wreg     unsigned char 
  5692 ;;  ln              1    2[BANK0 ] unsigned char 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  pos             1    7[BANK0 ] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0, pclath, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       1       0       0       0
  5705 ;;      Locals:         0       3       0       0       0
  5706 ;;      Temps:          0       2       0       0       0
  5707 ;;      Totals:         0       6       0       0       0
  5708 ;;Total ram usage:        6 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    3
  5711 ;; This function calls:
  5712 ;;		_LCDPutCmd
  5713 ;; This function is called by:
  5714 ;;		_main
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function _LCDGoto
  5720  0C39                     _LCDGoto:
  5721                           
  5722                           ;incstack = 0
  5723                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  5724                           ;LCDGoto@pos stored from wreg
  5725  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  5726  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  5727  0C3B  00A7               	movwf	LCDGoto@pos
  5728  0C3C                     l2466:
  5729                           
  5730                           ;lcd.c: 124:     if ((ln > (2 -1)) || (pos > (16 -1)))
  5731  0C3C  3002               	movlw	2
  5732  0C3D  0222               	subwf	LCDGoto@ln,w
  5733  0C3E  1803               	skipnc
  5734  0C3F  2C41               	goto	u3321
  5735  0C40  2C42               	goto	u3320
  5736  0C41                     u3321:
  5737  0C41  2C69               	goto	l137
  5738  0C42                     u3320:
  5739  0C42                     l2468:
  5740  0C42  3010               	movlw	16
  5741  0C43  0227               	subwf	LCDGoto@pos,w
  5742  0C44  1C03               	skipc
  5743  0C45  2C47               	goto	u3331
  5744  0C46  2C48               	goto	u3330
  5745  0C47                     u3331:
  5746  0C47  2C49               	goto	l2470
  5747  0C48                     u3330:
  5748  0C48  2C69               	goto	l137
  5749  0C49                     l2470:
  5750                           
  5751                           ;lcd.c: 131:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  5752  0C49  0322               	decf	LCDGoto@ln,w
  5753  0C4A  1903               	btfsc	3,2
  5754  0C4B  2C4D               	goto	u3341
  5755  0C4C  2C4E               	goto	u3340
  5756  0C4D                     u3341:
  5757  0C4D  2C54               	goto	l2474
  5758  0C4E                     u3340:
  5759  0C4E                     l2472:
  5760  0C4E  3080               	movlw	128
  5761  0C4F  0427               	iorwf	LCDGoto@pos,w
  5762  0C50  00A5               	movwf	_LCDGoto$524
  5763  0C51  3000               	movlw	0
  5764  0C52  00A6               	movwf	_LCDGoto$524+1
  5765  0C53  2C59               	goto	l2476
  5766  0C54                     l2474:
  5767  0C54  30C0               	movlw	192
  5768  0C55  0427               	iorwf	LCDGoto@pos,w
  5769  0C56  00A5               	movwf	_LCDGoto$524
  5770  0C57  3000               	movlw	0
  5771  0C58  00A6               	movwf	_LCDGoto$524+1
  5772  0C59                     l2476:
  5773  0C59  0825               	movf	_LCDGoto$524,w
  5774  0C5A  120A  158A  2324  120A  158A  	fcall	_LCDPutCmd
  5775  0C5F                     l2478:
  5776                           
  5777                           ;lcd.c: 134:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5778  0C5F  300D               	movlw	13
  5779  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0C62  00A4               	movwf	??_LCDGoto+1
  5782  0C63  30FB               	movlw	251
  5783  0C64  00A3               	movwf	??_LCDGoto
  5784  0C65                     u4207:
  5785  0C65  0BA3               	decfsz	??_LCDGoto,f
  5786  0C66  2C65               	goto	u4207
  5787  0C67  0BA4               	decfsz	??_LCDGoto+1,f
  5788  0C68  2C65               	goto	u4207
  5789  0C69                     l137:
  5790  0C69  0008               	return
  5791  0C6A                     __end_of_LCDGoto:
  5792                           
  5793                           	psect	text19
  5794  0B24                     __ptext19:	
  5795 ;; *************** function _LCDPutCmd *****************
  5796 ;; Defined at:
  5797 ;;		line 102 in file "lcd.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  ch              1    wreg     unsigned char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  ch              1    6[COMMON] unsigned char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5811 ;;      Params:         0       0       0       0       0
  5812 ;;      Locals:         1       0       0       0       0
  5813 ;;      Temps:          0       2       0       0       0
  5814 ;;      Totals:         1       2       0       0       0
  5815 ;;Total ram usage:        3 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    2
  5818 ;; This function calls:
  5819 ;;		_LCDWrite
  5820 ;; This function is called by:
  5821 ;;		_LCD_Initialize
  5822 ;;		_LCDGoto
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function _LCDPutCmd
  5828  0B24                     _LCDPutCmd:
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  5832                           ;LCDPutCmd@ch stored from wreg
  5833  0B24  00F6               	movwf	LCDPutCmd@ch
  5834  0B25                     l2314:
  5835                           
  5836                           ;lcd.c: 103:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5837  0B25  300D               	movlw	13
  5838  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0B28  00A1               	movwf	??_LCDPutCmd+1
  5841  0B29  30FB               	movlw	251
  5842  0B2A  00A0               	movwf	??_LCDPutCmd
  5843  0B2B                     u4217:
  5844  0B2B  0BA0               	decfsz	??_LCDPutCmd,f
  5845  0B2C  2B2B               	goto	u4217
  5846  0B2D  0BA1               	decfsz	??_LCDPutCmd+1,f
  5847  0B2E  2B2B               	goto	u4217
  5848  0B2F                     l2316:
  5849                           
  5850                           ;lcd.c: 105:     LCDWrite(ch,0);
  5851  0B2F  01F4               	clrf	LCDWrite@rs
  5852  0B30  0876               	movf	LCDPutCmd@ch,w
  5853  0B31  120A  158A  2302  120A  158A  	fcall	_LCDWrite
  5854  0B36                     l125:
  5855  0B36  0008               	return
  5856  0B37                     __end_of_LCDPutCmd:
  5857                           
  5858                           	psect	text20
  5859  0B02                     __ptext20:	
  5860 ;; *************** function _LCDWrite *****************
  5861 ;; Defined at:
  5862 ;;		line 73 in file "lcd.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  ch              1    wreg     unsigned char 
  5865 ;;  rs              1    4[COMMON] unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  ch              1    5[COMMON] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5877 ;;      Params:         1       0       0       0       0
  5878 ;;      Locals:         1       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         2       0       0       0       0
  5881 ;;Total ram usage:        2 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_LCDPutChar
  5888 ;;		_LCDPutCmd
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           
  5893                           ;psect for function _LCDWrite
  5894  0B02                     _LCDWrite:
  5895                           
  5896                           ;incstack = 0
  5897                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  5898                           ;LCDWrite@ch stored from wreg
  5899  0B02  00F5               	movwf	LCDWrite@ch
  5900  0B03                     l1550:
  5901                           
  5902                           ;lcd.c: 76:     PORTD = (PORTD & 0x00);
  5903  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  5904  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0B05  0188               	clrf	8	;volatile
  5906  0B06                     l1552:
  5907                           
  5908                           ;lcd.c: 79:     PORTD = (PORTD | ch);
  5909  0B06  0808               	movf	8,w	;volatile
  5910  0B07  0475               	iorwf	LCDWrite@ch,w
  5911  0B08  0088               	movwf	8	;volatile
  5912                           
  5913                           ;lcd.c: 82:     PORTBbits.RB5 = rs;
  5914  0B09  0C74               	rrf	LCDWrite@rs,w
  5915  0B0A  1C03               	skipc
  5916  0B0B  1286               	bcf	6,5	;volatile
  5917  0B0C  1803               	skipnc
  5918  0B0D  1686               	bsf	6,5	;volatile
  5919  0B0E                     l1554:
  5920                           
  5921                           ;lcd.c: 85:     PORTBbits.RB6 = 0;
  5922  0B0E  1306               	bcf	6,6	;volatile
  5923  0B0F                     l1556:
  5924                           
  5925                           ;lcd.c: 88:     PORTBbits.RB7 = 1;
  5926  0B0F  1786               	bsf	6,7	;volatile
  5927  0B10                     l1558:
  5928                           
  5929                           ;lcd.c: 91:     PORTBbits.RB7 = 0;
  5930  0B10  1386               	bcf	6,7	;volatile
  5931  0B11                     l119:
  5932  0B11  0008               	return
  5933  0B12                     __end_of_LCDWrite:
  5934                           
  5935                           	psect	text21
  5936  0B6B                     __ptext21:	
  5937 ;; *************** function _myISR *****************
  5938 ;; Defined at:
  5939 ;;		line 90 in file "MAESTRO.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5953 ;;      Params:         0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0
  5955 ;;      Temps:          4       0       0       0       0
  5956 ;;      Totals:         4       0       0       0       0
  5957 ;;Total ram usage:        4 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		Interrupt level 1
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _myISR
  5968  0B6B                     _myISR:
  5969  0B6B                     i1l2208:
  5970                           
  5971                           ;MAESTRO.c: 91:     if(PIR1bits.TXIF == 1){
  5972  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  5973  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  5974  0B6D  1E0C               	btfss	12,4	;volatile
  5975  0B6E  2B70               	goto	u293_21
  5976  0B6F  2B71               	goto	u293_20
  5977  0B70                     u293_21:
  5978  0B70  2B83               	goto	i1l75
  5979  0B71                     u293_20:
  5980  0B71                     i1l2210:
  5981                           
  5982                           ;MAESTRO.c: 92:        TXREG = buff[c1];
  5983  0B71  0879               	movf	_c1,w
  5984  0B72  3EA7               	addlw	(low (_buff| 0))& (0+255)
  5985  0B73  0084               	movwf	4
  5986  0B74  1383               	bcf	3,7	;select IRP bank1
  5987  0B75  0800               	movf	0,w
  5988  0B76  0099               	movwf	25	;volatile
  5989  0B77                     i1l2212:
  5990                           
  5991                           ;MAESTRO.c: 93:        if (c1 == 16){
  5992  0B77  3010               	movlw	16
  5993  0B78  0679               	xorwf	_c1,w
  5994  0B79  1D03               	btfss	3,2
  5995  0B7A  2B7C               	goto	u294_21
  5996  0B7B  2B7D               	goto	u294_20
  5997  0B7C                     u294_21:
  5998  0B7C  2B7F               	goto	i1l2216
  5999  0B7D                     u294_20:
  6000  0B7D                     i1l2214:
  6001                           
  6002                           ;MAESTRO.c: 94:            c1=0; }
  6003  0B7D  01F9               	clrf	_c1
  6004  0B7E  2B83               	goto	i1l75
  6005  0B7F                     i1l2216:
  6006                           
  6007                           ;MAESTRO.c: 97:             c1++;
  6008  0B7F  3001               	movlw	1
  6009  0B80  00F0               	movwf	??_myISR
  6010  0B81  0870               	movf	??_myISR,w
  6011  0B82  07F9               	addwf	_c1,f
  6012  0B83                     i1l75:
  6013  0B83  0873               	movf	??_myISR+3,w
  6014  0B84  008A               	movwf	10
  6015  0B85  0872               	movf	??_myISR+2,w
  6016  0B86  0084               	movwf	4
  6017  0B87  0E71               	swapf	??_myISR+1,w
  6018  0B88  0083               	movwf	3
  6019  0B89  0EFE               	swapf	btemp,f
  6020  0B8A  0E7E               	swapf	btemp,w
  6021  0B8B  0009               	retfie
  6022  0B8C                     __end_of_myISR:
  6023  007E                     btemp	set	126	;btemp
  6024  007E                     wtemp0	set	126
  6025                           
  6026                           	psect	intentry
  6027  0004                     __pintentry:	
  6028                           ;incstack = 0
  6029                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0]
  6030                           
  6031  0004                     interrupt_function:
  6032  007E                     saved_w	set	btemp
  6033  0004  00FE               	movwf	btemp
  6034  0005  0E03               	swapf	3,w
  6035  0006  00F1               	movwf	??_myISR+1
  6036  0007  0804               	movf	4,w
  6037  0008  00F2               	movwf	??_myISR+2
  6038  0009  080A               	movf	10,w
  6039  000A  00F3               	movwf	??_myISR+3
  6040  000B  120A  158A  2B6B   	ljmp	_myISR
  6041                           
  6042                           	psect	config
  6043                           
  6044                           ;Config register CONFIG1 @ 0x2007
  6045                           ;	Oscillator Selection bits
  6046                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  6047                           ;	Watchdog Timer Enable bit
  6048                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6049                           ;	Power-up Timer Enable bit
  6050                           ;	PWRTE = OFF, PWRT disabled
  6051                           ;	RE3/MCLR pin function select bit
  6052                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6053                           ;	Code Protection bit
  6054                           ;	CP = OFF, Program memory code protection is disabled
  6055                           ;	Data Code Protection bit
  6056                           ;	CPD = OFF, Data memory code protection is disabled
  6057                           ;	Brown Out Reset Selection bits
  6058                           ;	BOREN = OFF, BOR disabled
  6059                           ;	Internal External Switchover bit
  6060                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6061                           ;	Fail-Safe Clock Monitor Enabled bit
  6062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6063                           ;	Low Voltage Programming Enable bit
  6064                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6065                           ;	In-Circuit Debugger Mode bit
  6066                           ;	DEBUG = 0x1, unprogrammed default
  6067  2007                     	org	8199
  6068  2007  20D1               	dw	8401
  6069                           
  6070                           ;Config register CONFIG2 @ 0x2008
  6071                           ;	Brown-out Reset Selection bit
  6072                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6073                           ;	Flash Program Memory Self Write Enable bits
  6074                           ;	WRT = OFF, Write protection off
  6075  2008                     	org	8200
  6076  2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     70      73
    BANK1            80     11      38
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buff(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[19]), buff(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    _USART_Initialize->___aldiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWrite
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWrite

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___flmul->__Umul8_16
    ___fldiv->___flmul
    _USART_Initialize->___aldiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDGoto->_LCDPutCmd

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   11784
                                              0 BANK1     11    11      0
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                             _SPIMas
                              _Setup
                   _USART_Initialize
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    20     11    2798
                                             11 BANK0     23    12     11
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     427
                                             59 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                              7 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             33 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                    20    16      4     811
                                             14 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPIMas                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     227
                                              2 BANK0      2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2     537
                                              2 BANK0      4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     227
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     599
                                              2 BANK0      6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     227
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (3) _LCDWrite                                             2     1      1     196
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWrite
   _LCDPutStr
     _LCDPutChar
       _LCDWrite
   _LCD_Initialize
     _LCDPutCmd
       _LCDWrite
   _SPIMas
   _Setup
   _USART_Initialize
     ___aldiv
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
   ___flmul
     __Umul8_16
   ___fltol
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
     ___flmul (ARG)
       __Umul8_16
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      79       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      B      26       7       47.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      79      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:29:45 2021

             ___fldiv@aexp 005A               ___fldiv@bexp 0059                          _v 0068  
           _LCD_Initialize 0C09                          pc 0002               ___fldiv@sign 0052  
              _SSPSTATbits 0094                ?_LCDPutChar 0070                         l82 0433  
                       l67 0B6A                         l83 0453                         _V1 00A0  
                       _c1 0079                         _c2 0067                         fsr 0004  
      ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0024   __end_of_USART_Initialize 0D5F  
                      l103 0D5E                        l122 0B4A                        l131 0C08  
                      l116 0C38                        l125 0B36                        l150 0B01  
                      l119 0B11                        l137 0C69                        l340 0DEF  
                      l260 0F57                        l350 0E77                        l271 0FFF  
                      l275 0B9A                        l461 0DDA                        l277 0BB2  
                      l710 07FC                        l471 0DDA                        l640 06B2  
                      l624 05C0                        l721 07C6                        l626 0740  
                      l722 07D2                        l714 07AA                        l547 0CEB  
                      l468 0DC5                        l708 0765                        l557 0CA5  
                      l646 0724                        l670 02F2                        l648 0734  
                      l664 0386                        l728 0B23                        l683 0BC9  
                      l676 037A                        l685 0BDB                        fsr0 0004  
                      indf 0000               ___flmul@aexp 0035               ___flmul@bexp 003A  
             ___flmul@sign 0034               ___flmul@temp 003F               ___flmul@prod 003B  
          __end_of_LCDGoto 0C6A               ___fltol@exp1 0065                       l2000 06E7  
                     l2010 071B                       l2002 06ED                       l2012 0723  
                     l2004 06FA                       l2014 072A                       l2006 0708  
                     l2016 072E                       l2008 0717                       l2018 0730  
                     l2320 0B42                       l2314 0B25                       l2410 0C80  
                     l2402 0C6A                       l2330 0BA8                       l2322 0B8C  
                     l2316 0B2F                       l2340 0DE2                       l2412 0C84  
                     l2404 0C72                       l2420 0CA1                       l2332 0BAE  
                     l2324 0B8E                       l2500 0EA5                       l1550 0B03  
                     l2318 0B38                       l2350 0E12                       l2342 0DF3  
                     l2430 0BC3                       l2414 0C8E                       l2406 0C75  
                     l2326 0B94                       l2502 0EA9                       l1552 0B06  
                     l2440 0C0F                       l2360 0E41                       l2352 0E15  
                     l2344 0DFE                       l2336 0DDB                       l2432 0BD2  
                     l2424 0BB6                       l2416 0C94                       l2408 0C7C  
                     l2328 0BA1                       l2520 0F14                       l2504 0EBE  
                     l2512 0EE5                       l1554 0B0E                       l2450 0C32  
                     l2442 0C1A                       l1730 0AFE                       l2370 0E64  
                     l2362 0E4F                       l2354 0E22                       l2346 0E02  
                     l2338 0DDE                       l2434 0BD7                       l2426 0BB8  
                     l2610 0DBA                       l2602 0DA1                       l2418 0C9B  
                     l1570 0B14                       l2530 0F1F                       l2522 0F18  
                     l2514 0F04                       l2506 0ED1                       l1556 0B0F  
                     l2444 0C20                       l2372 0E6F                       l2364 0E50  
                     l2356 0E26                       l2348 0E0A                       l2460 0D5B  
                     l2452 0CEC                       l1900 058B                       l2428 0BBF  
                     l2700 02A7                       l2620 0033                       l2612 0DCA  
                     l2604 0DB3                       l2380 0CB0                       l1572 0B1A  
                     l2540 0F51                       l2524 0F1D                       l2516 0F0C  
                     l2508 0ED5                       l1558 0B10                       l2470 0C49  
                     l2446 0C26                       l2438 0C09                       l1726 0AF6  
                     l2366 0E59                       l2358 0E2F                       l2462 0D5C  
                     l2454 0CF9                       l1910 05A3                       l1902 0593  
                     l2710 02CC                       l2702 02B5                       l2630 004A  
                     l2622 0037                       l2614 0DCF                       l2390 0CD3  
                     l2382 0CB3                       l1574 0B20                       l2550 0F7F  
                     l2542 0F62                       l2534 0F3B                       l2518 0F10  
                     l2472 0C4E                       l2480 0BDC                       l2448 0C2C  
                     l1728 0AFA                       l2368 0E5F                       l2464 0D5D  
                     l2456 0D56                       l1912 05A8                       l1920 05B8  
                     l1904 0598                       l2720 02EF                       l2704 02BE  
                     l2712 02D2                       l2640 0063                       l2632 004C  
                     l2624 0038                       l2616 0026                       l2392 0CD9  
                     l2384 0CBA                       l2376 0CA6                       l1576 0B22  
                     l1568 0B13                       l2560 0FA0                       l2552 0F83  
                     l2544 0F6E                       l2536 0F45                       l2800 0387  
                     l2474 0C54                       l2466 0C3C                       l2482 0BE0  
                     l2458 0D5A                       l1922 05C8                       l1930 05E1  
                     l1914 05AD                       l1906 059E                       l2730 030E  
                     l2714 02D6                       l2706 02C2                       l2650 0078  
                     l2642 0064                       l2634 0054                       l2626 003D  
                     l2618 002D                       l2394 0CDA                       l2386 0CBE  
                     l2378 0CAA                       l2562 0FA5                       l2554 0F8F  
                     l2546 0F72                       l2538 0F4B                       l2490 0E80  
                     l2570 0FE9                       l2810 03AE                       l2802 038C  
                     l2476 0C59                       l2468 0C42                       l2484 0BF1  
                     l1940 0609                       l1932 05E6                       l1924 05D4  
                     l1916 05B5                       l1908 05A2                       l2740 0354  
                     l2732 0327                       l2724 02F7                       l2716 02D7  
                     l2708 02C3                       l2660 0093                       l2652 0080  
                     l2644 0069                       l2636 0059                       l2628 0042  
                     l2580 0D5F                       l2396 0CE1                       l2388 0CC2  
                     l2564 0FD5                       l2556 0F95                       l2548 0F78  
                     l2572 0FFB                       l2492 0E86                       l2820 03C5  
                     l2812 03B9                       l2804 0391                       l2478 0C5F  
                     l2486 0BF7                       l1950 0632                       l1942 0611  
                     l1926 05D8                       l1918 05B6                       l2750 0373  
                     l2742 035E                       l2726 02FC                       l2734 032D  
                     l2718 02DB                       l2670 0115                       l2662 00A3  
                     l2654 0085                       l2646 006E                       l2638 005F  
                     l2590 0D8B                       l2582 0D6C                       l2398 0CE7  
                     l2566 0FDC                       l2558 0F9C                       l2494 0E8D  
                     l2830 03D6                       l2822 03C8                       l2814 03BC  
                     l2806 03A0                       l1696 0B4B                       l1960 0653  
                     l1952 0636                       l1944 0619                       l1936 05EF  
                     l2752 037E                       l2744 0360                       l2736 033A  
                     l2728 030A                       l2680 0183                       l2672 0131  
                     l2664 00B0                       l2656 008A                       l2648 0076  
                     l2592 0D93                       l2760 074D                       l2568 0FE0  
                     l2496 0E92                       l2488 0E7B                       l2840 0423  
                     l2832 0413                       l2824 03CB                       l2816 03BF  
                     l2808 03A5                       l1970 0675                       l1962 0661  
                     l1954 0637                       l1946 061B                       l1938 0601  
                     l1890 0576                       l1882 0564                       l2746 036E  
                     l2738 0345                       l2690 0213                       l2682 0193  
                     l2674 014D                       l2666 00CD                       l2594 0D95  
                     l2586 0D75                       l2770 077B                       l2762 075D  
                     l2498 0E95                       l2850 0449                       l2842 0429  
                     l2834 041D                       l2826 03CE                       l2818 03C2  
                     l1972 067E                       l1980 0692                       l1948 0620  
                     l1956 0640                       l1964 0665                       l1892 057B  
                     l1884 056B                       l2748 0372                       l2692 0223  
                     l2684 01B0                       l2676 0156                       l2668 00E9  
                     l2596 0D99                       l2588 0D8A                       l2780 07B1  
                     l2772 0788                       l2764 076D                       l2756 0744  
                     l2852 045D                       l2844 043D                       l2836 0420  
                     l2828 03D0                       l1982 0696                       l1974 0682  
                     l1966 066B                       l1958 0652                       l1894 0580  
                     l1886 0571                       l2694 0250                       l2686 01C9  
                     l2678 0166                       l2790 07EA                       l2782 07BC  
                     l2774 078F                       l2758 0749                       l2870 04F2  
                     l2862 04B2                       l2854 0460                       l2846 0440  
                     l2838 0421                       l1992 06B7                       l1984 0697  
                     l1976 0683                       l1968 0673                       l1896 0588  
                     l1888 0575                       l2696 0276                       l2688 01E6  
                     l2792 07EF                       l2784 07C0                       l2776 0793  
                     l2768 0776                       l2872 054B                       l2864 04CF  
                     l2856 04B1                       l2848 0443                       l1994 06BC  
                     l1986 069B                       l1978 068C                       l1898 0589  
                     l2698 029E                       l2794 07F3                       l2786 07CA  
                     l2778 07A1                       l2874 0555                       l2866 04E4  
                     l1996 06CA                       l1988 06AF                       l2796 07F4  
                     l2788 07D4                       l2868 04EC                       l1998 06CE  
                     l2896 0EF9                       STR_1 082F                       STR_2 081A  
                     u2200 05E6                       u2201 05E5                       u2210 0620  
                     u2130 0575                       u2211 061F                       u2131 0574  
                     u2300 0682                       u2140 057B                       u3020 0BAE  
                     u1500 0B1A                       _IOCB 0096                       u2301 0681  
                     u2141 057A                       u3021 0BAD                       u3005 0B9B  
                     u1501 0B19                       u3110 0E5F                       u3030 0DE2  
                     u2150 0580                       u1510 0B20                       u3111 0E5E  
                     u3031 0DE1                       u2151 057F                       u3015 0BA2  
                     u1511 0B1F                       u3120 0E64                       u3040 0DF3  
                     u2400 0717                       u2320 0696                       u2240 0636  
                     u2160 05A2                       u3200 0C72                       u3121 0E63  
                     u3105 0E51                       u3041 0DF2                       u2401 0716  
                     u2321 0695                       u2241 0635                       u2225 0622  
                     u2161 05A1                       u3201 0C71                       u3050 0E12  
                     u2410 072E                       u2330 069B                       u2170 05A8  
                     u4010 078E                       u3130 0CB0                       u3051 0E11  
                     u2411 072D                       u2331 069A                       u2315 0685  
                     u2235 062B                       u2171 05A7                       u4011 078D  
                     u3131 0CAF                       u3300 0D20                       u2340 06AF  
                     u2260 0652                       u2180 05AD                       u4100 07F3  
                     u3220 0C84                       u2405 0713                       u2341 06AE  
                     u2261 0651                       u2181 05AC                       u4101 07F2  
                     u4005 0780                       u3221 0C83                       u3070 0E26  
                     u2350 06B6                       u2270 066B                       u2190 05C8  
                     u4030 07B0                       u3150 0CC2                       u3230 0C8E  
                     u4110 03D6                       u3071 0E25                       u3311 0D32  
                     u2351 06B5                       u2271 066A                       u2255 0639  
                     u2191 05C7                       u4031 07AF                       u3151 0CC1  
                     u3231 0C8D                       u3215 0C76                       u4111 03D5  
                     u3320 0C42                       u3312 0D33                       u2360 06BC  
                     u2280 0673                       u3400 0F3A                       u4120 0429  
                     u3321 0C41                       u3065 0E17                       u3313 0D38  
                     u3305 0D1B                       u2361 06BB                       u2281 0672  
                     u2265 064E                       u4025 07A2                       u3145 0CB4  
                     u3401 0F39                       u4121 0428                       u3330 0C48  
                     u3090 0E41                       u3314 0D39                       u2370 06CE  
                     u4050 07C0                       u3170 0CD3                       u3250 0CA1  
                     u3410 0F45                       u4130 0449                       u3331 0C47  
                     u3091 0E40                       u3315 0D3E                       u2371 06CD  
                     u4051 07BF                       u3171 0CD2                       u3251 0CA0  
                     u3235 0C8A                       u3411 0F44                       u4131 0448  
                     u3340 0C4E                       u3316 0D3F                       u2380 06DD  
                     u3260 0BC3                       u3500 0D6C                       u4060 07C6  
                     u3420 0F4B                       u4140 04F2                       u3341 0C4D  
                     u3085 0E28                       u3261 0BC2                       u3501 0D6B  
                     u4061 07C5                       u4045 07B5                       u3165 0CC3  
                     u3245 0C95                       u3421 0F4A                       u3405 0F36  
                     u4141 04F1                       u3350 0C08                       u2390 06FA  
                     u3510 0D83                       u4070 07CA                       u3190 0CE7  
                     u3430 0F51                       u4207 0C65                       u3351 0C07  
                     u3095 0E3D                       u2391 06F9                       u2295 0677  
                     u4071 07C9                       u3191 0CE6                       u3175 0CCF  
                     u3431 0F50                       u3280 0BD7                       u3600 0037  
                     u3520 0D99                       u4080 07DF                       u3440 0F62  
                     u3360 0E86                       u4217 0B2B                       u2385 06D8  
                     u3281 0BD6                       u3601 0036                       u3521 0D98  
                     u3185 0CDB                       u3441 0F61                       u3361 0E85  
                     u3290 0D07                       u3610 003D                       u3530 0DA0  
                     u4090 07EF                       u3450 0F78                       u3370 0EA5  
                     u2395 06F6                       u3275 0BCA                       u3611 003C  
                     u3531 0D9F                       u3515 0D7E                       u4091 07EE  
                     u3451 0F77                       u3371 0EA4                       u3620 0042  
                     u3460 0F8F                       u3380 0EE5                       u3701 0123  
                     u3621 0041                       u4085 07DA                       u3461 0F8E  
                     u3445 0F5E                       u3381 0EE4                       u4157 0419  
                     u3702 012A                       u3630 0063                       u3550 0DB2  
                     u3470 0F95                       u3390 0F14                       u3295 0D02  
                     u3711 013F                       u3703 0131                       u3631 0062  
                     u3551 0DB1                       u3471 0F94                       u3391 0F13  
                     u4167 0439                       u3712 0146                       u3640 0069  
                     u3560 0DB9                       u3480 0FE9                       u3801 0268  
                     u3713 014D                       u3641 0068                       u3561 0DB8  
                     u3545 0DA2                       u3481 0FE8                       u4177 0459  
                     u3810 0284                       u3802 026F                       u3650 006E  
                     u3490 0FFB                       u4187 0C15                       u3803 0276  
                     u3731 0175                       u3651 006D                       u3491 0FFA  
                     u3900 02F6                       u3732 017C                       u3660 0085  
                     u3580 0DCA                       u4197 0B3E                       u3901 02F5  
                     u3821 0290                       u3741 01A2                       u3733 0183  
                     u3725 014F                       u3661 0084                       u3581 0DC9  
                     u3910 02FC                       u3822 0297                       u3742 01A9  
                     u3670 008A                       u3590 0DCF                       u3911 02FB  
                     u3823 029E                       u3815 027F                       u3743 01B0  
                     u3671 0089                       u3591 0DCE                       u3575 0DBC  
                     u3920 030E                       u3921 030D                       u3761 01D8  
                     u3681 00DB                       u3930 031D                       u3850 02C2  
                     u3762 01DF                       u3682 00E2                       u3851 02C1  
                     u3835 02A0                       u3771 0205                       u3763 01E6  
                     u3755 01B2                       u3691 00F7                       u3683 00E9  
                     u3940 033A                       u3772 020C                       u3692 00FE  
                     u3941 0339                       u3845 02B7                       u3781 0232  
                     u3773 0213                       u3693 0105                       u3950 0354  
                     u3870 02D6                       u3790 025C                       u3782 0239  
                     u2990 0B94                       u3951 0353                       u3935 0318  
                     u3871 02D5                       u3783 0240                       u2991 0B93  
                     u3960 0372                       u3880 02DB                       u3961 0371  
                     u3945 0336                       u3881 02DA                       u3865 02C5  
                     u3890 02EF                       u3970 0749                       i1l75 0B83  
                     u3955 0350                       u3891 02EE                       u3795 0257  
                     u3971 0748                       u3980 074D                       u3981 074C  
                     u3990 076D                       u3991 076C                       _buff 00A7  
                     _main 0387                       _temp 0066                       _vint 0077  
                     btemp 007E         __size_of_LCDPutCmd 0013                       start 000E  
       __size_of_LCDPutStr 002D            ___fldiv@new_exp 0053     __end_of_LCD_Initialize 0C39  
              LCDPutCmd@ch 0076           __end_of_LCDWrite 0B12              ___fltol@sign1 0064  
          __end_of___aldiv 0E78                      ?_main 0070            __end_of___fldiv 0741  
          __end_of___flmul 0387            __end_of___fltol 0DDB                      _ANSEL 0188  
          __end_of___lwdiv 0CEC            __end_of___lwmod 0CA6                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _Setup 0B4B            __end_of_dpowers 081A                      _myISR 0B6B  
          __end_of_isdigit 0B24                      pclath 000A        __size_of_LCDPutChar 0014  
                    status 0003                      wtemp0 007E            __end_of_sprintf 1000  
          ?_LCD_Initialize 0070            __initialization 0011               __end_of_main 0564  
                   ??_main 00BB                  ??_LCDGoto 0023          __end_of_LCDPutCmd 0B37  
             LCDPutChar@ch 0076          __end_of_LCDPutStr 0C09                     ?_Setup 0070  
                   ?_myISR 0070                     _ANSELH 0189                     i1l2210 0B71  
                   i1l2212 0B77                     i1l2214 0B7D                     i1l2216 0B7F  
                   i1l2208 0B6B                     u293_20 0B71                     u293_21 0B70  
                   u294_20 0B7D                     u294_21 0B7C               LCDPutStr@str 0022  
                   _SSPBUF 0013                     _SSPCON 0014                     _SPIMas 0AF6  
         __end_of___xxtofl 07FD                  ??___aldiv 0074                     ___wmul 0B8C  
                ??___fldiv 0049                  ??___flmul 002F                  ??___fltol 005F  
                ??___lwdiv 0074                  ??___lwmod 0075                  ??_isdigit 0074  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 0036  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
  __end_of__initialization 0022                  ?_LCDWrite 0074                 ___fltol@f1 005B  
                LCDGoto@ln 0022             __pcstackCOMMON 0070              __end_of_Setup 0B6B  
            __end_of_myISR 0B8C               ??_LCDPutChar 0020          ?_USART_Initialize 002E  
       ??_USART_Initialize 0032                    ??_Setup 0074                    ??_myISR 0070  
             sprintf@width 003F                 __pbssBANK0 0066                 __pbssBANK1 00A0  
       __end_of_LCDPutChar 0B4B                    ?_SPIMas 0070                 ??_LCDWrite 0075  
        __end_of__Umul8_16 0BDC                 __pmaintext 0387                    ?___wmul 0020  
               __pintentry 0004                    _LCDGoto 0C39                  ?___xxtofl 0020  
                  _SSPSTAT 0094                 __stringtab 0800           ??_LCD_Initialize 0022  
          __size_of_SPIMas 000C                    ___aldiv 0DDB                    ___fldiv 0564  
                  ___flmul 0026                    ___fltol 0D5F            __size_of___wmul 0027  
                  ___lwdiv 0CA6                    ___lwmod 0C6A                    __ptext1 0E78  
                  __ptext2 0B12                    __ptext3 0B8C                    __ptext4 0C6A  
                  __ptext5 0CA6                    __ptext6 0741                    __ptext7 0D5F  
                  __ptext8 0026                    __ptext9 0BB3                    _dpowers 0810  
                  _isdigit 0B12                 ??___xxtofl 0024           ___aldiv@dividend 0024  
                  _valores 00A4                  _LCDPutCmd 0B24                    _sprintf 0E78  
                  clrloop0 0AEF                  _LCDPutStr 0BDC       end_of_initialization 0022  
        USART_Initialize@x 003E                  _RCSTAbits 0018           ___aldiv@quotient 002A  
                _PORTBbits 0006                  _PORTCbits 0007              ___xxtofl@sign 0028  
                _TRISCbits 0087                ___fldiv@grs 0055                ___fldiv@rem 004E  
               ?_LCDPutCmd 0070                 ?_LCDPutStr 0022                ___flmul@grs 0036  
                _TXSTAbits 0098                 LCDGoto@pos 0027             __end_of_SPIMas 0B02  
        __size_of_LCDWrite 0010                 LCDPutStr@i 0025             __end_of___wmul 0BB3  
              _BAUDCTLbits 0187                 LCDWrite@ch 0075                 LCDWrite@rs 0074  
      start_initialization 0011                   ??_SPIMas 0074  __size_of_USART_Initialize 0073  
                 ??___wmul 0074                  __Umul8_16 0BB3                   ?_LCDGoto 0022  
                ___fldiv@a 0041                  ___fldiv@b 0045                  ___flmul@a 002B  
                ___flmul@b 0027                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00BB          __size_of___xxtofl 00BC  
              ??_LCDPutCmd 0020                ??_LCDPutStr 0024                sprintf@flag 003B  
              sprintf@prec 003A           ___lwdiv@dividend 0022                   ?___aldiv 0020  
                 ?___fldiv 0041                   ?___flmul 0027                   ?___fltol 005B  
               ?__Umul8_16 0074                   ?___lwdiv 0020                   ?___lwmod 0027  
                __pstrings 0800                   ?_isdigit 0070             __size_of_Setup 0020  
         ___lwdiv@quotient 0025             __size_of_myISR 0021                   ?_sprintf 002B  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0028  
           ___wmul@product 0074                   _LCDWrite 0B02                  clear_ram0 0AEE  
                 _PIE1bits 008C                _LCDGoto$524 0025                   _PIR1bits 000C  
              __stringbase 080F          ___wmul@multiplier 0020           __size_of_LCDGoto 0031  
         _USART_Initialize 0CEC                ??__Umul8_16 0020    __size_of_LCD_Initialize 0030  
         __size_of___aldiv 009D           __size_of___fldiv 01DD           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0810                _isdigit$993 0074                 sprintf@val 003C  
                 ___xxtofl 0741           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0024                   __ptext10 0564                   __ptext11 0CEC  
                 __ptext20 0B02                   __ptext12 0DDB                   __ptext21 0B6B  
                 __ptext13 0B4B                   __ptext14 0AF6                   __ptext15 0C09  
                 __ptext16 0BDC                   __ptext17 0B37                   __ptext18 0C39  
                 __ptext19 0B24           __size_of_sprintf 0188              __size_of_main 01DD  
               _LCDPutChar 0B37                 _INTCONbits 000B                   isdigit@c 0075  
                 intlevel1 0000                  sprintf@ap 0039                  sprintf@sp 003E  
         ___lwmod@dividend 0029                  stringcode 080A     __Umul8_16@multiplicand 0074  
                 sprintf@c 0041                   sprintf@f 002B            ___lwmod@divisor 0027  
          ___lwmod@counter 0076                   stringdir 080A                   stringtab 0800  
             ___aldiv@sign 0029   USART_Initialize@baudrate 002E       __Umul8_16@multiplier 0026  
        __Umul8_16@product 0022  
