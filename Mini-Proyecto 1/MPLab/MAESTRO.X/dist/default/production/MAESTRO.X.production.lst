

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:02:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456                           
   457                           	psect	strings
   458  0402                     __pstrings:
   459  0402                     stringtab:
   460  0402                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463  0402  1BFF               	btfsc	btemp+1,7
   464  0403  2C0C               	ljmp	stringcode
   465  0404  1383               	bcf	3,7
   466  0405  187F               	btfsc	btemp+1,0
   467  0406  1783               	bsf	3,7
   468  0407  0800               	movf	0,w
   469  0408  0A84               	incf	4,f
   470  0409  1903               	skipnz
   471  040A  0AFF               	incf	btemp+1,f
   472  040B  0008               	return
   473  040C                     stringcode:
   474  040C                     stringdir:
   475  040C  3004               	movlw	high stringdir
   476  040D  008A               	movwf	10
   477  040E  0804               	movf	4,w
   478  040F  0A84               	incf	4,f
   479  0410  0782               	addwf	2,f
   480  0411                     __stringbase:
   481  0411  3400               	retlw	0
   482  0412                     __end_of__stringtab:
   483  0412                     _dpowers:
   484  0412  3401               	retlw	1
   485  0413  3400               	retlw	0
   486  0414  340A               	retlw	10
   487  0415  3400               	retlw	0
   488  0416  3464               	retlw	100
   489  0417  3400               	retlw	0
   490  0418  34E8               	retlw	232
   491  0419  3403               	retlw	3
   492  041A  3410               	retlw	16
   493  041B  3427               	retlw	39
   494  041C                     __end_of_dpowers:
   495  0014                     _SSPCON	set	20
   496  0006                     _PORTBbits	set	6
   497  000B                     _INTCONbits	set	11
   498  0018                     _RCSTAbits	set	24
   499  0013                     _SSPBUF	set	19
   500  0007                     _PORTCbits	set	7
   501  0019                     _TXREG	set	25
   502  000C                     _PIR1bits	set	12
   503  0009                     _PORTE	set	9
   504  0008                     _PORTD	set	8
   505  0006                     _PORTB	set	6
   506  0005                     _PORTA	set	5
   507  0007                     _PORTC	set	7
   508  0094                     _SSPSTAT	set	148
   509  0087                     _TRISCbits	set	135
   510  008C                     _PIE1bits	set	140
   511  0099                     _SPBRG	set	153
   512  0098                     _TXSTAbits	set	152
   513  0094                     _SSPSTATbits	set	148
   514  0096                     _IOCB	set	150
   515  0089                     _TRISE	set	137
   516  0088                     _TRISD	set	136
   517  0086                     _TRISB	set	134
   518  0085                     _TRISA	set	133
   519  0087                     _TRISC	set	135
   520  0187                     _BAUDCTLbits	set	391
   521  0189                     _ANSELH	set	393
   522  0188                     _ANSEL	set	392
   523  041C                     STR_2:
   524  041C  3425               	retlw	37	;'%'
   525  041D  3469               	retlw	105	;'i'
   526  041E  342E               	retlw	46	;'.'
   527  041F  3425               	retlw	37	;'%'
   528  0420  3469               	retlw	105	;'i'
   529  0421  3425               	retlw	37	;'%'
   530  0422  3469               	retlw	105	;'i'
   531  0423  3456               	retlw	86	;'V'
   532  0424  3420               	retlw	32	;' '
   533  0425  3425               	retlw	37	;'%'
   534  0426  3433               	retlw	51	;'3'
   535  0427  3469               	retlw	105	;'i'
   536  0428  3443               	retlw	67	;'C'
   537  0429  3420               	retlw	32	;' '
   538  042A  3425               	retlw	37	;'%'
   539  042B  3433               	retlw	51	;'3'
   540  042C  3469               	retlw	105	;'i'
   541  042D  3454               	retlw	84	;'T'
   542  042E  340D               	retlw	13
   543  042F  340A               	retlw	10
   544  0430  3400               	retlw	0
   545  0431                     STR_1:
   546  0431  3420               	retlw	32	;' '
   547  0432  3453               	retlw	83	;'S'
   548  0433  3431               	retlw	49	;'1'
   549  0434  343A               	retlw	58	;':'
   550  0435  3420               	retlw	32	;' '
   551  0436  3420               	retlw	32	;' '
   552  0437  3420               	retlw	32	;' '
   553  0438  3420               	retlw	32	;' '
   554  0439  3453               	retlw	83	;'S'
   555  043A  3432               	retlw	50	;'2'
   556  043B  343A               	retlw	58	;':'
   557  043C  3420               	retlw	32	;' '
   558  043D  3420               	retlw	32	;' '
   559  043E  3420               	retlw	32	;' '
   560  043F  3420               	retlw	32	;' '
   561  0440  3453               	retlw	83	;'S'
   562  0441  3433               	retlw	51	;'3'
   563  0442  343A               	retlw	58	;':'
   564  0443  3400               	retlw	0
   565                           
   566                           	psect	cinit
   567  0011                     start_initialization:	
   568                           ; #config settings
   569                           
   570  0011                     __initialization:
   571                           
   572                           ; Clear objects allocated to COMMON
   573  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   574                           
   575                           ; Clear objects allocated to BANK0
   576  0012  1383               	bcf	3,7	;select IRP bank0
   577  0013  304B               	movlw	low __pbssBANK0
   578  0014  0084               	movwf	4
   579  0015  306B               	movlw	low (__pbssBANK0+32)
   580  0016  120A  118A  25D4  120A  118A  	fcall	clear_ram0
   581  001B                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  001B                     __end_of__initialization:
   585  001B  0183               	clrf	3
   586  001C  120A  118A  29A7   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssCOMMON
   589  0079                     __pbssCOMMON:
   590  0079                     _c1:
   591  0079                     	ds	1
   592                           
   593                           	psect	bssBANK0
   594  004B                     __pbssBANK0:
   595  004B                     _V1:
   596  004B                     	ds	4
   597  004F                     _valores:
   598  004F                     	ds	3
   599  0052                     _vint:
   600  0052                     	ds	2
   601  0054                     _temp:
   602  0054                     	ds	1
   603  0055                     _c2:
   604  0055                     	ds	1
   605  0056                     _v:
   606  0056                     	ds	1
   607  0057                     _buff:
   608  0057                     	ds	20
   609                           
   610                           	psect	clrtext
   611  05D4                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  05D4  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  05D5                     clrloop0:
   617  05D5  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  05D6  0A84               	incf	4,f	;increment pointer
   619  05D7  0604               	xorwf	4,w	;XOR with final address
   620  05D8  1903               	btfsc	3,2	;have we reached the end yet?
   621  05D9  3400               	retlw	0	;all done for this memory range, return
   622  05DA  0604               	xorwf	4,w	;XOR again to restore value
   623  05DB  2DD5               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_isdigit:
   628  0070                     ?_LCD_Initialize:	
   629                           ; 1 bit 
   630                           
   631  0070                     ?_SPIMas:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_LCDPutCmd:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_Setup:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_ISR:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_ISR:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_main:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LCDPutChar:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654  0070                     	ds	4
   655  0074                     ??_SPIMas:
   656  0074                     ??_isdigit:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     ??_Setup:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ?_LCDWrite:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ??___aldiv:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     ?___wmul:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     ?___lwdiv:	
   672                           ; 2 bytes @ 0x4
   673                           
   674  0074                     LCDWrite@rs:	
   675                           ; 2 bytes @ 0x4
   676                           
   677  0074                     _isdigit$983:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ___wmul@multiplier:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ___lwdiv@divisor:	
   684                           ; 2 bytes @ 0x4
   685                           
   686                           
   687                           ; 2 bytes @ 0x4
   688  0074                     	ds	1
   689  0075                     ??_LCDWrite:
   690  0075                     LCDWrite@ch:	
   691                           ; 1 bytes @ 0x5
   692                           
   693  0075                     isdigit@c:	
   694                           ; 1 bytes @ 0x5
   695                           
   696  0075                     USART_Initialize@x:	
   697                           ; 1 bytes @ 0x5
   698                           
   699                           
   700                           ; 4 bytes @ 0x5
   701  0075                     	ds	1
   702  0076                     ??_LCDPutCmd:
   703  0076                     ??_LCDPutChar:	
   704                           ; 1 bytes @ 0x6
   705                           
   706  0076                     ___wmul@multiplicand:	
   707                           ; 1 bytes @ 0x6
   708                           
   709  0076                     ___lwdiv@dividend:	
   710                           ; 2 bytes @ 0x6
   711                           
   712                           
   713                           ; 2 bytes @ 0x6
   714  0076                     	ds	2
   715  0078                     ??___wmul:
   716  0078                     ??___lwdiv:	
   717                           ; 1 bytes @ 0x8
   718                           
   719  0078                     LCDPutChar@ch:	
   720                           ; 1 bytes @ 0x8
   721                           
   722  0078                     LCDPutCmd@ch:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 1 bytes @ 0x8
   727  0078                     	ds	1
   728                           
   729                           	psect	cstackBANK0
   730  0020                     __pcstackBANK0:
   731  0020                     ??_LCD_Initialize:
   732  0020                     ?_LCDGoto:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0020                     ?_LCDPutStr:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ?___aldiv:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     LCDGoto@ln:	
   742                           ; 4 bytes @ 0x0
   743                           
   744  0020                     LCDPutStr@str:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0020                     ___wmul@product:	
   748                           ; 2 bytes @ 0x0
   749                           
   750  0020                     ___lwdiv@quotient:	
   751                           ; 2 bytes @ 0x0
   752                           
   753  0020                     ___aldiv@divisor:	
   754                           ; 2 bytes @ 0x0
   755                           
   756                           
   757                           ; 4 bytes @ 0x0
   758  0020                     	ds	1
   759  0021                     ??_LCDGoto:
   760                           
   761                           ; 1 bytes @ 0x1
   762  0021                     	ds	1
   763  0022                     ??_LCDPutStr:
   764  0022                     ___lwdiv@counter:	
   765                           ; 1 bytes @ 0x2
   766                           
   767                           
   768                           ; 1 bytes @ 0x2
   769  0022                     	ds	1
   770  0023                     ?___lwmod:
   771  0023                     LCDPutStr@i:	
   772                           ; 2 bytes @ 0x3
   773                           
   774  0023                     _LCDGoto$497:	
   775                           ; 1 bytes @ 0x3
   776                           
   777  0023                     ___lwmod@divisor:	
   778                           ; 2 bytes @ 0x3
   779                           
   780                           
   781                           ; 2 bytes @ 0x3
   782  0023                     	ds	1
   783  0024                     ___aldiv@dividend:
   784                           
   785                           ; 4 bytes @ 0x4
   786  0024                     	ds	1
   787  0025                     LCDGoto@pos:
   788  0025                     ___lwmod@dividend:	
   789                           ; 1 bytes @ 0x5
   790                           
   791                           
   792                           ; 2 bytes @ 0x5
   793  0025                     	ds	2
   794  0027                     ??___lwmod:
   795                           
   796                           ; 1 bytes @ 0x7
   797  0027                     	ds	1
   798  0028                     ___aldiv@counter:
   799  0028                     ___lwmod@counter:	
   800                           ; 1 bytes @ 0x8
   801                           
   802                           
   803                           ; 1 bytes @ 0x8
   804  0028                     	ds	1
   805  0029                     ?_sprintf:
   806  0029                     sprintf@f:	
   807                           ; 2 bytes @ 0x9
   808                           
   809  0029                     ___aldiv@sign:	
   810                           ; 1 bytes @ 0x9
   811                           
   812                           
   813                           ; 1 bytes @ 0x9
   814  0029                     	ds	1
   815  002A                     ___aldiv@quotient:
   816                           
   817                           ; 4 bytes @ 0xA
   818  002A                     	ds	4
   819  002E                     ?_USART_Initialize:
   820  002E                     USART_Initialize@baudrate:	
   821                           ; 1 bytes @ 0xE
   822                           
   823                           
   824                           ; 4 bytes @ 0xE
   825  002E                     	ds	4
   826  0032                     ??_USART_Initialize:
   827                           
   828                           ; 1 bytes @ 0x12
   829  0032                     	ds	2
   830  0034                     ??_sprintf:
   831                           
   832                           ; 1 bytes @ 0x14
   833  0034                     	ds	3
   834  0037                     sprintf@ap:
   835                           
   836                           ; 1 bytes @ 0x17
   837  0037                     	ds	1
   838  0038                     sprintf@prec:
   839                           
   840                           ; 1 bytes @ 0x18
   841  0038                     	ds	1
   842  0039                     sprintf@flag:
   843                           
   844                           ; 1 bytes @ 0x19
   845  0039                     	ds	1
   846  003A                     sprintf@val:
   847                           
   848                           ; 2 bytes @ 0x1A
   849  003A                     	ds	2
   850  003C                     sprintf@sp:
   851                           
   852                           ; 1 bytes @ 0x1C
   853  003C                     	ds	1
   854  003D                     sprintf@width:
   855                           
   856                           ; 2 bytes @ 0x1D
   857  003D                     	ds	2
   858  003F                     sprintf@c:
   859                           
   860                           ; 1 bytes @ 0x1F
   861  003F                     	ds	1
   862  0040                     ??_main:
   863                           
   864                           ; 1 bytes @ 0x20
   865  0040                     	ds	11
   866                           
   867                           	psect	maintext
   868  01A7                     __pmaintext:	
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 108 in file "MAESTRO.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : B00/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0      11       0       0       0
   891 ;;      Totals:         0      11       0       0       0
   892 ;;Total ram usage:       11 bytes
   893 ;; Hardware stack levels required when called:    4
   894 ;; This function calls:
   895 ;;		_LCDGoto
   896 ;;		_LCDPutStr
   897 ;;		_LCD_Initialize
   898 ;;		_SPIMas
   899 ;;		_Setup
   900 ;;		_USART_Initialize
   901 ;;		___lwdiv
   902 ;;		___lwmod
   903 ;;		_sprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  01A7                     _main:
   912  01A7                     l2364:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   915                           
   916                           
   917                           ;MAESTRO.c: 109:     Setup();
   918  01A7  120A  118A  2539  120A  118A  	fcall	_Setup
   919                           
   920                           ;MAESTRO.c: 110:     LCD_Initialize();
   921  01AC  120A  118A  24B1  120A  118A  	fcall	_LCD_Initialize
   922                           
   923                           ;MAESTRO.c: 111:     USART_Initialize(9600);
   924  01B1  3000               	movlw	0
   925  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   926  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   927  01B4  00B1               	movwf	USART_Initialize@baudrate+3
   928  01B5  3000               	movlw	0
   929  01B6  00B0               	movwf	USART_Initialize@baudrate+2
   930  01B7  3025               	movlw	37
   931  01B8  00AF               	movwf	USART_Initialize@baudrate+1
   932  01B9  3080               	movlw	128
   933  01BA  00AE               	movwf	USART_Initialize@baudrate
   934  01BB  120A  118A  2349  120A  118A  	fcall	_USART_Initialize
   935                           
   936                           ;MAESTRO.c: 112:     SPIMas();
   937  01C0  120A  118A  25C8  120A  118A  	fcall	_SPIMas
   938                           
   939                           ;MAESTRO.c: 114:     LCDGoto(0,0);
   940  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   941  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   942  01C7  01A0               	clrf	LCDGoto@ln
   943  01C8  3000               	movlw	0
   944  01C9  120A  118A  2480  120A  118A  	fcall	_LCDGoto
   945  01CE                     l2366:
   946                           
   947                           ;MAESTRO.c: 115:     LCDPutStr(" S1:    S2:    S3:");
   948  01CE  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   949  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   950  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   951  01D1  00A0               	movwf	LCDPutStr@str
   952  01D2  3080               	movlw	128
   953  01D3  00A1               	movwf	LCDPutStr@str+1
   954  01D4  120A  118A  24E1  120A  118A  	fcall	_LCDPutStr
   955  01D9                     l2368:
   956                           
   957                           ;MAESTRO.c: 118:         PORTCbits.RC0 = 0;
   958  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   959  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   960  01DB  1007               	bcf	7,0	;volatile
   961  01DC                     l2370:
   962                           
   963                           ;MAESTRO.c: 119:         SSPBUF = 1;
   964  01DC  3001               	movlw	1
   965  01DD  0093               	movwf	19	;volatile
   966  01DE                     l2372:
   967                           
   968                           ;MAESTRO.c: 120:         if (!SSPSTATbits.BF){
   969  01DE  1683               	bsf	3,5	;RP0=1, select bank1
   970  01DF  1303               	bcf	3,6	;RP1=0, select bank1
   971  01E0  1814               	btfsc	20,0	;volatile
   972  01E1  29E3               	goto	u2971
   973  01E2  29E4               	goto	u2970
   974  01E3                     u2971:
   975  01E3  29EA               	goto	l83
   976  01E4                     u2970:
   977  01E4                     l2374:
   978                           
   979                           ;MAESTRO.c: 121:             v=SSPBUF;
   980  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   981  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   982  01E6  0813               	movf	19,w	;volatile
   983  01E7  00C0               	movwf	??_main
   984  01E8  0840               	movf	??_main,w
   985  01E9  00D6               	movwf	_v
   986  01EA                     l83:	
   987                           ;MAESTRO.c: 122:         }
   988                           
   989                           
   990                           ;MAESTRO.c: 123:         _delay((unsigned long)((1)*(8000000/4000.0)));
   991  01EA  3003               	movlw	3
   992  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   993  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   994  01ED  00C1               	movwf	??_main+1
   995  01EE  3097               	movlw	151
   996  01EF  00C0               	movwf	??_main
   997  01F0                     u3017:
   998  01F0  0BC0               	decfsz	??_main,f
   999  01F1  29F0               	goto	u3017
  1000  01F2  0BC1               	decfsz	??_main+1,f
  1001  01F3  29F0               	goto	u3017
  1002  01F4                     l2376:
  1003                           
  1004                           ;MAESTRO.c: 125:         PORTCbits.RC0 = 1;
  1005  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1006  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1007  01F6  1407               	bsf	7,0	;volatile
  1008  01F7                     l2378:
  1009                           
  1010                           ;MAESTRO.c: 126:         PORTCbits.RC1 = 0;
  1011  01F7  1087               	bcf	7,1	;volatile
  1012                           
  1013                           ;MAESTRO.c: 127:         SSPBUF = 1;
  1014  01F8  3001               	movlw	1
  1015  01F9  0093               	movwf	19	;volatile
  1016  01FA                     l2380:
  1017                           
  1018                           ;MAESTRO.c: 129:         if(!SSPSTATbits.BF){
  1019  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1020  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1021  01FC  1814               	btfsc	20,0	;volatile
  1022  01FD  29FF               	goto	u2981
  1023  01FE  2A00               	goto	u2980
  1024  01FF                     u2981:
  1025  01FF  2A06               	goto	l84
  1026  0200                     u2980:
  1027  0200                     l2382:
  1028                           
  1029                           ;MAESTRO.c: 130:             c2 = SSPBUF;
  1030  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0202  0813               	movf	19,w	;volatile
  1033  0203  00C0               	movwf	??_main
  1034  0204  0840               	movf	??_main,w
  1035  0205  00D5               	movwf	_c2
  1036  0206                     l84:	
  1037                           ;MAESTRO.c: 131:         }
  1038                           
  1039                           
  1040                           ;MAESTRO.c: 132:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1041  0206  3003               	movlw	3
  1042  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0209  00C1               	movwf	??_main+1
  1045  020A  3097               	movlw	151
  1046  020B  00C0               	movwf	??_main
  1047  020C                     u3027:
  1048  020C  0BC0               	decfsz	??_main,f
  1049  020D  2A0C               	goto	u3027
  1050  020E  0BC1               	decfsz	??_main+1,f
  1051  020F  2A0C               	goto	u3027
  1052  0210                     l2384:
  1053                           
  1054                           ;MAESTRO.c: 134:         PORTCbits.RC1 = 1;
  1055  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0212  1487               	bsf	7,1	;volatile
  1058  0213                     l2386:
  1059                           
  1060                           ;MAESTRO.c: 135:         PORTCbits.RC2 = 0;
  1061  0213  1107               	bcf	7,2	;volatile
  1062                           
  1063                           ;MAESTRO.c: 136:         SSPBUF = 1;
  1064  0214  3001               	movlw	1
  1065  0215  0093               	movwf	19	;volatile
  1066  0216                     l2388:
  1067                           
  1068                           ;MAESTRO.c: 138:         if(!SSPSTATbits.BF){
  1069  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1070  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1071  0218  1814               	btfsc	20,0	;volatile
  1072  0219  2A1B               	goto	u2991
  1073  021A  2A1C               	goto	u2990
  1074  021B                     u2991:
  1075  021B  2A22               	goto	l85
  1076  021C                     u2990:
  1077  021C                     l2390:
  1078                           
  1079                           ;MAESTRO.c: 139:             temp = SSPBUF;
  1080  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1081  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1082  021E  0813               	movf	19,w	;volatile
  1083  021F  00C0               	movwf	??_main
  1084  0220  0840               	movf	??_main,w
  1085  0221  00D4               	movwf	_temp
  1086  0222                     l85:	
  1087                           ;MAESTRO.c: 140:         }
  1088                           
  1089                           
  1090                           ;MAESTRO.c: 141:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1091  0222  3003               	movlw	3
  1092  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0225  00C1               	movwf	??_main+1
  1095  0226  3097               	movlw	151
  1096  0227  00C0               	movwf	??_main
  1097  0228                     u3037:
  1098  0228  0BC0               	decfsz	??_main,f
  1099  0229  2A28               	goto	u3037
  1100  022A  0BC1               	decfsz	??_main+1,f
  1101  022B  2A28               	goto	u3037
  1102  022C                     l2392:
  1103                           
  1104                           ;MAESTRO.c: 144:         PORTCbits.RC2 = 1;
  1105  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1106  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1107  022E  1507               	bsf	7,2	;volatile
  1108  022F                     l2394:
  1109                           
  1110                           ;MAESTRO.c: 146:         vint = (uint16_t)(((V1*500)/255));
  1111  022F  01D2               	clrf	_vint
  1112  0230  01D3               	clrf	_vint+1
  1113  0231                     l2396:
  1114                           
  1115                           ;MAESTRO.c: 147:         for (v = 0; v < 3; v++)
  1116  0231  01D6               	clrf	_v
  1117  0232                     l2400:
  1118                           
  1119                           ;MAESTRO.c: 148:         {;MAESTRO.c: 149:            valores[v] = (char)(vint % 10);
  1120  0232  300A               	movlw	10
  1121  0233  00A3               	movwf	___lwmod@divisor
  1122  0234  3000               	movlw	0
  1123  0235  00A4               	movwf	___lwmod@divisor+1
  1124  0236  0853               	movf	_vint+1,w
  1125  0237  00A6               	movwf	___lwmod@dividend+1
  1126  0238  0852               	movf	_vint,w
  1127  0239  00A5               	movwf	___lwmod@dividend
  1128  023A  120A  118A  2444  120A  118A  	fcall	___lwmod
  1129  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0241  0823               	movf	?___lwmod,w
  1132  0242  00C0               	movwf	??_main
  1133  0243  0856               	movf	_v,w
  1134  0244  3E4F               	addlw	(low (_valores| 0))& (0+255)
  1135  0245  0084               	movwf	4
  1136  0246  0840               	movf	??_main,w
  1137  0247  1383               	bcf	3,7	;select IRP bank0
  1138  0248  0080               	movwf	0
  1139  0249                     l2402:
  1140                           
  1141                           ;MAESTRO.c: 150:            vint /= 10;
  1142  0249  300A               	movlw	10
  1143  024A  00F4               	movwf	___lwdiv@divisor
  1144  024B  3000               	movlw	0
  1145  024C  00F5               	movwf	___lwdiv@divisor+1
  1146  024D  0853               	movf	_vint+1,w
  1147  024E  00F7               	movwf	___lwdiv@dividend+1
  1148  024F  0852               	movf	_vint,w
  1149  0250  00F6               	movwf	___lwdiv@dividend
  1150  0251  120A  118A  23BC  120A  118A  	fcall	___lwdiv
  1151  0256  0875               	movf	?___lwdiv+1,w
  1152  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0259  00D3               	movwf	_vint+1
  1155  025A  0874               	movf	?___lwdiv,w
  1156  025B  00D2               	movwf	_vint
  1157  025C                     l2404:
  1158                           
  1159                           ;MAESTRO.c: 151:         }
  1160  025C  3001               	movlw	1
  1161  025D  00C0               	movwf	??_main
  1162  025E  0840               	movf	??_main,w
  1163  025F  07D6               	addwf	_v,f
  1164  0260                     l2406:
  1165  0260  3003               	movlw	3
  1166  0261  0256               	subwf	_v,w
  1167  0262  1C03               	skipc
  1168  0263  2A65               	goto	u3001
  1169  0264  2A66               	goto	u3000
  1170  0265                     u3001:
  1171  0265  2A32               	goto	l2400
  1172  0266                     u3000:
  1173  0266                     l2408:
  1174                           
  1175                           ;MAESTRO.c: 152:         sprintf(buff, "%i.%i%iV %3iC %3iT\r\n", valores[2],valores[1],v
      +                          alores[0],
  1176  0266  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1177  0267  00C0               	movwf	??_main
  1178  0268  0840               	movf	??_main,w
  1179  0269  00A9               	movwf	sprintf@f
  1180  026A  0851               	movf	_valores+2,w
  1181  026B  00C1               	movwf	??_main+1
  1182  026C  01C2               	clrf	??_main+2
  1183  026D  0841               	movf	??_main+1,w
  1184  026E  00AA               	movwf	?_sprintf+1
  1185  026F  0842               	movf	??_main+2,w
  1186  0270  00AB               	movwf	?_sprintf+2
  1187  0271  0850               	movf	_valores+1,w
  1188  0272  00C3               	movwf	??_main+3
  1189  0273  01C4               	clrf	??_main+4
  1190  0274  0843               	movf	??_main+3,w
  1191  0275  00AC               	movwf	?_sprintf+3
  1192  0276  0844               	movf	??_main+4,w
  1193  0277  00AD               	movwf	?_sprintf+4
  1194  0278  084F               	movf	_valores,w
  1195  0279  00C5               	movwf	??_main+5
  1196  027A  01C6               	clrf	??_main+6
  1197  027B  0845               	movf	??_main+5,w
  1198  027C  00AE               	movwf	?_sprintf+5
  1199  027D  0846               	movf	??_main+6,w
  1200  027E  00AF               	movwf	?_sprintf+6
  1201  027F  0855               	movf	_c2,w
  1202  0280  00C7               	movwf	??_main+7
  1203  0281  01C8               	clrf	??_main+8
  1204  0282  0847               	movf	??_main+7,w
  1205  0283  00B0               	movwf	?_sprintf+7
  1206  0284  0848               	movf	??_main+8,w
  1207  0285  00B1               	movwf	?_sprintf+8
  1208  0286  0854               	movf	_temp,w
  1209  0287  00C9               	movwf	??_main+9
  1210  0288  01CA               	clrf	??_main+10
  1211  0289  0849               	movf	??_main+9,w
  1212  028A  00B2               	movwf	?_sprintf+9
  1213  028B  084A               	movf	??_main+10,w
  1214  028C  00B3               	movwf	?_sprintf+10
  1215  028D  3057               	movlw	(low (_buff| 0))& (0+255)
  1216  028E  120A  118A  201F  120A  118A  	fcall	_sprintf
  1217  0293                     l2410:
  1218                           
  1219                           ;MAESTRO.c: 154:         LCDGoto(0,1);
  1220  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0295  01A0               	clrf	LCDGoto@ln
  1223  0296  0AA0               	incf	LCDGoto@ln,f
  1224  0297  3000               	movlw	0
  1225  0298  120A  118A  2480  120A  118A  	fcall	_LCDGoto
  1226  029D                     l2412:
  1227                           
  1228                           ;MAESTRO.c: 155:         LCDPutStr(buff);
  1229  029D  3057               	movlw	(low (_buff| 0))& (0+255)
  1230  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1231  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1232  02A0  00A0               	movwf	LCDPutStr@str
  1233  02A1  3000               	movlw	0
  1234  02A2  00A1               	movwf	LCDPutStr@str+1
  1235  02A3  120A  118A  24E1  120A  118A  	fcall	_LCDPutStr
  1236  02A8  29D9               	goto	l2368
  1237  02A9  120A  118A  280E   	ljmp	start
  1238  02AC                     __end_of_main:
  1239                           
  1240                           	psect	text1
  1241  001F                     __ptext1:	
  1242 ;; *************** function _sprintf *****************
  1243 ;; Defined at:
  1244 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  sp              1    wreg     PTR unsigned char 
  1247 ;;		 -> buff(20), 
  1248 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1249 ;;		 -> STR_2(21), 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  sp              1   28[BANK0 ] PTR unsigned char 
  1252 ;;		 -> buff(20), 
  1253 ;;  tmpval          4    0        struct .
  1254 ;;  width           2   29[BANK0 ] int 
  1255 ;;  val             2   26[BANK0 ] unsigned int 
  1256 ;;  cp              2    0        PTR const unsigned char 
  1257 ;;  len             2    0        unsigned int 
  1258 ;;  c               1   31[BANK0 ] unsigned char 
  1259 ;;  flag            1   25[BANK0 ] unsigned char 
  1260 ;;  prec            1   24[BANK0 ] char 
  1261 ;;  ap              1   23[BANK0 ] PTR void [1]
  1262 ;;		 -> ?_sprintf(2), 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    9[BANK0 ] int 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0      11       0       0       0
  1273 ;;      Locals:         0       9       0       0       0
  1274 ;;      Temps:          0       3       0       0       0
  1275 ;;      Totals:         0      23       0       0       0
  1276 ;;Total ram usage:       23 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    2
  1279 ;; This function calls:
  1280 ;;		___lwdiv
  1281 ;;		___lwmod
  1282 ;;		___wmul
  1283 ;;		_isdigit
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _sprintf
  1291  001F                     _sprintf:
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1295                           ;sprintf@sp stored from wreg
  1296  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0021  00BC               	movwf	sprintf@sp
  1299  0022                     l2272:
  1300  0022  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1301  0023  00B4               	movwf	??_sprintf
  1302  0024  0834               	movf	??_sprintf,w
  1303  0025  00B7               	movwf	sprintf@ap
  1304  0026  2990               	goto	l2354
  1305  0027                     l2274:
  1306  0027  3025               	movlw	37
  1307  0028  063F               	xorwf	sprintf@c,w
  1308  0029  1903               	btfsc	3,2
  1309  002A  282C               	goto	u2831
  1310  002B  282D               	goto	u2830
  1311  002C                     u2831:
  1312  002C  2839               	goto	l2280
  1313  002D                     u2830:
  1314  002D                     l2276:
  1315  002D  083F               	movf	sprintf@c,w
  1316  002E  00B4               	movwf	??_sprintf
  1317  002F  083C               	movf	sprintf@sp,w
  1318  0030  0084               	movwf	4
  1319  0031  0834               	movf	??_sprintf,w
  1320  0032  1383               	bcf	3,7	;select IRP bank0
  1321  0033  0080               	movwf	0
  1322  0034                     l2278:
  1323  0034  3001               	movlw	1
  1324  0035  00B4               	movwf	??_sprintf
  1325  0036  0834               	movf	??_sprintf,w
  1326  0037  07BC               	addwf	sprintf@sp,f
  1327  0038  2990               	goto	l2354
  1328  0039                     l2280:
  1329  0039  01BD               	clrf	sprintf@width
  1330  003A  01BE               	clrf	sprintf@width+1
  1331  003B  01B9               	clrf	sprintf@flag
  1332  003C                     l2282:
  1333  003C  0829               	movf	sprintf@f,w
  1334  003D  0084               	movwf	4
  1335  003E  120A  118A  240C  120A  118A  	fcall	stringdir
  1336  0043  120A  118A  2594  120A  118A  	fcall	_isdigit
  1337  0048  1C03               	btfss	3,0
  1338  0049  284B               	goto	u2841
  1339  004A  284C               	goto	u2840
  1340  004B                     u2841:
  1341  004B  288C               	goto	l2296
  1342  004C                     u2840:
  1343  004C                     l2284:
  1344  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1345  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1346  004E  01BD               	clrf	sprintf@width
  1347  004F  01BE               	clrf	sprintf@width+1
  1348  0050                     l2286:
  1349  0050  300A               	movlw	10
  1350  0051  00F4               	movwf	___wmul@multiplier
  1351  0052  3000               	movlw	0
  1352  0053  00F5               	movwf	___wmul@multiplier+1
  1353  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0056  083E               	movf	sprintf@width+1,w
  1356  0057  00F7               	movwf	___wmul@multiplicand+1
  1357  0058  083D               	movf	sprintf@width,w
  1358  0059  00F6               	movwf	___wmul@multiplicand
  1359  005A  120A  118A  250E  120A  118A  	fcall	___wmul
  1360  005F  0875               	movf	?___wmul+1,w
  1361  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0062  00BE               	movwf	sprintf@width+1
  1364  0063  0874               	movf	?___wmul,w
  1365  0064  00BD               	movwf	sprintf@width
  1366  0065                     l2288:
  1367  0065  0829               	movf	sprintf@f,w
  1368  0066  0084               	movwf	4
  1369  0067  120A  118A  240C  120A  118A  	fcall	stringdir
  1370  006C  3ED0               	addlw	208
  1371  006D  00B4               	movwf	??_sprintf
  1372  006E  30FF               	movlw	255
  1373  006F  1803               	skipnc
  1374  0070  3000               	movlw	0
  1375  0071  00B5               	movwf	??_sprintf+1
  1376  0072  0834               	movf	??_sprintf,w
  1377  0073  07BD               	addwf	sprintf@width,f
  1378  0074  1803               	skipnc
  1379  0075  0ABE               	incf	sprintf@width+1,f
  1380  0076  0835               	movf	??_sprintf+1,w
  1381  0077  07BE               	addwf	sprintf@width+1,f
  1382  0078                     l2290:
  1383  0078  3001               	movlw	1
  1384  0079  00B4               	movwf	??_sprintf
  1385  007A  0834               	movf	??_sprintf,w
  1386  007B  07A9               	addwf	sprintf@f,f
  1387  007C                     l2292:
  1388  007C  0829               	movf	sprintf@f,w
  1389  007D  0084               	movwf	4
  1390  007E  120A  118A  240C  120A  118A  	fcall	stringdir
  1391  0083  120A  118A  2594  120A  118A  	fcall	_isdigit
  1392  0088  1803               	btfsc	3,0
  1393  0089  288B               	goto	u2851
  1394  008A  288C               	goto	u2850
  1395  008B                     u2851:
  1396  008B  2850               	goto	l2286
  1397  008C                     u2850:
  1398  008C                     l2296:
  1399  008C  3001               	movlw	1
  1400  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1401  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1402  008F  07A9               	addwf	sprintf@f,f
  1403  0090  30FF               	movlw	-1
  1404  0091  0729               	addwf	sprintf@f,w
  1405  0092  0084               	movwf	4
  1406  0093  120A  118A  240C  120A  118A  	fcall	stringdir
  1407  0098  00BF               	movwf	sprintf@c
  1408  0099  00B4               	movwf	??_sprintf
  1409  009A  01B5               	clrf	??_sprintf+1
  1410                           
  1411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 1, Range of values is 0 to 0
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte            4     3 (average)
  1417                           ; direct_byte           11     8 (fixed)
  1418                           ; jumptable            260     6 (fixed)
  1419                           ;	Chosen strategy is simple_byte
  1420  009B  0835               	movf	??_sprintf+1,w
  1421  009C  3A00               	xorlw	0	; case 0
  1422  009D  1903               	skipnz
  1423  009E  28A0               	goto	l2434
  1424  009F  2990               	goto	l2354
  1425  00A0                     l2434:
  1426                           
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 3, Range of values is 0 to 105
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           10     6 (average)
  1432                           ; jumptable            260     6 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434  00A0  0834               	movf	??_sprintf,w
  1435  00A1  3A00               	xorlw	0	; case 0
  1436  00A2  1903               	skipnz
  1437  00A3  29A2               	goto	l2356
  1438  00A4  3A64               	xorlw	100	; case 100
  1439  00A5  1903               	skipnz
  1440  00A6  28AB               	goto	l2298
  1441  00A7  3A0D               	xorlw	13	; case 105
  1442  00A8  1903               	skipnz
  1443  00A9  28AB               	goto	l2298
  1444  00AA  2990               	goto	l2354
  1445  00AB                     l2298:
  1446  00AB  0837               	movf	sprintf@ap,w
  1447  00AC  0084               	movwf	4
  1448  00AD  1383               	bcf	3,7	;select IRP bank0
  1449  00AE  0800               	movf	0,w
  1450  00AF  00BA               	movwf	sprintf@val
  1451  00B0  0A84               	incf	4,f
  1452  00B1  0800               	movf	0,w
  1453  00B2  00BB               	movwf	sprintf@val+1
  1454  00B3                     l2300:
  1455  00B3  3002               	movlw	2
  1456  00B4  00B4               	movwf	??_sprintf
  1457  00B5  0834               	movf	??_sprintf,w
  1458  00B6  07B7               	addwf	sprintf@ap,f
  1459  00B7                     l2302:
  1460  00B7  1FBB               	btfss	sprintf@val+1,7
  1461  00B8  28BA               	goto	u2861
  1462  00B9  28BB               	goto	u2860
  1463  00BA                     u2861:
  1464  00BA  28C4               	goto	l2308
  1465  00BB                     u2860:
  1466  00BB                     l2304:
  1467  00BB  3003               	movlw	3
  1468  00BC  00B4               	movwf	??_sprintf
  1469  00BD  0834               	movf	??_sprintf,w
  1470  00BE  04B9               	iorwf	sprintf@flag,f
  1471  00BF                     l2306:
  1472  00BF  09BA               	comf	sprintf@val,f
  1473  00C0  09BB               	comf	sprintf@val+1,f
  1474  00C1  0ABA               	incf	sprintf@val,f
  1475  00C2  1903               	skipnz
  1476  00C3  0ABB               	incf	sprintf@val+1,f
  1477  00C4                     l2308:
  1478  00C4  01BF               	clrf	sprintf@c
  1479  00C5  0ABF               	incf	sprintf@c,f
  1480  00C6                     l2314:
  1481  00C6  083F               	movf	sprintf@c,w
  1482  00C7  00B4               	movwf	??_sprintf
  1483  00C8  0734               	addwf	??_sprintf,w
  1484  00C9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1485  00CA  0084               	movwf	4
  1486  00CB  120A  118A  240C  120A  118A  	fcall	stringdir
  1487  00D0  00B5               	movwf	??_sprintf+1
  1488  00D1  120A  118A  240C  120A  118A  	fcall	stringdir
  1489  00D6  00B6               	movwf	??_sprintf+2
  1490  00D7  0836               	movf	??_sprintf+2,w
  1491  00D8  023B               	subwf	sprintf@val+1,w
  1492  00D9  1D03               	skipz
  1493  00DA  28DD               	goto	u2875
  1494  00DB  0835               	movf	??_sprintf+1,w
  1495  00DC  023A               	subwf	sprintf@val,w
  1496  00DD                     u2875:
  1497  00DD  1803               	skipnc
  1498  00DE  28E0               	goto	u2871
  1499  00DF  28E1               	goto	u2870
  1500  00E0                     u2871:
  1501  00E0  28E2               	goto	l2318
  1502  00E1                     u2870:
  1503  00E1  28EC               	goto	l2320
  1504  00E2                     l2318:
  1505  00E2  3001               	movlw	1
  1506  00E3  00B4               	movwf	??_sprintf
  1507  00E4  0834               	movf	??_sprintf,w
  1508  00E5  07BF               	addwf	sprintf@c,f
  1509  00E6  3005               	movlw	5
  1510  00E7  063F               	xorwf	sprintf@c,w
  1511  00E8  1D03               	btfss	3,2
  1512  00E9  28EB               	goto	u2881
  1513  00EA  28EC               	goto	u2880
  1514  00EB                     u2881:
  1515  00EB  28C6               	goto	l2314
  1516  00EC                     u2880:
  1517  00EC                     l2320:
  1518  00EC  083D               	movf	sprintf@width,w
  1519  00ED  043E               	iorwf	sprintf@width+1,w
  1520  00EE  1903               	btfsc	3,2
  1521  00EF  28F1               	goto	u2891
  1522  00F0  28F2               	goto	u2890
  1523  00F1                     u2891:
  1524  00F1  28FE               	goto	l262
  1525  00F2                     u2890:
  1526  00F2                     l2322:
  1527  00F2  0839               	movf	sprintf@flag,w
  1528  00F3  3903               	andlw	3
  1529  00F4  1903               	btfsc	3,2
  1530  00F5  28F7               	goto	u2901
  1531  00F6  28F8               	goto	u2900
  1532  00F7                     u2901:
  1533  00F7  28FE               	goto	l262
  1534  00F8                     u2900:
  1535  00F8                     l2324:
  1536  00F8  30FF               	movlw	255
  1537  00F9  07BD               	addwf	sprintf@width,f
  1538  00FA  1803               	skipnc
  1539  00FB  0ABE               	incf	sprintf@width+1,f
  1540  00FC  30FF               	movlw	255
  1541  00FD  07BE               	addwf	sprintf@width+1,f
  1542  00FE                     l262:
  1543  00FE  083E               	movf	sprintf@width+1,w
  1544  00FF  3A80               	xorlw	128
  1545  0100  3C80               	sublw	128
  1546  0101  1D03               	skipz
  1547  0102  2905               	goto	u2915
  1548  0103  083D               	movf	sprintf@width,w
  1549  0104  023F               	subwf	sprintf@c,w
  1550  0105                     u2915:
  1551  0105  1803               	skipnc
  1552  0106  2908               	goto	u2911
  1553  0107  2909               	goto	u2910
  1554  0108                     u2911:
  1555  0108  2915               	goto	l2328
  1556  0109                     u2910:
  1557  0109                     l2326:
  1558  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1559  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1560  010B  083F               	movf	sprintf@c,w
  1561  010C  00B4               	movwf	??_sprintf
  1562  010D  01B5               	clrf	??_sprintf+1
  1563  010E  0834               	movf	??_sprintf,w
  1564  010F  02BD               	subwf	sprintf@width,f
  1565  0110  0835               	movf	??_sprintf+1,w
  1566  0111  1C03               	skipc
  1567  0112  03BE               	decf	sprintf@width+1,f
  1568  0113  02BE               	subwf	sprintf@width+1,f
  1569  0114  2919               	goto	l2330
  1570  0115                     l2328:
  1571  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0117  01BD               	clrf	sprintf@width
  1574  0118  01BE               	clrf	sprintf@width+1
  1575  0119                     l2330:
  1576  0119  083D               	movf	sprintf@width,w
  1577  011A  043E               	iorwf	sprintf@width+1,w
  1578  011B  1903               	btfsc	3,2
  1579  011C  291E               	goto	u2921
  1580  011D  291F               	goto	u2920
  1581  011E                     u2921:
  1582  011E  2936               	goto	l2338
  1583  011F                     u2920:
  1584  011F                     l2332:
  1585  011F  3020               	movlw	32
  1586  0120  00B4               	movwf	??_sprintf
  1587  0121  083C               	movf	sprintf@sp,w
  1588  0122  0084               	movwf	4
  1589  0123  0834               	movf	??_sprintf,w
  1590  0124  1383               	bcf	3,7	;select IRP bank0
  1591  0125  0080               	movwf	0
  1592  0126                     l2334:
  1593  0126  3001               	movlw	1
  1594  0127  00B4               	movwf	??_sprintf
  1595  0128  0834               	movf	??_sprintf,w
  1596  0129  07BC               	addwf	sprintf@sp,f
  1597  012A                     l2336:
  1598  012A  30FF               	movlw	255
  1599  012B  07BD               	addwf	sprintf@width,f
  1600  012C  1803               	skipnc
  1601  012D  0ABE               	incf	sprintf@width+1,f
  1602  012E  30FF               	movlw	255
  1603  012F  07BE               	addwf	sprintf@width+1,f
  1604  0130  083D               	movf	sprintf@width,w
  1605  0131  043E               	iorwf	sprintf@width+1,w
  1606  0132  1D03               	btfss	3,2
  1607  0133  2935               	goto	u2931
  1608  0134  2936               	goto	u2930
  1609  0135                     u2931:
  1610  0135  291F               	goto	l2332
  1611  0136                     u2930:
  1612  0136                     l2338:
  1613  0136  0839               	movf	sprintf@flag,w
  1614  0137  3903               	andlw	3
  1615  0138  1903               	btfsc	3,2
  1616  0139  293B               	goto	u2941
  1617  013A  293C               	goto	u2940
  1618  013B                     u2941:
  1619  013B  2947               	goto	l2344
  1620  013C                     u2940:
  1621  013C                     l2340:
  1622  013C  302D               	movlw	45
  1623  013D  00B4               	movwf	??_sprintf
  1624  013E  083C               	movf	sprintf@sp,w
  1625  013F  0084               	movwf	4
  1626  0140  0834               	movf	??_sprintf,w
  1627  0141  1383               	bcf	3,7	;select IRP bank0
  1628  0142  0080               	movwf	0
  1629  0143                     l2342:
  1630  0143  3001               	movlw	1
  1631  0144  00B4               	movwf	??_sprintf
  1632  0145  0834               	movf	??_sprintf,w
  1633  0146  07BC               	addwf	sprintf@sp,f
  1634  0147                     l2344:
  1635  0147  083F               	movf	sprintf@c,w
  1636  0148  00B4               	movwf	??_sprintf
  1637  0149  0834               	movf	??_sprintf,w
  1638  014A  00B8               	movwf	sprintf@prec
  1639  014B  2987               	goto	l2352
  1640  014C                     l2346:
  1641  014C  300A               	movlw	10
  1642  014D  00A3               	movwf	___lwmod@divisor
  1643  014E  3000               	movlw	0
  1644  014F  00A4               	movwf	___lwmod@divisor+1
  1645  0150  0838               	movf	sprintf@prec,w
  1646  0151  00B4               	movwf	??_sprintf
  1647  0152  0734               	addwf	??_sprintf,w
  1648  0153  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1649  0154  0084               	movwf	4
  1650  0155  120A  118A  240C  120A  118A  	fcall	stringdir
  1651  015A  00F4               	movwf	___lwdiv@divisor
  1652  015B  120A  118A  240C  120A  118A  	fcall	stringdir
  1653  0160  00F5               	movwf	___lwdiv@divisor+1
  1654  0161  083B               	movf	sprintf@val+1,w
  1655  0162  00F7               	movwf	___lwdiv@dividend+1
  1656  0163  083A               	movf	sprintf@val,w
  1657  0164  00F6               	movwf	___lwdiv@dividend
  1658  0165  120A  118A  23BC  120A  118A  	fcall	___lwdiv
  1659  016A  0875               	movf	?___lwdiv+1,w
  1660  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1661  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1662  016D  00A6               	movwf	___lwmod@dividend+1
  1663  016E  0874               	movf	?___lwdiv,w
  1664  016F  00A5               	movwf	___lwmod@dividend
  1665  0170  120A  118A  2444  120A  118A  	fcall	___lwmod
  1666  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0177  0823               	movf	?___lwmod,w
  1669  0178  3E30               	addlw	48
  1670  0179  00B5               	movwf	??_sprintf+1
  1671  017A  0835               	movf	??_sprintf+1,w
  1672  017B  00BF               	movwf	sprintf@c
  1673  017C                     l2348:
  1674  017C  083F               	movf	sprintf@c,w
  1675  017D  00B4               	movwf	??_sprintf
  1676  017E  083C               	movf	sprintf@sp,w
  1677  017F  0084               	movwf	4
  1678  0180  0834               	movf	??_sprintf,w
  1679  0181  1383               	bcf	3,7	;select IRP bank0
  1680  0182  0080               	movwf	0
  1681  0183                     l2350:
  1682  0183  3001               	movlw	1
  1683  0184  00B4               	movwf	??_sprintf
  1684  0185  0834               	movf	??_sprintf,w
  1685  0186  07BC               	addwf	sprintf@sp,f
  1686  0187                     l2352:
  1687  0187  30FF               	movlw	255
  1688  0188  00B4               	movwf	??_sprintf
  1689  0189  0834               	movf	??_sprintf,w
  1690  018A  07B8               	addwf	sprintf@prec,f
  1691  018B  0A38               	incf	sprintf@prec,w
  1692  018C  1D03               	btfss	3,2
  1693  018D  298F               	goto	u2951
  1694  018E  2990               	goto	u2950
  1695  018F                     u2951:
  1696  018F  294C               	goto	l2346
  1697  0190                     u2950:
  1698  0190                     l2354:
  1699  0190  3001               	movlw	1
  1700  0191  07A9               	addwf	sprintf@f,f
  1701  0192  30FF               	movlw	-1
  1702  0193  0729               	addwf	sprintf@f,w
  1703  0194  0084               	movwf	4
  1704  0195  120A  118A  240C  120A  118A  	fcall	stringdir
  1705  019A  00B4               	movwf	??_sprintf
  1706  019B  0834               	movf	??_sprintf,w
  1707  019C  00BF               	movwf	sprintf@c
  1708  019D  083F               	movf	sprintf@c,w
  1709  019E  1D03               	btfss	3,2
  1710  019F  29A1               	goto	u2961
  1711  01A0  29A2               	goto	u2960
  1712  01A1                     u2961:
  1713  01A1  2827               	goto	l2274
  1714  01A2                     u2960:
  1715  01A2                     l2356:
  1716  01A2  083C               	movf	sprintf@sp,w
  1717  01A3  0084               	movwf	4
  1718  01A4  1383               	bcf	3,7	;select IRP bank0
  1719  01A5  0180               	clrf	0
  1720  01A6                     l273:
  1721  01A6  0008               	return
  1722  01A7                     __end_of_sprintf:
  1723                           
  1724                           	psect	text2
  1725  0594                     __ptext2:	
  1726 ;; *************** function _isdigit *****************
  1727 ;; Defined at:
  1728 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  c               1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  c               1    5[COMMON] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         2       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         2       0       0       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_sprintf
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _isdigit
  1758  0594                     _isdigit:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1762                           ;isdigit@c stored from wreg
  1763  0594  00F5               	movwf	isdigit@c
  1764  0595                     l1524:
  1765  0595  01F4               	clrf	_isdigit$983
  1766  0596                     l1526:
  1767  0596  303A               	movlw	58
  1768  0597  0275               	subwf	isdigit@c,w
  1769  0598  1803               	skipnc
  1770  0599  2D9B               	goto	u1361
  1771  059A  2D9C               	goto	u1360
  1772  059B                     u1361:
  1773  059B  2DA4               	goto	l1532
  1774  059C                     u1360:
  1775  059C                     l1528:
  1776  059C  3030               	movlw	48
  1777  059D  0275               	subwf	isdigit@c,w
  1778  059E  1C03               	skipc
  1779  059F  2DA1               	goto	u1371
  1780  05A0  2DA2               	goto	u1370
  1781  05A1                     u1371:
  1782  05A1  2DA4               	goto	l1532
  1783  05A2                     u1370:
  1784  05A2                     l1530:
  1785  05A2  01F4               	clrf	_isdigit$983
  1786  05A3  0AF4               	incf	_isdigit$983,f
  1787  05A4                     l1532:
  1788  05A4  0C74               	rrf	_isdigit$983,w
  1789  05A5                     l730:
  1790  05A5  0008               	return
  1791  05A6                     __end_of_isdigit:
  1792                           
  1793                           	psect	text3
  1794  050E                     __ptext3:	
  1795 ;; *************** function ___wmul *****************
  1796 ;; Defined at:
  1797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  multiplier      2    4[COMMON] unsigned int 
  1800 ;;  multiplicand    2    6[COMMON] unsigned int 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  product         2    0[BANK0 ] unsigned int 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2    4[COMMON] unsigned int 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         4       0       0       0       0
  1813 ;;      Locals:         0       2       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         4       2       0       0       0
  1816 ;;Total ram usage:        6 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_sprintf
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___wmul
  1828  050E                     ___wmul:
  1829  050E                     l2214:	
  1830                           ;incstack = 0
  1831                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1832                           
  1833  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1834  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0510  01A0               	clrf	___wmul@product
  1836  0511  01A1               	clrf	___wmul@product+1
  1837  0512                     l2216:
  1838  0512  1C74               	btfss	___wmul@multiplier,0
  1839  0513  2D15               	goto	u2691
  1840  0514  2D16               	goto	u2690
  1841  0515                     u2691:
  1842  0515  2D1E               	goto	l277
  1843  0516                     u2690:
  1844  0516                     l2218:
  1845  0516  0876               	movf	___wmul@multiplicand,w
  1846  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0519  07A0               	addwf	___wmul@product,f
  1849  051A  1803               	skipnc
  1850  051B  0AA1               	incf	___wmul@product+1,f
  1851  051C  0877               	movf	___wmul@multiplicand+1,w
  1852  051D  07A1               	addwf	___wmul@product+1,f
  1853  051E                     l277:
  1854  051E  3001               	movlw	1
  1855  051F                     u2705:
  1856  051F  1003               	clrc
  1857  0520  0DF6               	rlf	___wmul@multiplicand,f
  1858  0521  0DF7               	rlf	___wmul@multiplicand+1,f
  1859  0522  3EFF               	addlw	-1
  1860  0523  1D03               	skipz
  1861  0524  2D1F               	goto	u2705
  1862  0525                     l2220:
  1863  0525  3001               	movlw	1
  1864  0526                     u2715:
  1865  0526  1003               	clrc
  1866  0527  0CF5               	rrf	___wmul@multiplier+1,f
  1867  0528  0CF4               	rrf	___wmul@multiplier,f
  1868  0529  3EFF               	addlw	-1
  1869  052A  1D03               	skipz
  1870  052B  2D26               	goto	u2715
  1871  052C                     l2222:
  1872  052C  0874               	movf	___wmul@multiplier,w
  1873  052D  0475               	iorwf	___wmul@multiplier+1,w
  1874  052E  1D03               	btfss	3,2
  1875  052F  2D31               	goto	u2721
  1876  0530  2D32               	goto	u2720
  1877  0531                     u2721:
  1878  0531  2D12               	goto	l2216
  1879  0532                     u2720:
  1880  0532                     l2224:
  1881  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0534  0821               	movf	___wmul@product+1,w
  1884  0535  00F5               	movwf	?___wmul+1
  1885  0536  0820               	movf	___wmul@product,w
  1886  0537  00F4               	movwf	?___wmul
  1887  0538                     l279:
  1888  0538  0008               	return
  1889  0539                     __end_of___wmul:
  1890                           
  1891                           	psect	text4
  1892  0444                     __ptext4:	
  1893 ;; *************** function ___lwmod *****************
  1894 ;; Defined at:
  1895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  divisor         2    3[BANK0 ] unsigned int 
  1898 ;;  dividend        2    5[BANK0 ] unsigned int 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  counter         1    8[BANK0 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  2    3[BANK0 ] unsigned int 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       4       0       0       0
  1911 ;;      Locals:         0       1       0       0       0
  1912 ;;      Temps:          0       1       0       0       0
  1913 ;;      Totals:         0       6       0       0       0
  1914 ;;Total ram usage:        6 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_sprintf
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function ___lwmod
  1927  0444                     ___lwmod:
  1928  0444                     l2228:	
  1929                           ;incstack = 0
  1930                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1931                           
  1932  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0446  0823               	movf	___lwmod@divisor,w
  1935  0447  0424               	iorwf	___lwmod@divisor+1,w
  1936  0448  1903               	btfsc	3,2
  1937  0449  2C4B               	goto	u2731
  1938  044A  2C4C               	goto	u2730
  1939  044B                     u2731:
  1940  044B  2C7B               	goto	l2246
  1941  044C                     u2730:
  1942  044C                     l2230:
  1943  044C  01A8               	clrf	___lwmod@counter
  1944  044D  0AA8               	incf	___lwmod@counter,f
  1945  044E  2C5A               	goto	l2236
  1946  044F                     l2232:
  1947  044F  3001               	movlw	1
  1948  0450                     u2745:
  1949  0450  1003               	clrc
  1950  0451  0DA3               	rlf	___lwmod@divisor,f
  1951  0452  0DA4               	rlf	___lwmod@divisor+1,f
  1952  0453  3EFF               	addlw	-1
  1953  0454  1D03               	skipz
  1954  0455  2C50               	goto	u2745
  1955  0456                     l2234:
  1956  0456  3001               	movlw	1
  1957  0457  00A7               	movwf	??___lwmod
  1958  0458  0827               	movf	??___lwmod,w
  1959  0459  07A8               	addwf	___lwmod@counter,f
  1960  045A                     l2236:
  1961  045A  1FA4               	btfss	___lwmod@divisor+1,7
  1962  045B  2C5D               	goto	u2751
  1963  045C  2C5E               	goto	u2750
  1964  045D                     u2751:
  1965  045D  2C4F               	goto	l2232
  1966  045E                     u2750:
  1967  045E                     l2238:
  1968  045E  0824               	movf	___lwmod@divisor+1,w
  1969  045F  0226               	subwf	___lwmod@dividend+1,w
  1970  0460  1D03               	skipz
  1971  0461  2C64               	goto	u2765
  1972  0462  0823               	movf	___lwmod@divisor,w
  1973  0463  0225               	subwf	___lwmod@dividend,w
  1974  0464                     u2765:
  1975  0464  1C03               	skipc
  1976  0465  2C67               	goto	u2761
  1977  0466  2C68               	goto	u2760
  1978  0467                     u2761:
  1979  0467  2C6E               	goto	l2242
  1980  0468                     u2760:
  1981  0468                     l2240:
  1982  0468  0823               	movf	___lwmod@divisor,w
  1983  0469  02A5               	subwf	___lwmod@dividend,f
  1984  046A  0824               	movf	___lwmod@divisor+1,w
  1985  046B  1C03               	skipc
  1986  046C  03A6               	decf	___lwmod@dividend+1,f
  1987  046D  02A6               	subwf	___lwmod@dividend+1,f
  1988  046E                     l2242:
  1989  046E  3001               	movlw	1
  1990  046F                     u2775:
  1991  046F  1003               	clrc
  1992  0470  0CA4               	rrf	___lwmod@divisor+1,f
  1993  0471  0CA3               	rrf	___lwmod@divisor,f
  1994  0472  3EFF               	addlw	-1
  1995  0473  1D03               	skipz
  1996  0474  2C6F               	goto	u2775
  1997  0475                     l2244:
  1998  0475  3001               	movlw	1
  1999  0476  02A8               	subwf	___lwmod@counter,f
  2000  0477  1D03               	btfss	3,2
  2001  0478  2C7A               	goto	u2781
  2002  0479  2C7B               	goto	u2780
  2003  047A                     u2781:
  2004  047A  2C5E               	goto	l2238
  2005  047B                     u2780:
  2006  047B                     l2246:
  2007  047B  0826               	movf	___lwmod@dividend+1,w
  2008  047C  00A4               	movwf	?___lwmod+1
  2009  047D  0825               	movf	___lwmod@dividend,w
  2010  047E  00A3               	movwf	?___lwmod
  2011  047F                     l559:
  2012  047F  0008               	return
  2013  0480                     __end_of___lwmod:
  2014                           
  2015                           	psect	text5
  2016  03BC                     __ptext5:	
  2017 ;; *************** function ___lwdiv *****************
  2018 ;; Defined at:
  2019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  divisor         2    4[COMMON] unsigned int 
  2022 ;;  dividend        2    6[COMMON] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  quotient        2    0[BANK0 ] unsigned int 
  2025 ;;  counter         1    2[BANK0 ] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    4[COMMON] unsigned int 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         4       0       0       0       0
  2036 ;;      Locals:         0       3       0       0       0
  2037 ;;      Temps:          1       0       0       0       0
  2038 ;;      Totals:         5       3       0       0       0
  2039 ;;Total ram usage:        8 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;;		_sprintf
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function ___lwdiv
  2052  03BC                     ___lwdiv:
  2053  03BC                     l1590:	
  2054                           ;incstack = 0
  2055                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2056                           
  2057  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2058  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2059  03BE  01A0               	clrf	___lwdiv@quotient
  2060  03BF  01A1               	clrf	___lwdiv@quotient+1
  2061  03C0                     l1592:
  2062  03C0  0874               	movf	___lwdiv@divisor,w
  2063  03C1  0475               	iorwf	___lwdiv@divisor+1,w
  2064  03C2  1903               	btfsc	3,2
  2065  03C3  2BC5               	goto	u1521
  2066  03C4  2BC6               	goto	u1520
  2067  03C5                     u1521:
  2068  03C5  2BFD               	goto	l1612
  2069  03C6                     u1520:
  2070  03C6                     l1594:
  2071  03C6  01A2               	clrf	___lwdiv@counter
  2072  03C7  0AA2               	incf	___lwdiv@counter,f
  2073  03C8  2BD4               	goto	l1600
  2074  03C9                     l1596:
  2075  03C9  3001               	movlw	1
  2076  03CA                     u1535:
  2077  03CA  1003               	clrc
  2078  03CB  0DF4               	rlf	___lwdiv@divisor,f
  2079  03CC  0DF5               	rlf	___lwdiv@divisor+1,f
  2080  03CD  3EFF               	addlw	-1
  2081  03CE  1D03               	skipz
  2082  03CF  2BCA               	goto	u1535
  2083  03D0                     l1598:
  2084  03D0  3001               	movlw	1
  2085  03D1  00F8               	movwf	??___lwdiv
  2086  03D2  0878               	movf	??___lwdiv,w
  2087  03D3  07A2               	addwf	___lwdiv@counter,f
  2088  03D4                     l1600:
  2089  03D4  1FF5               	btfss	___lwdiv@divisor+1,7
  2090  03D5  2BD7               	goto	u1541
  2091  03D6  2BD8               	goto	u1540
  2092  03D7                     u1541:
  2093  03D7  2BC9               	goto	l1596
  2094  03D8                     u1540:
  2095  03D8                     l1602:
  2096  03D8  3001               	movlw	1
  2097  03D9                     u1555:
  2098  03D9  1003               	clrc
  2099  03DA  0DA0               	rlf	___lwdiv@quotient,f
  2100  03DB  0DA1               	rlf	___lwdiv@quotient+1,f
  2101  03DC  3EFF               	addlw	-1
  2102  03DD  1D03               	skipz
  2103  03DE  2BD9               	goto	u1555
  2104  03DF  0875               	movf	___lwdiv@divisor+1,w
  2105  03E0  0277               	subwf	___lwdiv@dividend+1,w
  2106  03E1  1D03               	skipz
  2107  03E2  2BE5               	goto	u1565
  2108  03E3  0874               	movf	___lwdiv@divisor,w
  2109  03E4  0276               	subwf	___lwdiv@dividend,w
  2110  03E5                     u1565:
  2111  03E5  1C03               	skipc
  2112  03E6  2BE8               	goto	u1561
  2113  03E7  2BE9               	goto	u1560
  2114  03E8                     u1561:
  2115  03E8  2BF0               	goto	l1608
  2116  03E9                     u1560:
  2117  03E9                     l1604:
  2118  03E9  0874               	movf	___lwdiv@divisor,w
  2119  03EA  02F6               	subwf	___lwdiv@dividend,f
  2120  03EB  0875               	movf	___lwdiv@divisor+1,w
  2121  03EC  1C03               	skipc
  2122  03ED  03F7               	decf	___lwdiv@dividend+1,f
  2123  03EE  02F7               	subwf	___lwdiv@dividend+1,f
  2124  03EF                     l1606:
  2125  03EF  1420               	bsf	___lwdiv@quotient,0
  2126  03F0                     l1608:
  2127  03F0  3001               	movlw	1
  2128  03F1                     u1575:
  2129  03F1  1003               	clrc
  2130  03F2  0CF5               	rrf	___lwdiv@divisor+1,f
  2131  03F3  0CF4               	rrf	___lwdiv@divisor,f
  2132  03F4  3EFF               	addlw	-1
  2133  03F5  1D03               	skipz
  2134  03F6  2BF1               	goto	u1575
  2135  03F7                     l1610:
  2136  03F7  3001               	movlw	1
  2137  03F8  02A2               	subwf	___lwdiv@counter,f
  2138  03F9  1D03               	btfss	3,2
  2139  03FA  2BFC               	goto	u1581
  2140  03FB  2BFD               	goto	u1580
  2141  03FC                     u1581:
  2142  03FC  2BD8               	goto	l1602
  2143  03FD                     u1580:
  2144  03FD                     l1612:
  2145  03FD  0821               	movf	___lwdiv@quotient+1,w
  2146  03FE  00F5               	movwf	?___lwdiv+1
  2147  03FF  0820               	movf	___lwdiv@quotient,w
  2148  0400  00F4               	movwf	?___lwdiv
  2149  0401                     l549:
  2150  0401  0008               	return
  2151  0402                     __end_of___lwdiv:
  2152                           
  2153                           	psect	text6
  2154  0349                     __ptext6:	
  2155 ;; *************** function _USART_Initialize *****************
  2156 ;; Defined at:
  2157 ;;		line 13 in file "usart.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  baudrate        4   14[BANK0 ] const long 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  x               4    5[COMMON] long 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       4       0       0       0
  2172 ;;      Locals:         4       0       0       0       0
  2173 ;;      Temps:          0      12       0       0       0
  2174 ;;      Totals:         4      16       0       0       0
  2175 ;;Total ram usage:       20 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    2
  2178 ;; This function calls:
  2179 ;;		___aldiv
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _USART_Initialize
  2187  0349                     _USART_Initialize:
  2188  0349                     l1678:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2191                           
  2192                           
  2193                           ;usart.c: 14:     long int x;;usart.c: 17:     TXSTAbits.TX9 = 0;
  2194  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2195  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2196  034B  1318               	bcf	24,6	;volatile
  2197                           
  2198                           ;usart.c: 19:     TXSTAbits.TXEN = 1;
  2199  034C  1698               	bsf	24,5	;volatile
  2200                           
  2201                           ;usart.c: 21:     TXSTAbits.SYNC = 0;
  2202  034D  1218               	bcf	24,4	;volatile
  2203                           
  2204                           ;usart.c: 23:     TXSTAbits.BRGH = 0;
  2205  034E  1118               	bcf	24,2	;volatile
  2206                           
  2207                           ;usart.c: 24:     BAUDCTLbits.BRG16 = 0;
  2208  034F  1683               	bsf	3,5	;RP0=1, select bank3
  2209  0350  1703               	bsf	3,6	;RP1=1, select bank3
  2210  0351  1187               	bcf	7,3	;volatile
  2211                           
  2212                           ;usart.c: 27:     RCSTAbits.SPEN = 1;
  2213  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0354  1798               	bsf	24,7	;volatile
  2216                           
  2217                           ;usart.c: 29:     RCSTAbits.CREN = 1;
  2218  0355  1618               	bsf	24,4	;volatile
  2219  0356                     l1680:
  2220                           
  2221                           ;usart.c: 31:     x = (8000000 - baudrate*64)/(baudrate*64);
  2222  0356  082E               	movf	USART_Initialize@baudrate,w
  2223  0357  00B2               	movwf	??_USART_Initialize
  2224  0358  082F               	movf	USART_Initialize@baudrate+1,w
  2225  0359  00B3               	movwf	??_USART_Initialize+1
  2226  035A  0830               	movf	USART_Initialize@baudrate+2,w
  2227  035B  00B4               	movwf	??_USART_Initialize+2
  2228  035C  0831               	movf	USART_Initialize@baudrate+3,w
  2229  035D  00B5               	movwf	??_USART_Initialize+3
  2230  035E  3006               	movlw	6
  2231  035F                     u1655:
  2232  035F  1003               	clrc
  2233  0360  0DB2               	rlf	??_USART_Initialize,f
  2234  0361  0DB3               	rlf	??_USART_Initialize+1,f
  2235  0362  0DB4               	rlf	??_USART_Initialize+2,f
  2236  0363  0DB5               	rlf	??_USART_Initialize+3,f
  2237  0364                     u1650:
  2238  0364  3EFF               	addlw	-1
  2239  0365  1D03               	skipz
  2240  0366  2B5F               	goto	u1655
  2241  0367  0835               	movf	??_USART_Initialize+3,w
  2242  0368  00A3               	movwf	___aldiv@divisor+3
  2243  0369  0834               	movf	??_USART_Initialize+2,w
  2244  036A  00A2               	movwf	___aldiv@divisor+2
  2245  036B  0833               	movf	??_USART_Initialize+1,w
  2246  036C  00A1               	movwf	___aldiv@divisor+1
  2247  036D  0832               	movf	??_USART_Initialize,w
  2248  036E  00A0               	movwf	___aldiv@divisor
  2249  036F  082E               	movf	USART_Initialize@baudrate,w
  2250  0370  00B6               	movwf	??_USART_Initialize+4
  2251  0371  082F               	movf	USART_Initialize@baudrate+1,w
  2252  0372  00B7               	movwf	??_USART_Initialize+5
  2253  0373  0830               	movf	USART_Initialize@baudrate+2,w
  2254  0374  00B8               	movwf	??_USART_Initialize+6
  2255  0375  0831               	movf	USART_Initialize@baudrate+3,w
  2256  0376  00B9               	movwf	??_USART_Initialize+7
  2257  0377  3006               	movlw	6
  2258  0378                     u1665:
  2259  0378  1003               	clrc
  2260  0379  0DB6               	rlf	??_USART_Initialize+4,f
  2261  037A  0DB7               	rlf	??_USART_Initialize+5,f
  2262  037B  0DB8               	rlf	??_USART_Initialize+6,f
  2263  037C  0DB9               	rlf	??_USART_Initialize+7,f
  2264  037D                     u1660:
  2265  037D  3EFF               	addlw	-1
  2266  037E  1D03               	skipz
  2267  037F  2B78               	goto	u1665
  2268  0380  3000               	movlw	0
  2269  0381  00BA               	movwf	??_USART_Initialize+8
  2270  0382  3012               	movlw	18
  2271  0383  00BB               	movwf	??_USART_Initialize+9
  2272  0384  307A               	movlw	122
  2273  0385  00BC               	movwf	??_USART_Initialize+10
  2274  0386  3000               	movlw	0
  2275  0387  00BD               	movwf	??_USART_Initialize+11
  2276  0388  0836               	movf	??_USART_Initialize+4,w
  2277  0389  02BA               	subwf	??_USART_Initialize+8,f
  2278  038A  0837               	movf	??_USART_Initialize+5,w
  2279  038B  1C03               	skipc
  2280  038C  0F37               	incfsz	??_USART_Initialize+5,w
  2281  038D  2B8F               	goto	u1671
  2282  038E  2B90               	goto	u1672
  2283  038F                     u1671:
  2284  038F  02BB               	subwf	??_USART_Initialize+9,f
  2285  0390                     u1672:
  2286  0390  0838               	movf	??_USART_Initialize+6,w
  2287  0391  1C03               	skipc
  2288  0392  0F38               	incfsz	??_USART_Initialize+6,w
  2289  0393  2B95               	goto	u1673
  2290  0394  2B96               	goto	u1674
  2291  0395                     u1673:
  2292  0395  02BC               	subwf	??_USART_Initialize+10,f
  2293  0396                     u1674:
  2294  0396  0839               	movf	??_USART_Initialize+7,w
  2295  0397  1C03               	skipc
  2296  0398  0F39               	incfsz	??_USART_Initialize+7,w
  2297  0399  2B9B               	goto	u1675
  2298  039A  2B9C               	goto	u1676
  2299  039B                     u1675:
  2300  039B  02BD               	subwf	??_USART_Initialize+11,f
  2301  039C                     u1676:
  2302  039C  083D               	movf	??_USART_Initialize+11,w
  2303  039D  00A7               	movwf	___aldiv@dividend+3
  2304  039E  083C               	movf	??_USART_Initialize+10,w
  2305  039F  00A6               	movwf	___aldiv@dividend+2
  2306  03A0  083B               	movf	??_USART_Initialize+9,w
  2307  03A1  00A5               	movwf	___aldiv@dividend+1
  2308  03A2  083A               	movf	??_USART_Initialize+8,w
  2309  03A3  00A4               	movwf	___aldiv@dividend
  2310  03A4  120A  118A  22AC  120A  118A  	fcall	___aldiv
  2311  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2312  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2313  03AB  0823               	movf	?___aldiv+3,w
  2314  03AC  00F8               	movwf	USART_Initialize@x+3
  2315  03AD  0822               	movf	?___aldiv+2,w
  2316  03AE  00F7               	movwf	USART_Initialize@x+2
  2317  03AF  0821               	movf	?___aldiv+1,w
  2318  03B0  00F6               	movwf	USART_Initialize@x+1
  2319  03B1  0820               	movf	?___aldiv,w
  2320  03B2  00F5               	movwf	USART_Initialize@x
  2321  03B3                     l1682:
  2322                           
  2323                           ;usart.c: 32:     SPBRG = x;
  2324  03B3  0875               	movf	USART_Initialize@x,w
  2325  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2326  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2327  03B6  0099               	movwf	25	;volatile
  2328  03B7                     l1684:
  2329                           
  2330                           ;usart.c: 35:     INTCONbits.GIE = 1;
  2331  03B7  178B               	bsf	11,7	;volatile
  2332  03B8                     l1686:
  2333                           
  2334                           ;usart.c: 37:     INTCONbits.PEIE = 1;
  2335  03B8  170B               	bsf	11,6	;volatile
  2336  03B9                     l1688:
  2337                           
  2338                           ;usart.c: 40:     PIE1bits.RCIE = 1;
  2339  03B9  168C               	bsf	12,5	;volatile
  2340  03BA                     l1690:
  2341                           
  2342                           ;usart.c: 42:     PIE1bits.TXIE = 1;
  2343  03BA  160C               	bsf	12,4	;volatile
  2344  03BB                     l105:
  2345  03BB  0008               	return
  2346  03BC                     __end_of_USART_Initialize:
  2347                           
  2348                           	psect	text7
  2349  02AC                     __ptext7:	
  2350 ;; *************** function ___aldiv *****************
  2351 ;; Defined at:
  2352 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  divisor         4    0[BANK0 ] long 
  2355 ;;  dividend        4    4[BANK0 ] long 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  quotient        4   10[BANK0 ] long 
  2358 ;;  sign            1    9[BANK0 ] unsigned char 
  2359 ;;  counter         1    8[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  4    0[BANK0 ] long 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       8       0       0       0
  2370 ;;      Locals:         0       6       0       0       0
  2371 ;;      Temps:          1       0       0       0       0
  2372 ;;      Totals:         1      14       0       0       0
  2373 ;;Total ram usage:       15 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_USART_Initialize
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function ___aldiv
  2385  02AC                     ___aldiv:
  2386  02AC                     l1550:	
  2387                           ;incstack = 0
  2388                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2389                           
  2390  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2391  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2392  02AE  01A9               	clrf	___aldiv@sign
  2393  02AF                     l1552:
  2394  02AF  1FA3               	btfss	___aldiv@divisor+3,7
  2395  02B0  2AB2               	goto	u1421
  2396  02B1  2AB3               	goto	u1420
  2397  02B2                     u1421:
  2398  02B2  2AC0               	goto	l342
  2399  02B3                     u1420:
  2400  02B3                     l1554:
  2401  02B3  09A0               	comf	___aldiv@divisor,f
  2402  02B4  09A1               	comf	___aldiv@divisor+1,f
  2403  02B5  09A2               	comf	___aldiv@divisor+2,f
  2404  02B6  09A3               	comf	___aldiv@divisor+3,f
  2405  02B7  0AA0               	incf	___aldiv@divisor,f
  2406  02B8  1903               	skipnz
  2407  02B9  0AA1               	incf	___aldiv@divisor+1,f
  2408  02BA  1903               	skipnz
  2409  02BB  0AA2               	incf	___aldiv@divisor+2,f
  2410  02BC  1903               	skipnz
  2411  02BD  0AA3               	incf	___aldiv@divisor+3,f
  2412  02BE  01A9               	clrf	___aldiv@sign
  2413  02BF  0AA9               	incf	___aldiv@sign,f
  2414  02C0                     l342:
  2415  02C0  1FA7               	btfss	___aldiv@dividend+3,7
  2416  02C1  2AC3               	goto	u1431
  2417  02C2  2AC4               	goto	u1430
  2418  02C3                     u1431:
  2419  02C3  2AD3               	goto	l1560
  2420  02C4                     u1430:
  2421  02C4                     l1556:
  2422  02C4  09A4               	comf	___aldiv@dividend,f
  2423  02C5  09A5               	comf	___aldiv@dividend+1,f
  2424  02C6  09A6               	comf	___aldiv@dividend+2,f
  2425  02C7  09A7               	comf	___aldiv@dividend+3,f
  2426  02C8  0AA4               	incf	___aldiv@dividend,f
  2427  02C9  1903               	skipnz
  2428  02CA  0AA5               	incf	___aldiv@dividend+1,f
  2429  02CB  1903               	skipnz
  2430  02CC  0AA6               	incf	___aldiv@dividend+2,f
  2431  02CD  1903               	skipnz
  2432  02CE  0AA7               	incf	___aldiv@dividend+3,f
  2433  02CF                     l1558:
  2434  02CF  3001               	movlw	1
  2435  02D0  00F4               	movwf	??___aldiv
  2436  02D1  0874               	movf	??___aldiv,w
  2437  02D2  06A9               	xorwf	___aldiv@sign,f
  2438  02D3                     l1560:
  2439  02D3  3000               	movlw	0
  2440  02D4  00AD               	movwf	___aldiv@quotient+3
  2441  02D5  3000               	movlw	0
  2442  02D6  00AC               	movwf	___aldiv@quotient+2
  2443  02D7  3000               	movlw	0
  2444  02D8  00AB               	movwf	___aldiv@quotient+1
  2445  02D9  3000               	movlw	0
  2446  02DA  00AA               	movwf	___aldiv@quotient
  2447  02DB                     l1562:
  2448  02DB  0823               	movf	___aldiv@divisor+3,w
  2449  02DC  0422               	iorwf	___aldiv@divisor+2,w
  2450  02DD  0421               	iorwf	___aldiv@divisor+1,w
  2451  02DE  0420               	iorwf	___aldiv@divisor,w
  2452  02DF  1903               	skipnz
  2453  02E0  2AE2               	goto	u1441
  2454  02E1  2AE3               	goto	u1440
  2455  02E2                     u1441:
  2456  02E2  2B30               	goto	l1582
  2457  02E3                     u1440:
  2458  02E3                     l1564:
  2459  02E3  01A8               	clrf	___aldiv@counter
  2460  02E4  0AA8               	incf	___aldiv@counter,f
  2461  02E5  2AF3               	goto	l1568
  2462  02E6                     l1566:
  2463  02E6  3001               	movlw	1
  2464  02E7  00F4               	movwf	??___aldiv
  2465  02E8                     u1455:
  2466  02E8  1003               	clrc
  2467  02E9  0DA0               	rlf	___aldiv@divisor,f
  2468  02EA  0DA1               	rlf	___aldiv@divisor+1,f
  2469  02EB  0DA2               	rlf	___aldiv@divisor+2,f
  2470  02EC  0DA3               	rlf	___aldiv@divisor+3,f
  2471  02ED  0BF4               	decfsz	??___aldiv,f
  2472  02EE  2AE8               	goto	u1455
  2473  02EF  3001               	movlw	1
  2474  02F0  00F4               	movwf	??___aldiv
  2475  02F1  0874               	movf	??___aldiv,w
  2476  02F2  07A8               	addwf	___aldiv@counter,f
  2477  02F3                     l1568:
  2478  02F3  1FA3               	btfss	___aldiv@divisor+3,7
  2479  02F4  2AF6               	goto	u1461
  2480  02F5  2AF7               	goto	u1460
  2481  02F6                     u1461:
  2482  02F6  2AE6               	goto	l1566
  2483  02F7                     u1460:
  2484  02F7                     l1570:
  2485  02F7  3001               	movlw	1
  2486  02F8  00F4               	movwf	??___aldiv
  2487  02F9                     u1475:
  2488  02F9  1003               	clrc
  2489  02FA  0DAA               	rlf	___aldiv@quotient,f
  2490  02FB  0DAB               	rlf	___aldiv@quotient+1,f
  2491  02FC  0DAC               	rlf	___aldiv@quotient+2,f
  2492  02FD  0DAD               	rlf	___aldiv@quotient+3,f
  2493  02FE  0BF4               	decfsz	??___aldiv,f
  2494  02FF  2AF9               	goto	u1475
  2495  0300                     l1572:
  2496  0300  0823               	movf	___aldiv@divisor+3,w
  2497  0301  0227               	subwf	___aldiv@dividend+3,w
  2498  0302  1D03               	skipz
  2499  0303  2B0E               	goto	u1485
  2500  0304  0822               	movf	___aldiv@divisor+2,w
  2501  0305  0226               	subwf	___aldiv@dividend+2,w
  2502  0306  1D03               	skipz
  2503  0307  2B0E               	goto	u1485
  2504  0308  0821               	movf	___aldiv@divisor+1,w
  2505  0309  0225               	subwf	___aldiv@dividend+1,w
  2506  030A  1D03               	skipz
  2507  030B  2B0E               	goto	u1485
  2508  030C  0820               	movf	___aldiv@divisor,w
  2509  030D  0224               	subwf	___aldiv@dividend,w
  2510  030E                     u1485:
  2511  030E  1C03               	skipc
  2512  030F  2B11               	goto	u1481
  2513  0310  2B12               	goto	u1480
  2514  0311                     u1481:
  2515  0311  2B21               	goto	l1578
  2516  0312                     u1480:
  2517  0312                     l1574:
  2518  0312  0820               	movf	___aldiv@divisor,w
  2519  0313  02A4               	subwf	___aldiv@dividend,f
  2520  0314  0821               	movf	___aldiv@divisor+1,w
  2521  0315  1C03               	skipc
  2522  0316  0F21               	incfsz	___aldiv@divisor+1,w
  2523  0317  02A5               	subwf	___aldiv@dividend+1,f
  2524  0318  0822               	movf	___aldiv@divisor+2,w
  2525  0319  1C03               	skipc
  2526  031A  0F22               	incfsz	___aldiv@divisor+2,w
  2527  031B  02A6               	subwf	___aldiv@dividend+2,f
  2528  031C  0823               	movf	___aldiv@divisor+3,w
  2529  031D  1C03               	skipc
  2530  031E  0F23               	incfsz	___aldiv@divisor+3,w
  2531  031F  02A7               	subwf	___aldiv@dividend+3,f
  2532  0320                     l1576:
  2533  0320  142A               	bsf	___aldiv@quotient,0
  2534  0321                     l1578:
  2535  0321  3001               	movlw	1
  2536  0322                     u1495:
  2537  0322  1003               	clrc
  2538  0323  0CA3               	rrf	___aldiv@divisor+3,f
  2539  0324  0CA2               	rrf	___aldiv@divisor+2,f
  2540  0325  0CA1               	rrf	___aldiv@divisor+1,f
  2541  0326  0CA0               	rrf	___aldiv@divisor,f
  2542  0327  3EFF               	addlw	-1
  2543  0328  1D03               	skipz
  2544  0329  2B22               	goto	u1495
  2545  032A                     l1580:
  2546  032A  3001               	movlw	1
  2547  032B  02A8               	subwf	___aldiv@counter,f
  2548  032C  1D03               	btfss	3,2
  2549  032D  2B2F               	goto	u1501
  2550  032E  2B30               	goto	u1500
  2551  032F                     u1501:
  2552  032F  2AF7               	goto	l1570
  2553  0330                     u1500:
  2554  0330                     l1582:
  2555  0330  0829               	movf	___aldiv@sign,w
  2556  0331  1903               	btfsc	3,2
  2557  0332  2B34               	goto	u1511
  2558  0333  2B35               	goto	u1510
  2559  0334                     u1511:
  2560  0334  2B40               	goto	l1586
  2561  0335                     u1510:
  2562  0335                     l1584:
  2563  0335  09AA               	comf	___aldiv@quotient,f
  2564  0336  09AB               	comf	___aldiv@quotient+1,f
  2565  0337  09AC               	comf	___aldiv@quotient+2,f
  2566  0338  09AD               	comf	___aldiv@quotient+3,f
  2567  0339  0AAA               	incf	___aldiv@quotient,f
  2568  033A  1903               	skipnz
  2569  033B  0AAB               	incf	___aldiv@quotient+1,f
  2570  033C  1903               	skipnz
  2571  033D  0AAC               	incf	___aldiv@quotient+2,f
  2572  033E  1903               	skipnz
  2573  033F  0AAD               	incf	___aldiv@quotient+3,f
  2574  0340                     l1586:
  2575  0340  082D               	movf	___aldiv@quotient+3,w
  2576  0341  00A3               	movwf	?___aldiv+3
  2577  0342  082C               	movf	___aldiv@quotient+2,w
  2578  0343  00A2               	movwf	?___aldiv+2
  2579  0344  082B               	movf	___aldiv@quotient+1,w
  2580  0345  00A1               	movwf	?___aldiv+1
  2581  0346  082A               	movf	___aldiv@quotient,w
  2582  0347  00A0               	movwf	?___aldiv
  2583  0348                     l352:
  2584  0348  0008               	return
  2585  0349                     __end_of___aldiv:
  2586                           
  2587                           	psect	text8
  2588  0539                     __ptext8:	
  2589 ;; *************** function _Setup *****************
  2590 ;; Defined at:
  2591 ;;		line 62 in file "MAESTRO.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _Setup
  2621  0539                     _Setup:
  2622  0539                     l1638:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _Setup: [wreg+status,2]
  2625                           
  2626                           
  2627                           ;MAESTRO.c: 63:     TRISC=0;
  2628  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2629  053A  1303               	bcf	3,6	;RP1=0, select bank1
  2630  053B  0187               	clrf	7	;volatile
  2631  053C                     l1640:
  2632                           
  2633                           ;MAESTRO.c: 64:     PORTC=0b00000110;
  2634  053C  3006               	movlw	6
  2635  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2636  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2637  053F  0087               	movwf	7	;volatile
  2638  0540                     l1642:
  2639                           
  2640                           ;MAESTRO.c: 66:     ANSEL = 0;
  2641  0540  1683               	bsf	3,5	;RP0=1, select bank3
  2642  0541  1703               	bsf	3,6	;RP1=1, select bank3
  2643  0542  0188               	clrf	8	;volatile
  2644  0543                     l1644:
  2645                           
  2646                           ;MAESTRO.c: 67:     ANSELH = 0;
  2647  0543  0189               	clrf	9	;volatile
  2648  0544                     l1646:
  2649                           
  2650                           ;MAESTRO.c: 69:     TRISA= 0;
  2651  0544  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0545  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0546  0185               	clrf	5	;volatile
  2654  0547                     l1648:
  2655                           
  2656                           ;MAESTRO.c: 70:     PORTA= 0;
  2657  0547  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0548  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0549  0185               	clrf	5	;volatile
  2660  054A                     l1650:
  2661                           
  2662                           ;MAESTRO.c: 72:     TRISB= 0;
  2663  054A  1683               	bsf	3,5	;RP0=1, select bank1
  2664  054B  1303               	bcf	3,6	;RP1=0, select bank1
  2665  054C  0186               	clrf	6	;volatile
  2666  054D                     l1652:
  2667                           
  2668                           ;MAESTRO.c: 73:     PORTB= 0;
  2669  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2670  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2671  054F  0186               	clrf	6	;volatile
  2672  0550                     l1654:
  2673                           
  2674                           ;MAESTRO.c: 75:     TRISD = 0;
  2675  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0552  0188               	clrf	8	;volatile
  2678  0553                     l1656:
  2679                           
  2680                           ;MAESTRO.c: 76:     PORTD= 0;
  2681  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0555  0188               	clrf	8	;volatile
  2684  0556                     l1658:
  2685                           
  2686                           ;MAESTRO.c: 78:     TRISE = 0;
  2687  0556  1683               	bsf	3,5	;RP0=1, select bank1
  2688  0557  1303               	bcf	3,6	;RP1=0, select bank1
  2689  0558  0189               	clrf	9	;volatile
  2690  0559                     l1660:
  2691                           
  2692                           ;MAESTRO.c: 79:     PORTE = 0;
  2693  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2694  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2695  055B  0189               	clrf	9	;volatile
  2696  055C                     l1662:
  2697                           
  2698                           ;MAESTRO.c: 81:     IOCB= 0;
  2699  055C  1683               	bsf	3,5	;RP0=1, select bank1
  2700  055D  1303               	bcf	3,6	;RP1=0, select bank1
  2701  055E  0196               	clrf	22	;volatile
  2702  055F                     l69:
  2703  055F  0008               	return
  2704  0560                     __end_of_Setup:
  2705                           
  2706                           	psect	text9
  2707  05C8                     __ptext9:	
  2708 ;; *************** function _SPIMas *****************
  2709 ;; Defined at:
  2710 ;;		line 11 in file "SPI.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _SPIMas
  2740  05C8                     _SPIMas:
  2741  05C8                     l1692:	
  2742                           ;incstack = 0
  2743                           ; Regs used in _SPIMas: [wreg+status,2]
  2744                           
  2745                           
  2746                           ;SPI.c: 12:     TRISCbits.TRISC3 = 0;
  2747  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  2748  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  2749  05CA  1187               	bcf	7,3	;volatile
  2750                           
  2751                           ;SPI.c: 13:     TRISCbits.TRISC5 = 0;
  2752  05CB  1287               	bcf	7,5	;volatile
  2753  05CC                     l1694:
  2754                           
  2755                           ;SPI.c: 14:     SSPCON = 0b00100000;
  2756  05CC  3020               	movlw	32
  2757  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  2758  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  2759  05CF  0094               	movwf	20	;volatile
  2760  05D0                     l1696:
  2761                           
  2762                           ;SPI.c: 15:     SSPSTAT = 0;
  2763  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  2764  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  2765  05D2  0194               	clrf	20	;volatile
  2766  05D3                     l152:
  2767  05D3  0008               	return
  2768  05D4                     __end_of_SPIMas:
  2769                           
  2770                           	psect	text10
  2771  04B1                     __ptext10:	
  2772 ;; *************** function _LCD_Initialize *****************
  2773 ;; Defined at:
  2774 ;;		line 47 in file "lcd.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       2       0       0       0
  2791 ;;      Totals:         0       2       0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    3
  2795 ;; This function calls:
  2796 ;;		_LCDPutCmd
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _LCD_Initialize
  2804  04B1                     _LCD_Initialize:
  2805  04B1                     l1664:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2808                           
  2809                           
  2810                           ;lcd.c: 49:     PORTD = 0;
  2811  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2812  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2813  04B3  0188               	clrf	8	;volatile
  2814                           
  2815                           ;lcd.c: 51:     TRISD = 0x00;
  2816  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2817  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2818  04B6  0188               	clrf	8	;volatile
  2819  04B7                     l1666:
  2820                           
  2821                           ;lcd.c: 54:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2822  04B7  3027               	movlw	39
  2823  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2824  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2825  04BA  00A1               	movwf	??_LCD_Initialize+1
  2826  04BB  30F4               	movlw	244
  2827  04BC  00A0               	movwf	??_LCD_Initialize
  2828  04BD                     u3047:
  2829  04BD  0BA0               	decfsz	??_LCD_Initialize,f
  2830  04BE  2CBD               	goto	u3047
  2831  04BF  0BA1               	decfsz	??_LCD_Initialize+1,f
  2832  04C0  2CBD               	goto	u3047
  2833  04C1  0000               	nop
  2834  04C2                     l1668:
  2835                           
  2836                           ;lcd.c: 57:     LCDPutCmd(0x32);
  2837  04C2  3032               	movlw	50
  2838  04C3  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  2839  04C8                     l1670:
  2840                           
  2841                           ;lcd.c: 60:     LCDPutCmd(0x38);
  2842  04C8  3038               	movlw	56
  2843  04C9  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  2844  04CE                     l1672:
  2845                           
  2846                           ;lcd.c: 63:     LCDPutCmd(0x0C);
  2847  04CE  300C               	movlw	12
  2848  04CF  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  2849  04D4                     l1674:
  2850                           
  2851                           ;lcd.c: 65:     LCDPutCmd(0x01);
  2852  04D4  3001               	movlw	1
  2853  04D5  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  2854  04DA                     l1676:
  2855                           
  2856                           ;lcd.c: 68:     LCDPutCmd(0x06);
  2857  04DA  3006               	movlw	6
  2858  04DB  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  2859  04E0                     l118:
  2860  04E0  0008               	return
  2861  04E1                     __end_of_LCD_Initialize:
  2862                           
  2863                           	psect	text11
  2864  04E1                     __ptext11:	
  2865 ;; *************** function _LCDPutStr *****************
  2866 ;; Defined at:
  2867 ;;		line 110 in file "lcd.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  2870 ;;		 -> STR_1(19), buff(20), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  i               1    3[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       2       0       0       0
  2883 ;;      Locals:         0       1       0       0       0
  2884 ;;      Temps:          0       1       0       0       0
  2885 ;;      Totals:         0       4       0       0       0
  2886 ;;Total ram usage:        4 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		_LCDPutChar
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _LCDPutStr
  2898  04E1                     _LCDPutStr:
  2899  04E1                     l2264:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2902                           
  2903                           
  2904                           ;lcd.c: 111:     uint8_t i=0;
  2905  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2906  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2907  04E3  01A3               	clrf	LCDPutStr@i
  2908                           
  2909                           ;lcd.c: 114:     while (str[i])
  2910  04E4  2CFC               	goto	l2270
  2911  04E5                     l2266:
  2912                           
  2913                           ;lcd.c: 115:     {;lcd.c: 117:         LCDPutChar(str[i++]);
  2914  04E5  0823               	movf	LCDPutStr@i,w
  2915  04E6  0720               	addwf	LCDPutStr@str,w
  2916  04E7  0084               	movwf	4
  2917  04E8  0821               	movf	LCDPutStr@str+1,w
  2918  04E9  1803               	skipnc
  2919  04EA  0A21               	incf	LCDPutStr@str+1,w
  2920  04EB  00FF               	movwf	btemp+1
  2921  04EC  120A  118A  2402  120A  118A  	fcall	stringtab
  2922  04F1  120A  118A  2581  120A  118A  	fcall	_LCDPutChar
  2923  04F6                     l2268:
  2924  04F6  3001               	movlw	1
  2925  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2926  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2927  04F9  00A2               	movwf	??_LCDPutStr
  2928  04FA  0822               	movf	??_LCDPutStr,w
  2929  04FB  07A3               	addwf	LCDPutStr@i,f
  2930  04FC                     l2270:
  2931                           
  2932                           ;lcd.c: 114:     while (str[i])
  2933  04FC  0823               	movf	LCDPutStr@i,w
  2934  04FD  0720               	addwf	LCDPutStr@str,w
  2935  04FE  0084               	movwf	4
  2936  04FF  0821               	movf	LCDPutStr@str+1,w
  2937  0500  1803               	skipnc
  2938  0501  0A21               	incf	LCDPutStr@str+1,w
  2939  0502  00FF               	movwf	btemp+1
  2940  0503  120A  118A  2402  120A  118A  	fcall	stringtab
  2941  0508  3A00               	xorlw	0
  2942  0509  1D03               	skipz
  2943  050A  2D0C               	goto	u2821
  2944  050B  2D0D               	goto	u2820
  2945  050C                     u2821:
  2946  050C  2CE5               	goto	l2266
  2947  050D                     u2820:
  2948  050D                     l133:
  2949  050D  0008               	return
  2950  050E                     __end_of_LCDPutStr:
  2951                           
  2952                           	psect	text12
  2953  0581                     __ptext12:	
  2954 ;; *************** function _LCDPutChar *****************
  2955 ;; Defined at:
  2956 ;;		line 94 in file "lcd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  ch              1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  ch              1    8[COMMON] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0
  2972 ;;      Temps:          2       0       0       0       0
  2973 ;;      Totals:         3       0       0       0       0
  2974 ;;Total ram usage:        3 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    2
  2977 ;; This function calls:
  2978 ;;		_LCDWrite
  2979 ;; This function is called by:
  2980 ;;		_LCDPutStr
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _LCDPutChar
  2986  0581                     _LCDPutChar:
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2990                           ;LCDPutChar@ch stored from wreg
  2991  0581  00F8               	movwf	LCDPutChar@ch
  2992  0582                     l1520:
  2993                           
  2994                           ;lcd.c: 95:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2995  0582  300D               	movlw	13
  2996  0583  00F7               	movwf	??_LCDPutChar+1
  2997  0584  30FB               	movlw	251
  2998  0585  00F6               	movwf	??_LCDPutChar
  2999  0586                     u3057:
  3000  0586  0BF6               	decfsz	??_LCDPutChar,f
  3001  0587  2D86               	goto	u3057
  3002  0588  0BF7               	decfsz	??_LCDPutChar+1,f
  3003  0589  2D86               	goto	u3057
  3004  058A  2D8B               	nop2
  3005  058B                     l1522:
  3006                           
  3007                           ;lcd.c: 98:     LCDWrite(ch,1);
  3008  058B  01F4               	clrf	LCDWrite@rs
  3009  058C  0AF4               	incf	LCDWrite@rs,f
  3010  058D  0878               	movf	LCDPutChar@ch,w
  3011  058E  120A  118A  25B8  120A  118A  	fcall	_LCDWrite
  3012  0593                     l124:
  3013  0593  0008               	return
  3014  0594                     __end_of_LCDPutChar:
  3015                           
  3016                           	psect	text13
  3017  0480                     __ptext13:	
  3018 ;; *************** function _LCDGoto *****************
  3019 ;; Defined at:
  3020 ;;		line 122 in file "lcd.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  pos             1    wreg     unsigned char 
  3023 ;;  ln              1    0[BANK0 ] unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  pos             1    5[BANK0 ] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       1       0       0       0
  3036 ;;      Locals:         0       3       0       0       0
  3037 ;;      Temps:          0       2       0       0       0
  3038 ;;      Totals:         0       6       0       0       0
  3039 ;;Total ram usage:        6 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    3
  3042 ;; This function calls:
  3043 ;;		_LCDPutCmd
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _LCDGoto
  3051  0480                     _LCDGoto:
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  3055                           ;LCDGoto@pos stored from wreg
  3056  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0482  00A5               	movwf	LCDGoto@pos
  3059  0483                     l2250:
  3060                           
  3061                           ;lcd.c: 124:     if ((ln > (2 -1)) || (pos > (16 -1)))
  3062  0483  3002               	movlw	2
  3063  0484  0220               	subwf	LCDGoto@ln,w
  3064  0485  1803               	skipnc
  3065  0486  2C88               	goto	u2791
  3066  0487  2C89               	goto	u2790
  3067  0488                     u2791:
  3068  0488  2CB0               	goto	l139
  3069  0489                     u2790:
  3070  0489                     l2252:
  3071  0489  3010               	movlw	16
  3072  048A  0225               	subwf	LCDGoto@pos,w
  3073  048B  1C03               	skipc
  3074  048C  2C8E               	goto	u2801
  3075  048D  2C8F               	goto	u2800
  3076  048E                     u2801:
  3077  048E  2C90               	goto	l2254
  3078  048F                     u2800:
  3079  048F  2CB0               	goto	l139
  3080  0490                     l2254:
  3081                           
  3082                           ;lcd.c: 131:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  3083  0490  0320               	decf	LCDGoto@ln,w
  3084  0491  1903               	btfsc	3,2
  3085  0492  2C94               	goto	u2811
  3086  0493  2C95               	goto	u2810
  3087  0494                     u2811:
  3088  0494  2C9B               	goto	l2258
  3089  0495                     u2810:
  3090  0495                     l2256:
  3091  0495  3080               	movlw	128
  3092  0496  0425               	iorwf	LCDGoto@pos,w
  3093  0497  00A3               	movwf	_LCDGoto$497
  3094  0498  3000               	movlw	0
  3095  0499  00A4               	movwf	_LCDGoto$497+1
  3096  049A  2CA0               	goto	l2260
  3097  049B                     l2258:
  3098  049B  30C0               	movlw	192
  3099  049C  0425               	iorwf	LCDGoto@pos,w
  3100  049D  00A3               	movwf	_LCDGoto$497
  3101  049E  3000               	movlw	0
  3102  049F  00A4               	movwf	_LCDGoto$497+1
  3103  04A0                     l2260:
  3104  04A0  0823               	movf	_LCDGoto$497,w
  3105  04A1  120A  118A  25A6  120A  118A  	fcall	_LCDPutCmd
  3106  04A6                     l2262:
  3107                           
  3108                           ;lcd.c: 134:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3109  04A6  300D               	movlw	13
  3110  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3111  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3112  04A9  00A2               	movwf	??_LCDGoto+1
  3113  04AA  30FB               	movlw	251
  3114  04AB  00A1               	movwf	??_LCDGoto
  3115  04AC                     u3067:
  3116  04AC  0BA1               	decfsz	??_LCDGoto,f
  3117  04AD  2CAC               	goto	u3067
  3118  04AE  0BA2               	decfsz	??_LCDGoto+1,f
  3119  04AF  2CAC               	goto	u3067
  3120  04B0                     l139:
  3121  04B0  0008               	return
  3122  04B1                     __end_of_LCDGoto:
  3123                           
  3124                           	psect	text14
  3125  05A6                     __ptext14:	
  3126 ;; *************** function _LCDPutCmd *****************
  3127 ;; Defined at:
  3128 ;;		line 102 in file "lcd.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  ch              1    wreg     unsigned char 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  ch              1    8[COMMON] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         1       0       0       0       0
  3144 ;;      Temps:          2       0       0       0       0
  3145 ;;      Totals:         3       0       0       0       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    2
  3149 ;; This function calls:
  3150 ;;		_LCDWrite
  3151 ;; This function is called by:
  3152 ;;		_LCD_Initialize
  3153 ;;		_LCDGoto
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _LCDPutCmd
  3159  05A6                     _LCDPutCmd:
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  3163                           ;LCDPutCmd@ch stored from wreg
  3164  05A6  00F8               	movwf	LCDPutCmd@ch
  3165  05A7                     l1516:
  3166                           
  3167                           ;lcd.c: 103:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3168  05A7  300D               	movlw	13
  3169  05A8  00F7               	movwf	??_LCDPutCmd+1
  3170  05A9  30FB               	movlw	251
  3171  05AA  00F6               	movwf	??_LCDPutCmd
  3172  05AB                     u3077:
  3173  05AB  0BF6               	decfsz	??_LCDPutCmd,f
  3174  05AC  2DAB               	goto	u3077
  3175  05AD  0BF7               	decfsz	??_LCDPutCmd+1,f
  3176  05AE  2DAB               	goto	u3077
  3177  05AF  2DB0               	nop2
  3178  05B0                     l1518:
  3179                           
  3180                           ;lcd.c: 105:     LCDWrite(ch,0);
  3181  05B0  01F4               	clrf	LCDWrite@rs
  3182  05B1  0878               	movf	LCDPutCmd@ch,w
  3183  05B2  120A  118A  25B8  120A  118A  	fcall	_LCDWrite
  3184  05B7                     l127:
  3185  05B7  0008               	return
  3186  05B8                     __end_of_LCDPutCmd:
  3187                           
  3188                           	psect	text15
  3189  05B8                     __ptext15:	
  3190 ;; *************** function _LCDWrite *****************
  3191 ;; Defined at:
  3192 ;;		line 73 in file "lcd.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  ch              1    wreg     unsigned char 
  3195 ;;  rs              1    4[COMMON] unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  ch              1    5[COMMON] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         1       0       0       0       0
  3208 ;;      Locals:         1       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         2       0       0       0       0
  3211 ;;Total ram usage:        2 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_LCDPutChar
  3218 ;;		_LCDPutCmd
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _LCDWrite
  3224  05B8                     _LCDWrite:
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  3228                           ;LCDWrite@ch stored from wreg
  3229  05B8  00F5               	movwf	LCDWrite@ch
  3230  05B9                     l1506:
  3231                           
  3232                           ;lcd.c: 76:     PORTD = (PORTD & 0x00);
  3233  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3234  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3235  05BB  0188               	clrf	8	;volatile
  3236  05BC                     l1508:
  3237                           
  3238                           ;lcd.c: 79:     PORTD = (PORTD | ch);
  3239  05BC  0808               	movf	8,w	;volatile
  3240  05BD  0475               	iorwf	LCDWrite@ch,w
  3241  05BE  0088               	movwf	8	;volatile
  3242                           
  3243                           ;lcd.c: 82:     PORTBbits.RB5 = rs;
  3244  05BF  0C74               	rrf	LCDWrite@rs,w
  3245  05C0  1C03               	skipc
  3246  05C1  1286               	bcf	6,5	;volatile
  3247  05C2  1803               	skipnc
  3248  05C3  1686               	bsf	6,5	;volatile
  3249  05C4                     l1510:
  3250                           
  3251                           ;lcd.c: 85:     PORTBbits.RB6 = 0;
  3252  05C4  1306               	bcf	6,6	;volatile
  3253  05C5                     l1512:
  3254                           
  3255                           ;lcd.c: 88:     PORTBbits.RB7 = 1;
  3256  05C5  1786               	bsf	6,7	;volatile
  3257  05C6                     l1514:
  3258                           
  3259                           ;lcd.c: 91:     PORTBbits.RB7 = 0;
  3260  05C6  1386               	bcf	6,7	;volatile
  3261  05C7                     l121:
  3262  05C7  0008               	return
  3263  05C8                     __end_of_LCDWrite:
  3264                           
  3265                           	psect	text16
  3266  0560                     __ptext16:	
  3267 ;; *************** function _ISR *****************
  3268 ;; Defined at:
  3269 ;;		line 91 in file "MAESTRO.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0
  3285 ;;      Temps:          4       0       0       0       0
  3286 ;;      Totals:         4       0       0       0       0
  3287 ;;Total ram usage:        4 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		Interrupt level 1
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _ISR
  3298  0560                     _ISR:
  3299  0560                     i1l1094:
  3300                           
  3301                           ;MAESTRO.c: 92:     if(PIR1bits.TXIF == 1){
  3302  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0562  1E0C               	btfss	12,4	;volatile
  3305  0563  2D65               	goto	u51_21
  3306  0564  2D66               	goto	u51_20
  3307  0565                     u51_21:
  3308  0565  2D74               	goto	i1l1102
  3309  0566                     u51_20:
  3310  0566                     i1l1096:
  3311                           
  3312                           ;MAESTRO.c: 93:        TXREG = buff[c1];
  3313  0566  0879               	movf	_c1,w
  3314  0567  3E57               	addlw	(low (_buff| 0))& (0+255)
  3315  0568  0084               	movwf	4
  3316  0569  1383               	bcf	3,7	;select IRP bank0
  3317  056A  0800               	movf	0,w
  3318  056B  0099               	movwf	25	;volatile
  3319  056C                     i1l1098:
  3320                           
  3321                           ;MAESTRO.c: 94:        if (c1 == 16){
  3322  056C  3010               	movlw	16
  3323  056D  0679               	xorwf	_c1,w
  3324  056E  1D03               	btfss	3,2
  3325  056F  2D71               	goto	u52_21
  3326  0570  2D72               	goto	u52_20
  3327  0571                     u52_21:
  3328  0571  2D78               	goto	i1l77
  3329  0572                     u52_20:
  3330  0572                     i1l1100:
  3331                           
  3332                           ;MAESTRO.c: 95:            c1=0; }
  3333  0572  01F9               	clrf	_c1
  3334  0573  2D78               	goto	i1l77
  3335  0574                     i1l1102:
  3336                           
  3337                           ;MAESTRO.c: 98:         c1++;
  3338  0574  3001               	movlw	1
  3339  0575  00F0               	movwf	??_ISR
  3340  0576  0870               	movf	??_ISR,w
  3341  0577  07F9               	addwf	_c1,f
  3342  0578                     i1l77:
  3343  0578  0873               	movf	??_ISR+3,w
  3344  0579  008A               	movwf	10
  3345  057A  0872               	movf	??_ISR+2,w
  3346  057B  0084               	movwf	4
  3347  057C  0E71               	swapf	??_ISR+1,w
  3348  057D  0083               	movwf	3
  3349  057E  0EFE               	swapf	btemp,f
  3350  057F  0E7E               	swapf	btemp,w
  3351  0580  0009               	retfie
  3352  0581                     __end_of_ISR:
  3353  007E                     btemp	set	126	;btemp
  3354  007E                     wtemp0	set	126
  3355                           
  3356                           	psect	intentry
  3357  0004                     __pintentry:	
  3358                           ;incstack = 0
  3359                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  3360                           
  3361  0004                     interrupt_function:
  3362  007E                     saved_w	set	btemp
  3363  0004  00FE               	movwf	btemp
  3364  0005  0E03               	swapf	3,w
  3365  0006  00F1               	movwf	??_ISR+1
  3366  0007  0804               	movf	4,w
  3367  0008  00F2               	movwf	??_ISR+2
  3368  0009  080A               	movf	10,w
  3369  000A  00F3               	movwf	??_ISR+3
  3370  000B  120A  118A  2D60   	ljmp	_ISR
  3371                           
  3372                           	psect	config
  3373                           
  3374                           ;Config register CONFIG1 @ 0x2007
  3375                           ;	Oscillator Selection bits
  3376                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3377                           ;	Watchdog Timer Enable bit
  3378                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3379                           ;	Power-up Timer Enable bit
  3380                           ;	PWRTE = OFF, PWRT disabled
  3381                           ;	RE3/MCLR pin function select bit
  3382                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3383                           ;	Code Protection bit
  3384                           ;	CP = OFF, Program memory code protection is disabled
  3385                           ;	Data Code Protection bit
  3386                           ;	CPD = OFF, Data memory code protection is disabled
  3387                           ;	Brown Out Reset Selection bits
  3388                           ;	BOREN = OFF, BOR disabled
  3389                           ;	Internal External Switchover bit
  3390                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3391                           ;	Fail-Safe Clock Monitor Enabled bit
  3392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3393                           ;	Low Voltage Programming Enable bit
  3394                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3395                           ;	In-Circuit Debugger Mode bit
  3396                           ;	DEBUG = 0x1, unprogrammed default
  3397  2007                     	org	8199
  3398  2007  20D1               	dw	8401
  3399                           
  3400                           ;Config register CONFIG2 @ 0x2008
  3401                           ;	Brown-out Reset Selection bit
  3402                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3403                           ;	Flash Program Memory Self Write Enable bits
  3404                           ;	WRT = OFF, Write protection off
  3405  2008                     	org	8200
  3406  2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     43      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buff(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[19]), buff(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_USART_Initialize
    _main->___lwdiv
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWrite
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWrite

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    5652
                                             32 BANK0     11    11      0
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                             _SPIMas
                              _Setup
                   _USART_Initialize
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    20     11    2663
                                              9 BANK0     23    12     11
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                    20    16      4     595
                                              5 COMMON     4     4      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPIMas                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     218
                                              0 BANK0      2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            4     2      2     528
                                              0 BANK0      4     2      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     218
                                              6 COMMON     3     3      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     590
                                              0 BANK0      6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     218
                                              6 COMMON     3     3      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (3) _LCDWrite                                             2     1      1     196
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWrite
   _LCDPutStr
     _LCDPutChar
       _LCDWrite
   _LCD_Initialize
     _LCDPutCmd
       _LCDWrite
   _SPIMas
   _Setup
   _USART_Initialize
     ___aldiv
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      55       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      55      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:02:28 2021

                        _v 0056             _LCD_Initialize 04B1                          pc 0002  
              _SSPSTATbits 0094                ?_LCDPutChar 0070                         l83 01EA  
                       l84 0206                         l69 055F                         l85 0222  
                       _V1 004B                         _c1 0079                         _c2 0055  
                       fsr 0004        ___wmul@multiplicand 0076   __end_of_USART_Initialize 03BC  
                      l121 05C7                        l105 03BB                        l124 0593  
                      l133 050D                        l118 04E0                        l127 05B7  
                      l152 05D3                        l139 04B0                        l342 02C0  
                      l262 00FE                        l352 0348                        l273 01A6  
                      l277 051E                        l279 0538                        l730 05A5  
                      l549 0401                        l559 047F                        _ISR 0560  
                      fsr0 0004                        indf 0000            __end_of_LCDGoto 04B1  
                     ?_ISR 0070                       l2220 0525                       l2300 00B3  
                     l1510 05C4                       l2230 044C                       l2222 052C  
                     l2214 050E                       l2302 00B7                       l1512 05C5  
                     l1520 0582                       l1600 03D4                       l2240 0468  
                     l2232 044F                       l2224 0532                       l2216 0512  
                     l2320 00EC                       l2304 00BB                       l2400 0232  
                     l1514 05C6                       l1506 05B9                       l2250 0483  
                     l1522 058B                       l1610 03F7                       l1602 03D8  
                     l2242 046E                       l2234 0456                       l2218 0516  
                     l1530 05A2                       l2330 0119                       l2322 00F2  
                     l2314 00C6                       l2306 00BF                       l2410 0293  
                     l2402 0249                       l1508 05BC                       l1516 05A7  
                     l2260 04A0                       l2252 0489                       l1604 03E9  
                     l1612 03FD                       l2244 0475                       l2236 045A  
                     l2228 0444                       l1532 05A4                       l1524 0595  
                     l2340 013C                       l2332 011F                       l2324 00F8  
                     l2308 00C4                       l2412 029D                       l2404 025C  
                     l1518 05B0                       l2262 04A6                       l2254 0490  
                     l2270 04FC                       l1550 02AC                       l1606 03EF  
                     l2238 045E                       l2246 047B                       l1526 0596  
                     l2350 0183                       l2342 0143                       l2334 0126  
                     l2326 0109                       l2318 00E2                       l2406 0260  
                     l2256 0495                       l2264 04E1                       l1640 053C  
                     l1560 02D3                       l1552 02AF                       l1608 03F0  
                     l1528 059C                       l2352 0187                       l2344 0147  
                     l2336 012A                       l2328 0115                       l2280 0039  
                     l2272 0022                       l2408 0266                       l2258 049B  
                     l2266 04E5                       l1650 054A                       l1642 0540  
                     l1570 02F7                       l1562 02DB                       l1554 02B3  
                     l2346 014C                       l2338 0136                       l2434 00A0  
                     l2290 0078                       l2282 003C                       l2274 0027  
                     l2354 0190                       l2370 01DC                       l2268 04F6  
                     l1660 0559                       l1652 054D                       l1644 0543  
                     l1580 032A                       l1572 0300                       l1564 02E3  
                     l1556 02C4                       l2348 017C                       l2356 01A2  
                     l2292 007C                       l2284 004C                       l2276 002D  
                     l2380 01FA                       l2372 01DE                       l2364 01A7  
                     l1670 04C8                       l1662 055C                       l1654 0550  
                     l1646 0544                       l1638 0539                       l1574 0312  
                     l1566 02E6                       l1582 0330                       l1558 02CF  
                     l1590 03BC                       l2286 0050                       l2278 0034  
                     l2390 021C                       l2382 0200                       l2374 01E4  
                     l2366 01CE                       l1672 04CE                       l1664 04B1  
                     l1656 0553                       l1648 0547                       l1584 0335  
                     l1576 0320                       l1568 02F3                       l1680 0356  
                     l1592 03C0                       l2288 0065                       l2296 008C  
                     l2392 022C                       l2384 0210                       l2376 01F4  
                     l2368 01D9                       l1674 04D4                       l1666 04B7  
                     l1658 0556                       l1586 0340                       l1578 0321  
                     l1690 03BA                       l1682 03B3                       l1594 03C6  
                     l2298 00AB                       l2394 022F                       l2386 0213  
                     l2378 01F7                       l1676 04DA                       l1668 04C2  
                     l1692 05C8                       l1684 03B7                       l1596 03C9  
                     l2396 0231                       l2388 0216                       l1694 05CC  
                     l1686 03B8                       l1678 0349                       l1598 03D0  
                     l1696 05D0                       l1688 03B9                       STR_1 0431  
                     STR_2 041C                       u3000 0266                       u3001 0265  
                     u1500 0330                       u1420 02B3                       _IOCB 0096  
                     u1501 032F                       u1421 02B2                       u1510 0335  
                     u1430 02C4                       u1511 0334                       u1431 02C3  
                     u1440 02E3                       u1520 03C6                       u1360 059C  
                     u1441 02E2                       u1521 03C5                       u1361 059B  
                     u3017 01F0                       u1370 05A2                       u1371 05A1  
                     u3027 020C                       u1460 02F7                       u1540 03D8  
                     u1461 02F6                       u1541 03D7                       u3037 0228  
                     u3047 04BD                       u1455 02E8                       u1535 03CA  
                     u1480 0312                       u1560 03E9                       u3057 0586  
                     u1481 0311                       u1561 03E8                       u1650 0364  
                     u3067 04AC                       u1475 02F9                       u1555 03D9  
                     u1660 037D                       u1580 03FD                       u3077 05AB  
                     u1485 030E                       u1581 03FC                       u1565 03E5  
                     u1495 0322                       u1671 038F                       u1655 035F  
                     u1575 03F1                       u2800 048F                       u1672 0390  
                     u2720 0532                       u2801 048E                       u1673 0395  
                     u1665 0378                       u2721 0531                       u2705 051F  
                     u2810 0495                       u1674 0396                       u2730 044C  
                     u2811 0494                       u1675 039B                       u2731 044B  
                     u2715 0526                       u2820 050D                       u1676 039C  
                     u2900 00F8                       u2821 050C                       u2901 00F7  
                     u2750 045E                       u2910 0109                       u2830 002D  
                     u2751 045D                       u2911 0108                       u2831 002C  
                     u2760 0468                       u2920 011F                       u2840 004C  
                     u2761 0467                       u2745 0450                       u2921 011E  
                     u2841 004B                       u2690 0516                       u2930 0136  
                     u2850 008C                       u2691 0515                       u2931 0135  
                     u2915 0105                       u2851 008B                       u2780 047B  
                     u2940 013C                       u2860 00BB                       u2781 047A  
                     u2765 0464                       u2941 013B                       u2861 00BA  
                     u2790 0489                       u2950 0190                       u2870 00E1  
                     u2791 0488                       u2775 046F                       u2951 018F  
                     u2871 00E0                       u2960 01A2                       u2880 00EC  
                     u2961 01A1                       u2881 00EB                       u2890 00F2  
                     u2970 01E4                       u2891 00F1                       u2875 00DD  
                     u2971 01E3                       u2980 0200                       u2981 01FF  
                     u2990 021C                       u2991 021B                       i1l77 0578  
                     _buff 0057                       _main 01A7                       _temp 0054  
                     _vint 0052                       btemp 007E         __size_of_LCDPutCmd 0012  
                     start 000E         __size_of_LCDPutStr 002D     __end_of_LCD_Initialize 04E1  
                    ??_ISR 0070                LCDPutCmd@ch 0078           __end_of_LCDWrite 05C8  
          __end_of___aldiv 0349                      ?_main 0070                      _ANSEL 0188  
          __end_of___lwdiv 0402            __end_of___lwmod 0480                      _SPBRG 0099  
                    u51_20 0566                      u51_21 0565                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u52_20 0572                      u52_21 0571  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _Setup 0539            __end_of_dpowers 041C            __end_of_isdigit 05A6  
                    pclath 000A        __size_of_LCDPutChar 0013                      status 0003  
                    wtemp0 007E            __end_of_sprintf 01A7            ?_LCD_Initialize 0070  
          __initialization 0011               __end_of_main 02AC                     ??_main 0040  
                ??_LCDGoto 0021          __end_of_LCDPutCmd 05B8               LCDPutChar@ch 0078  
        __end_of_LCDPutStr 050E                     ?_Setup 0070                     _ANSELH 0189  
                   i1l1100 0572                     i1l1102 0574                     i1l1094 0560  
                   i1l1096 0566                     i1l1098 056C               LCDPutStr@str 0020  
                   _SSPBUF 0013                     _SSPCON 0014                     _SPIMas 05C8  
                ??___aldiv 0074                     ___wmul 050E                  ??___lwdiv 0078  
                ??___lwmod 0027                  ??_isdigit 0074                     saved_w 007E  
                ??_sprintf 0034    __end_of__initialization 001B                  ?_LCDWrite 0074  
                LCDGoto@ln 0020             __pcstackCOMMON 0070              __end_of_Setup 0560  
             ??_LCDPutChar 0076          ?_USART_Initialize 002E         ??_USART_Initialize 0032  
                  ??_Setup 0074               sprintf@width 003D                 __pbssBANK0 004B  
       __end_of_LCDPutChar 0594                    ?_SPIMas 0070                 ??_LCDWrite 0075  
               __pmaintext 01A7                    ?___wmul 0074                 __pintentry 0004  
                  _LCDGoto 0480                    _SSPSTAT 0094                 __stringtab 0402  
         ??_LCD_Initialize 0020            __size_of_SPIMas 000C                    ___aldiv 02AC  
          __size_of___wmul 002B                    ___lwdiv 03BC                    ___lwmod 0444  
                  __ptext1 001F                    __ptext2 0594                    __ptext3 050E  
                  __ptext4 0444                    __ptext5 03BC                    __ptext6 0349  
                  __ptext7 02AC                    __ptext8 0539                    __ptext9 05C8  
             __size_of_ISR 0021                    _dpowers 0412                    _isdigit 0594  
         ___aldiv@dividend 0024                    _valores 004F                  _LCDPutCmd 05A6  
                  _sprintf 001F                    clrloop0 05D5                  _LCDPutStr 04E1  
     end_of_initialization 001B          USART_Initialize@x 0075                  _RCSTAbits 0018  
         ___aldiv@quotient 002A                  _PORTBbits 0006                  _PORTCbits 0007  
                _TRISCbits 0087                 ?_LCDPutCmd 0070                 ?_LCDPutStr 0020  
                _TXSTAbits 0098                 LCDGoto@pos 0025             __end_of_SPIMas 05D4  
        __size_of_LCDWrite 0010                 LCDPutStr@i 0023             __end_of___wmul 0539  
              _BAUDCTLbits 0187                 LCDWrite@ch 0075                 LCDWrite@rs 0074  
      start_initialization 0011                __end_of_ISR 0581                   ??_SPIMas 0074  
__size_of_USART_Initialize 0073                   ??___wmul 0078                   ?_LCDGoto 0020  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
              ??_LCDPutCmd 0076                ??_LCDPutStr 0022                sprintf@flag 0039  
              sprintf@prec 0038           ___lwdiv@dividend 0076                   ?___aldiv 0020  
                 ?___lwdiv 0074                   ?___lwmod 0023                  __pstrings 0402  
                 ?_isdigit 0070             __size_of_Setup 0027           ___lwdiv@quotient 0020  
                 ?_sprintf 0029            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0028             ___wmul@product 0020                   _LCDWrite 05B8  
                clear_ram0 05D4                   _PIE1bits 008C                _LCDGoto$497 0023  
                 _PIR1bits 000C                __stringbase 0411          ___wmul@multiplier 0074  
         __size_of_LCDGoto 0031           _USART_Initialize 0349    __size_of_LCD_Initialize 0030  
         __size_of___aldiv 009D           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0412                _isdigit$983 0074                 sprintf@val 003A  
         __size_of_isdigit 0012            ___lwdiv@divisor 0074            ___lwdiv@counter 0022  
                 __ptext10 04B1                   __ptext11 04E1                   __ptext12 0581  
                 __ptext13 0480                   __ptext14 05A6                   __ptext15 05B8  
                 __ptext16 0560           __size_of_sprintf 0188              __size_of_main 0105  
               _LCDPutChar 0581                 _INTCONbits 000B                   isdigit@c 0075  
                 intlevel1 0000                  sprintf@ap 0037                  sprintf@sp 003C  
         ___lwmod@dividend 0025                  stringcode 040C                   sprintf@c 003F  
                 sprintf@f 0029            ___lwmod@divisor 0023            ___lwmod@counter 0028  
                 stringdir 040C                   stringtab 0402               ___aldiv@sign 0029  
 USART_Initialize@baudrate 002E  
