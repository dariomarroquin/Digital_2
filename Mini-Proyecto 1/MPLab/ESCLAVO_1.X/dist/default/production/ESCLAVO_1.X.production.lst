

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 02:54:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	nvCOMMON
   287  0076                     __pnvCOMMON:
   288  0076                     _vADC:
   289  0076                     	ds	1
   290  000B                     _INTCONbits	set	11
   291  0006                     _PORTB	set	6
   292  001E                     _ADRESH	set	30
   293  001F                     _ADCON0bits	set	31
   294  0086                     _TRISB	set	134
   295  0086                     _TRISBbits	set	134
   296  0089                     _TRISEbits	set	137
   297  0085                     _TRISAbits	set	133
   298  009F                     _ADCON1	set	159
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301  0189                     _ANSELHbits	set	393
   302  0188                     _ANSELbits	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309  000F                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  000F                     __end_of__initialization:
   313  000F  0183               	clrf	3
   314  0010  120A  118A  290F   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:
   318  0070                     ?_config_ADC:
   319  0070                     ?_ValorADC:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_Setup:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_interr:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	2
   340  0072                     ??_config_ADC:
   341  0072                     ??_ValorADC:	
   342                           ; 1 bytes @ 0x2
   343                           
   344  0072                     ??_Setup:	
   345                           ; 1 bytes @ 0x2
   346                           
   347  0072                     ??_interr:	
   348                           ; 1 bytes @ 0x2
   349                           
   350                           
   351                           ; 1 bytes @ 0x2
   352  0072                     	ds	2
   353  0074                     ValorADC@x:
   354                           
   355                           ; 1 bytes @ 0x4
   356  0074                     	ds	1
   357  0075                     ??_main:
   358                           
   359                           ; 1 bytes @ 0x5
   360  0075                     	ds	1
   361                           
   362                           	psect	maintext
   363  010F                     __pmaintext:	
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 76 in file "ESCLAVO_1.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          1       0       0       0       0
   386 ;;      Totals:         1       0       0       0       0
   387 ;;Total ram usage:        1 bytes
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_Setup
   391 ;;		_ValorADC
   392 ;;		_interr
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _main
   400  010F                     _main:
   401  010F                     l739:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   404                           
   405  010F  120A  118A  212A  120A  118A  	fcall	_Setup
   406  0114                     l741:
   407  0114  120A  118A  214D  120A  118A  	fcall	_interr
   408  0119                     l743:
   409  0119  3000               	movlw	0
   410  011A  120A  118A  2013  120A  118A  	fcall	_ValorADC
   411  011F  00F5               	movwf	??_main
   412  0120  0875               	movf	??_main,w
   413  0121  00F6               	movwf	_vADC
   414  0122                     l745:
   415  0122  0876               	movf	_vADC,w
   416  0123  1283               	bcf	3,5	;RP0=0, select bank0
   417  0124  1303               	bcf	3,6	;RP1=0, select bank0
   418  0125  0086               	movwf	6	;volatile
   419  0126  2919               	goto	l743
   420  0127  120A  118A  280C   	ljmp	start
   421  012A                     __end_of_main:
   422                           
   423                           	psect	text1
   424  014D                     __ptext1:	
   425 ;; *************** function _interr *****************
   426 ;; Defined at:
   427 ;;		line 64 in file "ESCLAVO_1.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		None
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _interr
   457  014D                     _interr:
   458  014D                     l735:	
   459                           ;incstack = 0
   460                           ; Regs used in _interr: []
   461                           
   462  014D  178B               	bsf	11,7	;volatile
   463  014E  170B               	bsf	11,6	;volatile
   464  014F                     l66:
   465  014F  0008               	return
   466  0150                     __end_of_interr:
   467                           
   468                           	psect	text2
   469  0013                     __ptext2:	
   470 ;; *************** function _ValorADC *****************
   471 ;; Defined at:
   472 ;;		line 20 in file "ADC.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  x               1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  x               1    4[COMMON] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      unsigned char 
   479 ;; Registers used:
   480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0
   488 ;;      Temps:          2       0       0       0       0
   489 ;;      Totals:         3       0       0       0       0
   490 ;;Total ram usage:        3 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _ValorADC
   502  0013                     _ValorADC:
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _ValorADC: [wreg-fsr0h+status,2+status,0]
   506                           ;ValorADC@x stored from wreg
   507  0013  00F4               	movwf	ValorADC@x
   508  0014                     l675:
   509                           
   510                           ;ADC.c: 21:     switch (x){
   511  0014  28CB               	goto	l711
   512  0015                     l25:	
   513                           ;ADC.c: 22:         case 0: TRISAbits.TRISA0 = 1; ANSELbits.ANS0 = 1; ADCON0bits.CHS = 0
      +                          ; break;
   514                           
   515  0015  1683               	bsf	3,5	;RP0=1, select bank1
   516  0016  1303               	bcf	3,6	;RP1=0, select bank1
   517  0017  1405               	bsf	5,0	;volatile
   518  0018  1683               	bsf	3,5	;RP0=1, select bank3
   519  0019  1703               	bsf	3,6	;RP1=1, select bank3
   520  001A  1408               	bsf	8,0	;volatile
   521  001B                     l677:
   522  001B  30C3               	movlw	-61
   523  001C  1283               	bcf	3,5	;RP0=0, select bank0
   524  001D  1303               	bcf	3,6	;RP1=0, select bank0
   525  001E  059F               	andwf	31,f	;volatile
   526  001F  28FF               	goto	l26
   527  0020                     l27:	
   528                           ;ADC.c: 23:         case 1: TRISAbits.TRISA1 = 1; ANSELbits.ANS1 = 1; ADCON0bits.CHS = 1
      +                          ; break;
   529                           
   530  0020  1683               	bsf	3,5	;RP0=1, select bank1
   531  0021  1303               	bcf	3,6	;RP1=0, select bank1
   532  0022  1485               	bsf	5,1	;volatile
   533  0023  1683               	bsf	3,5	;RP0=1, select bank3
   534  0024  1703               	bsf	3,6	;RP1=1, select bank3
   535  0025  1488               	bsf	8,1	;volatile
   536  0026                     l679:
   537  0026  1283               	bcf	3,5	;RP0=0, select bank0
   538  0027  1303               	bcf	3,6	;RP1=0, select bank0
   539  0028  081F               	movf	31,w	;volatile
   540  0029  39C3               	andlw	-61
   541  002A  3804               	iorlw	4
   542  002B  009F               	movwf	31	;volatile
   543  002C  28FF               	goto	l26
   544  002D                     l28:	
   545                           ;ADC.c: 24:         case 2: TRISAbits.TRISA2 = 1; ANSELbits.ANS2 = 1; ADCON0bits.CHS = 2
      +                          ; break;
   546                           
   547  002D  1683               	bsf	3,5	;RP0=1, select bank1
   548  002E  1303               	bcf	3,6	;RP1=0, select bank1
   549  002F  1505               	bsf	5,2	;volatile
   550  0030  1683               	bsf	3,5	;RP0=1, select bank3
   551  0031  1703               	bsf	3,6	;RP1=1, select bank3
   552  0032  1508               	bsf	8,2	;volatile
   553  0033                     l681:
   554  0033  1283               	bcf	3,5	;RP0=0, select bank0
   555  0034  1303               	bcf	3,6	;RP1=0, select bank0
   556  0035  081F               	movf	31,w	;volatile
   557  0036  39C3               	andlw	-61
   558  0037  3808               	iorlw	8
   559  0038  009F               	movwf	31	;volatile
   560  0039  28FF               	goto	l26
   561  003A                     l29:	
   562                           ;ADC.c: 25:         case 3: TRISAbits.TRISA3 = 1; ANSELbits.ANS3 = 1; ADCON0bits.CHS = 3
      +                          ; break;
   563                           
   564  003A  1683               	bsf	3,5	;RP0=1, select bank1
   565  003B  1303               	bcf	3,6	;RP1=0, select bank1
   566  003C  1585               	bsf	5,3	;volatile
   567  003D  1683               	bsf	3,5	;RP0=1, select bank3
   568  003E  1703               	bsf	3,6	;RP1=1, select bank3
   569  003F  1588               	bsf	8,3	;volatile
   570  0040                     l683:
   571  0040  1283               	bcf	3,5	;RP0=0, select bank0
   572  0041  1303               	bcf	3,6	;RP1=0, select bank0
   573  0042  081F               	movf	31,w	;volatile
   574  0043  39C3               	andlw	-61
   575  0044  380C               	iorlw	12
   576  0045  009F               	movwf	31	;volatile
   577  0046  28FF               	goto	l26
   578  0047                     l30:	
   579                           ;ADC.c: 26:         case 4: TRISAbits.TRISA5 = 1; ANSELbits.ANS4 = 1; ADCON0bits.CHS = 4
      +                          ; break;
   580                           
   581  0047  1683               	bsf	3,5	;RP0=1, select bank1
   582  0048  1303               	bcf	3,6	;RP1=0, select bank1
   583  0049  1685               	bsf	5,5	;volatile
   584  004A  1683               	bsf	3,5	;RP0=1, select bank3
   585  004B  1703               	bsf	3,6	;RP1=1, select bank3
   586  004C  1608               	bsf	8,4	;volatile
   587  004D                     l685:
   588  004D  1283               	bcf	3,5	;RP0=0, select bank0
   589  004E  1303               	bcf	3,6	;RP1=0, select bank0
   590  004F  081F               	movf	31,w	;volatile
   591  0050  39C3               	andlw	-61
   592  0051  3810               	iorlw	16
   593  0052  009F               	movwf	31	;volatile
   594  0053  28FF               	goto	l26
   595  0054                     l31:	
   596                           ;ADC.c: 27:         case 5: TRISEbits.TRISE0 = 1; ANSELbits.ANS5 = 1; ADCON0bits.CHS = 5
      +                          ; break;
   597                           
   598  0054  1683               	bsf	3,5	;RP0=1, select bank1
   599  0055  1303               	bcf	3,6	;RP1=0, select bank1
   600  0056  1409               	bsf	9,0	;volatile
   601  0057  1683               	bsf	3,5	;RP0=1, select bank3
   602  0058  1703               	bsf	3,6	;RP1=1, select bank3
   603  0059  1688               	bsf	8,5	;volatile
   604  005A                     l687:
   605  005A  1283               	bcf	3,5	;RP0=0, select bank0
   606  005B  1303               	bcf	3,6	;RP1=0, select bank0
   607  005C  081F               	movf	31,w	;volatile
   608  005D  39C3               	andlw	-61
   609  005E  3814               	iorlw	20
   610  005F  009F               	movwf	31	;volatile
   611  0060  28FF               	goto	l26
   612  0061                     l32:	
   613                           ;ADC.c: 28:         case 6: TRISEbits.TRISE2 = 1; ANSELbits.ANS6 = 1; ADCON0bits.CHS = 6
      +                          ; break;
   614                           
   615  0061  1683               	bsf	3,5	;RP0=1, select bank1
   616  0062  1303               	bcf	3,6	;RP1=0, select bank1
   617  0063  1509               	bsf	9,2	;volatile
   618  0064  1683               	bsf	3,5	;RP0=1, select bank3
   619  0065  1703               	bsf	3,6	;RP1=1, select bank3
   620  0066  1708               	bsf	8,6	;volatile
   621  0067                     l689:
   622  0067  1283               	bcf	3,5	;RP0=0, select bank0
   623  0068  1303               	bcf	3,6	;RP1=0, select bank0
   624  0069  081F               	movf	31,w	;volatile
   625  006A  39C3               	andlw	-61
   626  006B  3818               	iorlw	24
   627  006C  009F               	movwf	31	;volatile
   628  006D  28FF               	goto	l26
   629  006E                     l33:	
   630                           ;ADC.c: 29:         case 7: TRISEbits.TRISE3 = 1; ANSELbits.ANS7 = 1; ADCON0bits.CHS = 7
      +                          ; break;
   631                           
   632  006E  1683               	bsf	3,5	;RP0=1, select bank1
   633  006F  1303               	bcf	3,6	;RP1=0, select bank1
   634  0070  1589               	bsf	9,3	;volatile
   635  0071  1683               	bsf	3,5	;RP0=1, select bank3
   636  0072  1703               	bsf	3,6	;RP1=1, select bank3
   637  0073  1788               	bsf	8,7	;volatile
   638  0074                     l691:
   639  0074  1283               	bcf	3,5	;RP0=0, select bank0
   640  0075  1303               	bcf	3,6	;RP1=0, select bank0
   641  0076  081F               	movf	31,w	;volatile
   642  0077  39C3               	andlw	-61
   643  0078  381C               	iorlw	28
   644  0079  009F               	movwf	31	;volatile
   645  007A  28FF               	goto	l26
   646  007B                     l34:	
   647                           ;ADC.c: 30:         case 8: TRISBbits.TRISB2 = 1; ANSELHbits.ANS8 = 1; ADCON0bits.CHS = 
      +                          8; break;
   648                           
   649  007B  1683               	bsf	3,5	;RP0=1, select bank1
   650  007C  1303               	bcf	3,6	;RP1=0, select bank1
   651  007D  1506               	bsf	6,2	;volatile
   652  007E  1683               	bsf	3,5	;RP0=1, select bank3
   653  007F  1703               	bsf	3,6	;RP1=1, select bank3
   654  0080  1409               	bsf	9,0	;volatile
   655  0081                     l693:
   656  0081  1283               	bcf	3,5	;RP0=0, select bank0
   657  0082  1303               	bcf	3,6	;RP1=0, select bank0
   658  0083  081F               	movf	31,w	;volatile
   659  0084  39C3               	andlw	-61
   660  0085  3820               	iorlw	32
   661  0086  009F               	movwf	31	;volatile
   662  0087  28FF               	goto	l26
   663  0088                     l35:	
   664                           ;ADC.c: 31:         case 9: TRISBbits.TRISB3 = 1; ANSELHbits.ANS9 = 1; ADCON0bits.CHS = 
      +                          9; break;
   665                           
   666  0088  1683               	bsf	3,5	;RP0=1, select bank1
   667  0089  1303               	bcf	3,6	;RP1=0, select bank1
   668  008A  1586               	bsf	6,3	;volatile
   669  008B  1683               	bsf	3,5	;RP0=1, select bank3
   670  008C  1703               	bsf	3,6	;RP1=1, select bank3
   671  008D  1489               	bsf	9,1	;volatile
   672  008E                     l695:
   673  008E  1283               	bcf	3,5	;RP0=0, select bank0
   674  008F  1303               	bcf	3,6	;RP1=0, select bank0
   675  0090  081F               	movf	31,w	;volatile
   676  0091  39C3               	andlw	-61
   677  0092  3824               	iorlw	36
   678  0093  009F               	movwf	31	;volatile
   679  0094  28FF               	goto	l26
   680  0095                     l36:	
   681                           ;ADC.c: 32:         case 10: TRISBbits.TRISB1 = 1; ANSELHbits.ANS10 = 1; ADCON0bits.CHS 
      +                          = 10; break;
   682                           
   683  0095  1683               	bsf	3,5	;RP0=1, select bank1
   684  0096  1303               	bcf	3,6	;RP1=0, select bank1
   685  0097  1486               	bsf	6,1	;volatile
   686  0098  1683               	bsf	3,5	;RP0=1, select bank3
   687  0099  1703               	bsf	3,6	;RP1=1, select bank3
   688  009A  1509               	bsf	9,2	;volatile
   689  009B                     l697:
   690  009B  1283               	bcf	3,5	;RP0=0, select bank0
   691  009C  1303               	bcf	3,6	;RP1=0, select bank0
   692  009D  081F               	movf	31,w	;volatile
   693  009E  39C3               	andlw	-61
   694  009F  3828               	iorlw	40
   695  00A0  009F               	movwf	31	;volatile
   696  00A1  28FF               	goto	l26
   697  00A2                     l37:	
   698                           ;ADC.c: 33:         case 11: TRISBbits.TRISB4 = 1; ANSELHbits.ANS11= 1; ADCON0bits.CHS =
      +                           11; break;
   699                           
   700  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   701  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   702  00A4  1606               	bsf	6,4	;volatile
   703  00A5  1683               	bsf	3,5	;RP0=1, select bank3
   704  00A6  1703               	bsf	3,6	;RP1=1, select bank3
   705  00A7  1589               	bsf	9,3	;volatile
   706  00A8                     l699:
   707  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   708  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   709  00AA  081F               	movf	31,w	;volatile
   710  00AB  39C3               	andlw	-61
   711  00AC  382C               	iorlw	44
   712  00AD  009F               	movwf	31	;volatile
   713  00AE  28FF               	goto	l26
   714  00AF                     l38:	
   715                           ;ADC.c: 34:         case 12: TRISBbits.TRISB0 = 1; ANSELHbits.ANS12 = 1; ADCON0bits.CHS 
      +                          = 12; break;
   716                           
   717  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   718  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   719  00B1  1406               	bsf	6,0	;volatile
   720  00B2  1683               	bsf	3,5	;RP0=1, select bank3
   721  00B3  1703               	bsf	3,6	;RP1=1, select bank3
   722  00B4  1609               	bsf	9,4	;volatile
   723  00B5                     l701:
   724  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   725  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   726  00B7  081F               	movf	31,w	;volatile
   727  00B8  39C3               	andlw	-61
   728  00B9  3830               	iorlw	48
   729  00BA  009F               	movwf	31	;volatile
   730  00BB  28FF               	goto	l26
   731  00BC                     l39:	
   732                           ;ADC.c: 35:         case 13: TRISBbits.TRISB5 = 1; ANSELHbits.ANS13 = 1; ADCON0bits.CHS 
      +                          = 13; break;
   733                           
   734  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   735  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   736  00BE  1686               	bsf	6,5	;volatile
   737  00BF  1683               	bsf	3,5	;RP0=1, select bank3
   738  00C0  1703               	bsf	3,6	;RP1=1, select bank3
   739  00C1  1689               	bsf	9,5	;volatile
   740  00C2                     l703:
   741  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   742  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   743  00C4  081F               	movf	31,w	;volatile
   744  00C5  39C3               	andlw	-61
   745  00C6  3834               	iorlw	52
   746  00C7  009F               	movwf	31	;volatile
   747  00C8  28FF               	goto	l26
   748  00C9                     l705:
   749  00C9  3000               	movlw	0
   750  00CA  290E               	goto	l41
   751  00CB                     l711:
   752  00CB  0874               	movf	ValorADC@x,w
   753  00CC  00F2               	movwf	??_ValorADC
   754  00CD  01F3               	clrf	??_ValorADC+1
   755                           
   756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   757                           ; Switch size 1, requested type "simple"
   758                           ; Number of cases is 1, Range of values is 0 to 0
   759                           ; switch strategies available:
   760                           ; Name         Instructions Cycles
   761                           ; simple_byte            4     3 (average)
   762                           ; direct_byte           11     8 (fixed)
   763                           ; jumptable            260     6 (fixed)
   764                           ;	Chosen strategy is simple_byte
   765  00CE  0873               	movf	??_ValorADC+1,w
   766  00CF  3A00               	xorlw	0	; case 0
   767  00D0  1903               	skipnz
   768  00D1  28D3               	goto	l767
   769  00D2  28C9               	goto	l705
   770  00D3                     l767:
   771                           
   772                           ; Switch size 1, requested type "simple"
   773                           ; Number of cases is 14, Range of values is 0 to 13
   774                           ; switch strategies available:
   775                           ; Name         Instructions Cycles
   776                           ; simple_byte           43    22 (average)
   777                           ; direct_byte           50     8 (fixed)
   778                           ; jumptable            260     6 (fixed)
   779                           ;	Chosen strategy is simple_byte
   780  00D3  0872               	movf	??_ValorADC,w
   781  00D4  3A00               	xorlw	0	; case 0
   782  00D5  1903               	skipnz
   783  00D6  2815               	goto	l25
   784  00D7  3A01               	xorlw	1	; case 1
   785  00D8  1903               	skipnz
   786  00D9  2820               	goto	l27
   787  00DA  3A03               	xorlw	3	; case 2
   788  00DB  1903               	skipnz
   789  00DC  282D               	goto	l28
   790  00DD  3A01               	xorlw	1	; case 3
   791  00DE  1903               	skipnz
   792  00DF  283A               	goto	l29
   793  00E0  3A07               	xorlw	7	; case 4
   794  00E1  1903               	skipnz
   795  00E2  2847               	goto	l30
   796  00E3  3A01               	xorlw	1	; case 5
   797  00E4  1903               	skipnz
   798  00E5  2854               	goto	l31
   799  00E6  3A03               	xorlw	3	; case 6
   800  00E7  1903               	skipnz
   801  00E8  2861               	goto	l32
   802  00E9  3A01               	xorlw	1	; case 7
   803  00EA  1903               	skipnz
   804  00EB  286E               	goto	l33
   805  00EC  3A0F               	xorlw	15	; case 8
   806  00ED  1903               	skipnz
   807  00EE  287B               	goto	l34
   808  00EF  3A01               	xorlw	1	; case 9
   809  00F0  1903               	skipnz
   810  00F1  2888               	goto	l35
   811  00F2  3A03               	xorlw	3	; case 10
   812  00F3  1903               	skipnz
   813  00F4  2895               	goto	l36
   814  00F5  3A01               	xorlw	1	; case 11
   815  00F6  1903               	skipnz
   816  00F7  28A2               	goto	l37
   817  00F8  3A07               	xorlw	7	; case 12
   818  00F9  1903               	skipnz
   819  00FA  28AF               	goto	l38
   820  00FB  3A01               	xorlw	1	; case 13
   821  00FC  1903               	skipnz
   822  00FD  28BC               	goto	l39
   823  00FE  28C9               	goto	l705
   824  00FF                     l26:
   825                           
   826                           ;ADC.c: 38:     ADCON0bits.ADON = 1;
   827  00FF  141F               	bsf	31,0	;volatile
   828  0100                     l713:
   829                           
   830                           ;ADC.c: 39:     _delay((unsigned long)((20)*(8000000/4000000.0)));
   831  0100  300D               	movlw	13
   832  0101  00F2               	movwf	??_ValorADC
   833  0102                     u27:
   834  0102  0BF2               	decfsz	??_ValorADC,f
   835  0103  2902               	goto	u27
   836  0104                     l715:
   837                           
   838                           ;ADC.c: 40:     ADCON0bits.GO = 1;
   839  0104  1283               	bcf	3,5	;RP0=0, select bank0
   840  0105  1303               	bcf	3,6	;RP1=0, select bank0
   841  0106  149F               	bsf	31,1	;volatile
   842  0107                     l717:
   843                           
   844                           ;ADC.c: 42:     if (ADCON0bits.GO_DONE ==1){goto resultado;}
   845  0107  1C9F               	btfss	31,1	;volatile
   846  0108  290A               	goto	u11
   847  0109  290B               	goto	u10
   848  010A                     u11:
   849  010A  290C               	goto	l43
   850  010B                     u10:
   851  010B  2907               	goto	l717
   852  010C                     l43:	
   853                           ;ADC.c: 43:     else {ADCON0bits.ADON=0; return ADRESH;}
   854                           
   855  010C  101F               	bcf	31,0	;volatile
   856  010D                     l723:
   857  010D  081E               	movf	30,w	;volatile
   858  010E                     l41:
   859  010E  0008               	return
   860  010F                     __end_of_ValorADC:
   861                           
   862                           	psect	text3
   863  012A                     __ptext3:	
   864 ;; *************** function _Setup *****************
   865 ;; Defined at:
   866 ;;		line 50 in file "ESCLAVO_1.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    2
   887 ;; This function calls:
   888 ;;		_config_ADC
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _Setup
   896  012A                     _Setup:
   897  012A                     l731:	
   898                           ;incstack = 0
   899                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
   900                           
   901  012A  1683               	bsf	3,5	;RP0=1, select bank1
   902  012B  1303               	bcf	3,6	;RP1=0, select bank1
   903  012C  0186               	clrf	6	;volatile
   904  012D  1283               	bcf	3,5	;RP0=0, select bank0
   905  012E  1303               	bcf	3,6	;RP1=0, select bank0
   906  012F  0186               	clrf	6	;volatile
   907  0130  1683               	bsf	3,5	;RP0=1, select bank3
   908  0131  1703               	bsf	3,6	;RP1=1, select bank3
   909  0132  0188               	clrf	8	;volatile
   910  0133  0189               	clrf	9	;volatile
   911  0134                     l733:
   912  0134  120A  118A  213A  120A  118A  	fcall	_config_ADC
   913  0139                     l63:
   914  0139  0008               	return
   915  013A                     __end_of_Setup:
   916                           
   917                           	psect	text4
   918  013A                     __ptext4:	
   919 ;; *************** function _config_ADC *****************
   920 ;; Defined at:
   921 ;;		line 15 in file "ADC.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_Setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _config_ADC
   951  013A                     _config_ADC:
   952  013A                     l671:	
   953                           ;incstack = 0
   954                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
   955                           
   956                           
   957                           ;ADC.c: 16:     ADCON0bits.ADCS = 1;
   958  013A  1283               	bcf	3,5	;RP0=0, select bank0
   959  013B  1303               	bcf	3,6	;RP1=0, select bank0
   960  013C  081F               	movf	31,w	;volatile
   961  013D  393F               	andlw	-193
   962  013E  3840               	iorlw	64
   963  013F  009F               	movwf	31	;volatile
   964  0140                     l673:
   965                           
   966                           ;ADC.c: 17:     ADCON1 = 0;
   967  0140  1683               	bsf	3,5	;RP0=1, select bank1
   968  0141  1303               	bcf	3,6	;RP1=0, select bank1
   969  0142  019F               	clrf	31	;volatile
   970  0143                     l21:
   971  0143  0008               	return
   972  0144                     __end_of_config_ADC:
   973                           
   974                           	psect	text5
   975  0144                     __ptext5:	
   976 ;; *************** function _ISR *****************
   977 ;; Defined at:
   978 ;;		line 70 in file "ESCLAVO_1.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		None
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0
   995 ;;      Totals:         2       0       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		Interrupt level 1
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _ISR
  1007  0144                     _ISR:
  1008  0144                     i1l737:
  1009  0144  178B               	bsf	11,7	;volatile
  1010  0145  170B               	bsf	11,6	;volatile
  1011  0146                     i1l71:
  1012  0146  0871               	movf	??_ISR+1,w
  1013  0147  008A               	movwf	10
  1014  0148  0E70               	swapf	??_ISR,w
  1015  0149  0083               	movwf	3
  1016  014A  0EFE               	swapf	btemp,f
  1017  014B  0E7E               	swapf	btemp,w
  1018  014C  0009               	retfie
  1019  014D                     __end_of_ISR:
  1020  007E                     btemp	set	126	;btemp
  1021  007E                     wtemp0	set	126
  1022                           
  1023                           	psect	intentry
  1024  0004                     __pintentry:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _ISR: []
  1027                           
  1028  0004                     interrupt_function:
  1029  007E                     saved_w	set	btemp
  1030  0004  00FE               	movwf	btemp
  1031  0005  0E03               	swapf	3,w
  1032  0006  00F0               	movwf	??_ISR
  1033  0007  080A               	movf	10,w
  1034  0008  00F1               	movwf	??_ISR+1
  1035  0009  120A  118A  2944   	ljmp	_ISR
  1036                           
  1037                           	psect	config
  1038                           
  1039                           ;Config register CONFIG1 @ 0x2007
  1040                           ;	Oscillator Selection bits
  1041                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1042                           ;	Watchdog Timer Enable bit
  1043                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1044                           ;	Power-up Timer Enable bit
  1045                           ;	PWRTE = OFF, PWRT disabled
  1046                           ;	RE3/MCLR pin function select bit
  1047                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1048                           ;	Code Protection bit
  1049                           ;	CP = OFF, Program memory code protection is disabled
  1050                           ;	Data Code Protection bit
  1051                           ;	CPD = OFF, Data memory code protection is disabled
  1052                           ;	Brown Out Reset Selection bits
  1053                           ;	BOREN = OFF, BOR disabled
  1054                           ;	Internal External Switchover bit
  1055                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1056                           ;	Fail-Safe Clock Monitor Enabled bit
  1057                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1058                           ;	Low Voltage Programming Enable bit
  1059                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1060                           ;	In-Circuit Debugger Mode bit
  1061                           ;	DEBUG = 0x1, unprogrammed default
  1062  2007                     	org	8199
  1063  2007  20D1               	dw	8401
  1064                           
  1065                           ;Config register CONFIG2 @ 0x2008
  1066                           ;	Brown-out Reset Selection bit
  1067                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1068                           ;	Flash Program Memory Self Write Enable bits
  1069                           ;	WRT = OFF, Write protection off
  1070  2008                     	org	8200
  1071  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ValorADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              5 COMMON     1     1      0
                              _Setup
                           _ValorADC
                             _interr
 ---------------------------------------------------------------------------------
 (1) _interr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ValorADC                                             3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _config_ADC
   _ValorADC
   _interr

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 02:54:14 2021

                     l21 0143                       l30 0047                       l31 0054  
                     l32 0061                       l41 010E                       l33 006E  
                     l25 0015                       l34 007B                       l26 00FF  
                     l43 010C                       l35 0088                       l27 0020  
                     l36 0095                       l28 002D                       l37 00A2  
                     l29 003A                       l38 00AF                       l63 0139  
                     l39 00BC                       l66 014F                       u10 010B  
                     u11 010A                       u27 0102                      l701 00B5  
                    l703 00C2                      l711 00CB                      l713 0100  
                    l705 00C9                      l731 012A                      l723 010D  
                    l715 0104                      l733 0134                      l717 0107  
                    l741 0114                      l671 013A                      l735 014D  
                    l743 0119                      l673 0140                      l681 0033  
                    l745 0122                      l691 0074                      l683 0040  
                    l675 0014                      l739 010F                      l693 0081  
                    l685 004D                      l677 001B                      l767 00D3  
                    l695 008E                      l687 005A                      l679 0026  
                    l697 009B                      l689 0067                      l699 00A8  
                    _ISR 0144                     ?_ISR 0070                     i1l71 0146  
                   _vADC 0076                     _main 010F                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l737 0144                    _PORTB 0006  
                  _TRISB 0086                    _Setup 012A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 012A                   ??_main 0075         __end_of_ValorADC 010F  
                 ?_Setup 0070                   _ADCON1 009F                   _ADRESH 001E  
                 _ANSELH 0189                   _interr 014D                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070            __end_of_Setup 013A  
                ??_Setup 0072               __pnvCOMMON 0076                ?_ValorADC 0070  
             __pmaintext 010F               __pintentry 0004                  ?_interr 0070  
             _config_ADC 013A               ??_ValorADC 0072                _ANSELbits 0188  
        __size_of_interr 0003                  __ptext1 014D                  __ptext2 0013  
                __ptext3 012A                  __ptext4 013A                  __ptext5 0144  
           __size_of_ISR 0009     end_of_initialization 000F              ?_config_ADC 0070  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
         __end_of_interr 0150      start_initialization 000F              __end_of_ISR 014D  
              ValorADC@x 0074      __size_of_config_ADC 000A        __size_of_ValorADC 00FC  
               ??_interr 0072                ___latbits 0002           __size_of_Setup 0010  
      interrupt_function 0004               _ADCON0bits 001F             ??_config_ADC 0072  
               _ValorADC 0013       __end_of_config_ADC 0144               _ANSELHbits 0189  
          __size_of_main 001B               _INTCONbits 000B                 intlevel1 0000  
