

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:53:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365                           
   366                           	psect	nvCOMMON
   367  0078                     __pnvCOMMON:
   368  0078                     _vADC:
   369  0078                     	ds	1
   370  0014                     _SSPCON	set	20
   371  0013                     _SSPBUF	set	19
   372  000C                     _PIR1bits	set	12
   373  000B                     _INTCONbits	set	11
   374  0008                     _PORTD	set	8
   375  0006                     _PORTB	set	6
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  008C                     _PIE1bits	set	140
   379  0094                     _SSPSTAT	set	148
   380  0087                     _TRISCbits	set	135
   381  0094                     _SSPSTATbits	set	148
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0086                     _TRISBbits	set	134
   385  0089                     _TRISEbits	set	137
   386  0085                     _TRISAbits	set	133
   387  009F                     _ADCON1	set	159
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390  0189                     _ANSELHbits	set	393
   391  0188                     _ANSELbits	set	392
   392                           
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395                           ; #config settings
   396                           
   397  000F                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0011                     __end_of__initialization:
   406  0011  0183               	clrf	3
   407  0012  120A  118A  292E   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0076                     __pbssCOMMON:
   411  0076                     _V1:
   412  0076                     	ds	2
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_SPI_ES:
   417  0070                     ?_config_ADC:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_ValorADC:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_Setup:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_interr:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_ISR:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_ISR:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	2
   441  0072                     ??_SPI_ES:
   442  0072                     ??_config_ADC:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ??_ValorADC:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ??_Setup:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     ??_interr:	
   452                           ; 1 bytes @ 0x2
   453                           
   454                           
   455                           ; 1 bytes @ 0x2
   456  0072                     	ds	2
   457  0074                     ValorADC@x:
   458                           
   459                           ; 1 bytes @ 0x4
   460  0074                     	ds	1
   461  0075                     ??_main:
   462                           
   463                           ; 1 bytes @ 0x5
   464  0075                     	ds	1
   465                           
   466                           	psect	maintext
   467  012E                     __pmaintext:	
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 96 in file "ESCLAVO_1.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : B00/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          1       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels required when called:    3
   493 ;; This function calls:
   494 ;;		_Setup
   495 ;;		_ValorADC
   496 ;;		_interr
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _main
   504  012E                     _main:
   505  012E                     l793:	
   506                           ;incstack = 0
   507                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   508                           
   509                           
   510                           ;ESCLAVO_1.c: 97:     Setup();
   511  012E  120A  118A  2149  120A  118A  	fcall	_Setup
   512  0133                     l795:
   513                           
   514                           ;ESCLAVO_1.c: 98:     interr();
   515  0133  120A  118A  2181  120A  118A  	fcall	_interr
   516  0138                     l797:
   517                           
   518                           ;ESCLAVO_1.c: 100:         vADC= ValorADC(0);
   519  0138  3000               	movlw	0
   520  0139  120A  118A  2015  120A  118A  	fcall	_ValorADC
   521  013E  00F5               	movwf	??_main
   522  013F  0875               	movf	??_main,w
   523  0140  00F8               	movwf	_vADC
   524  0141                     l799:
   525                           
   526                           ;ESCLAVO_1.c: 102:         PORTB=vADC;
   527  0141  0878               	movf	_vADC,w
   528  0142  1283               	bcf	3,5	;RP0=0, select bank0
   529  0143  1303               	bcf	3,6	;RP1=0, select bank0
   530  0144  0086               	movwf	6	;volatile
   531  0145  2938               	goto	l797
   532  0146  120A  118A  280C   	ljmp	start
   533  0149                     __end_of_main:
   534                           
   535                           	psect	text1
   536  0181                     __ptext1:	
   537 ;; *************** function _interr *****************
   538 ;; Defined at:
   539 ;;		line 69 in file "ESCLAVO_1.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		None
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _interr
   569  0181                     _interr:
   570  0181                     l781:	
   571                           ;incstack = 0
   572                           ; Regs used in _interr: []
   573                           
   574                           
   575                           ;ESCLAVO_1.c: 70:     INTCONbits.GIE = 1;
   576  0181  178B               	bsf	11,7	;volatile
   577                           
   578                           ;ESCLAVO_1.c: 71:     INTCONbits.PEIE = 1;
   579  0182  170B               	bsf	11,6	;volatile
   580  0183                     l80:
   581  0183  0008               	return
   582  0184                     __end_of_interr:
   583                           
   584                           	psect	text2
   585  0015                     __ptext2:	
   586 ;; *************** function _ValorADC *****************
   587 ;; Defined at:
   588 ;;		line 20 in file "ADC.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  x               1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  x               1    4[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      unsigned char 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0
   605 ;;      Totals:         3       0       0       0       0
   606 ;;Total ram usage:        3 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _ValorADC
   618  0015                     _ValorADC:
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _ValorADC: [wreg-fsr0h+status,2+status,0]
   622                           ;ValorADC@x stored from wreg
   623  0015  00F4               	movwf	ValorADC@x
   624  0016                     l719:
   625                           
   626                           ;ADC.c: 21:     switch (x){
   627  0016  28CD               	goto	l755
   628  0017                     l25:	
   629                           ;ADC.c: 22:         case 0: TRISAbits.TRISA0 = 1; ANSELbits.ANS0 = 1; ADCON0bits.CHS = 0
      +                          ; break;
   630                           
   631  0017  1683               	bsf	3,5	;RP0=1, select bank1
   632  0018  1303               	bcf	3,6	;RP1=0, select bank1
   633  0019  1405               	bsf	5,0	;volatile
   634  001A  1683               	bsf	3,5	;RP0=1, select bank3
   635  001B  1703               	bsf	3,6	;RP1=1, select bank3
   636  001C  1408               	bsf	8,0	;volatile
   637  001D                     l721:
   638  001D  30C3               	movlw	-61
   639  001E  1283               	bcf	3,5	;RP0=0, select bank0
   640  001F  1303               	bcf	3,6	;RP1=0, select bank0
   641  0020  059F               	andwf	31,f	;volatile
   642  0021  2901               	goto	l26
   643  0022                     l27:	
   644                           ;ADC.c: 23:         case 1: TRISAbits.TRISA1 = 1; ANSELbits.ANS1 = 1; ADCON0bits.CHS = 1
      +                          ; break;
   645                           
   646  0022  1683               	bsf	3,5	;RP0=1, select bank1
   647  0023  1303               	bcf	3,6	;RP1=0, select bank1
   648  0024  1485               	bsf	5,1	;volatile
   649  0025  1683               	bsf	3,5	;RP0=1, select bank3
   650  0026  1703               	bsf	3,6	;RP1=1, select bank3
   651  0027  1488               	bsf	8,1	;volatile
   652  0028                     l723:
   653  0028  1283               	bcf	3,5	;RP0=0, select bank0
   654  0029  1303               	bcf	3,6	;RP1=0, select bank0
   655  002A  081F               	movf	31,w	;volatile
   656  002B  39C3               	andlw	-61
   657  002C  3804               	iorlw	4
   658  002D  009F               	movwf	31	;volatile
   659  002E  2901               	goto	l26
   660  002F                     l28:	
   661                           ;ADC.c: 24:         case 2: TRISAbits.TRISA2 = 1; ANSELbits.ANS2 = 1; ADCON0bits.CHS = 2
      +                          ; break;
   662                           
   663  002F  1683               	bsf	3,5	;RP0=1, select bank1
   664  0030  1303               	bcf	3,6	;RP1=0, select bank1
   665  0031  1505               	bsf	5,2	;volatile
   666  0032  1683               	bsf	3,5	;RP0=1, select bank3
   667  0033  1703               	bsf	3,6	;RP1=1, select bank3
   668  0034  1508               	bsf	8,2	;volatile
   669  0035                     l725:
   670  0035  1283               	bcf	3,5	;RP0=0, select bank0
   671  0036  1303               	bcf	3,6	;RP1=0, select bank0
   672  0037  081F               	movf	31,w	;volatile
   673  0038  39C3               	andlw	-61
   674  0039  3808               	iorlw	8
   675  003A  009F               	movwf	31	;volatile
   676  003B  2901               	goto	l26
   677  003C                     l29:	
   678                           ;ADC.c: 25:         case 3: TRISAbits.TRISA3 = 1; ANSELbits.ANS3 = 1; ADCON0bits.CHS = 3
      +                          ; break;
   679                           
   680  003C  1683               	bsf	3,5	;RP0=1, select bank1
   681  003D  1303               	bcf	3,6	;RP1=0, select bank1
   682  003E  1585               	bsf	5,3	;volatile
   683  003F  1683               	bsf	3,5	;RP0=1, select bank3
   684  0040  1703               	bsf	3,6	;RP1=1, select bank3
   685  0041  1588               	bsf	8,3	;volatile
   686  0042                     l727:
   687  0042  1283               	bcf	3,5	;RP0=0, select bank0
   688  0043  1303               	bcf	3,6	;RP1=0, select bank0
   689  0044  081F               	movf	31,w	;volatile
   690  0045  39C3               	andlw	-61
   691  0046  380C               	iorlw	12
   692  0047  009F               	movwf	31	;volatile
   693  0048  2901               	goto	l26
   694  0049                     l30:	
   695                           ;ADC.c: 26:         case 4: TRISAbits.TRISA5 = 1; ANSELbits.ANS4 = 1; ADCON0bits.CHS = 4
      +                          ; break;
   696                           
   697  0049  1683               	bsf	3,5	;RP0=1, select bank1
   698  004A  1303               	bcf	3,6	;RP1=0, select bank1
   699  004B  1685               	bsf	5,5	;volatile
   700  004C  1683               	bsf	3,5	;RP0=1, select bank3
   701  004D  1703               	bsf	3,6	;RP1=1, select bank3
   702  004E  1608               	bsf	8,4	;volatile
   703  004F                     l729:
   704  004F  1283               	bcf	3,5	;RP0=0, select bank0
   705  0050  1303               	bcf	3,6	;RP1=0, select bank0
   706  0051  081F               	movf	31,w	;volatile
   707  0052  39C3               	andlw	-61
   708  0053  3810               	iorlw	16
   709  0054  009F               	movwf	31	;volatile
   710  0055  2901               	goto	l26
   711  0056                     l31:	
   712                           ;ADC.c: 27:         case 5: TRISEbits.TRISE0 = 1; ANSELbits.ANS5 = 1; ADCON0bits.CHS = 5
      +                          ; break;
   713                           
   714  0056  1683               	bsf	3,5	;RP0=1, select bank1
   715  0057  1303               	bcf	3,6	;RP1=0, select bank1
   716  0058  1409               	bsf	9,0	;volatile
   717  0059  1683               	bsf	3,5	;RP0=1, select bank3
   718  005A  1703               	bsf	3,6	;RP1=1, select bank3
   719  005B  1688               	bsf	8,5	;volatile
   720  005C                     l731:
   721  005C  1283               	bcf	3,5	;RP0=0, select bank0
   722  005D  1303               	bcf	3,6	;RP1=0, select bank0
   723  005E  081F               	movf	31,w	;volatile
   724  005F  39C3               	andlw	-61
   725  0060  3814               	iorlw	20
   726  0061  009F               	movwf	31	;volatile
   727  0062  2901               	goto	l26
   728  0063                     l32:	
   729                           ;ADC.c: 28:         case 6: TRISEbits.TRISE2 = 1; ANSELbits.ANS6 = 1; ADCON0bits.CHS = 6
      +                          ; break;
   730                           
   731  0063  1683               	bsf	3,5	;RP0=1, select bank1
   732  0064  1303               	bcf	3,6	;RP1=0, select bank1
   733  0065  1509               	bsf	9,2	;volatile
   734  0066  1683               	bsf	3,5	;RP0=1, select bank3
   735  0067  1703               	bsf	3,6	;RP1=1, select bank3
   736  0068  1708               	bsf	8,6	;volatile
   737  0069                     l733:
   738  0069  1283               	bcf	3,5	;RP0=0, select bank0
   739  006A  1303               	bcf	3,6	;RP1=0, select bank0
   740  006B  081F               	movf	31,w	;volatile
   741  006C  39C3               	andlw	-61
   742  006D  3818               	iorlw	24
   743  006E  009F               	movwf	31	;volatile
   744  006F  2901               	goto	l26
   745  0070                     l33:	
   746                           ;ADC.c: 29:         case 7: TRISEbits.TRISE3 = 1; ANSELbits.ANS7 = 1; ADCON0bits.CHS = 7
      +                          ; break;
   747                           
   748  0070  1683               	bsf	3,5	;RP0=1, select bank1
   749  0071  1303               	bcf	3,6	;RP1=0, select bank1
   750  0072  1589               	bsf	9,3	;volatile
   751  0073  1683               	bsf	3,5	;RP0=1, select bank3
   752  0074  1703               	bsf	3,6	;RP1=1, select bank3
   753  0075  1788               	bsf	8,7	;volatile
   754  0076                     l735:
   755  0076  1283               	bcf	3,5	;RP0=0, select bank0
   756  0077  1303               	bcf	3,6	;RP1=0, select bank0
   757  0078  081F               	movf	31,w	;volatile
   758  0079  39C3               	andlw	-61
   759  007A  381C               	iorlw	28
   760  007B  009F               	movwf	31	;volatile
   761  007C  2901               	goto	l26
   762  007D                     l34:	
   763                           ;ADC.c: 30:         case 8: TRISBbits.TRISB2 = 1; ANSELHbits.ANS8 = 1; ADCON0bits.CHS = 
      +                          8; break;
   764                           
   765  007D  1683               	bsf	3,5	;RP0=1, select bank1
   766  007E  1303               	bcf	3,6	;RP1=0, select bank1
   767  007F  1506               	bsf	6,2	;volatile
   768  0080  1683               	bsf	3,5	;RP0=1, select bank3
   769  0081  1703               	bsf	3,6	;RP1=1, select bank3
   770  0082  1409               	bsf	9,0	;volatile
   771  0083                     l737:
   772  0083  1283               	bcf	3,5	;RP0=0, select bank0
   773  0084  1303               	bcf	3,6	;RP1=0, select bank0
   774  0085  081F               	movf	31,w	;volatile
   775  0086  39C3               	andlw	-61
   776  0087  3820               	iorlw	32
   777  0088  009F               	movwf	31	;volatile
   778  0089  2901               	goto	l26
   779  008A                     l35:	
   780                           ;ADC.c: 31:         case 9: TRISBbits.TRISB3 = 1; ANSELHbits.ANS9 = 1; ADCON0bits.CHS = 
      +                          9; break;
   781                           
   782  008A  1683               	bsf	3,5	;RP0=1, select bank1
   783  008B  1303               	bcf	3,6	;RP1=0, select bank1
   784  008C  1586               	bsf	6,3	;volatile
   785  008D  1683               	bsf	3,5	;RP0=1, select bank3
   786  008E  1703               	bsf	3,6	;RP1=1, select bank3
   787  008F  1489               	bsf	9,1	;volatile
   788  0090                     l739:
   789  0090  1283               	bcf	3,5	;RP0=0, select bank0
   790  0091  1303               	bcf	3,6	;RP1=0, select bank0
   791  0092  081F               	movf	31,w	;volatile
   792  0093  39C3               	andlw	-61
   793  0094  3824               	iorlw	36
   794  0095  009F               	movwf	31	;volatile
   795  0096  2901               	goto	l26
   796  0097                     l36:	
   797                           ;ADC.c: 32:         case 10: TRISBbits.TRISB1 = 1; ANSELHbits.ANS10 = 1; ADCON0bits.CHS 
      +                          = 10; break;
   798                           
   799  0097  1683               	bsf	3,5	;RP0=1, select bank1
   800  0098  1303               	bcf	3,6	;RP1=0, select bank1
   801  0099  1486               	bsf	6,1	;volatile
   802  009A  1683               	bsf	3,5	;RP0=1, select bank3
   803  009B  1703               	bsf	3,6	;RP1=1, select bank3
   804  009C  1509               	bsf	9,2	;volatile
   805  009D                     l741:
   806  009D  1283               	bcf	3,5	;RP0=0, select bank0
   807  009E  1303               	bcf	3,6	;RP1=0, select bank0
   808  009F  081F               	movf	31,w	;volatile
   809  00A0  39C3               	andlw	-61
   810  00A1  3828               	iorlw	40
   811  00A2  009F               	movwf	31	;volatile
   812  00A3  2901               	goto	l26
   813  00A4                     l37:	
   814                           ;ADC.c: 33:         case 11: TRISBbits.TRISB4 = 1; ANSELHbits.ANS11= 1; ADCON0bits.CHS =
      +                           11; break;
   815                           
   816  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   817  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   818  00A6  1606               	bsf	6,4	;volatile
   819  00A7  1683               	bsf	3,5	;RP0=1, select bank3
   820  00A8  1703               	bsf	3,6	;RP1=1, select bank3
   821  00A9  1589               	bsf	9,3	;volatile
   822  00AA                     l743:
   823  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   824  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   825  00AC  081F               	movf	31,w	;volatile
   826  00AD  39C3               	andlw	-61
   827  00AE  382C               	iorlw	44
   828  00AF  009F               	movwf	31	;volatile
   829  00B0  2901               	goto	l26
   830  00B1                     l38:	
   831                           ;ADC.c: 34:         case 12: TRISBbits.TRISB0 = 1; ANSELHbits.ANS12 = 1; ADCON0bits.CHS 
      +                          = 12; break;
   832                           
   833  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   834  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   835  00B3  1406               	bsf	6,0	;volatile
   836  00B4  1683               	bsf	3,5	;RP0=1, select bank3
   837  00B5  1703               	bsf	3,6	;RP1=1, select bank3
   838  00B6  1609               	bsf	9,4	;volatile
   839  00B7                     l745:
   840  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   841  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   842  00B9  081F               	movf	31,w	;volatile
   843  00BA  39C3               	andlw	-61
   844  00BB  3830               	iorlw	48
   845  00BC  009F               	movwf	31	;volatile
   846  00BD  2901               	goto	l26
   847  00BE                     l39:	
   848                           ;ADC.c: 35:         case 13: TRISBbits.TRISB5 = 1; ANSELHbits.ANS13 = 1; ADCON0bits.CHS 
      +                          = 13; break;
   849                           
   850  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   851  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   852  00C0  1686               	bsf	6,5	;volatile
   853  00C1  1683               	bsf	3,5	;RP0=1, select bank3
   854  00C2  1703               	bsf	3,6	;RP1=1, select bank3
   855  00C3  1689               	bsf	9,5	;volatile
   856  00C4                     l747:
   857  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   858  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   859  00C6  081F               	movf	31,w	;volatile
   860  00C7  39C3               	andlw	-61
   861  00C8  3834               	iorlw	52
   862  00C9  009F               	movwf	31	;volatile
   863  00CA  2901               	goto	l26
   864  00CB                     l749:
   865  00CB  3000               	movlw	0
   866  00CC  2910               	goto	l41
   867  00CD                     l755:
   868  00CD  0874               	movf	ValorADC@x,w
   869  00CE  00F2               	movwf	??_ValorADC
   870  00CF  01F3               	clrf	??_ValorADC+1
   871                           
   872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   873                           ; Switch size 1, requested type "simple"
   874                           ; Number of cases is 1, Range of values is 0 to 0
   875                           ; switch strategies available:
   876                           ; Name         Instructions Cycles
   877                           ; simple_byte            4     3 (average)
   878                           ; direct_byte           11     8 (fixed)
   879                           ; jumptable            260     6 (fixed)
   880                           ;	Chosen strategy is simple_byte
   881  00D0  0873               	movf	??_ValorADC+1,w
   882  00D1  3A00               	xorlw	0	; case 0
   883  00D2  1903               	skipnz
   884  00D3  28D5               	goto	l821
   885  00D4  28CB               	goto	l749
   886  00D5                     l821:
   887                           
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 14, Range of values is 0 to 13
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte           43    22 (average)
   893                           ; direct_byte           50     8 (fixed)
   894                           ; jumptable            260     6 (fixed)
   895                           ;	Chosen strategy is simple_byte
   896  00D5  0872               	movf	??_ValorADC,w
   897  00D6  3A00               	xorlw	0	; case 0
   898  00D7  1903               	skipnz
   899  00D8  2817               	goto	l25
   900  00D9  3A01               	xorlw	1	; case 1
   901  00DA  1903               	skipnz
   902  00DB  2822               	goto	l27
   903  00DC  3A03               	xorlw	3	; case 2
   904  00DD  1903               	skipnz
   905  00DE  282F               	goto	l28
   906  00DF  3A01               	xorlw	1	; case 3
   907  00E0  1903               	skipnz
   908  00E1  283C               	goto	l29
   909  00E2  3A07               	xorlw	7	; case 4
   910  00E3  1903               	skipnz
   911  00E4  2849               	goto	l30
   912  00E5  3A01               	xorlw	1	; case 5
   913  00E6  1903               	skipnz
   914  00E7  2856               	goto	l31
   915  00E8  3A03               	xorlw	3	; case 6
   916  00E9  1903               	skipnz
   917  00EA  2863               	goto	l32
   918  00EB  3A01               	xorlw	1	; case 7
   919  00EC  1903               	skipnz
   920  00ED  2870               	goto	l33
   921  00EE  3A0F               	xorlw	15	; case 8
   922  00EF  1903               	skipnz
   923  00F0  287D               	goto	l34
   924  00F1  3A01               	xorlw	1	; case 9
   925  00F2  1903               	skipnz
   926  00F3  288A               	goto	l35
   927  00F4  3A03               	xorlw	3	; case 10
   928  00F5  1903               	skipnz
   929  00F6  2897               	goto	l36
   930  00F7  3A01               	xorlw	1	; case 11
   931  00F8  1903               	skipnz
   932  00F9  28A4               	goto	l37
   933  00FA  3A07               	xorlw	7	; case 12
   934  00FB  1903               	skipnz
   935  00FC  28B1               	goto	l38
   936  00FD  3A01               	xorlw	1	; case 13
   937  00FE  1903               	skipnz
   938  00FF  28BE               	goto	l39
   939  0100  28CB               	goto	l749
   940  0101                     l26:
   941                           
   942                           ;ADC.c: 38:     ADCON0bits.ADON = 1;
   943  0101  141F               	bsf	31,0	;volatile
   944  0102                     l757:
   945                           
   946                           ;ADC.c: 39:     _delay((unsigned long)((35)*(8000000/4000000.0)));
   947  0102  3017               	movlw	23
   948  0103  00F2               	movwf	??_ValorADC
   949  0104                     u47:
   950  0104  0BF2               	decfsz	??_ValorADC,f
   951  0105  2904               	goto	u47
   952  0106                     l759:
   953                           
   954                           ;ADC.c: 40:     ADCON0bits.GO = 1;
   955  0106  1283               	bcf	3,5	;RP0=0, select bank0
   956  0107  1303               	bcf	3,6	;RP1=0, select bank0
   957  0108  149F               	bsf	31,1	;volatile
   958  0109                     l761:
   959                           
   960                           ;ADC.c: 42:     if (ADCON0bits.GO_DONE ==1){goto resultado;}
   961  0109  1C9F               	btfss	31,1	;volatile
   962  010A  290C               	goto	u11
   963  010B  290D               	goto	u10
   964  010C                     u11:
   965  010C  290E               	goto	l43
   966  010D                     u10:
   967  010D  2909               	goto	l761
   968  010E                     l43:	
   969                           ;ADC.c: 43:     else {ADCON0bits.ADON=0; return ADRESH;}
   970                           
   971  010E  101F               	bcf	31,0	;volatile
   972  010F                     l767:
   973  010F  081E               	movf	30,w	;volatile
   974  0110                     l41:
   975  0110  0008               	return
   976  0111                     __end_of_ValorADC:
   977                           
   978                           	psect	text3
   979  0149                     __ptext3:	
   980 ;; *************** function _Setup *****************
   981 ;; Defined at:
   982 ;;		line 52 in file "ESCLAVO_1.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		_SPI_ES
  1005 ;;		_config_ADC
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _Setup
  1013  0149                     _Setup:
  1014  0149                     l775:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
  1017                           
  1018                           
  1019                           ;ESCLAVO_1.c: 53:     TRISB=0;
  1020  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1021  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1022  014B  0186               	clrf	6	;volatile
  1023                           
  1024                           ;ESCLAVO_1.c: 54:     PORTB=0;
  1025  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1026  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1027  014E  0186               	clrf	6	;volatile
  1028                           
  1029                           ;ESCLAVO_1.c: 55:     ANSEL=0;
  1030  014F  1683               	bsf	3,5	;RP0=1, select bank3
  1031  0150  1703               	bsf	3,6	;RP1=1, select bank3
  1032  0151  0188               	clrf	8	;volatile
  1033                           
  1034                           ;ESCLAVO_1.c: 56:     ANSELH=0;
  1035  0152  0189               	clrf	9	;volatile
  1036                           
  1037                           ;ESCLAVO_1.c: 57:     TRISD= 0;
  1038  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0155  0188               	clrf	8	;volatile
  1041                           
  1042                           ;ESCLAVO_1.c: 58:     PORTD= 0;
  1043  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0158  0188               	clrf	8	;volatile
  1046  0159                     l777:
  1047                           
  1048                           ;ESCLAVO_1.c: 59:     config_ADC();
  1049  0159  120A  118A  2177  120A  118A  	fcall	_config_ADC
  1050  015E                     l779:
  1051                           
  1052                           ;ESCLAVO_1.c: 60:     SPI_ES();
  1053  015E  120A  118A  2164  120A  118A  	fcall	_SPI_ES
  1054  0163                     l77:
  1055  0163  0008               	return
  1056  0164                     __end_of_Setup:
  1057                           
  1058                           	psect	text4
  1059  0177                     __ptext4:	
  1060 ;; *************** function _config_ADC *****************
  1061 ;; Defined at:
  1062 ;;		line 15 in file "ADC.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_Setup
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _config_ADC
  1092  0177                     _config_ADC:
  1093  0177                     l705:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1096                           
  1097                           
  1098                           ;ADC.c: 16:     ADCON0bits.ADCS = 1;
  1099  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0179  081F               	movf	31,w	;volatile
  1102  017A  393F               	andlw	-193
  1103  017B  3840               	iorlw	64
  1104  017C  009F               	movwf	31	;volatile
  1105  017D                     l707:
  1106                           
  1107                           ;ADC.c: 17:     ADCON1 = 0;
  1108  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1109  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1110  017F  019F               	clrf	31	;volatile
  1111  0180                     l21:
  1112  0180  0008               	return
  1113  0181                     __end_of_config_ADC:
  1114                           
  1115                           	psect	text5
  1116  0164                     __ptext5:	
  1117 ;; *************** function _SPI_ES *****************
  1118 ;; Defined at:
  1119 ;;		line 11 in file "spies.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_Setup
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _SPI_ES
  1149  0164                     _SPI_ES:
  1150  0164                     l709:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _SPI_ES: [wreg+status,2]
  1153                           
  1154                           
  1155                           ;spies.c: 13:     TRISCbits.TRISC3 = 1;
  1156  0164  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0165  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0166  1587               	bsf	7,3	;volatile
  1159                           
  1160                           ;spies.c: 14:     TRISCbits.TRISC5 = 0;
  1161  0167  1287               	bcf	7,5	;volatile
  1162                           
  1163                           ;spies.c: 15:     TRISAbits.TRISA5 = 1;
  1164  0168  1685               	bsf	5,5	;volatile
  1165  0169                     l711:
  1166                           
  1167                           ;spies.c: 16:     SSPCON = 0b00100100;
  1168  0169  3024               	movlw	36
  1169  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1170  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1171  016C  0094               	movwf	20	;volatile
  1172  016D                     l713:
  1173                           
  1174                           ;spies.c: 17:     SSPSTAT = 0;
  1175  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1176  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1177  016F  0194               	clrf	20	;volatile
  1178  0170                     l715:
  1179                           
  1180                           ;spies.c: 19:     PIR1bits.SSPIF = 0;
  1181  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0172  118C               	bcf	12,3	;volatile
  1184  0173                     l717:
  1185                           
  1186                           ;spies.c: 20:     PIE1bits.SSPIE = 1;
  1187  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0175  158C               	bsf	12,3	;volatile
  1190  0176                     l113:
  1191  0176  0008               	return
  1192  0177                     __end_of_SPI_ES:
  1193                           
  1194                           	psect	text6
  1195  0111                     __ptext6:	
  1196 ;; *************** function _ISR *****************
  1197 ;; Defined at:
  1198 ;;		line 81 in file "ESCLAVO_1.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		Interrupt level 1
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _ISR
  1227  0111                     _ISR:
  1228  0111                     i1l785:
  1229                           
  1230                           ;ESCLAVO_1.c: 82:     INTCONbits.GIE = 1;
  1231  0111  178B               	bsf	11,7	;volatile
  1232                           
  1233                           ;ESCLAVO_1.c: 83:     INTCONbits.PEIE = 1;
  1234  0112  170B               	bsf	11,6	;volatile
  1235                           
  1236                           ;ESCLAVO_1.c: 85:     if(PIR1bits.SSPIF){
  1237  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0115  1D8C               	btfss	12,3	;volatile
  1240  0116  2918               	goto	u2_21
  1241  0117  2919               	goto	u2_20
  1242  0118                     u2_21:
  1243  0118  2927               	goto	i1l90
  1244  0119                     u2_20:
  1245  0119                     i1l787:
  1246                           
  1247                           ;ESCLAVO_1.c: 86:         if(!SSPSTATbits.BF){
  1248  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1249  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1250  011B  1814               	btfsc	20,0	;volatile
  1251  011C  291E               	goto	u3_21
  1252  011D  291F               	goto	u3_20
  1253  011E                     u3_21:
  1254  011E  2923               	goto	i1l89
  1255  011F                     u3_20:
  1256  011F                     i1l789:
  1257                           
  1258                           ;ESCLAVO_1.c: 87:             PORTD = SSPBUF;
  1259  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0121  0813               	movf	19,w	;volatile
  1262  0122  0088               	movwf	8	;volatile
  1263  0123                     i1l89:	
  1264                           ;ESCLAVO_1.c: 88:         }
  1265                           
  1266                           
  1267                           ;ESCLAVO_1.c: 89:         SSPBUF = vADC;
  1268  0123  0878               	movf	_vADC,w
  1269  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0125  0093               	movwf	19	;volatile
  1271  0126                     i1l791:
  1272                           
  1273                           ;ESCLAVO_1.c: 90:         PIR1bits.SSPIF = 0;
  1274  0126  118C               	bcf	12,3	;volatile
  1275  0127                     i1l90:
  1276  0127  0871               	movf	??_ISR+1,w
  1277  0128  008A               	movwf	10
  1278  0129  0E70               	swapf	??_ISR,w
  1279  012A  0083               	movwf	3
  1280  012B  0EFE               	swapf	btemp,f
  1281  012C  0E7E               	swapf	btemp,w
  1282  012D  0009               	retfie
  1283  012E                     __end_of_ISR:
  1284  007E                     btemp	set	126	;btemp
  1285  007E                     wtemp0	set	126
  1286                           
  1287                           	psect	intentry
  1288  0004                     __pintentry:	
  1289                           ;incstack = 0
  1290                           ; Regs used in _ISR: [wreg]
  1291                           
  1292  0004                     interrupt_function:
  1293  007E                     saved_w	set	btemp
  1294  0004  00FE               	movwf	btemp
  1295  0005  0E03               	swapf	3,w
  1296  0006  00F0               	movwf	??_ISR
  1297  0007  080A               	movf	10,w
  1298  0008  00F1               	movwf	??_ISR+1
  1299  0009  120A  118A  2911   	ljmp	_ISR
  1300                           
  1301                           	psect	config
  1302                           
  1303                           ;Config register CONFIG1 @ 0x2007
  1304                           ;	Oscillator Selection bits
  1305                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1306                           ;	Watchdog Timer Enable bit
  1307                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1308                           ;	Power-up Timer Enable bit
  1309                           ;	PWRTE = OFF, PWRT disabled
  1310                           ;	RE3/MCLR pin function select bit
  1311                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1312                           ;	Code Protection bit
  1313                           ;	CP = OFF, Program memory code protection is disabled
  1314                           ;	Data Code Protection bit
  1315                           ;	CPD = OFF, Data memory code protection is disabled
  1316                           ;	Brown Out Reset Selection bits
  1317                           ;	BOREN = OFF, BOR disabled
  1318                           ;	Internal External Switchover bit
  1319                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1320                           ;	Fail-Safe Clock Monitor Enabled bit
  1321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1322                           ;	Low Voltage Programming Enable bit
  1323                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1324                           ;	In-Circuit Debugger Mode bit
  1325                           ;	DEBUG = 0x1, unprogrammed default
  1326  2007                     	org	8199
  1327  2007  20D1               	dw	8401
  1328                           
  1329                           ;Config register CONFIG2 @ 0x2008
  1330                           ;	Brown-out Reset Selection bit
  1331                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1332                           ;	Flash Program Memory Self Write Enable bits
  1333                           ;	WRT = OFF, Write protection off
  1334  2008                     	org	8200
  1335  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ValorADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              5 COMMON     1     1      0
                              _Setup
                           _ValorADC
                             _interr
 ---------------------------------------------------------------------------------
 (1) _interr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ValorADC                                             3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
                             _SPI_ES
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_ES                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _SPI_ES
     _config_ADC
   _ValorADC
   _interr

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:53:03 2021

            _SSPSTATbits 0094                       l21 0180                       l30 0049  
                     l31 0056                       l32 0063                       l41 0110  
                     l33 0070                       l25 0017                       l34 007D  
                     l26 0101                       l43 010E                       l35 008A  
                     l27 0022                       l36 0097                       l28 002F  
                     l37 00A4                       l29 003C                       l38 00B1  
                     l39 00BE                       l80 0183                       l77 0163  
                     _V1 0076                       u10 010D                       u11 010C  
                     u47 0104                      l113 0176                      l711 0169  
                    l713 016D                      l705 0177                      l721 001D  
                    l715 0170                      l707 017D                      l731 005C  
                    l723 0028                      l717 0173                      l709 0164  
                    l821 00D5                      l741 009D                      l733 0069  
                    l725 0035                      l743 00AA                      l735 0076  
                    l727 0042                      l719 0016                      l761 0109  
                    l745 00B7                      l737 0083                      l729 004F  
                    l747 00C4                      l739 0090                      l755 00CD  
                    l757 0102                      l749 00CB                      l781 0181  
                    l775 0149                      l767 010F                      l759 0106  
                    l777 0159                      l793 012E                      l779 015E  
                    l795 0133                      l797 0138                      l799 0141  
                    _ISR 0111                     ?_ISR 0070                     i1l90 0127  
                   i1l89 0123                     u2_20 0119                     u2_21 0118  
                   u3_20 011F                     u3_21 011E                     _vADC 0078  
                   _main 012E                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l791 0126                    i1l785 0111                    i1l787 0119  
                  i1l789 011F                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _Setup 0149  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0149                   ??_main 0075  
       __end_of_ValorADC 0111                   ?_Setup 0070                   _ADCON1 009F  
                 _ADRESH 001E                   _ANSELH 0189                   _SPI_ES 0164  
                 _SSPBUF 0013                   _SSPCON 0014                   _interr 0181  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_Setup 0164                  ??_Setup 0072                  ?_SPI_ES 0070  
             __pnvCOMMON 0078                ?_ValorADC 0070               __pmaintext 012E  
             __pintentry 0004                  ?_interr 0070               _config_ADC 0177  
                _SSPSTAT 0094          __size_of_SPI_ES 0013               ??_ValorADC 0072  
              _ANSELbits 0188          __size_of_interr 0003                  __ptext1 0181  
                __ptext2 0015                  __ptext3 0149                  __ptext4 0177  
                __ptext5 0164                  __ptext6 0111             __size_of_ISR 001D  
   end_of_initialization 0011              ?_config_ADC 0070                _TRISAbits 0085  
              _TRISBbits 0086                _TRISCbits 0087                _TRISEbits 0089  
         __end_of_SPI_ES 0177           __end_of_interr 0184      start_initialization 000F  
            __end_of_ISR 012E                ValorADC@x 0074                 ??_SPI_ES 0072  
    __size_of_config_ADC 000A        __size_of_ValorADC 00FC                 ??_interr 0072  
            __pbssCOMMON 0076                ___latbits 0002           __size_of_Setup 001B  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F             ??_config_ADC 0072                 _ValorADC 0015  
     __end_of_config_ADC 0181               _ANSELHbits 0189            __size_of_main 001B  
             _INTCONbits 000B                 intlevel1 0000  
