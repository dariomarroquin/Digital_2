

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 01:10:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0448                     __pstrings:
   381  0448                     stringtab:
   382  0448                     __stringtab:
   383  0448                     stringcode:	
   384                           ;	String table - string pointers are 1 byte each
   385                           
   386  0448                     stringdir:
   387  0448  3004               	movlw	high stringdir
   388  0449  008A               	movwf	10
   389  044A  0804               	movf	4,w
   390  044B  0A84               	incf	4,f
   391  044C  0782               	addwf	2,f
   392  044D                     __stringbase:
   393  044D  3400               	retlw	0
   394  044E                     __end_of__stringtab:
   395  044E                     _dpowers:
   396  044E  3401               	retlw	1
   397  044F  3400               	retlw	0
   398  0450  340A               	retlw	10
   399  0451  3400               	retlw	0
   400  0452  3464               	retlw	100
   401  0453  3400               	retlw	0
   402  0454  34E8               	retlw	232
   403  0455  3403               	retlw	3
   404  0456  3410               	retlw	16
   405  0457  3427               	retlw	39
   406  0458                     __end_of_dpowers:
   407  0014                     _SSPCON	set	20
   408  0013                     _SSPBUF	set	19
   409  0019                     _TXREG	set	25
   410  0005                     _PORTAbits	set	5
   411  001A                     _RCREG	set	26
   412  000C                     _PIR1bits	set	12
   413  0007                     _PORTC	set	7
   414  0005                     _PORTA	set	5
   415  000B                     _INTCONbits	set	11
   416  0018                     _RCSTAbits	set	24
   417  0063                     _SSPIF	set	99
   418  0093                     _SSPADD	set	147
   419  0091                     _SSPCON2	set	145
   420  0094                     _SSPSTAT	set	148
   421  0085                     _TRISA	set	133
   422  008C                     _PIE1bits	set	140
   423  0099                     _SPBRG	set	153
   424  0098                     _TXSTAbits	set	152
   425  04A0                     _BF	set	1184
   426  048B                     _RCEN	set	1163
   427  048A                     _PEN	set	1162
   428  048C                     _ACKEN	set	1164
   429  048D                     _ACKDT	set	1165
   430  0489                     _RSEN	set	1161
   431  0488                     _SEN	set	1160
   432  043C                     _TRISC4	set	1084
   433  043B                     _TRISC3	set	1083
   434  0188                     _ANSEL	set	392
   435  0187                     _BAUDCTLbits	set	391
   436  0458                     STR_1:
   437  0458  3420               	retlw	32	;' '
   438  0459  3425               	retlw	37	;'%'
   439  045A  3432               	retlw	50	;'2'
   440  045B  3469               	retlw	105	;'i'
   441  045C  3420               	retlw	32	;' '
   442  045D  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445  000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448  000F                     __initialization:
   449                           
   450                           ; Clear objects allocated to COMMON
   451  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   452  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455  0011  1283               	bcf	3,5	;RP0=0, select bank0
   456  0012  1303               	bcf	3,6	;RP1=0, select bank0
   457  0013  01C1               	clrf	__pbssBANK0& (0+127)
   458  0014  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   459  0015                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462  0015                     __end_of__initialization:
   463  0015  0183               	clrf	3
   464  0016  120A  118A  29A1   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMMON
   467  0079                     __pbssCOMMON:
   468  0079                     _leds:
   469  0079                     	ds	1
   470  007A                     _c1:
   471  007A                     	ds	1
   472                           
   473                           	psect	bssBANK0
   474  0041                     __pbssBANK0:
   475  0041                     _rx:
   476  0041                     	ds	1
   477  0042                     _Temperatura:
   478  0042                     	ds	1
   479                           
   480                           	psect	cstackCOMMON
   481  0070                     __pcstackCOMMON:
   482  0070                     ?_isdigit:
   483  0070                     ?_I2C_init:	
   484                           ; 1 bit 
   485                           
   486  0070                     ?_I2C_rstart:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_I2C_TX:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_I2C_sleep:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_RX:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_I2C_NACK:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_stop:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_Setup:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_myISR:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_myISR:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_conversion:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519                           
   520                           ; 1 bytes @ 0x0
   521  0070                     	ds	3
   522  0073                     ??_I2C_init:
   523  0073                     ??_I2C_rstart:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     ??_I2C_TX:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     ??_I2C_sleep:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ??_I2C_RX:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ??_I2C_NACK:	
   536                           ; 1 bytes @ 0x3
   537                           
   538  0073                     ??_I2C_stop:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ??_isdigit:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     ??_Setup:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     ??___aldiv:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ?___wmul:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ?___lwdiv:	
   554                           ; 2 bytes @ 0x3
   555                           
   556  0073                     I2C_TX@c:	
   557                           ; 2 bytes @ 0x3
   558                           
   559  0073                     _isdigit$819:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ___wmul@multiplier:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     ___lwdiv@divisor:	
   566                           ; 2 bytes @ 0x3
   567                           
   568                           
   569                           ; 2 bytes @ 0x3
   570  0073                     	ds	1
   571  0074                     isdigit@c:
   572  0074                     USART_Initialize@x:	
   573                           ; 1 bytes @ 0x4
   574                           
   575                           
   576                           ; 4 bytes @ 0x4
   577  0074                     	ds	1
   578  0075                     ___wmul@multiplicand:
   579  0075                     ___lwdiv@dividend:	
   580                           ; 2 bytes @ 0x5
   581                           
   582                           
   583                           ; 2 bytes @ 0x5
   584  0075                     	ds	2
   585  0077                     ??___wmul:
   586  0077                     ??___lwdiv:	
   587                           ; 1 bytes @ 0x7
   588                           
   589  0077                     ___wmul@product:	
   590                           ; 1 bytes @ 0x7
   591                           
   592                           
   593                           ; 2 bytes @ 0x7
   594  0077                     	ds	1
   595  0078                     ??___lwmod:
   596                           
   597                           ; 1 bytes @ 0x8
   598  0078                     	ds	1
   599                           
   600                           	psect	cstackBANK0
   601  0020                     __pcstackBANK0:
   602  0020                     ?___aldiv:
   603  0020                     ___lwdiv@counter:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  0020                     ___aldiv@divisor:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 4 bytes @ 0x0
   611  0020                     	ds	1
   612  0021                     ___lwdiv@quotient:
   613                           
   614                           ; 2 bytes @ 0x1
   615  0021                     	ds	2
   616  0023                     ?___lwmod:
   617  0023                     ___lwmod@divisor:	
   618                           ; 2 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622  0023                     	ds	1
   623  0024                     ___aldiv@dividend:
   624                           
   625                           ; 4 bytes @ 0x4
   626  0024                     	ds	1
   627  0025                     ___lwmod@dividend:
   628                           
   629                           ; 2 bytes @ 0x5
   630  0025                     	ds	2
   631  0027                     ___lwmod@counter:
   632                           
   633                           ; 1 bytes @ 0x7
   634  0027                     	ds	1
   635  0028                     ?_sprintf:
   636  0028                     sprintf@f:	
   637                           ; 2 bytes @ 0x8
   638                           
   639  0028                     ___aldiv@counter:	
   640                           ; 1 bytes @ 0x8
   641                           
   642                           
   643                           ; 1 bytes @ 0x8
   644  0028                     	ds	1
   645  0029                     ___aldiv@sign:
   646                           
   647                           ; 1 bytes @ 0x9
   648  0029                     	ds	1
   649  002A                     ___aldiv@quotient:
   650                           
   651                           ; 4 bytes @ 0xA
   652  002A                     	ds	1
   653  002B                     ??_sprintf:
   654                           
   655                           ; 1 bytes @ 0xB
   656  002B                     	ds	3
   657  002E                     ?_USART_Initialize:
   658  002E                     sprintf@ap:	
   659                           ; 1 bytes @ 0xE
   660                           
   661  002E                     USART_Initialize@baudrate:	
   662                           ; 1 bytes @ 0xE
   663                           
   664                           
   665                           ; 4 bytes @ 0xE
   666  002E                     	ds	1
   667  002F                     sprintf@prec:
   668                           
   669                           ; 1 bytes @ 0xF
   670  002F                     	ds	1
   671  0030                     sprintf@flag:
   672                           
   673                           ; 1 bytes @ 0x10
   674  0030                     	ds	1
   675  0031                     sprintf@val:
   676                           
   677                           ; 2 bytes @ 0x11
   678  0031                     	ds	1
   679  0032                     ??_USART_Initialize:
   680                           
   681                           ; 1 bytes @ 0x12
   682  0032                     	ds	1
   683  0033                     sprintf@sp:
   684                           
   685                           ; 1 bytes @ 0x13
   686  0033                     	ds	1
   687  0034                     sprintf@width:
   688                           
   689                           ; 2 bytes @ 0x14
   690  0034                     	ds	2
   691  0036                     sprintf@c:
   692                           
   693                           ; 1 bytes @ 0x16
   694  0036                     	ds	1
   695  0037                     ??_conversion:
   696                           
   697                           ; 1 bytes @ 0x17
   698  0037                     	ds	7
   699  003E                     ??_main:
   700                           
   701                           ; 1 bytes @ 0x1E
   702  003E                     	ds	3
   703                           
   704                           	psect	maintext
   705  01A1                     __pmaintext:	
   706 ;;
   707 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   708 ;;
   709 ;; *************** function _main *****************
   710 ;; Defined at:
   711 ;;		line 100 in file "MASTER.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : B00/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       3       0       0       0
   728 ;;      Totals:         0       3       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels required when called:    4
   731 ;; This function calls:
   732 ;;		_I2C_NACK
   733 ;;		_I2C_RX
   734 ;;		_I2C_TX
   735 ;;		_I2C_init
   736 ;;		_I2C_rstart
   737 ;;		_I2C_sleep
   738 ;;		_I2C_stop
   739 ;;		_Setup
   740 ;;		_USART_Initialize
   741 ;;		_conversion
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  01A1                     _main:
   750  01A1                     l1684:	
   751                           ;incstack = 0
   752                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   753                           
   754                           
   755                           ;MASTER.c: 101:     Setup();
   756  01A1  120A  118A  24A2  120A  118A  	fcall	_Setup
   757  01A6                     l1686:
   758                           
   759                           ;MASTER.c: 102:     USART_Initialize(9600);
   760  01A6  3000               	movlw	0
   761  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   762  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   763  01A9  00B1               	movwf	USART_Initialize@baudrate+3
   764  01AA  3000               	movlw	0
   765  01AB  00B0               	movwf	USART_Initialize@baudrate+2
   766  01AC  3025               	movlw	37
   767  01AD  00AF               	movwf	USART_Initialize@baudrate+1
   768  01AE  3080               	movlw	128
   769  01AF  00AE               	movwf	USART_Initialize@baudrate
   770  01B0  120A  118A  22E3  120A  118A  	fcall	_USART_Initialize
   771  01B5                     l1688:
   772                           
   773                           ;MASTER.c: 103:     I2C_init();
   774  01B5  120A  118A  242E  120A  118A  	fcall	_I2C_init
   775  01BA                     l1690:
   776                           
   777                           ;MASTER.c: 104:     _delay((unsigned long)((600)*(8000000/4000.0)));
   778  01BA  3007               	movlw	7
   779  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   780  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   781  01BD  00C0               	movwf	??_main+2
   782  01BE  3017               	movlw	23
   783  01BF  00BF               	movwf	??_main+1
   784  01C0  3069               	movlw	105
   785  01C1  00BE               	movwf	??_main
   786  01C2                     u1567:
   787  01C2  0BBE               	decfsz	??_main,f
   788  01C3  29C2               	goto	u1567
   789  01C4  0BBF               	decfsz	??_main+1,f
   790  01C5  29C2               	goto	u1567
   791  01C6  0BC0               	decfsz	??_main+2,f
   792  01C7  29C2               	goto	u1567
   793  01C8  29C9               	nop2
   794  01C9                     l1692:
   795                           
   796                           ;MASTER.c: 107:         I2C_rstart();
   797  01C9  120A  118A  24C1  120A  118A  	fcall	_I2C_rstart
   798                           
   799                           ;MASTER.c: 108:         _delay((unsigned long)((10)*(8000000/4000.0)));
   800  01CE  301A               	movlw	26
   801  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   802  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   803  01D1  00BF               	movwf	??_main+1
   804  01D2  30F7               	movlw	247
   805  01D3  00BE               	movwf	??_main
   806  01D4                     u1577:
   807  01D4  0BBE               	decfsz	??_main,f
   808  01D5  29D4               	goto	u1577
   809  01D6  0BBF               	decfsz	??_main+1,f
   810  01D7  29D4               	goto	u1577
   811  01D8  29D9               	nop2
   812  01D9                     l1694:
   813                           
   814                           ;MASTER.c: 112:         I2C_TX(0x90);
   815  01D9  3090               	movlw	144
   816  01DA  120A  118A  2484  120A  118A  	fcall	_I2C_TX
   817  01DF                     l1696:
   818                           
   819                           ;MASTER.c: 113:         _delay((unsigned long)((10)*(8000000/4000.0)));
   820  01DF  301A               	movlw	26
   821  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   822  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   823  01E2  00BF               	movwf	??_main+1
   824  01E3  30F7               	movlw	247
   825  01E4  00BE               	movwf	??_main
   826  01E5                     u1587:
   827  01E5  0BBE               	decfsz	??_main,f
   828  01E6  29E5               	goto	u1587
   829  01E7  0BBF               	decfsz	??_main+1,f
   830  01E8  29E5               	goto	u1587
   831  01E9  29EA               	nop2
   832  01EA                     l1698:
   833                           
   834                           ;MASTER.c: 116:         I2C_rstart();
   835  01EA  120A  118A  24C1  120A  118A  	fcall	_I2C_rstart
   836                           
   837                           ;MASTER.c: 117:         _delay((unsigned long)((10)*(8000000/4000.0)));
   838  01EF  301A               	movlw	26
   839  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   840  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   841  01F2  00BF               	movwf	??_main+1
   842  01F3  30F7               	movlw	247
   843  01F4  00BE               	movwf	??_main
   844  01F5                     u1597:
   845  01F5  0BBE               	decfsz	??_main,f
   846  01F6  29F5               	goto	u1597
   847  01F7  0BBF               	decfsz	??_main+1,f
   848  01F8  29F5               	goto	u1597
   849  01F9  29FA               	nop2
   850                           
   851                           ;MASTER.c: 120:         SSPBUF = 0x91;
   852  01FA  3091               	movlw	145
   853  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   854  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   855  01FD  0093               	movwf	19	;volatile
   856  01FE                     l1700:
   857                           
   858                           ;MASTER.c: 121:         I2C_sleep();
   859  01FE  120A  118A  24C9  120A  118A  	fcall	_I2C_sleep
   860  0203                     l1702:
   861                           
   862                           ;MASTER.c: 122:         _delay((unsigned long)((10)*(8000000/4000.0)));
   863  0203  301A               	movlw	26
   864  0204  1283               	bcf	3,5	;RP0=0, select bank0
   865  0205  1303               	bcf	3,6	;RP1=0, select bank0
   866  0206  00BF               	movwf	??_main+1
   867  0207  30F7               	movlw	247
   868  0208  00BE               	movwf	??_main
   869  0209                     u1607:
   870  0209  0BBE               	decfsz	??_main,f
   871  020A  2A09               	goto	u1607
   872  020B  0BBF               	decfsz	??_main+1,f
   873  020C  2A09               	goto	u1607
   874  020D  2A0E               	nop2
   875  020E                     l1704:
   876                           
   877                           ;MASTER.c: 125:         rx = I2C_RX();
   878  020E  120A  118A  24AD  120A  118A  	fcall	_I2C_RX
   879  0213  1283               	bcf	3,5	;RP0=0, select bank0
   880  0214  1303               	bcf	3,6	;RP1=0, select bank0
   881  0215  00BE               	movwf	??_main
   882  0216  083E               	movf	??_main,w
   883  0217  00C1               	movwf	_rx
   884  0218                     l1706:
   885                           
   886                           ;MASTER.c: 126:         I2C_sleep();
   887  0218  120A  118A  24C9  120A  118A  	fcall	_I2C_sleep
   888  021D                     l1708:
   889                           
   890                           ;MASTER.c: 129:         I2C_NACK();
   891  021D  120A  118A  24B8  120A  118A  	fcall	_I2C_NACK
   892  0222                     l1710:
   893                           
   894                           ;MASTER.c: 130:         _delay((unsigned long)((10)*(8000000/4000.0)));
   895  0222  301A               	movlw	26
   896  0223  1283               	bcf	3,5	;RP0=0, select bank0
   897  0224  1303               	bcf	3,6	;RP1=0, select bank0
   898  0225  00BF               	movwf	??_main+1
   899  0226  30F7               	movlw	247
   900  0227  00BE               	movwf	??_main
   901  0228                     u1617:
   902  0228  0BBE               	decfsz	??_main,f
   903  0229  2A28               	goto	u1617
   904  022A  0BBF               	decfsz	??_main+1,f
   905  022B  2A28               	goto	u1617
   906  022C  2A2D               	nop2
   907  022D                     l1712:
   908                           
   909                           ;MASTER.c: 133:         I2C_stop();
   910  022D  120A  118A  2495  120A  118A  	fcall	_I2C_stop
   911  0232                     l1714:
   912                           
   913                           ;MASTER.c: 134:         _delay((unsigned long)((10)*(8000000/4000.0)));
   914  0232  301A               	movlw	26
   915  0233  1283               	bcf	3,5	;RP0=0, select bank0
   916  0234  1303               	bcf	3,6	;RP1=0, select bank0
   917  0235  00BF               	movwf	??_main+1
   918  0236  30F7               	movlw	247
   919  0237  00BE               	movwf	??_main
   920  0238                     u1627:
   921  0238  0BBE               	decfsz	??_main,f
   922  0239  2A38               	goto	u1627
   923  023A  0BBF               	decfsz	??_main+1,f
   924  023B  2A38               	goto	u1627
   925  023C  2A3D               	nop2
   926  023D                     l1716:
   927                           
   928                           ;MASTER.c: 135:         conversion();
   929  023D  120A  118A  245E  120A  118A  	fcall	_conversion
   930  0242  29C9               	goto	l1692
   931  0243  120A  118A  280C   	ljmp	start
   932  0246                     __end_of_main:
   933                           
   934                           	psect	text1
   935  045E                     __ptext1:	
   936 ;; *************** function _conversion *****************
   937 ;; Defined at:
   938 ;;		line 94 in file "MASTER.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       3       0       0       0
   955 ;;      Totals:         0       3       0       0       0
   956 ;;Total ram usage:        3 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		_sprintf
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _conversion
   968  045E                     _conversion:
   969  045E                     l1682:	
   970                           ;incstack = 0
   971                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973                           
   974                           ;MASTER.c: 95:     sprintf(Temperatura, " %2i ", rx);
   975  045E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   976  045F  1283               	bcf	3,5	;RP0=0, select bank0
   977  0460  1303               	bcf	3,6	;RP1=0, select bank0
   978  0461  00B7               	movwf	??_conversion
   979  0462  0837               	movf	??_conversion,w
   980  0463  00A8               	movwf	sprintf@f
   981  0464  0841               	movf	_rx,w
   982  0465  00B8               	movwf	??_conversion+1
   983  0466  01B9               	clrf	??_conversion+2
   984  0467  0838               	movf	??_conversion+1,w
   985  0468  00A9               	movwf	?_sprintf+1
   986  0469  0839               	movf	??_conversion+2,w
   987  046A  00AA               	movwf	?_sprintf+2
   988  046B  3042               	movlw	(low (_Temperatura| 0))& (0+255)
   989  046C  120A  118A  2019  120A  118A  	fcall	_sprintf
   990  0471                     l83:
   991  0471  0008               	return
   992  0472                     __end_of_conversion:
   993                           
   994                           	psect	text2
   995  0019                     __ptext2:	
   996 ;; *************** function _sprintf *****************
   997 ;; Defined at:
   998 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  sp              1    wreg     PTR unsigned char 
  1001 ;;		 -> Temperatura(1), 
  1002 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1003 ;;		 -> STR_1(6), 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1006 ;;		 -> Temperatura(1), 
  1007 ;;  tmpval          4    0        struct .
  1008 ;;  width           2   20[BANK0 ] int 
  1009 ;;  val             2   17[BANK0 ] unsigned int 
  1010 ;;  cp              2    0        PTR const unsigned char 
  1011 ;;  len             2    0        unsigned int 
  1012 ;;  c               1   22[BANK0 ] unsigned char 
  1013 ;;  flag            1   16[BANK0 ] unsigned char 
  1014 ;;  prec            1   15[BANK0 ] char 
  1015 ;;  ap              1   14[BANK0 ] PTR void [1]
  1016 ;;		 -> ?_sprintf(2), 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    8[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       3       0       0       0
  1027 ;;      Locals:         0       9       0       0       0
  1028 ;;      Temps:          0       3       0       0       0
  1029 ;;      Totals:         0      15       0       0       0
  1030 ;;Total ram usage:       15 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		___lwdiv
  1035 ;;		___lwmod
  1036 ;;		___wmul
  1037 ;;		_isdigit
  1038 ;; This function is called by:
  1039 ;;		_conversion
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _sprintf
  1045  0019                     _sprintf:
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1049                           ;sprintf@sp stored from wreg
  1050  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1051  001A  1303               	bcf	3,6	;RP1=0, select bank0
  1052  001B  00B3               	movwf	sprintf@sp
  1053  001C                     l1536:
  1054                           
  1055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1056  001C  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1057  001D  00AB               	movwf	??_sprintf
  1058  001E  082B               	movf	??_sprintf,w
  1059  001F  00AE               	movwf	sprintf@ap
  1060                           
  1061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1062  0020  298A               	goto	l1618
  1063  0021                     l1538:
  1064                           
  1065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1066  0021  3025               	movlw	37
  1067  0022  0636               	xorwf	sprintf@c,w
  1068  0023  1903               	btfsc	3,2
  1069  0024  2826               	goto	u1291
  1070  0025  2827               	goto	u1290
  1071  0026                     u1291:
  1072  0026  2833               	goto	l1544
  1073  0027                     u1290:
  1074  0027                     l1540:
  1075                           
  1076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1077  0027  0836               	movf	sprintf@c,w
  1078  0028  00AB               	movwf	??_sprintf
  1079  0029  0833               	movf	sprintf@sp,w
  1080  002A  0084               	movwf	4
  1081  002B  082B               	movf	??_sprintf,w
  1082  002C  1383               	bcf	3,7	;select IRP bank0
  1083  002D  0080               	movwf	0
  1084  002E                     l1542:
  1085  002E  3001               	movlw	1
  1086  002F  00AB               	movwf	??_sprintf
  1087  0030  082B               	movf	??_sprintf,w
  1088  0031  07B3               	addwf	sprintf@sp,f
  1089                           
  1090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1091  0032  298A               	goto	l1618
  1092  0033                     l1544:
  1093                           
  1094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1095  0033  01B4               	clrf	sprintf@width
  1096  0034  01B5               	clrf	sprintf@width+1
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1099  0035  01B0               	clrf	sprintf@flag
  1100  0036                     l1546:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1103  0036  0828               	movf	sprintf@f,w
  1104  0037  0084               	movwf	4
  1105  0038  120A  118A  2448  120A  118A  	fcall	stringdir
  1106  003D  120A  118A  2472  120A  118A  	fcall	_isdigit
  1107  0042  1C03               	btfss	3,0
  1108  0043  2845               	goto	u1301
  1109  0044  2846               	goto	u1300
  1110  0045                     u1301:
  1111  0045  2886               	goto	l1560
  1112  0046                     u1300:
  1113  0046                     l1548:
  1114                           
  1115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1116  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0048  01B4               	clrf	sprintf@width
  1119  0049  01B5               	clrf	sprintf@width+1
  1120  004A                     l1550:
  1121                           
  1122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1123  004A  300A               	movlw	10
  1124  004B  00F3               	movwf	___wmul@multiplier
  1125  004C  3000               	movlw	0
  1126  004D  00F4               	movwf	___wmul@multiplier+1
  1127  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1128  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0050  0835               	movf	sprintf@width+1,w
  1130  0051  00F6               	movwf	___wmul@multiplicand+1
  1131  0052  0834               	movf	sprintf@width,w
  1132  0053  00F5               	movwf	___wmul@multiplicand
  1133  0054  120A  118A  2409  120A  118A  	fcall	___wmul
  1134  0059  0874               	movf	?___wmul+1,w
  1135  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1136  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1137  005C  00B5               	movwf	sprintf@width+1
  1138  005D  0873               	movf	?___wmul,w
  1139  005E  00B4               	movwf	sprintf@width
  1140  005F                     l1552:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1143  005F  0828               	movf	sprintf@f,w
  1144  0060  0084               	movwf	4
  1145  0061  120A  118A  2448  120A  118A  	fcall	stringdir
  1146  0066  3ED0               	addlw	208
  1147  0067  00AB               	movwf	??_sprintf
  1148  0068  30FF               	movlw	255
  1149  0069  1803               	skipnc
  1150  006A  3000               	movlw	0
  1151  006B  00AC               	movwf	??_sprintf+1
  1152  006C  082B               	movf	??_sprintf,w
  1153  006D  07B4               	addwf	sprintf@width,f
  1154  006E  1803               	skipnc
  1155  006F  0AB5               	incf	sprintf@width+1,f
  1156  0070  082C               	movf	??_sprintf+1,w
  1157  0071  07B5               	addwf	sprintf@width+1,f
  1158  0072                     l1554:
  1159  0072  3001               	movlw	1
  1160  0073  00AB               	movwf	??_sprintf
  1161  0074  082B               	movf	??_sprintf,w
  1162  0075  07A8               	addwf	sprintf@f,f
  1163  0076                     l1556:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1166  0076  0828               	movf	sprintf@f,w
  1167  0077  0084               	movwf	4
  1168  0078  120A  118A  2448  120A  118A  	fcall	stringdir
  1169  007D  120A  118A  2472  120A  118A  	fcall	_isdigit
  1170  0082  1803               	btfsc	3,0
  1171  0083  2885               	goto	u1311
  1172  0084  2886               	goto	u1310
  1173  0085                     u1311:
  1174  0085  284A               	goto	l1550
  1175  0086                     u1310:
  1176  0086                     l1560:
  1177  0086  3001               	movlw	1
  1178  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0089  07A8               	addwf	sprintf@f,f
  1181  008A  30FF               	movlw	-1
  1182  008B  0728               	addwf	sprintf@f,w
  1183  008C  0084               	movwf	4
  1184  008D  120A  118A  2448  120A  118A  	fcall	stringdir
  1185  0092  00B6               	movwf	sprintf@c
  1186  0093  00AB               	movwf	??_sprintf
  1187  0094  01AC               	clrf	??_sprintf+1
  1188                           
  1189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 0 to 0
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           11     8 (fixed)
  1196                           ; jumptable            260     6 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  0095  082C               	movf	??_sprintf+1,w
  1199  0096  3A00               	xorlw	0	; case 0
  1200  0097  1903               	skipnz
  1201  0098  289A               	goto	l1738
  1202  0099  298A               	goto	l1618
  1203  009A                     l1738:
  1204                           
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 3, Range of values is 0 to 105
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte           10     6 (average)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  009A  082B               	movf	??_sprintf,w
  1213  009B  3A00               	xorlw	0	; case 0
  1214  009C  1903               	skipnz
  1215  009D  299C               	goto	l1620
  1216  009E  3A64               	xorlw	100	; case 100
  1217  009F  1903               	skipnz
  1218  00A0  28A5               	goto	l1562
  1219  00A1  3A0D               	xorlw	13	; case 105
  1220  00A2  1903               	skipnz
  1221  00A3  28A5               	goto	l1562
  1222  00A4  298A               	goto	l1618
  1223  00A5                     l1562:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1226  00A5  082E               	movf	sprintf@ap,w
  1227  00A6  0084               	movwf	4
  1228  00A7  1383               	bcf	3,7	;select IRP bank0
  1229  00A8  0800               	movf	0,w
  1230  00A9  00B1               	movwf	sprintf@val
  1231  00AA  0A84               	incf	4,f
  1232  00AB  0800               	movf	0,w
  1233  00AC  00B2               	movwf	sprintf@val+1
  1234  00AD                     l1564:
  1235  00AD  3002               	movlw	2
  1236  00AE  00AB               	movwf	??_sprintf
  1237  00AF  082B               	movf	??_sprintf,w
  1238  00B0  07AE               	addwf	sprintf@ap,f
  1239  00B1                     l1566:
  1240                           
  1241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1242  00B1  1FB2               	btfss	sprintf@val+1,7
  1243  00B2  28B4               	goto	u1321
  1244  00B3  28B5               	goto	u1320
  1245  00B4                     u1321:
  1246  00B4  28BE               	goto	l1572
  1247  00B5                     u1320:
  1248  00B5                     l1568:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1251  00B5  3003               	movlw	3
  1252  00B6  00AB               	movwf	??_sprintf
  1253  00B7  082B               	movf	??_sprintf,w
  1254  00B8  04B0               	iorwf	sprintf@flag,f
  1255  00B9                     l1570:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1258  00B9  09B1               	comf	sprintf@val,f
  1259  00BA  09B2               	comf	sprintf@val+1,f
  1260  00BB  0AB1               	incf	sprintf@val,f
  1261  00BC  1903               	skipnz
  1262  00BD  0AB2               	incf	sprintf@val+1,f
  1263  00BE                     l1572:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1266  00BE  01B6               	clrf	sprintf@c
  1267  00BF  0AB6               	incf	sprintf@c,f
  1268  00C0                     l1578:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1271  00C0  0836               	movf	sprintf@c,w
  1272  00C1  00AB               	movwf	??_sprintf
  1273  00C2  072B               	addwf	??_sprintf,w
  1274  00C3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1275  00C4  0084               	movwf	4
  1276  00C5  120A  118A  2448  120A  118A  	fcall	stringdir
  1277  00CA  00AC               	movwf	??_sprintf+1
  1278  00CB  120A  118A  2448  120A  118A  	fcall	stringdir
  1279  00D0  00AD               	movwf	??_sprintf+2
  1280  00D1  082D               	movf	??_sprintf+2,w
  1281  00D2  0232               	subwf	sprintf@val+1,w
  1282  00D3  1D03               	skipz
  1283  00D4  28D7               	goto	u1335
  1284  00D5  082C               	movf	??_sprintf+1,w
  1285  00D6  0231               	subwf	sprintf@val,w
  1286  00D7                     u1335:
  1287  00D7  1803               	skipnc
  1288  00D8  28DA               	goto	u1331
  1289  00D9  28DB               	goto	u1330
  1290  00DA                     u1331:
  1291  00DA  28DC               	goto	l1582
  1292  00DB                     u1330:
  1293  00DB  28E6               	goto	l1584
  1294  00DC                     l1582:
  1295  00DC  3001               	movlw	1
  1296  00DD  00AB               	movwf	??_sprintf
  1297  00DE  082B               	movf	??_sprintf,w
  1298  00DF  07B6               	addwf	sprintf@c,f
  1299  00E0  3005               	movlw	5
  1300  00E1  0636               	xorwf	sprintf@c,w
  1301  00E2  1D03               	btfss	3,2
  1302  00E3  28E5               	goto	u1341
  1303  00E4  28E6               	goto	u1340
  1304  00E5                     u1341:
  1305  00E5  28C0               	goto	l1578
  1306  00E6                     u1340:
  1307  00E6                     l1584:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1310  00E6  0834               	movf	sprintf@width,w
  1311  00E7  0435               	iorwf	sprintf@width+1,w
  1312  00E8  1903               	btfsc	3,2
  1313  00E9  28EB               	goto	u1351
  1314  00EA  28EC               	goto	u1350
  1315  00EB                     u1351:
  1316  00EB  28F8               	goto	l276
  1317  00EC                     u1350:
  1318  00EC                     l1586:
  1319  00EC  0830               	movf	sprintf@flag,w
  1320  00ED  3903               	andlw	3
  1321  00EE  1903               	btfsc	3,2
  1322  00EF  28F1               	goto	u1361
  1323  00F0  28F2               	goto	u1360
  1324  00F1                     u1361:
  1325  00F1  28F8               	goto	l276
  1326  00F2                     u1360:
  1327  00F2                     l1588:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1330  00F2  30FF               	movlw	255
  1331  00F3  07B4               	addwf	sprintf@width,f
  1332  00F4  1803               	skipnc
  1333  00F5  0AB5               	incf	sprintf@width+1,f
  1334  00F6  30FF               	movlw	255
  1335  00F7  07B5               	addwf	sprintf@width+1,f
  1336  00F8                     l276:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1339  00F8  0835               	movf	sprintf@width+1,w
  1340  00F9  3A80               	xorlw	128
  1341  00FA  3C80               	sublw	128
  1342  00FB  1D03               	skipz
  1343  00FC  28FF               	goto	u1375
  1344  00FD  0834               	movf	sprintf@width,w
  1345  00FE  0236               	subwf	sprintf@c,w
  1346  00FF                     u1375:
  1347  00FF  1803               	skipnc
  1348  0100  2902               	goto	u1371
  1349  0101  2903               	goto	u1370
  1350  0102                     u1371:
  1351  0102  290F               	goto	l1592
  1352  0103                     u1370:
  1353  0103                     l1590:
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1356  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0105  0836               	movf	sprintf@c,w
  1359  0106  00AB               	movwf	??_sprintf
  1360  0107  01AC               	clrf	??_sprintf+1
  1361  0108  082B               	movf	??_sprintf,w
  1362  0109  02B4               	subwf	sprintf@width,f
  1363  010A  082C               	movf	??_sprintf+1,w
  1364  010B  1C03               	skipc
  1365  010C  03B5               	decf	sprintf@width+1,f
  1366  010D  02B5               	subwf	sprintf@width+1,f
  1367  010E  2913               	goto	l1594
  1368  010F                     l1592:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1371  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0111  01B4               	clrf	sprintf@width
  1374  0112  01B5               	clrf	sprintf@width+1
  1375  0113                     l1594:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1378  0113  0834               	movf	sprintf@width,w
  1379  0114  0435               	iorwf	sprintf@width+1,w
  1380  0115  1903               	btfsc	3,2
  1381  0116  2918               	goto	u1381
  1382  0117  2919               	goto	u1380
  1383  0118                     u1381:
  1384  0118  2930               	goto	l1602
  1385  0119                     u1380:
  1386  0119                     l1596:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1389  0119  3020               	movlw	32
  1390  011A  00AB               	movwf	??_sprintf
  1391  011B  0833               	movf	sprintf@sp,w
  1392  011C  0084               	movwf	4
  1393  011D  082B               	movf	??_sprintf,w
  1394  011E  1383               	bcf	3,7	;select IRP bank0
  1395  011F  0080               	movwf	0
  1396  0120                     l1598:
  1397  0120  3001               	movlw	1
  1398  0121  00AB               	movwf	??_sprintf
  1399  0122  082B               	movf	??_sprintf,w
  1400  0123  07B3               	addwf	sprintf@sp,f
  1401  0124                     l1600:
  1402  0124  30FF               	movlw	255
  1403  0125  07B4               	addwf	sprintf@width,f
  1404  0126  1803               	skipnc
  1405  0127  0AB5               	incf	sprintf@width+1,f
  1406  0128  30FF               	movlw	255
  1407  0129  07B5               	addwf	sprintf@width+1,f
  1408  012A  0834               	movf	sprintf@width,w
  1409  012B  0435               	iorwf	sprintf@width+1,w
  1410  012C  1D03               	btfss	3,2
  1411  012D  292F               	goto	u1391
  1412  012E  2930               	goto	u1390
  1413  012F                     u1391:
  1414  012F  2919               	goto	l1596
  1415  0130                     u1390:
  1416  0130                     l1602:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1419  0130  0830               	movf	sprintf@flag,w
  1420  0131  3903               	andlw	3
  1421  0132  1903               	btfsc	3,2
  1422  0133  2935               	goto	u1401
  1423  0134  2936               	goto	u1400
  1424  0135                     u1401:
  1425  0135  2941               	goto	l1608
  1426  0136                     u1400:
  1427  0136                     l1604:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1430  0136  302D               	movlw	45
  1431  0137  00AB               	movwf	??_sprintf
  1432  0138  0833               	movf	sprintf@sp,w
  1433  0139  0084               	movwf	4
  1434  013A  082B               	movf	??_sprintf,w
  1435  013B  1383               	bcf	3,7	;select IRP bank0
  1436  013C  0080               	movwf	0
  1437  013D                     l1606:
  1438  013D  3001               	movlw	1
  1439  013E  00AB               	movwf	??_sprintf
  1440  013F  082B               	movf	??_sprintf,w
  1441  0140  07B3               	addwf	sprintf@sp,f
  1442  0141                     l1608:
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1445  0141  0836               	movf	sprintf@c,w
  1446  0142  00AB               	movwf	??_sprintf
  1447  0143  082B               	movf	??_sprintf,w
  1448  0144  00AF               	movwf	sprintf@prec
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1451  0145  2981               	goto	l1616
  1452  0146                     l1610:
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1455  0146  300A               	movlw	10
  1456  0147  00A3               	movwf	___lwmod@divisor
  1457  0148  3000               	movlw	0
  1458  0149  00A4               	movwf	___lwmod@divisor+1
  1459  014A  082F               	movf	sprintf@prec,w
  1460  014B  00AB               	movwf	??_sprintf
  1461  014C  072B               	addwf	??_sprintf,w
  1462  014D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1463  014E  0084               	movwf	4
  1464  014F  120A  118A  2448  120A  118A  	fcall	stringdir
  1465  0154  00F3               	movwf	___lwdiv@divisor
  1466  0155  120A  118A  2448  120A  118A  	fcall	stringdir
  1467  015A  00F4               	movwf	___lwdiv@divisor+1
  1468  015B  0832               	movf	sprintf@val+1,w
  1469  015C  00F6               	movwf	___lwdiv@dividend+1
  1470  015D  0831               	movf	sprintf@val,w
  1471  015E  00F5               	movwf	___lwdiv@dividend
  1472  015F  120A  118A  2356  120A  118A  	fcall	___lwdiv
  1473  0164  0874               	movf	?___lwdiv+1,w
  1474  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0167  00A6               	movwf	___lwmod@dividend+1
  1477  0168  0873               	movf	?___lwdiv,w
  1478  0169  00A5               	movwf	___lwmod@dividend
  1479  016A  120A  118A  239C  120A  118A  	fcall	___lwmod
  1480  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0171  0823               	movf	?___lwmod,w
  1483  0172  3E30               	addlw	48
  1484  0173  00AC               	movwf	??_sprintf+1
  1485  0174  082C               	movf	??_sprintf+1,w
  1486  0175  00B6               	movwf	sprintf@c
  1487  0176                     l1612:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1490  0176  0836               	movf	sprintf@c,w
  1491  0177  00AB               	movwf	??_sprintf
  1492  0178  0833               	movf	sprintf@sp,w
  1493  0179  0084               	movwf	4
  1494  017A  082B               	movf	??_sprintf,w
  1495  017B  1383               	bcf	3,7	;select IRP bank0
  1496  017C  0080               	movwf	0
  1497  017D                     l1614:
  1498  017D  3001               	movlw	1
  1499  017E  00AB               	movwf	??_sprintf
  1500  017F  082B               	movf	??_sprintf,w
  1501  0180  07B3               	addwf	sprintf@sp,f
  1502  0181                     l1616:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1505  0181  30FF               	movlw	255
  1506  0182  00AB               	movwf	??_sprintf
  1507  0183  082B               	movf	??_sprintf,w
  1508  0184  07AF               	addwf	sprintf@prec,f
  1509  0185  0A2F               	incf	sprintf@prec,w
  1510  0186  1D03               	btfss	3,2
  1511  0187  2989               	goto	u1411
  1512  0188  298A               	goto	u1410
  1513  0189                     u1411:
  1514  0189  2946               	goto	l1610
  1515  018A                     u1410:
  1516  018A                     l1618:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1519  018A  3001               	movlw	1
  1520  018B  07A8               	addwf	sprintf@f,f
  1521  018C  30FF               	movlw	-1
  1522  018D  0728               	addwf	sprintf@f,w
  1523  018E  0084               	movwf	4
  1524  018F  120A  118A  2448  120A  118A  	fcall	stringdir
  1525  0194  00AB               	movwf	??_sprintf
  1526  0195  082B               	movf	??_sprintf,w
  1527  0196  00B6               	movwf	sprintf@c
  1528  0197  0836               	movf	sprintf@c,w
  1529  0198  1D03               	btfss	3,2
  1530  0199  299B               	goto	u1421
  1531  019A  299C               	goto	u1420
  1532  019B                     u1421:
  1533  019B  2821               	goto	l1538
  1534  019C                     u1420:
  1535  019C                     l1620:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1538  019C  0833               	movf	sprintf@sp,w
  1539  019D  0084               	movwf	4
  1540  019E  1383               	bcf	3,7	;select IRP bank0
  1541  019F  0180               	clrf	0
  1542  01A0                     l287:
  1543  01A0  0008               	return
  1544  01A1                     __end_of_sprintf:
  1545                           
  1546                           	psect	text3
  1547  0472                     __ptext3:	
  1548 ;; *************** function _isdigit *****************
  1549 ;; Defined at:
  1550 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  c               1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  c               1    4[COMMON] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         2       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         2       0       0       0       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_sprintf
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _isdigit
  1580  0472                     _isdigit:
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1584                           ;isdigit@c stored from wreg
  1585  0472  00F4               	movwf	isdigit@c
  1586  0473                     l1146:
  1587  0473  01F3               	clrf	_isdigit$819
  1588  0474                     l1148:
  1589  0474  303A               	movlw	58
  1590  0475  0274               	subwf	isdigit@c,w
  1591  0476  1803               	skipnc
  1592  0477  2C79               	goto	u591
  1593  0478  2C7A               	goto	u590
  1594  0479                     u591:
  1595  0479  2C82               	goto	l1154
  1596  047A                     u590:
  1597  047A                     l1150:
  1598  047A  3030               	movlw	48
  1599  047B  0274               	subwf	isdigit@c,w
  1600  047C  1C03               	skipc
  1601  047D  2C7F               	goto	u601
  1602  047E  2C80               	goto	u600
  1603  047F                     u601:
  1604  047F  2C82               	goto	l1154
  1605  0480                     u600:
  1606  0480                     l1152:
  1607  0480  01F3               	clrf	_isdigit$819
  1608  0481  0AF3               	incf	_isdigit$819,f
  1609  0482                     l1154:
  1610  0482  0C73               	rrf	_isdigit$819,w
  1611  0483                     l744:
  1612  0483  0008               	return
  1613  0484                     __end_of_isdigit:
  1614                           
  1615                           	psect	text4
  1616  0409                     __ptext4:	
  1617 ;; *************** function ___wmul *****************
  1618 ;; Defined at:
  1619 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  multiplier      2    3[COMMON] unsigned int 
  1622 ;;  multiplicand    2    5[COMMON] unsigned int 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  product         2    7[COMMON] unsigned int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    3[COMMON] unsigned int 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         4       0       0       0       0
  1635 ;;      Locals:         2       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         6       0       0       0       0
  1638 ;;Total ram usage:        6 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_sprintf
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function ___wmul
  1650  0409                     ___wmul:
  1651  0409                     l1158:	
  1652                           ;incstack = 0
  1653                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1654                           
  1655  0409  01F7               	clrf	___wmul@product
  1656  040A  01F8               	clrf	___wmul@product+1
  1657  040B                     l1160:
  1658  040B  1C73               	btfss	___wmul@multiplier,0
  1659  040C  2C0E               	goto	u611
  1660  040D  2C0F               	goto	u610
  1661  040E                     u611:
  1662  040E  2C15               	goto	l291
  1663  040F                     u610:
  1664  040F                     l1162:
  1665  040F  0875               	movf	___wmul@multiplicand,w
  1666  0410  07F7               	addwf	___wmul@product,f
  1667  0411  1803               	skipnc
  1668  0412  0AF8               	incf	___wmul@product+1,f
  1669  0413  0876               	movf	___wmul@multiplicand+1,w
  1670  0414  07F8               	addwf	___wmul@product+1,f
  1671  0415                     l291:
  1672  0415  3001               	movlw	1
  1673  0416                     u625:
  1674  0416  1003               	clrc
  1675  0417  0DF5               	rlf	___wmul@multiplicand,f
  1676  0418  0DF6               	rlf	___wmul@multiplicand+1,f
  1677  0419  3EFF               	addlw	-1
  1678  041A  1D03               	skipz
  1679  041B  2C16               	goto	u625
  1680  041C                     l1164:
  1681  041C  3001               	movlw	1
  1682  041D                     u635:
  1683  041D  1003               	clrc
  1684  041E  0CF4               	rrf	___wmul@multiplier+1,f
  1685  041F  0CF3               	rrf	___wmul@multiplier,f
  1686  0420  3EFF               	addlw	-1
  1687  0421  1D03               	skipz
  1688  0422  2C1D               	goto	u635
  1689  0423                     l1166:
  1690  0423  0873               	movf	___wmul@multiplier,w
  1691  0424  0474               	iorwf	___wmul@multiplier+1,w
  1692  0425  1D03               	btfss	3,2
  1693  0426  2C28               	goto	u641
  1694  0427  2C29               	goto	u640
  1695  0428                     u641:
  1696  0428  2C0B               	goto	l1160
  1697  0429                     u640:
  1698  0429                     l1168:
  1699  0429  0878               	movf	___wmul@product+1,w
  1700  042A  00F4               	movwf	?___wmul+1
  1701  042B  0877               	movf	___wmul@product,w
  1702  042C  00F3               	movwf	?___wmul
  1703  042D                     l293:
  1704  042D  0008               	return
  1705  042E                     __end_of___wmul:
  1706                           
  1707                           	psect	text5
  1708  039C                     __ptext5:	
  1709 ;; *************** function ___lwmod *****************
  1710 ;; Defined at:
  1711 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  divisor         2    3[BANK0 ] unsigned int 
  1714 ;;  dividend        2    5[BANK0 ] unsigned int 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  counter         1    7[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    3[BANK0 ] unsigned int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       4       0       0       0
  1727 ;;      Locals:         0       1       0       0       0
  1728 ;;      Temps:          1       0       0       0       0
  1729 ;;      Totals:         1       5       0       0       0
  1730 ;;Total ram usage:        6 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_sprintf
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function ___lwmod
  1742  039C                     ___lwmod:
  1743  039C                     l1514:	
  1744                           ;incstack = 0
  1745                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1746                           
  1747  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1748  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1749  039E  0823               	movf	___lwmod@divisor,w
  1750  039F  0424               	iorwf	___lwmod@divisor+1,w
  1751  03A0  1903               	btfsc	3,2
  1752  03A1  2BA3               	goto	u1231
  1753  03A2  2BA4               	goto	u1230
  1754  03A3                     u1231:
  1755  03A3  2BD3               	goto	l1532
  1756  03A4                     u1230:
  1757  03A4                     l1516:
  1758  03A4  01A7               	clrf	___lwmod@counter
  1759  03A5  0AA7               	incf	___lwmod@counter,f
  1760  03A6  2BB2               	goto	l1522
  1761  03A7                     l1518:
  1762  03A7  3001               	movlw	1
  1763  03A8                     u1245:
  1764  03A8  1003               	clrc
  1765  03A9  0DA3               	rlf	___lwmod@divisor,f
  1766  03AA  0DA4               	rlf	___lwmod@divisor+1,f
  1767  03AB  3EFF               	addlw	-1
  1768  03AC  1D03               	skipz
  1769  03AD  2BA8               	goto	u1245
  1770  03AE                     l1520:
  1771  03AE  3001               	movlw	1
  1772  03AF  00F8               	movwf	??___lwmod
  1773  03B0  0878               	movf	??___lwmod,w
  1774  03B1  07A7               	addwf	___lwmod@counter,f
  1775  03B2                     l1522:
  1776  03B2  1FA4               	btfss	___lwmod@divisor+1,7
  1777  03B3  2BB5               	goto	u1251
  1778  03B4  2BB6               	goto	u1250
  1779  03B5                     u1251:
  1780  03B5  2BA7               	goto	l1518
  1781  03B6                     u1250:
  1782  03B6                     l1524:
  1783  03B6  0824               	movf	___lwmod@divisor+1,w
  1784  03B7  0226               	subwf	___lwmod@dividend+1,w
  1785  03B8  1D03               	skipz
  1786  03B9  2BBC               	goto	u1265
  1787  03BA  0823               	movf	___lwmod@divisor,w
  1788  03BB  0225               	subwf	___lwmod@dividend,w
  1789  03BC                     u1265:
  1790  03BC  1C03               	skipc
  1791  03BD  2BBF               	goto	u1261
  1792  03BE  2BC0               	goto	u1260
  1793  03BF                     u1261:
  1794  03BF  2BC6               	goto	l1528
  1795  03C0                     u1260:
  1796  03C0                     l1526:
  1797  03C0  0823               	movf	___lwmod@divisor,w
  1798  03C1  02A5               	subwf	___lwmod@dividend,f
  1799  03C2  0824               	movf	___lwmod@divisor+1,w
  1800  03C3  1C03               	skipc
  1801  03C4  03A6               	decf	___lwmod@dividend+1,f
  1802  03C5  02A6               	subwf	___lwmod@dividend+1,f
  1803  03C6                     l1528:
  1804  03C6  3001               	movlw	1
  1805  03C7                     u1275:
  1806  03C7  1003               	clrc
  1807  03C8  0CA4               	rrf	___lwmod@divisor+1,f
  1808  03C9  0CA3               	rrf	___lwmod@divisor,f
  1809  03CA  3EFF               	addlw	-1
  1810  03CB  1D03               	skipz
  1811  03CC  2BC7               	goto	u1275
  1812  03CD                     l1530:
  1813  03CD  3001               	movlw	1
  1814  03CE  02A7               	subwf	___lwmod@counter,f
  1815  03CF  1D03               	btfss	3,2
  1816  03D0  2BD2               	goto	u1281
  1817  03D1  2BD3               	goto	u1280
  1818  03D2                     u1281:
  1819  03D2  2BB6               	goto	l1524
  1820  03D3                     u1280:
  1821  03D3                     l1532:
  1822  03D3  0826               	movf	___lwmod@dividend+1,w
  1823  03D4  00A4               	movwf	?___lwmod+1
  1824  03D5  0825               	movf	___lwmod@dividend,w
  1825  03D6  00A3               	movwf	?___lwmod
  1826  03D7                     l573:
  1827  03D7  0008               	return
  1828  03D8                     __end_of___lwmod:
  1829                           
  1830                           	psect	text6
  1831  0356                     __ptext6:	
  1832 ;; *************** function ___lwdiv *****************
  1833 ;; Defined at:
  1834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  divisor         2    3[COMMON] unsigned int 
  1837 ;;  dividend        2    5[COMMON] unsigned int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  quotient        2    1[BANK0 ] unsigned int 
  1840 ;;  counter         1    0[BANK0 ] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2    3[COMMON] unsigned int 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         4       0       0       0       0
  1851 ;;      Locals:         0       3       0       0       0
  1852 ;;      Temps:          1       0       0       0       0
  1853 ;;      Totals:         5       3       0       0       0
  1854 ;;Total ram usage:        8 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    1
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_sprintf
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function ___lwdiv
  1866  0356                     ___lwdiv:
  1867  0356                     l1488:	
  1868                           ;incstack = 0
  1869                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1870                           
  1871  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0358  01A1               	clrf	___lwdiv@quotient
  1874  0359  01A2               	clrf	___lwdiv@quotient+1
  1875  035A                     l1490:
  1876  035A  0873               	movf	___lwdiv@divisor,w
  1877  035B  0474               	iorwf	___lwdiv@divisor+1,w
  1878  035C  1903               	btfsc	3,2
  1879  035D  2B5F               	goto	u1161
  1880  035E  2B60               	goto	u1160
  1881  035F                     u1161:
  1882  035F  2B97               	goto	l1510
  1883  0360                     u1160:
  1884  0360                     l1492:
  1885  0360  01A0               	clrf	___lwdiv@counter
  1886  0361  0AA0               	incf	___lwdiv@counter,f
  1887  0362  2B6E               	goto	l1498
  1888  0363                     l1494:
  1889  0363  3001               	movlw	1
  1890  0364                     u1175:
  1891  0364  1003               	clrc
  1892  0365  0DF3               	rlf	___lwdiv@divisor,f
  1893  0366  0DF4               	rlf	___lwdiv@divisor+1,f
  1894  0367  3EFF               	addlw	-1
  1895  0368  1D03               	skipz
  1896  0369  2B64               	goto	u1175
  1897  036A                     l1496:
  1898  036A  3001               	movlw	1
  1899  036B  00F7               	movwf	??___lwdiv
  1900  036C  0877               	movf	??___lwdiv,w
  1901  036D  07A0               	addwf	___lwdiv@counter,f
  1902  036E                     l1498:
  1903  036E  1FF4               	btfss	___lwdiv@divisor+1,7
  1904  036F  2B71               	goto	u1181
  1905  0370  2B72               	goto	u1180
  1906  0371                     u1181:
  1907  0371  2B63               	goto	l1494
  1908  0372                     u1180:
  1909  0372                     l1500:
  1910  0372  3001               	movlw	1
  1911  0373                     u1195:
  1912  0373  1003               	clrc
  1913  0374  0DA1               	rlf	___lwdiv@quotient,f
  1914  0375  0DA2               	rlf	___lwdiv@quotient+1,f
  1915  0376  3EFF               	addlw	-1
  1916  0377  1D03               	skipz
  1917  0378  2B73               	goto	u1195
  1918  0379  0874               	movf	___lwdiv@divisor+1,w
  1919  037A  0276               	subwf	___lwdiv@dividend+1,w
  1920  037B  1D03               	skipz
  1921  037C  2B7F               	goto	u1205
  1922  037D  0873               	movf	___lwdiv@divisor,w
  1923  037E  0275               	subwf	___lwdiv@dividend,w
  1924  037F                     u1205:
  1925  037F  1C03               	skipc
  1926  0380  2B82               	goto	u1201
  1927  0381  2B83               	goto	u1200
  1928  0382                     u1201:
  1929  0382  2B8A               	goto	l1506
  1930  0383                     u1200:
  1931  0383                     l1502:
  1932  0383  0873               	movf	___lwdiv@divisor,w
  1933  0384  02F5               	subwf	___lwdiv@dividend,f
  1934  0385  0874               	movf	___lwdiv@divisor+1,w
  1935  0386  1C03               	skipc
  1936  0387  03F6               	decf	___lwdiv@dividend+1,f
  1937  0388  02F6               	subwf	___lwdiv@dividend+1,f
  1938  0389                     l1504:
  1939  0389  1421               	bsf	___lwdiv@quotient,0
  1940  038A                     l1506:
  1941  038A  3001               	movlw	1
  1942  038B                     u1215:
  1943  038B  1003               	clrc
  1944  038C  0CF4               	rrf	___lwdiv@divisor+1,f
  1945  038D  0CF3               	rrf	___lwdiv@divisor,f
  1946  038E  3EFF               	addlw	-1
  1947  038F  1D03               	skipz
  1948  0390  2B8B               	goto	u1215
  1949  0391                     l1508:
  1950  0391  3001               	movlw	1
  1951  0392  02A0               	subwf	___lwdiv@counter,f
  1952  0393  1D03               	btfss	3,2
  1953  0394  2B96               	goto	u1221
  1954  0395  2B97               	goto	u1220
  1955  0396                     u1221:
  1956  0396  2B72               	goto	l1500
  1957  0397                     u1220:
  1958  0397                     l1510:
  1959  0397  0822               	movf	___lwdiv@quotient+1,w
  1960  0398  00F4               	movwf	?___lwdiv+1
  1961  0399  0821               	movf	___lwdiv@quotient,w
  1962  039A  00F3               	movwf	?___lwdiv
  1963  039B                     l563:
  1964  039B  0008               	return
  1965  039C                     __end_of___lwdiv:
  1966                           
  1967                           	psect	text7
  1968  02E3                     __ptext7:	
  1969 ;; *************** function _USART_Initialize *****************
  1970 ;; Defined at:
  1971 ;;		line 13 in file "usart.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  baudrate        4   14[BANK0 ] const long 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  x               4    4[COMMON] long 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       4       0       0       0
  1986 ;;      Locals:         4       0       0       0       0
  1987 ;;      Temps:          0      12       0       0       0
  1988 ;;      Totals:         4      16       0       0       0
  1989 ;;Total ram usage:       20 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    2
  1992 ;; This function calls:
  1993 ;;		___aldiv
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _USART_Initialize
  2001  02E3                     _USART_Initialize:
  2002  02E3                     l1668:	
  2003                           ;incstack = 0
  2004                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2005                           
  2006                           
  2007                           ;usart.c: 14:     long int x;;usart.c: 17:     TXSTAbits.TX9 = 0;
  2008  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2009  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2010  02E5  1318               	bcf	24,6	;volatile
  2011                           
  2012                           ;usart.c: 19:     TXSTAbits.TXEN = 1;
  2013  02E6  1698               	bsf	24,5	;volatile
  2014                           
  2015                           ;usart.c: 21:     TXSTAbits.SYNC = 0;
  2016  02E7  1218               	bcf	24,4	;volatile
  2017                           
  2018                           ;usart.c: 23:     TXSTAbits.BRGH = 0;
  2019  02E8  1118               	bcf	24,2	;volatile
  2020                           
  2021                           ;usart.c: 24:     BAUDCTLbits.BRG16 = 0;
  2022  02E9  1683               	bsf	3,5	;RP0=1, select bank3
  2023  02EA  1703               	bsf	3,6	;RP1=1, select bank3
  2024  02EB  1187               	bcf	7,3	;volatile
  2025                           
  2026                           ;usart.c: 27:     RCSTAbits.SPEN = 1;
  2027  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2028  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2029  02EE  1798               	bsf	24,7	;volatile
  2030                           
  2031                           ;usart.c: 29:     RCSTAbits.CREN = 1;
  2032  02EF  1618               	bsf	24,4	;volatile
  2033  02F0                     l1670:
  2034                           
  2035                           ;usart.c: 31:     x = (8000000 - baudrate*64)/(baudrate*64);
  2036  02F0  082E               	movf	USART_Initialize@baudrate,w
  2037  02F1  00B2               	movwf	??_USART_Initialize
  2038  02F2  082F               	movf	USART_Initialize@baudrate+1,w
  2039  02F3  00B3               	movwf	??_USART_Initialize+1
  2040  02F4  0830               	movf	USART_Initialize@baudrate+2,w
  2041  02F5  00B4               	movwf	??_USART_Initialize+2
  2042  02F6  0831               	movf	USART_Initialize@baudrate+3,w
  2043  02F7  00B5               	movwf	??_USART_Initialize+3
  2044  02F8  3006               	movlw	6
  2045  02F9                     u1535:
  2046  02F9  1003               	clrc
  2047  02FA  0DB2               	rlf	??_USART_Initialize,f
  2048  02FB  0DB3               	rlf	??_USART_Initialize+1,f
  2049  02FC  0DB4               	rlf	??_USART_Initialize+2,f
  2050  02FD  0DB5               	rlf	??_USART_Initialize+3,f
  2051  02FE                     u1530:
  2052  02FE  3EFF               	addlw	-1
  2053  02FF  1D03               	skipz
  2054  0300  2AF9               	goto	u1535
  2055  0301  0835               	movf	??_USART_Initialize+3,w
  2056  0302  00A3               	movwf	___aldiv@divisor+3
  2057  0303  0834               	movf	??_USART_Initialize+2,w
  2058  0304  00A2               	movwf	___aldiv@divisor+2
  2059  0305  0833               	movf	??_USART_Initialize+1,w
  2060  0306  00A1               	movwf	___aldiv@divisor+1
  2061  0307  0832               	movf	??_USART_Initialize,w
  2062  0308  00A0               	movwf	___aldiv@divisor
  2063  0309  082E               	movf	USART_Initialize@baudrate,w
  2064  030A  00B6               	movwf	??_USART_Initialize+4
  2065  030B  082F               	movf	USART_Initialize@baudrate+1,w
  2066  030C  00B7               	movwf	??_USART_Initialize+5
  2067  030D  0830               	movf	USART_Initialize@baudrate+2,w
  2068  030E  00B8               	movwf	??_USART_Initialize+6
  2069  030F  0831               	movf	USART_Initialize@baudrate+3,w
  2070  0310  00B9               	movwf	??_USART_Initialize+7
  2071  0311  3006               	movlw	6
  2072  0312                     u1545:
  2073  0312  1003               	clrc
  2074  0313  0DB6               	rlf	??_USART_Initialize+4,f
  2075  0314  0DB7               	rlf	??_USART_Initialize+5,f
  2076  0315  0DB8               	rlf	??_USART_Initialize+6,f
  2077  0316  0DB9               	rlf	??_USART_Initialize+7,f
  2078  0317                     u1540:
  2079  0317  3EFF               	addlw	-1
  2080  0318  1D03               	skipz
  2081  0319  2B12               	goto	u1545
  2082  031A  3000               	movlw	0
  2083  031B  00BA               	movwf	??_USART_Initialize+8
  2084  031C  3012               	movlw	18
  2085  031D  00BB               	movwf	??_USART_Initialize+9
  2086  031E  307A               	movlw	122
  2087  031F  00BC               	movwf	??_USART_Initialize+10
  2088  0320  3000               	movlw	0
  2089  0321  00BD               	movwf	??_USART_Initialize+11
  2090  0322  0836               	movf	??_USART_Initialize+4,w
  2091  0323  02BA               	subwf	??_USART_Initialize+8,f
  2092  0324  0837               	movf	??_USART_Initialize+5,w
  2093  0325  1C03               	skipc
  2094  0326  0F37               	incfsz	??_USART_Initialize+5,w
  2095  0327  2B29               	goto	u1551
  2096  0328  2B2A               	goto	u1552
  2097  0329                     u1551:
  2098  0329  02BB               	subwf	??_USART_Initialize+9,f
  2099  032A                     u1552:
  2100  032A  0838               	movf	??_USART_Initialize+6,w
  2101  032B  1C03               	skipc
  2102  032C  0F38               	incfsz	??_USART_Initialize+6,w
  2103  032D  2B2F               	goto	u1553
  2104  032E  2B30               	goto	u1554
  2105  032F                     u1553:
  2106  032F  02BC               	subwf	??_USART_Initialize+10,f
  2107  0330                     u1554:
  2108  0330  0839               	movf	??_USART_Initialize+7,w
  2109  0331  1C03               	skipc
  2110  0332  0F39               	incfsz	??_USART_Initialize+7,w
  2111  0333  2B35               	goto	u1555
  2112  0334  2B36               	goto	u1556
  2113  0335                     u1555:
  2114  0335  02BD               	subwf	??_USART_Initialize+11,f
  2115  0336                     u1556:
  2116  0336  083D               	movf	??_USART_Initialize+11,w
  2117  0337  00A7               	movwf	___aldiv@dividend+3
  2118  0338  083C               	movf	??_USART_Initialize+10,w
  2119  0339  00A6               	movwf	___aldiv@dividend+2
  2120  033A  083B               	movf	??_USART_Initialize+9,w
  2121  033B  00A5               	movwf	___aldiv@dividend+1
  2122  033C  083A               	movf	??_USART_Initialize+8,w
  2123  033D  00A4               	movwf	___aldiv@dividend
  2124  033E  120A  118A  2246  120A  118A  	fcall	___aldiv
  2125  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0345  0823               	movf	?___aldiv+3,w
  2128  0346  00F7               	movwf	USART_Initialize@x+3
  2129  0347  0822               	movf	?___aldiv+2,w
  2130  0348  00F6               	movwf	USART_Initialize@x+2
  2131  0349  0821               	movf	?___aldiv+1,w
  2132  034A  00F5               	movwf	USART_Initialize@x+1
  2133  034B  0820               	movf	?___aldiv,w
  2134  034C  00F4               	movwf	USART_Initialize@x
  2135  034D                     l1672:
  2136                           
  2137                           ;usart.c: 32:     SPBRG = x;
  2138  034D  0874               	movf	USART_Initialize@x,w
  2139  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2140  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0350  0099               	movwf	25	;volatile
  2142  0351                     l1674:
  2143                           
  2144                           ;usart.c: 35:     INTCONbits.GIE = 1;
  2145  0351  178B               	bsf	11,7	;volatile
  2146  0352                     l1676:
  2147                           
  2148                           ;usart.c: 37:     INTCONbits.PEIE = 1;
  2149  0352  170B               	bsf	11,6	;volatile
  2150  0353                     l1678:
  2151                           
  2152                           ;usart.c: 40:     PIE1bits.RCIE = 1;
  2153  0353  168C               	bsf	12,5	;volatile
  2154  0354                     l1680:
  2155                           
  2156                           ;usart.c: 42:     PIE1bits.TXIE = 1;
  2157  0354  160C               	bsf	12,4	;volatile
  2158  0355                     l15:
  2159  0355  0008               	return
  2160  0356                     __end_of_USART_Initialize:
  2161                           
  2162                           	psect	text8
  2163  0246                     __ptext8:	
  2164 ;; *************** function ___aldiv *****************
  2165 ;; Defined at:
  2166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  divisor         4    0[BANK0 ] long 
  2169 ;;  dividend        4    4[BANK0 ] long 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  quotient        4   10[BANK0 ] long 
  2172 ;;  sign            1    9[BANK0 ] unsigned char 
  2173 ;;  counter         1    8[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  4    0[BANK0 ] long 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       8       0       0       0
  2184 ;;      Locals:         0       6       0       0       0
  2185 ;;      Temps:          1       0       0       0       0
  2186 ;;      Totals:         1      14       0       0       0
  2187 ;;Total ram usage:       15 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_USART_Initialize
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function ___aldiv
  2199  0246                     ___aldiv:
  2200  0246                     l1628:	
  2201                           ;incstack = 0
  2202                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2203                           
  2204  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0248  01A9               	clrf	___aldiv@sign
  2207  0249                     l1630:
  2208  0249  1FA3               	btfss	___aldiv@divisor+3,7
  2209  024A  2A4C               	goto	u1431
  2210  024B  2A4D               	goto	u1430
  2211  024C                     u1431:
  2212  024C  2A5A               	goto	l356
  2213  024D                     u1430:
  2214  024D                     l1632:
  2215  024D  09A0               	comf	___aldiv@divisor,f
  2216  024E  09A1               	comf	___aldiv@divisor+1,f
  2217  024F  09A2               	comf	___aldiv@divisor+2,f
  2218  0250  09A3               	comf	___aldiv@divisor+3,f
  2219  0251  0AA0               	incf	___aldiv@divisor,f
  2220  0252  1903               	skipnz
  2221  0253  0AA1               	incf	___aldiv@divisor+1,f
  2222  0254  1903               	skipnz
  2223  0255  0AA2               	incf	___aldiv@divisor+2,f
  2224  0256  1903               	skipnz
  2225  0257  0AA3               	incf	___aldiv@divisor+3,f
  2226  0258  01A9               	clrf	___aldiv@sign
  2227  0259  0AA9               	incf	___aldiv@sign,f
  2228  025A                     l356:
  2229  025A  1FA7               	btfss	___aldiv@dividend+3,7
  2230  025B  2A5D               	goto	u1441
  2231  025C  2A5E               	goto	u1440
  2232  025D                     u1441:
  2233  025D  2A6D               	goto	l1638
  2234  025E                     u1440:
  2235  025E                     l1634:
  2236  025E  09A4               	comf	___aldiv@dividend,f
  2237  025F  09A5               	comf	___aldiv@dividend+1,f
  2238  0260  09A6               	comf	___aldiv@dividend+2,f
  2239  0261  09A7               	comf	___aldiv@dividend+3,f
  2240  0262  0AA4               	incf	___aldiv@dividend,f
  2241  0263  1903               	skipnz
  2242  0264  0AA5               	incf	___aldiv@dividend+1,f
  2243  0265  1903               	skipnz
  2244  0266  0AA6               	incf	___aldiv@dividend+2,f
  2245  0267  1903               	skipnz
  2246  0268  0AA7               	incf	___aldiv@dividend+3,f
  2247  0269                     l1636:
  2248  0269  3001               	movlw	1
  2249  026A  00F3               	movwf	??___aldiv
  2250  026B  0873               	movf	??___aldiv,w
  2251  026C  06A9               	xorwf	___aldiv@sign,f
  2252  026D                     l1638:
  2253  026D  3000               	movlw	0
  2254  026E  00AD               	movwf	___aldiv@quotient+3
  2255  026F  3000               	movlw	0
  2256  0270  00AC               	movwf	___aldiv@quotient+2
  2257  0271  3000               	movlw	0
  2258  0272  00AB               	movwf	___aldiv@quotient+1
  2259  0273  3000               	movlw	0
  2260  0274  00AA               	movwf	___aldiv@quotient
  2261  0275                     l1640:
  2262  0275  0823               	movf	___aldiv@divisor+3,w
  2263  0276  0422               	iorwf	___aldiv@divisor+2,w
  2264  0277  0421               	iorwf	___aldiv@divisor+1,w
  2265  0278  0420               	iorwf	___aldiv@divisor,w
  2266  0279  1903               	skipnz
  2267  027A  2A7C               	goto	u1451
  2268  027B  2A7D               	goto	u1450
  2269  027C                     u1451:
  2270  027C  2ACA               	goto	l1660
  2271  027D                     u1450:
  2272  027D                     l1642:
  2273  027D  01A8               	clrf	___aldiv@counter
  2274  027E  0AA8               	incf	___aldiv@counter,f
  2275  027F  2A8D               	goto	l1646
  2276  0280                     l1644:
  2277  0280  3001               	movlw	1
  2278  0281  00F3               	movwf	??___aldiv
  2279  0282                     u1465:
  2280  0282  1003               	clrc
  2281  0283  0DA0               	rlf	___aldiv@divisor,f
  2282  0284  0DA1               	rlf	___aldiv@divisor+1,f
  2283  0285  0DA2               	rlf	___aldiv@divisor+2,f
  2284  0286  0DA3               	rlf	___aldiv@divisor+3,f
  2285  0287  0BF3               	decfsz	??___aldiv,f
  2286  0288  2A82               	goto	u1465
  2287  0289  3001               	movlw	1
  2288  028A  00F3               	movwf	??___aldiv
  2289  028B  0873               	movf	??___aldiv,w
  2290  028C  07A8               	addwf	___aldiv@counter,f
  2291  028D                     l1646:
  2292  028D  1FA3               	btfss	___aldiv@divisor+3,7
  2293  028E  2A90               	goto	u1471
  2294  028F  2A91               	goto	u1470
  2295  0290                     u1471:
  2296  0290  2A80               	goto	l1644
  2297  0291                     u1470:
  2298  0291                     l1648:
  2299  0291  3001               	movlw	1
  2300  0292  00F3               	movwf	??___aldiv
  2301  0293                     u1485:
  2302  0293  1003               	clrc
  2303  0294  0DAA               	rlf	___aldiv@quotient,f
  2304  0295  0DAB               	rlf	___aldiv@quotient+1,f
  2305  0296  0DAC               	rlf	___aldiv@quotient+2,f
  2306  0297  0DAD               	rlf	___aldiv@quotient+3,f
  2307  0298  0BF3               	decfsz	??___aldiv,f
  2308  0299  2A93               	goto	u1485
  2309  029A                     l1650:
  2310  029A  0823               	movf	___aldiv@divisor+3,w
  2311  029B  0227               	subwf	___aldiv@dividend+3,w
  2312  029C  1D03               	skipz
  2313  029D  2AA8               	goto	u1495
  2314  029E  0822               	movf	___aldiv@divisor+2,w
  2315  029F  0226               	subwf	___aldiv@dividend+2,w
  2316  02A0  1D03               	skipz
  2317  02A1  2AA8               	goto	u1495
  2318  02A2  0821               	movf	___aldiv@divisor+1,w
  2319  02A3  0225               	subwf	___aldiv@dividend+1,w
  2320  02A4  1D03               	skipz
  2321  02A5  2AA8               	goto	u1495
  2322  02A6  0820               	movf	___aldiv@divisor,w
  2323  02A7  0224               	subwf	___aldiv@dividend,w
  2324  02A8                     u1495:
  2325  02A8  1C03               	skipc
  2326  02A9  2AAB               	goto	u1491
  2327  02AA  2AAC               	goto	u1490
  2328  02AB                     u1491:
  2329  02AB  2ABB               	goto	l1656
  2330  02AC                     u1490:
  2331  02AC                     l1652:
  2332  02AC  0820               	movf	___aldiv@divisor,w
  2333  02AD  02A4               	subwf	___aldiv@dividend,f
  2334  02AE  0821               	movf	___aldiv@divisor+1,w
  2335  02AF  1C03               	skipc
  2336  02B0  0F21               	incfsz	___aldiv@divisor+1,w
  2337  02B1  02A5               	subwf	___aldiv@dividend+1,f
  2338  02B2  0822               	movf	___aldiv@divisor+2,w
  2339  02B3  1C03               	skipc
  2340  02B4  0F22               	incfsz	___aldiv@divisor+2,w
  2341  02B5  02A6               	subwf	___aldiv@dividend+2,f
  2342  02B6  0823               	movf	___aldiv@divisor+3,w
  2343  02B7  1C03               	skipc
  2344  02B8  0F23               	incfsz	___aldiv@divisor+3,w
  2345  02B9  02A7               	subwf	___aldiv@dividend+3,f
  2346  02BA                     l1654:
  2347  02BA  142A               	bsf	___aldiv@quotient,0
  2348  02BB                     l1656:
  2349  02BB  3001               	movlw	1
  2350  02BC                     u1505:
  2351  02BC  1003               	clrc
  2352  02BD  0CA3               	rrf	___aldiv@divisor+3,f
  2353  02BE  0CA2               	rrf	___aldiv@divisor+2,f
  2354  02BF  0CA1               	rrf	___aldiv@divisor+1,f
  2355  02C0  0CA0               	rrf	___aldiv@divisor,f
  2356  02C1  3EFF               	addlw	-1
  2357  02C2  1D03               	skipz
  2358  02C3  2ABC               	goto	u1505
  2359  02C4                     l1658:
  2360  02C4  3001               	movlw	1
  2361  02C5  02A8               	subwf	___aldiv@counter,f
  2362  02C6  1D03               	btfss	3,2
  2363  02C7  2AC9               	goto	u1511
  2364  02C8  2ACA               	goto	u1510
  2365  02C9                     u1511:
  2366  02C9  2A91               	goto	l1648
  2367  02CA                     u1510:
  2368  02CA                     l1660:
  2369  02CA  0829               	movf	___aldiv@sign,w
  2370  02CB  1903               	btfsc	3,2
  2371  02CC  2ACE               	goto	u1521
  2372  02CD  2ACF               	goto	u1520
  2373  02CE                     u1521:
  2374  02CE  2ADA               	goto	l1664
  2375  02CF                     u1520:
  2376  02CF                     l1662:
  2377  02CF  09AA               	comf	___aldiv@quotient,f
  2378  02D0  09AB               	comf	___aldiv@quotient+1,f
  2379  02D1  09AC               	comf	___aldiv@quotient+2,f
  2380  02D2  09AD               	comf	___aldiv@quotient+3,f
  2381  02D3  0AAA               	incf	___aldiv@quotient,f
  2382  02D4  1903               	skipnz
  2383  02D5  0AAB               	incf	___aldiv@quotient+1,f
  2384  02D6  1903               	skipnz
  2385  02D7  0AAC               	incf	___aldiv@quotient+2,f
  2386  02D8  1903               	skipnz
  2387  02D9  0AAD               	incf	___aldiv@quotient+3,f
  2388  02DA                     l1664:
  2389  02DA  082D               	movf	___aldiv@quotient+3,w
  2390  02DB  00A3               	movwf	?___aldiv+3
  2391  02DC  082C               	movf	___aldiv@quotient+2,w
  2392  02DD  00A2               	movwf	?___aldiv+2
  2393  02DE  082B               	movf	___aldiv@quotient+1,w
  2394  02DF  00A1               	movwf	?___aldiv+1
  2395  02E0  082A               	movf	___aldiv@quotient,w
  2396  02E1  00A0               	movwf	?___aldiv
  2397  02E2                     l366:
  2398  02E2  0008               	return
  2399  02E3                     __end_of___aldiv:
  2400                           
  2401                           	psect	text9
  2402  04A2                     __ptext9:	
  2403 ;; *************** function _Setup *****************
  2404 ;; Defined at:
  2405 ;;		line 53 in file "MASTER.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		status,2
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0
  2422 ;;      Totals:         0       0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _Setup
  2435  04A2                     _Setup:
  2436  04A2                     l1368:	
  2437                           ;incstack = 0
  2438                           ; Regs used in _Setup: [status,2]
  2439                           
  2440                           
  2441                           ;MASTER.c: 55:     ANSEL = 0b00000000;
  2442  04A2  1683               	bsf	3,5	;RP0=1, select bank3
  2443  04A3  1703               	bsf	3,6	;RP1=1, select bank3
  2444  04A4  0188               	clrf	8	;volatile
  2445                           
  2446                           ;MASTER.c: 56:     TRISA = 0b00000000;
  2447  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2448  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  2449  04A7  0185               	clrf	5	;volatile
  2450                           
  2451                           ;MASTER.c: 58:     PORTA = 0;
  2452  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2453  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2454  04AA  0185               	clrf	5	;volatile
  2455                           
  2456                           ;MASTER.c: 59:     PORTC = 0;
  2457  04AB  0187               	clrf	7	;volatile
  2458  04AC                     l64:
  2459  04AC  0008               	return
  2460  04AD                     __end_of_Setup:
  2461                           
  2462                           	psect	text10
  2463  0495                     __ptext10:	
  2464 ;; *************** function _I2C_stop *****************
  2465 ;; Defined at:
  2466 ;;		line 45 in file "I2C.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    2
  2487 ;; This function calls:
  2488 ;;		_I2C_sleep
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _I2C_stop
  2496  0495                     _I2C_stop:
  2497  0495                     l1398:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _I2C_stop: [status,2+status,0+pclath+cstack]
  2500                           
  2501                           
  2502                           ;I2C.c: 46:     I2C_sleep();
  2503  0495  120A  118A  24C9  120A  118A  	fcall	_I2C_sleep
  2504  049A                     l1400:
  2505                           
  2506                           ;I2C.c: 47:     PEN = 1;
  2507  049A  1683               	bsf	3,5	;RP0=1, select bank1
  2508  049B  1303               	bcf	3,6	;RP1=0, select bank1
  2509  049C  1511               	bsf	17,2	;volatile
  2510  049D                     l151:	
  2511                           ;I2C.c: 48:     while(PEN);
  2512                           
  2513  049D  1911               	btfsc	17,2	;volatile
  2514  049E  2CA0               	goto	u1101
  2515  049F  2CA1               	goto	u1100
  2516  04A0                     u1101:
  2517  04A0  2C9D               	goto	l151
  2518  04A1                     u1100:
  2519  04A1                     l154:
  2520  04A1  0008               	return
  2521  04A2                     __end_of_I2C_stop:
  2522                           
  2523                           	psect	text11
  2524  04C1                     __ptext11:	
  2525 ;; *************** function _I2C_rstart *****************
  2526 ;; Defined at:
  2527 ;;		line 35 in file "I2C.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		None
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _I2C_rstart
  2557  04C1                     _I2C_rstart:
  2558  04C1                     l1384:	
  2559                           ;incstack = 0
  2560                           ; Regs used in _I2C_rstart: []
  2561                           
  2562                           
  2563                           ;I2C.c: 36:     RSEN = 1;
  2564  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2565  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2566  04C3  1491               	bsf	17,1	;volatile
  2567  04C4                     l139:	
  2568                           ;I2C.c: 37:     while(RSEN);
  2569                           
  2570  04C4  1891               	btfsc	17,1	;volatile
  2571  04C5  2CC7               	goto	u1061
  2572  04C6  2CC8               	goto	u1060
  2573  04C7                     u1061:
  2574  04C7  2CC4               	goto	l139
  2575  04C8                     u1060:
  2576  04C8                     l142:
  2577  04C8  0008               	return
  2578  04C9                     __end_of_I2C_rstart:
  2579                           
  2580                           	psect	text12
  2581  042E                     __ptext12:	
  2582 ;; *************** function _I2C_init *****************
  2583 ;; Defined at:
  2584 ;;		line 12 in file "I2C.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _I2C_init
  2614  042E                     _I2C_init:
  2615  042E                     l1372:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _I2C_init: [wreg+status,2]
  2618                           
  2619                           
  2620                           ;I2C.c: 13:     TRISC3 = 1;
  2621  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2622  042F  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0430  1587               	bsf	7,3	;volatile
  2624                           
  2625                           ;I2C.c: 14:     TRISC4 = 1;
  2626  0431  1607               	bsf	7,4	;volatile
  2627  0432                     l1374:
  2628                           
  2629                           ;I2C.c: 15:     SSPBUF = 0x00;
  2630  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0434  0193               	clrf	19	;volatile
  2633  0435                     l1376:
  2634                           
  2635                           ;I2C.c: 16:     SSPSTAT = 0xc0;
  2636  0435  30C0               	movlw	192
  2637  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2638  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2639  0438  0094               	movwf	20	;volatile
  2640  0439                     l1378:
  2641                           
  2642                           ;I2C.c: 17:     SSPCON = 0X28;
  2643  0439  3028               	movlw	40
  2644  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2645  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2646  043C  0094               	movwf	20	;volatile
  2647                           
  2648                           ;I2C.c: 18:     SSPCON2 = 0x00;
  2649  043D  1683               	bsf	3,5	;RP0=1, select bank1
  2650  043E  1303               	bcf	3,6	;RP1=0, select bank1
  2651  043F  0191               	clrf	17	;volatile
  2652  0440                     l1380:
  2653                           
  2654                           ;I2C.c: 19:     SSPIF = 0;
  2655  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0442  118C               	bcf	12,3	;volatile
  2658  0443                     l1382:
  2659                           
  2660                           ;I2C.c: 20:     SSPADD = 9;
  2661  0443  3009               	movlw	9
  2662  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0446  0093               	movwf	19	;volatile
  2665  0447                     l124:
  2666  0447  0008               	return
  2667  0448                     __end_of_I2C_init:
  2668                           
  2669                           	psect	text13
  2670  0484                     __ptext13:	
  2671 ;; *************** function _I2C_TX *****************
  2672 ;; Defined at:
  2673 ;;		line 58 in file "I2C.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  c               1    wreg     unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  c               1    3[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      unsigned char 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         1       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0
  2690 ;;      Totals:         1       0       0       0       0
  2691 ;;Total ram usage:        1 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    2
  2694 ;; This function calls:
  2695 ;;		_I2C_sleep
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _I2C_TX
  2703  0484                     _I2C_TX:
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _I2C_TX: [wreg+status,2+status,0+pclath+cstack]
  2707                           ;I2C_TX@c stored from wreg
  2708  0484  00F3               	movwf	I2C_TX@c
  2709  0485                     l1386:
  2710                           
  2711                           ;I2C.c: 59:     SSPBUF = c;
  2712  0485  0873               	movf	I2C_TX@c,w
  2713  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0488  0093               	movwf	19	;volatile
  2716  0489                     l163:	
  2717                           ;I2C.c: 60:     while(BF);
  2718                           
  2719  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2720  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2721  048B  1814               	btfsc	20,0	;volatile
  2722  048C  2C8E               	goto	u1071
  2723  048D  2C8F               	goto	u1070
  2724  048E                     u1071:
  2725  048E  2C89               	goto	l163
  2726  048F                     u1070:
  2727  048F                     l1388:
  2728                           
  2729                           ;I2C.c: 61:     I2C_sleep();
  2730  048F  120A  118A  24C9  120A  118A  	fcall	_I2C_sleep
  2731  0494                     l166:
  2732  0494  0008               	return
  2733  0495                     __end_of_I2C_TX:
  2734                           
  2735                           	psect	text14
  2736  04C9                     __ptext14:	
  2737 ;; *************** function _I2C_sleep *****************
  2738 ;; Defined at:
  2739 ;;		line 29 in file "I2C.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		None
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;;		_I2C_stop
  2765 ;;		_I2C_TX
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _I2C_sleep
  2771  04C9                     _I2C_sleep:
  2772  04C9                     l1312:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _I2C_sleep: []
  2775                           
  2776  04C9                     l133:	
  2777                           ;I2C.c: 30:    while (SSPIF ==0);
  2778                           
  2779  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2780  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2781  04CB  1D8C               	btfss	12,3	;volatile
  2782  04CC  2CCE               	goto	u921
  2783  04CD  2CCF               	goto	u920
  2784  04CE                     u921:
  2785  04CE  2CC9               	goto	l133
  2786  04CF                     u920:
  2787  04CF                     l135:
  2788                           
  2789                           ;I2C.c: 31:    SSPIF = 0;
  2790  04CF  118C               	bcf	12,3	;volatile
  2791  04D0                     l136:
  2792  04D0  0008               	return
  2793  04D1                     __end_of_I2C_sleep:
  2794                           
  2795                           	psect	text15
  2796  04AD                     __ptext15:	
  2797 ;; *************** function _I2C_RX *****************
  2798 ;; Defined at:
  2799 ;;		line 51 in file "I2C.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _I2C_RX
  2829  04AD                     _I2C_RX:
  2830  04AD                     l1390:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _I2C_RX: [wreg]
  2833                           
  2834                           
  2835                           ;I2C.c: 52:     RCEN = 1;
  2836  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  2837  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  2838  04AF  1591               	bsf	17,3	;volatile
  2839  04B0                     l157:	
  2840                           ;I2C.c: 53:     while(!BF);
  2841                           
  2842  04B0  1C14               	btfss	20,0	;volatile
  2843  04B1  2CB3               	goto	u1081
  2844  04B2  2CB4               	goto	u1080
  2845  04B3                     u1081:
  2846  04B3  2CB0               	goto	l157
  2847  04B4                     u1080:
  2848  04B4                     l1392:
  2849                           
  2850                           ;I2C.c: 54:     return SSPBUF;
  2851  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2852  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2853  04B6  0813               	movf	19,w	;volatile
  2854  04B7                     l160:
  2855  04B7  0008               	return
  2856  04B8                     __end_of_I2C_RX:
  2857                           
  2858                           	psect	text16
  2859  04B8                     __ptext16:	
  2860 ;; *************** function _I2C_NACK *****************
  2861 ;; Defined at:
  2862 ;;		line 40 in file "I2C.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		None
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _I2C_NACK
  2892  04B8                     _I2C_NACK:
  2893  04B8                     l1396:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _I2C_NACK: []
  2896                           
  2897                           
  2898                           ;I2C.c: 41:     ACKDT = 1;
  2899  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2900  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2901  04BA  1691               	bsf	17,5	;volatile
  2902                           
  2903                           ;I2C.c: 42:     ACKEN =1;
  2904  04BB  1611               	bsf	17,4	;volatile
  2905  04BC                     l145:	
  2906                           ;I2C.c: 43:     while(ACKEN);
  2907                           
  2908  04BC  1A11               	btfsc	17,4	;volatile
  2909  04BD  2CBF               	goto	u1091
  2910  04BE  2CC0               	goto	u1090
  2911  04BF                     u1091:
  2912  04BF  2CBC               	goto	l145
  2913  04C0                     u1090:
  2914  04C0                     l148:
  2915  04C0  0008               	return
  2916  04C1                     __end_of_I2C_NACK:
  2917                           
  2918                           	psect	text17
  2919  03D8                     __ptext17:	
  2920 ;; *************** function _myISR *****************
  2921 ;; Defined at:
  2922 ;;		line 67 in file "MASTER.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          3       0       0       0       0
  2939 ;;      Totals:         3       0       0       0       0
  2940 ;;Total ram usage:        3 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		Interrupt level 1
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _myISR
  2951  03D8                     _myISR:
  2952  03D8                     i1l1402:
  2953                           
  2954                           ;MASTER.c: 68:     if(PIR1bits.RCIF == 1){
  2955  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2956  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2957  03DA  1E8C               	btfss	12,5	;volatile
  2958  03DB  2BDD               	goto	u111_21
  2959  03DC  2BDE               	goto	u111_20
  2960  03DD                     u111_21:
  2961  03DD  2BE3               	goto	i1l1408
  2962  03DE                     u111_20:
  2963  03DE                     i1l1404:
  2964                           
  2965                           ;MASTER.c: 69:         PIR1bits.RCIF = 0;
  2966  03DE  128C               	bcf	12,5	;volatile
  2967  03DF                     i1l1406:
  2968                           
  2969                           ;MASTER.c: 70:         leds = RCREG;
  2970  03DF  081A               	movf	26,w	;volatile
  2971  03E0  00F0               	movwf	??_myISR
  2972  03E1  0870               	movf	??_myISR,w
  2973  03E2  00F9               	movwf	_leds
  2974  03E3                     i1l1408:
  2975                           
  2976                           ;MASTER.c: 73:     if (leds == 1) {
  2977  03E3  0379               	decf	_leds,w
  2978  03E4  1D03               	btfss	3,2
  2979  03E5  2BE7               	goto	u112_21
  2980  03E6  2BE8               	goto	u112_20
  2981  03E7                     u112_21:
  2982  03E7  2BEA               	goto	i1l1412
  2983  03E8                     u112_20:
  2984  03E8                     i1l1410:
  2985                           
  2986                           ;MASTER.c: 74:         PORTAbits.RA0 = 0;
  2987  03E8  1005               	bcf	5,0	;volatile
  2988                           
  2989                           ;MASTER.c: 75:     } else if (leds == 2) {
  2990  03E9  2C02               	goto	i1l77
  2991  03EA                     i1l1412:
  2992  03EA  3002               	movlw	2
  2993  03EB  0679               	xorwf	_leds,w
  2994  03EC  1D03               	btfss	3,2
  2995  03ED  2BEF               	goto	u113_21
  2996  03EE  2BF0               	goto	u113_20
  2997  03EF                     u113_21:
  2998  03EF  2BF2               	goto	i1l1416
  2999  03F0                     u113_20:
  3000  03F0                     i1l1414:
  3001                           
  3002                           ;MASTER.c: 76:         PORTAbits.RA0 = 1;
  3003  03F0  1405               	bsf	5,0	;volatile
  3004                           
  3005                           ;MASTER.c: 77:     } else if (leds == 3) {
  3006  03F1  2C02               	goto	i1l77
  3007  03F2                     i1l1416:
  3008  03F2  3003               	movlw	3
  3009  03F3  0679               	xorwf	_leds,w
  3010  03F4  1D03               	btfss	3,2
  3011  03F5  2BF7               	goto	u114_21
  3012  03F6  2BF8               	goto	u114_20
  3013  03F7                     u114_21:
  3014  03F7  2BFA               	goto	i1l1420
  3015  03F8                     u114_20:
  3016  03F8                     i1l1418:
  3017                           
  3018                           ;MASTER.c: 78:         PORTAbits.RA1 = 0;
  3019  03F8  1085               	bcf	5,1	;volatile
  3020                           
  3021                           ;MASTER.c: 79:     } else if (leds == 4) {
  3022  03F9  2C02               	goto	i1l77
  3023  03FA                     i1l1420:
  3024  03FA  3004               	movlw	4
  3025  03FB  0679               	xorwf	_leds,w
  3026  03FC  1D03               	btfss	3,2
  3027  03FD  2BFF               	goto	u115_21
  3028  03FE  2C00               	goto	u115_20
  3029  03FF                     u115_21:
  3030  03FF  2C02               	goto	i1l73
  3031  0400                     u115_20:
  3032  0400                     i1l1422:
  3033                           
  3034                           ;MASTER.c: 80:         PORTAbits.RA1 = 1;
  3035  0400  1485               	bsf	5,1	;volatile
  3036  0401  2C02               	goto	i1l77
  3037  0402                     i1l73:
  3038  0402                     i1l77:
  3039  0402  0872               	movf	??_myISR+2,w
  3040  0403  008A               	movwf	10
  3041  0404  0E71               	swapf	??_myISR+1,w
  3042  0405  0083               	movwf	3
  3043  0406  0EFE               	swapf	btemp,f
  3044  0407  0E7E               	swapf	btemp,w
  3045  0408  0009               	retfie
  3046  0409                     __end_of_myISR:
  3047  007E                     btemp	set	126	;btemp
  3048  007E                     wtemp0	set	126
  3049                           
  3050                           	psect	intentry
  3051  0004                     __pintentry:	
  3052                           ;incstack = 0
  3053                           ; Regs used in _myISR: [wreg+status,2+status,0]
  3054                           
  3055  0004                     interrupt_function:
  3056  007E                     saved_w	set	btemp
  3057  0004  00FE               	movwf	btemp
  3058  0005  0E03               	swapf	3,w
  3059  0006  00F1               	movwf	??_myISR+1
  3060  0007  080A               	movf	10,w
  3061  0008  00F2               	movwf	??_myISR+2
  3062  0009  120A  118A  2BD8   	ljmp	_myISR
  3063                           
  3064                           	psect	config
  3065                           
  3066                           ;Config register CONFIG1 @ 0x2007
  3067                           ;	Oscillator Selection bits
  3068                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3069                           ;	Watchdog Timer Enable bit
  3070                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3071                           ;	Power-up Timer Enable bit
  3072                           ;	PWRTE = OFF, PWRT disabled
  3073                           ;	RE3/MCLR pin function select bit
  3074                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3075                           ;	Code Protection bit
  3076                           ;	CP = OFF, Program memory code protection is disabled
  3077                           ;	Data Code Protection bit
  3078                           ;	CPD = OFF, Data memory code protection is disabled
  3079                           ;	Brown Out Reset Selection bits
  3080                           ;	BOREN = OFF, BOR disabled
  3081                           ;	Internal External Switchover bit
  3082                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3083                           ;	Fail-Safe Clock Monitor Enabled bit
  3084                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3085                           ;	Low Voltage Programming Enable bit
  3086                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3087                           ;	In-Circuit Debugger Mode bit
  3088                           ;	DEBUG = 0x1, unprogrammed default
  3089  2007                     	org	8199
  3090  2007  20D1               	dw	8401
  3091                           
  3092                           ;Config register CONFIG2 @ 0x2008
  3093                           ;	Brown-out Reset Selection bit
  3094                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3095                           ;	Flash Program Memory Self Write Enable bits
  3096                           ;	WRT = OFF, Write protection off
  3097  2008                     	org	8200
  3098  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     33      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> Temperatura(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Initialize
    _conversion->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3199
                                             30 BANK0      3     3      0
                           _I2C_NACK
                             _I2C_RX
                             _I2C_TX
                           _I2C_init
                         _I2C_rstart
                          _I2C_sleep
                           _I2C_stop
                              _Setup
                   _USART_Initialize
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     3      0    2366
                                             23 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2366
                                              8 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                    20    16      4     811
                                              4 COMMON     4     4      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (1) _I2C_rstart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_TX                                               1     1      0      22
                                              3 COMMON     1     1      0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (2) _I2C_sleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_RX                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_NACK
   _I2C_RX
   _I2C_TX
     _I2C_sleep
   _I2C_init
   _I2C_rstart
   _I2C_sleep
   _I2C_stop
     _I2C_sleep
   _Setup
   _USART_Initialize
     ___aldiv
   _conversion
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 01:10:33 2021

                        pc 0002                         _BF 04A0                         l15 0355  
                       l64 04AC                         l83 0471                         _c1 007A  
                       _rx 0041                         fsr 0004        ___wmul@multiplicand 0075  
       __size_of_I2C_sleep 0008   __end_of_USART_Initialize 0356                        l124 0447  
                      l133 04C9                        l142 04C8                        l135 04CF  
                      l151 049D                        l160 04B7                        l136 04D0  
                      l145 04BC                        l154 04A1                        l163 0489  
                      l139 04C4                        l148 04C0                        l157 04B0  
                      l166 0494                        l291 0415                        l356 025A  
                      l276 00F8                        l293 042D                        l366 02E2  
                      l287 01A0                        l563 039B                        l573 03D7  
                      l744 0483                        u600 0480                        _PEN 048A  
                      u601 047F                        u610 040F                        u611 040E  
                      u640 0429                        u641 0428                        u625 0416  
                      u635 041D                        _SEN 0488                        u590 047A  
                      u591 0479                        u920 04CF                        u921 04CE  
                      fsr0 0004                        indf 0000        __size_of_I2C_rstart 0008  
                     l1150 047A                       l1312 04C9                       l1400 049A  
                     l1160 040B                       l1152 0480                       l1162 040F  
                     l1154 0482                       l1146 0473                       l1500 0372  
                     l1164 041C                       l1148 0474                       l1502 0383  
                     l1510 0397                       l1166 0423                       l1158 0409  
                     l1504 0389                       l1520 03AE                       l1168 0429  
                     l1600 0124                       l1506 038A                       l1530 03CD  
                     l1522 03B2                       l1514 039C                       l1610 0146  
                     l1602 0130                       l1380 0440                       l1372 042E  
                     l1508 0391                       l1524 03B6                       l1516 03A4  
                     l1532 03D3                       l1612 0176                       l1604 0136  
                     l1620 019C                       l1540 0027                       l1700 01FE  
                     l1390 04AD                       l1382 0443                       l1374 0432  
                     l1630 0249                       l1526 03C0                       l1518 03A7  
                     l1614 017D                       l1606 013D                       l1550 004A  
                     l1542 002E                       l1710 0222                       l1702 0203  
                     l1392 04B4                       l1376 0435                       l1384 04C1  
                     l1368 04A2                       l1640 0275                       l1632 024D  
                     l1528 03C6                       l1616 0181                       l1608 0141  
                     l1552 005F                       l1560 0086                       l1544 0033  
                     l1536 001C                       l1712 022D                       l1704 020E  
                     l1386 0485                       l1378 0439                       l1650 029A  
                     l1642 027D                       l1634 025E                       l1490 035A  
                     l1570 00B9                       l1562 00A5                       l1554 0072  
                     l1546 0036                       l1538 0021                       l1618 018A  
                     l1714 0232                       l1706 0218                       l1396 04B8  
                     l1388 048F                       l1652 02AC                       l1644 0280  
                     l1660 02CA                       l1636 0269                       l1628 0246  
                     l1492 0360                       l1572 00BE                       l1564 00AD  
                     l1556 0076                       l1548 0046                       l1716 023D  
                     l1708 021D                       l1398 0495                       l1662 02CF  
                     l1654 02BA                       l1646 028D                       l1638 026D  
                     l1670 02F0                       l1494 0363                       l1590 0103  
                     l1582 00DC                       l1566 00B1                       l1664 02DA  
                     l1656 02BB                       l1648 0291                       l1680 0354  
                     l1672 034D                       l1496 036A                       l1488 0356  
                     l1592 010F                       l1584 00E6                       l1568 00B5  
                     l1658 02C4                       l1674 0351                       l1498 036E  
                     l1594 0113                       l1586 00EC                       l1578 00C0  
                     l1738 009A                       l1682 045E                       l1690 01BA  
                     l1676 0352                       l1668 02E3                       l1596 0119  
                     l1588 00F2                       l1692 01C9                       l1684 01A1  
                     l1678 0353                       l1598 0120                       l1694 01D9  
                     l1686 01A6                       l1696 01DF                       l1688 01B5  
                     l1698 01EA                       STR_1 0458                       u1100 04A1  
                     u1101 04A0                       u1200 0383                       u1201 0382  
                     u1060 04C8                       u1220 0397                       u1300 0046  
                     u1061 04C7                       u1221 0396                       u1205 037F  
                     u1301 0045                       u1070 048F                       u1230 03A4  
                     u1310 0086                       u1071 048E                       u1215 038B  
                     u1231 03A3                       u1311 0085                       u1080 04B4  
                     u1160 0360                       u1400 0136                       u1320 00B5  
                     u1081 04B3                       u1161 035F                       u1401 0135  
                     u1321 00B4                       u1090 04C0                       u1250 03B6  
                     u1410 018A                       u1330 00DB                       u1091 04BF  
                     u1251 03B5                       u1411 0189                       u1331 00DA  
                     u1180 0372                       u1260 03C0                       u1420 019C  
                     u1340 00E6                       u1181 0371                       u1261 03BF  
                     u1245 03A8                       u1421 019B                       u1341 00E5  
                     u1510 02CA                       u1430 024D                       u1350 00EC  
                     u1511 02C9                       u1431 024C                       u1175 0364  
                     u1351 00EB                       u1335 00D7                       u1520 02CF  
                     u1440 025E                       u1280 03D3                       u1360 00F2  
                     u1521 02CE                       u1505 02BC                       u1441 025D  
                     u1281 03D2                       u1265 03BC                       u1361 00F1  
                     u1450 027D                       u1530 02FE                       u1370 0103  
                     u1290 0027                       u1451 027C                       u1195 0373  
                     u1275 03C7                       u1371 0102                       u1291 0026  
                     u1540 0317                       u1380 0119                       u1381 0118  
                     u1470 0291                       u1390 0130                       u1471 0290  
                     u1551 0329                       u1535 02F9                       u1391 012F  
                     u1375 00FF                       u1607 0209                       u1552 032A  
                     u1465 0282                       u1553 032F                       u1545 0312  
                     u1617 0228                       u1490 02AC                       u1554 0330  
                     u1491 02AB                       u1555 0335                       u1627 0238  
                     u1556 0336                       u1485 0293                       u1495 02A8  
                     u1567 01C2                       u1577 01D4                       u1587 01E5  
                     u1597 01F5                       _RCEN 048B                       i1l73 0402  
                     i1l77 0402                       _RSEN 0489           __end_of_I2C_NACK 04C1  
                     _main 01A1                       _leds 0079                       btemp 007E  
         __end_of_I2C_init 0448                       start 000C           __end_of_I2C_stop 04A2  
          __end_of___aldiv 02E3                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D                      _ANSEL 0188            __end_of___lwdiv 039C  
          __end_of___lwmod 03D8                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTC 0007                      _TRISA 0085  
                    _SSPIF 0063                      _TXREG 0019                      _Setup 04A2  
          __end_of_dpowers 0458                      _myISR 03D8            __end_of_isdigit 0484  
                    pclath 000A          __end_of_I2C_sleep 04D1                      status 0003  
                    wtemp0 007E            __end_of_sprintf 01A1            __initialization 000F  
             __end_of_main 0246                     ??_main 003E                     ?_Setup 0070  
                   ?_myISR 0070                     _I2C_RX 04AD                     _I2C_TX 0484  
                   u111_20 03DE                     u111_21 03DD                     i1l1410 03E8  
                   i1l1402 03D8                     i1l1420 03FA                     i1l1412 03EA  
                   i1l1404 03DE                     i1l1422 0400                     i1l1414 03F0  
                   i1l1406 03DF                     i1l1416 03F2                     u112_20 03E8  
                   i1l1408 03E3                     u112_21 03E7                     i1l1418 03F8  
                   u113_20 03F0                     u113_21 03EF                     u114_20 03F8  
                   u114_21 03F7                     u115_20 0400                     u115_21 03FF  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPBUF 0013                     _SSPCON 0014               ??_I2C_rstart 0073  
                ??___aldiv 0073                     ___wmul 0409                  ??___lwdiv 0077  
                ??___lwmod 0078                  ?_I2C_NACK 0070                  ??_isdigit 0073  
                   saved_w 007E                  ?_I2C_init 0070                  ?_I2C_stop 0070  
                ??_sprintf 002B         __end_of_I2C_rstart 04C9    __end_of__initialization 0015  
           __pcstackCOMMON 0070              __end_of_Setup 04AD              __end_of_myISR 0409  
               ??_I2C_NACK 0073                    I2C_TX@c 0073          ?_USART_Initialize 002E  
               ??_I2C_init 0073         ??_USART_Initialize 0032                 ??_I2C_stop 0073  
                  ??_Setup 0073                    ??_myISR 0070                    ?_I2C_RX 0070  
                  ?_I2C_TX 0070               sprintf@width 0034                 __pbssBANK0 0041  
               __pmaintext 01A1                    ?___wmul 0073                 __pintentry 0004  
                  _SSPCON2 0091                    _SSPSTAT 0094            __size_of_I2C_RX 000B  
          __size_of_I2C_TX 0011                 __stringtab 0448                 _conversion 045E  
                _I2C_sleep 04C9                    ___aldiv 0246            __size_of___wmul 0025  
                  ___lwdiv 0356                    ___lwmod 039C                _Temperatura 0042  
                  __ptext1 045E                    __ptext2 0019                    __ptext3 0472  
                  __ptext4 0409                    __ptext5 039C                    __ptext6 0356  
                  __ptext7 02E3                    __ptext8 0246                    __ptext9 04A2  
                  _dpowers 044E                    _isdigit 0472           ___aldiv@dividend 0024  
                  _sprintf 0019       end_of_initialization 0015                 ?_I2C_sleep 0070  
        USART_Initialize@x 0074                  _RCSTAbits 0018           ___aldiv@quotient 002A  
                _PORTAbits 0005          __size_of_I2C_NACK 0009          __size_of_I2C_init 001A  
        __size_of_I2C_stop 000D             __end_of_I2C_RX 04B8             __end_of_I2C_TX 0495  
              ?_conversion 0070                  _TXSTAbits 0098             __end_of___wmul 042E  
              _BAUDCTLbits 0187        start_initialization 000F                   ??_I2C_RX 0073  
                 ??_I2C_TX 0073  __size_of_USART_Initialize 0073                ??_I2C_sleep 0073  
                 ??___wmul 0077        __size_of_conversion 0014                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020                sprintf@flag 0030  
              sprintf@prec 002F           ___lwdiv@dividend 0075                   ?___aldiv 0020  
                 ?___lwdiv 0073                   ?___lwmod 0023                  __pstrings 0448  
                 _I2C_NACK 04B8                   ?_isdigit 0070                   _I2C_init 042E  
                 _I2C_stop 0495             __size_of_Setup 000B           ___lwdiv@quotient 0021  
           __size_of_myISR 0031                   ?_sprintf 0028            ___aldiv@divisor 0020  
        interrupt_function 0004            ___aldiv@counter 0028             ___wmul@product 0077  
                 _PIE1bits 008C                   _PIR1bits 000C                __stringbase 044D  
        ___wmul@multiplier 0073               ??_conversion 0037           _USART_Initialize 02E3  
               _I2C_rstart 04C1           __size_of___aldiv 009D           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 044E                _isdigit$819 0073  
               sprintf@val 0031         __end_of_conversion 0472           __size_of_isdigit 0012  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 0495  
                 __ptext11 04C1                   __ptext12 042E                   __ptext13 0484  
                 __ptext14 04C9                   __ptext15 04AD                   __ptext16 04B8  
                 __ptext17 03D8           __size_of_sprintf 0188              __size_of_main 00A5  
               _INTCONbits 000B                   isdigit@c 0074                   intlevel1 0000  
                sprintf@ap 002E                  sprintf@sp 0033           ___lwmod@dividend 0025  
                stringcode 0448                ?_I2C_rstart 0070                   sprintf@c 0036  
                 sprintf@f 0028            ___lwmod@divisor 0023            ___lwmod@counter 0027  
                 stringdir 0448                   stringtab 0448               ___aldiv@sign 0029  
 USART_Initialize@baudrate 002E  
