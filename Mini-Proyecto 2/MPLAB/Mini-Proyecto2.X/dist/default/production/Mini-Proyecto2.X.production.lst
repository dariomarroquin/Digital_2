

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 22:06:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0014                     _SSPCON	set	20
   373  0013                     _SSPBUF	set	19
   374  0019                     _TXREG	set	25
   375  000C                     _PIR1bits	set	12
   376  0007                     _PORTC	set	7
   377  0005                     _PORTA	set	5
   378  000B                     _INTCONbits	set	11
   379  0018                     _RCSTAbits	set	24
   380  0063                     _SSPIF	set	99
   381  0093                     _SSPADD	set	147
   382  0091                     _SSPCON2	set	145
   383  0094                     _SSPSTAT	set	148
   384  0085                     _TRISA	set	133
   385  008C                     _PIE1bits	set	140
   386  0099                     _SPBRG	set	153
   387  0098                     _TXSTAbits	set	152
   388  04A0                     _BF	set	1184
   389  048B                     _RCEN	set	1163
   390  048A                     _PEN	set	1162
   391  048C                     _ACKEN	set	1164
   392  048D                     _ACKDT	set	1165
   393  0489                     _RSEN	set	1161
   394  0488                     _SEN	set	1160
   395  043C                     _TRISC4	set	1084
   396  043B                     _TRISC3	set	1083
   397  0188                     _ANSEL	set	392
   398  0187                     _BAUDCTLbits	set	391
   399                           
   400                           	psect	cinit
   401  0011                     start_initialization:	
   402                           ; #config settings
   403                           
   404  0011                     __initialization:
   405                           
   406                           ; Clear objects allocated to COMMON
   407  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   408                           
   409                           ; Clear objects allocated to BANK0
   410  0012  1383               	bcf	3,7	;select IRP bank0
   411  0013  3041               	movlw	low __pbssBANK0
   412  0014  0084               	movwf	4
   413  0015  3056               	movlw	low (__pbssBANK0+21)
   414  0016  120A  118A  2247  120A  118A  	fcall	clear_ram0
   415  001B                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418  001B                     __end_of__initialization:
   419  001B  0183               	clrf	3
   420  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	bssCOMMON
   423  0079                     __pbssCOMMON:
   424  0079                     _c1:
   425  0079                     	ds	1
   426                           
   427                           	psect	bssBANK0
   428  0041                     __pbssBANK0:
   429  0041                     _Temperatura:
   430  0041                     	ds	20
   431  0055                     _rx:
   432  0055                     	ds	1
   433                           
   434                           	psect	clrtext
   435  0247                     clear_ram0:	
   436                           ;	Called with FSR containing the base address, and
   437                           ;	W with the last address+1
   438                           
   439  0247  0064               	clrwdt	;clear the watchdog before getting into this loop
   440  0248                     clrloop0:
   441  0248  0180               	clrf	0	;clear RAM location pointed to by FSR
   442  0249  0A84               	incf	4,f	;increment pointer
   443  024A  0604               	xorwf	4,w	;XOR with final address
   444  024B  1903               	btfsc	3,2	;have we reached the end yet?
   445  024C  3400               	retlw	0	;all done for this memory range, return
   446  024D  0604               	xorwf	4,w	;XOR again to restore value
   447  024E  2A48               	goto	clrloop0	;do the next byte
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:
   451  0070                     ?_I2C_init:
   452  0070                     ?_I2C_rstart:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_I2C_TX:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_I2C_sleep:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_I2C_RX:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_I2C_NACK:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_I2C_stop:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_Setup:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_myISR:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_myISR:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_main:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	4
   485  0074                     ??_I2C_init:
   486  0074                     ??_I2C_rstart:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0074                     ??_I2C_TX:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ??_I2C_sleep:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     ??_I2C_RX:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     ??_I2C_NACK:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     ??_I2C_stop:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ??_Setup:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     ??___aldiv:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     I2C_TX@c:	
   511                           ; 1 bytes @ 0x4
   512                           
   513                           
   514                           ; 1 bytes @ 0x4
   515  0074                     	ds	1
   516  0075                     USART_Initialize@x:
   517                           
   518                           ; 4 bytes @ 0x5
   519  0075                     	ds	4
   520                           
   521                           	psect	cstackBANK0
   522  0020                     __pcstackBANK0:
   523  0020                     ?___aldiv:
   524  0020                     ___aldiv@divisor:	
   525                           ; 4 bytes @ 0x0
   526                           
   527                           
   528                           ; 4 bytes @ 0x0
   529  0020                     	ds	4
   530  0024                     ___aldiv@dividend:
   531                           
   532                           ; 4 bytes @ 0x4
   533  0024                     	ds	4
   534  0028                     ___aldiv@counter:
   535                           
   536                           ; 1 bytes @ 0x8
   537  0028                     	ds	1
   538  0029                     ___aldiv@sign:
   539                           
   540                           ; 1 bytes @ 0x9
   541  0029                     	ds	1
   542  002A                     ___aldiv@quotient:
   543                           
   544                           ; 4 bytes @ 0xA
   545  002A                     	ds	4
   546  002E                     ?_USART_Initialize:
   547  002E                     USART_Initialize@baudrate:	
   548                           ; 1 bytes @ 0xE
   549                           
   550                           
   551                           ; 4 bytes @ 0xE
   552  002E                     	ds	4
   553  0032                     ??_USART_Initialize:
   554                           
   555                           ; 1 bytes @ 0x12
   556  0032                     	ds	12
   557  003E                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x1E
   560  003E                     	ds	3
   561                           
   562                           	psect	maintext
   563  001F                     __pmaintext:	
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 81 in file "MASTER.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : B00/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0
   585 ;;      Temps:          0       3       0       0       0
   586 ;;      Totals:         0       3       0       0       0
   587 ;;Total ram usage:        3 bytes
   588 ;; Hardware stack levels required when called:    3
   589 ;; This function calls:
   590 ;;		_I2C_NACK
   591 ;;		_I2C_RX
   592 ;;		_I2C_TX
   593 ;;		_I2C_init
   594 ;;		_I2C_rstart
   595 ;;		_I2C_sleep
   596 ;;		_I2C_stop
   597 ;;		_Setup
   598 ;;		_USART_Initialize
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _main
   606  001F                     _main:
   607  001F                     l959:	
   608                           ;incstack = 0
   609                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   610                           
   611                           
   612                           ;MASTER.c: 82:     Setup();
   613  001F  120A  118A  2228  120A  118A  	fcall	_Setup
   614  0024                     l961:
   615                           
   616                           ;MASTER.c: 83:     USART_Initialize(9600);
   617  0024  3000               	movlw	0
   618  0025  1283               	bcf	3,5	;RP0=0, select bank0
   619  0026  1303               	bcf	3,6	;RP1=0, select bank0
   620  0027  00B1               	movwf	USART_Initialize@baudrate+3
   621  0028  3000               	movlw	0
   622  0029  00B0               	movwf	USART_Initialize@baudrate+2
   623  002A  3025               	movlw	37
   624  002B  00AF               	movwf	USART_Initialize@baudrate+1
   625  002C  3080               	movlw	128
   626  002D  00AE               	movwf	USART_Initialize@baudrate
   627  002E  120A  118A  215C  120A  118A  	fcall	_USART_Initialize
   628  0033                     l963:
   629                           
   630                           ;MASTER.c: 84:     I2C_init();
   631  0033  120A  118A  21F0  120A  118A  	fcall	_I2C_init
   632  0038                     l965:
   633                           
   634                           ;MASTER.c: 86:     _delay((unsigned long)((600)*(8000000/4000.0)));
   635  0038  3007               	movlw	7
   636  0039  1283               	bcf	3,5	;RP0=0, select bank0
   637  003A  1303               	bcf	3,6	;RP1=0, select bank0
   638  003B  00C0               	movwf	??_main+2
   639  003C  3017               	movlw	23
   640  003D  00BF               	movwf	??_main+1
   641  003E  3069               	movlw	105
   642  003F  00BE               	movwf	??_main
   643  0040                     u427:
   644  0040  0BBE               	decfsz	??_main,f
   645  0041  2840               	goto	u427
   646  0042  0BBF               	decfsz	??_main+1,f
   647  0043  2840               	goto	u427
   648  0044  0BC0               	decfsz	??_main+2,f
   649  0045  2840               	goto	u427
   650  0046  2847               	nop2
   651  0047                     l967:
   652                           
   653                           ;MASTER.c: 89:         I2C_rstart();
   654  0047  120A  118A  224F  120A  118A  	fcall	_I2C_rstart
   655                           
   656                           ;MASTER.c: 90:         _delay((unsigned long)((10)*(8000000/4000.0)));
   657  004C  301A               	movlw	26
   658  004D  1283               	bcf	3,5	;RP0=0, select bank0
   659  004E  1303               	bcf	3,6	;RP1=0, select bank0
   660  004F  00BF               	movwf	??_main+1
   661  0050  30F7               	movlw	247
   662  0051  00BE               	movwf	??_main
   663  0052                     u437:
   664  0052  0BBE               	decfsz	??_main,f
   665  0053  2852               	goto	u437
   666  0054  0BBF               	decfsz	??_main+1,f
   667  0055  2852               	goto	u437
   668  0056  2857               	nop2
   669  0057                     l969:
   670                           
   671                           ;MASTER.c: 92:         I2C_TX(0x90);
   672  0057  3090               	movlw	144
   673  0058  120A  118A  220A  120A  118A  	fcall	_I2C_TX
   674  005D                     l971:
   675                           
   676                           ;MASTER.c: 93:         _delay((unsigned long)((10)*(8000000/4000.0)));
   677  005D  301A               	movlw	26
   678  005E  1283               	bcf	3,5	;RP0=0, select bank0
   679  005F  1303               	bcf	3,6	;RP1=0, select bank0
   680  0060  00BF               	movwf	??_main+1
   681  0061  30F7               	movlw	247
   682  0062  00BE               	movwf	??_main
   683  0063                     u447:
   684  0063  0BBE               	decfsz	??_main,f
   685  0064  2863               	goto	u447
   686  0065  0BBF               	decfsz	??_main+1,f
   687  0066  2863               	goto	u447
   688  0067  2868               	nop2
   689  0068                     l973:
   690                           
   691                           ;MASTER.c: 95:         I2C_rstart();
   692  0068  120A  118A  224F  120A  118A  	fcall	_I2C_rstart
   693                           
   694                           ;MASTER.c: 96:         _delay((unsigned long)((10)*(8000000/4000.0)));
   695  006D  301A               	movlw	26
   696  006E  1283               	bcf	3,5	;RP0=0, select bank0
   697  006F  1303               	bcf	3,6	;RP1=0, select bank0
   698  0070  00BF               	movwf	??_main+1
   699  0071  30F7               	movlw	247
   700  0072  00BE               	movwf	??_main
   701  0073                     u457:
   702  0073  0BBE               	decfsz	??_main,f
   703  0074  2873               	goto	u457
   704  0075  0BBF               	decfsz	??_main+1,f
   705  0076  2873               	goto	u457
   706  0077  2878               	nop2
   707                           
   708                           ;MASTER.c: 98:         SSPBUF = 0x91;
   709  0078  3091               	movlw	145
   710  0079  1283               	bcf	3,5	;RP0=0, select bank0
   711  007A  1303               	bcf	3,6	;RP1=0, select bank0
   712  007B  0093               	movwf	19	;volatile
   713  007C                     l975:
   714                           
   715                           ;MASTER.c: 99:         I2C_sleep();
   716  007C  120A  118A  2257  120A  118A  	fcall	_I2C_sleep
   717  0081                     l977:
   718                           
   719                           ;MASTER.c: 100:         _delay((unsigned long)((10)*(8000000/4000.0)));
   720  0081  301A               	movlw	26
   721  0082  1283               	bcf	3,5	;RP0=0, select bank0
   722  0083  1303               	bcf	3,6	;RP1=0, select bank0
   723  0084  00BF               	movwf	??_main+1
   724  0085  30F7               	movlw	247
   725  0086  00BE               	movwf	??_main
   726  0087                     u467:
   727  0087  0BBE               	decfsz	??_main,f
   728  0088  2887               	goto	u467
   729  0089  0BBF               	decfsz	??_main+1,f
   730  008A  2887               	goto	u467
   731  008B  288C               	nop2
   732  008C                     l979:
   733                           
   734                           ;MASTER.c: 102:         rx = I2C_RX();
   735  008C  120A  118A  2233  120A  118A  	fcall	_I2C_RX
   736  0091  1283               	bcf	3,5	;RP0=0, select bank0
   737  0092  1303               	bcf	3,6	;RP1=0, select bank0
   738  0093  00BE               	movwf	??_main
   739  0094  083E               	movf	??_main,w
   740  0095  00D5               	movwf	_rx
   741  0096                     l981:
   742                           
   743                           ;MASTER.c: 103:         I2C_sleep();
   744  0096  120A  118A  2257  120A  118A  	fcall	_I2C_sleep
   745  009B                     l983:
   746                           
   747                           ;MASTER.c: 105:         I2C_NACK();
   748  009B  120A  118A  223E  120A  118A  	fcall	_I2C_NACK
   749  00A0                     l985:
   750                           
   751                           ;MASTER.c: 106:         _delay((unsigned long)((10)*(8000000/4000.0)));
   752  00A0  301A               	movlw	26
   753  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   754  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   755  00A3  00BF               	movwf	??_main+1
   756  00A4  30F7               	movlw	247
   757  00A5  00BE               	movwf	??_main
   758  00A6                     u477:
   759  00A6  0BBE               	decfsz	??_main,f
   760  00A7  28A6               	goto	u477
   761  00A8  0BBF               	decfsz	??_main+1,f
   762  00A9  28A6               	goto	u477
   763  00AA  28AB               	nop2
   764  00AB                     l987:
   765                           
   766                           ;MASTER.c: 108:         I2C_stop();
   767  00AB  120A  118A  221B  120A  118A  	fcall	_I2C_stop
   768  00B0                     l989:
   769                           
   770                           ;MASTER.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
   771  00B0  301A               	movlw	26
   772  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   773  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   774  00B3  00BF               	movwf	??_main+1
   775  00B4  30F7               	movlw	247
   776  00B5  00BE               	movwf	??_main
   777  00B6                     u487:
   778  00B6  0BBE               	decfsz	??_main,f
   779  00B7  28B6               	goto	u487
   780  00B8  0BBF               	decfsz	??_main+1,f
   781  00B9  28B6               	goto	u487
   782  00BA  28BB               	nop2
   783  00BB  2847               	goto	l967
   784  00BC  120A  118A  280E   	ljmp	start
   785  00BF                     __end_of_main:
   786                           
   787                           	psect	text1
   788  015C                     __ptext1:	
   789 ;; *************** function _USART_Initialize *****************
   790 ;; Defined at:
   791 ;;		line 13 in file "usart.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  baudrate        4   14[BANK0 ] const long 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  x               4    5[COMMON] long 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       4       0       0       0
   806 ;;      Locals:         4       0       0       0       0
   807 ;;      Temps:          0      12       0       0       0
   808 ;;      Totals:         4      16       0       0       0
   809 ;;Total ram usage:       20 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    2
   812 ;; This function calls:
   813 ;;		___aldiv
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _USART_Initialize
   821  015C                     _USART_Initialize:
   822  015C                     l913:	
   823                           ;incstack = 0
   824                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
   825                           
   826                           
   827                           ;usart.c: 14:     long int x;;usart.c: 17:     TXSTAbits.TX9 = 0;
   828  015C  1683               	bsf	3,5	;RP0=1, select bank1
   829  015D  1303               	bcf	3,6	;RP1=0, select bank1
   830  015E  1318               	bcf	24,6	;volatile
   831                           
   832                           ;usart.c: 19:     TXSTAbits.TXEN = 1;
   833  015F  1698               	bsf	24,5	;volatile
   834                           
   835                           ;usart.c: 21:     TXSTAbits.SYNC = 0;
   836  0160  1218               	bcf	24,4	;volatile
   837                           
   838                           ;usart.c: 23:     TXSTAbits.BRGH = 0;
   839  0161  1118               	bcf	24,2	;volatile
   840                           
   841                           ;usart.c: 24:     BAUDCTLbits.BRG16 = 0;
   842  0162  1683               	bsf	3,5	;RP0=1, select bank3
   843  0163  1703               	bsf	3,6	;RP1=1, select bank3
   844  0164  1187               	bcf	7,3	;volatile
   845                           
   846                           ;usart.c: 27:     RCSTAbits.SPEN = 1;
   847  0165  1283               	bcf	3,5	;RP0=0, select bank0
   848  0166  1303               	bcf	3,6	;RP1=0, select bank0
   849  0167  1798               	bsf	24,7	;volatile
   850                           
   851                           ;usart.c: 29:     RCSTAbits.CREN = 1;
   852  0168  1618               	bsf	24,4	;volatile
   853  0169                     l915:
   854                           
   855                           ;usart.c: 31:     x = (8000000 - baudrate*64)/(baudrate*64);
   856  0169  082E               	movf	USART_Initialize@baudrate,w
   857  016A  00B2               	movwf	??_USART_Initialize
   858  016B  082F               	movf	USART_Initialize@baudrate+1,w
   859  016C  00B3               	movwf	??_USART_Initialize+1
   860  016D  0830               	movf	USART_Initialize@baudrate+2,w
   861  016E  00B4               	movwf	??_USART_Initialize+2
   862  016F  0831               	movf	USART_Initialize@baudrate+3,w
   863  0170  00B5               	movwf	??_USART_Initialize+3
   864  0171  3006               	movlw	6
   865  0172                     u345:
   866  0172  1003               	clrc
   867  0173  0DB2               	rlf	??_USART_Initialize,f
   868  0174  0DB3               	rlf	??_USART_Initialize+1,f
   869  0175  0DB4               	rlf	??_USART_Initialize+2,f
   870  0176  0DB5               	rlf	??_USART_Initialize+3,f
   871  0177                     u340:
   872  0177  3EFF               	addlw	-1
   873  0178  1D03               	skipz
   874  0179  2972               	goto	u345
   875  017A  0835               	movf	??_USART_Initialize+3,w
   876  017B  00A3               	movwf	___aldiv@divisor+3
   877  017C  0834               	movf	??_USART_Initialize+2,w
   878  017D  00A2               	movwf	___aldiv@divisor+2
   879  017E  0833               	movf	??_USART_Initialize+1,w
   880  017F  00A1               	movwf	___aldiv@divisor+1
   881  0180  0832               	movf	??_USART_Initialize,w
   882  0181  00A0               	movwf	___aldiv@divisor
   883  0182  082E               	movf	USART_Initialize@baudrate,w
   884  0183  00B6               	movwf	??_USART_Initialize+4
   885  0184  082F               	movf	USART_Initialize@baudrate+1,w
   886  0185  00B7               	movwf	??_USART_Initialize+5
   887  0186  0830               	movf	USART_Initialize@baudrate+2,w
   888  0187  00B8               	movwf	??_USART_Initialize+6
   889  0188  0831               	movf	USART_Initialize@baudrate+3,w
   890  0189  00B9               	movwf	??_USART_Initialize+7
   891  018A  3006               	movlw	6
   892  018B                     u355:
   893  018B  1003               	clrc
   894  018C  0DB6               	rlf	??_USART_Initialize+4,f
   895  018D  0DB7               	rlf	??_USART_Initialize+5,f
   896  018E  0DB8               	rlf	??_USART_Initialize+6,f
   897  018F  0DB9               	rlf	??_USART_Initialize+7,f
   898  0190                     u350:
   899  0190  3EFF               	addlw	-1
   900  0191  1D03               	skipz
   901  0192  298B               	goto	u355
   902  0193  3000               	movlw	0
   903  0194  00BA               	movwf	??_USART_Initialize+8
   904  0195  3012               	movlw	18
   905  0196  00BB               	movwf	??_USART_Initialize+9
   906  0197  307A               	movlw	122
   907  0198  00BC               	movwf	??_USART_Initialize+10
   908  0199  3000               	movlw	0
   909  019A  00BD               	movwf	??_USART_Initialize+11
   910  019B  0836               	movf	??_USART_Initialize+4,w
   911  019C  02BA               	subwf	??_USART_Initialize+8,f
   912  019D  0837               	movf	??_USART_Initialize+5,w
   913  019E  1C03               	skipc
   914  019F  0F37               	incfsz	??_USART_Initialize+5,w
   915  01A0  29A2               	goto	u361
   916  01A1  29A3               	goto	u362
   917  01A2                     u361:
   918  01A2  02BB               	subwf	??_USART_Initialize+9,f
   919  01A3                     u362:
   920  01A3  0838               	movf	??_USART_Initialize+6,w
   921  01A4  1C03               	skipc
   922  01A5  0F38               	incfsz	??_USART_Initialize+6,w
   923  01A6  29A8               	goto	u363
   924  01A7  29A9               	goto	u364
   925  01A8                     u363:
   926  01A8  02BC               	subwf	??_USART_Initialize+10,f
   927  01A9                     u364:
   928  01A9  0839               	movf	??_USART_Initialize+7,w
   929  01AA  1C03               	skipc
   930  01AB  0F39               	incfsz	??_USART_Initialize+7,w
   931  01AC  29AE               	goto	u365
   932  01AD  29AF               	goto	u366
   933  01AE                     u365:
   934  01AE  02BD               	subwf	??_USART_Initialize+11,f
   935  01AF                     u366:
   936  01AF  083D               	movf	??_USART_Initialize+11,w
   937  01B0  00A7               	movwf	___aldiv@dividend+3
   938  01B1  083C               	movf	??_USART_Initialize+10,w
   939  01B2  00A6               	movwf	___aldiv@dividend+2
   940  01B3  083B               	movf	??_USART_Initialize+9,w
   941  01B4  00A5               	movwf	___aldiv@dividend+1
   942  01B5  083A               	movf	??_USART_Initialize+8,w
   943  01B6  00A4               	movwf	___aldiv@dividend
   944  01B7  120A  118A  20BF  120A  118A  	fcall	___aldiv
   945  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   946  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   947  01BE  0823               	movf	?___aldiv+3,w
   948  01BF  00F8               	movwf	USART_Initialize@x+3
   949  01C0  0822               	movf	?___aldiv+2,w
   950  01C1  00F7               	movwf	USART_Initialize@x+2
   951  01C2  0821               	movf	?___aldiv+1,w
   952  01C3  00F6               	movwf	USART_Initialize@x+1
   953  01C4  0820               	movf	?___aldiv,w
   954  01C5  00F5               	movwf	USART_Initialize@x
   955  01C6                     l917:
   956                           
   957                           ;usart.c: 32:     SPBRG = x;
   958  01C6  0875               	movf	USART_Initialize@x,w
   959  01C7  1683               	bsf	3,5	;RP0=1, select bank1
   960  01C8  1303               	bcf	3,6	;RP1=0, select bank1
   961  01C9  0099               	movwf	25	;volatile
   962  01CA                     l919:
   963                           
   964                           ;usart.c: 35:     INTCONbits.GIE = 1;
   965  01CA  178B               	bsf	11,7	;volatile
   966  01CB                     l921:
   967                           
   968                           ;usart.c: 37:     INTCONbits.PEIE = 1;
   969  01CB  170B               	bsf	11,6	;volatile
   970  01CC                     l923:
   971                           
   972                           ;usart.c: 40:     PIE1bits.RCIE = 1;
   973  01CC  168C               	bsf	12,5	;volatile
   974  01CD                     l925:
   975                           
   976                           ;usart.c: 42:     PIE1bits.TXIE = 1;
   977  01CD  160C               	bsf	12,4	;volatile
   978  01CE                     l15:
   979  01CE  0008               	return
   980  01CF                     __end_of_USART_Initialize:
   981                           
   982                           	psect	text2
   983  00BF                     __ptext2:	
   984 ;; *************** function ___aldiv *****************
   985 ;; Defined at:
   986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  divisor         4    0[BANK0 ] long 
   989 ;;  dividend        4    4[BANK0 ] long 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  quotient        4   10[BANK0 ] long 
   992 ;;  sign            1    9[BANK0 ] unsigned char 
   993 ;;  counter         1    8[BANK0 ] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  4    0[BANK0 ] long 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       8       0       0       0
  1004 ;;      Locals:         0       6       0       0       0
  1005 ;;      Temps:          1       0       0       0       0
  1006 ;;      Totals:         1      14       0       0       0
  1007 ;;Total ram usage:       15 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_USART_Initialize
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function ___aldiv
  1019  00BF                     ___aldiv:
  1020  00BF                     l873:	
  1021                           ;incstack = 0
  1022                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1023                           
  1024  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00C1  01A9               	clrf	___aldiv@sign
  1027  00C2                     l875:
  1028  00C2  1FA3               	btfss	___aldiv@divisor+3,7
  1029  00C3  28C5               	goto	u241
  1030  00C4  28C6               	goto	u240
  1031  00C5                     u241:
  1032  00C5  28D3               	goto	l298
  1033  00C6                     u240:
  1034  00C6                     l877:
  1035  00C6  09A0               	comf	___aldiv@divisor,f
  1036  00C7  09A1               	comf	___aldiv@divisor+1,f
  1037  00C8  09A2               	comf	___aldiv@divisor+2,f
  1038  00C9  09A3               	comf	___aldiv@divisor+3,f
  1039  00CA  0AA0               	incf	___aldiv@divisor,f
  1040  00CB  1903               	skipnz
  1041  00CC  0AA1               	incf	___aldiv@divisor+1,f
  1042  00CD  1903               	skipnz
  1043  00CE  0AA2               	incf	___aldiv@divisor+2,f
  1044  00CF  1903               	skipnz
  1045  00D0  0AA3               	incf	___aldiv@divisor+3,f
  1046  00D1  01A9               	clrf	___aldiv@sign
  1047  00D2  0AA9               	incf	___aldiv@sign,f
  1048  00D3                     l298:
  1049  00D3  1FA7               	btfss	___aldiv@dividend+3,7
  1050  00D4  28D6               	goto	u251
  1051  00D5  28D7               	goto	u250
  1052  00D6                     u251:
  1053  00D6  28E6               	goto	l883
  1054  00D7                     u250:
  1055  00D7                     l879:
  1056  00D7  09A4               	comf	___aldiv@dividend,f
  1057  00D8  09A5               	comf	___aldiv@dividend+1,f
  1058  00D9  09A6               	comf	___aldiv@dividend+2,f
  1059  00DA  09A7               	comf	___aldiv@dividend+3,f
  1060  00DB  0AA4               	incf	___aldiv@dividend,f
  1061  00DC  1903               	skipnz
  1062  00DD  0AA5               	incf	___aldiv@dividend+1,f
  1063  00DE  1903               	skipnz
  1064  00DF  0AA6               	incf	___aldiv@dividend+2,f
  1065  00E0  1903               	skipnz
  1066  00E1  0AA7               	incf	___aldiv@dividend+3,f
  1067  00E2                     l881:
  1068  00E2  3001               	movlw	1
  1069  00E3  00F4               	movwf	??___aldiv
  1070  00E4  0874               	movf	??___aldiv,w
  1071  00E5  06A9               	xorwf	___aldiv@sign,f
  1072  00E6                     l883:
  1073  00E6  3000               	movlw	0
  1074  00E7  00AD               	movwf	___aldiv@quotient+3
  1075  00E8  3000               	movlw	0
  1076  00E9  00AC               	movwf	___aldiv@quotient+2
  1077  00EA  3000               	movlw	0
  1078  00EB  00AB               	movwf	___aldiv@quotient+1
  1079  00EC  3000               	movlw	0
  1080  00ED  00AA               	movwf	___aldiv@quotient
  1081  00EE                     l885:
  1082  00EE  0823               	movf	___aldiv@divisor+3,w
  1083  00EF  0422               	iorwf	___aldiv@divisor+2,w
  1084  00F0  0421               	iorwf	___aldiv@divisor+1,w
  1085  00F1  0420               	iorwf	___aldiv@divisor,w
  1086  00F2  1903               	skipnz
  1087  00F3  28F5               	goto	u261
  1088  00F4  28F6               	goto	u260
  1089  00F5                     u261:
  1090  00F5  2943               	goto	l905
  1091  00F6                     u260:
  1092  00F6                     l887:
  1093  00F6  01A8               	clrf	___aldiv@counter
  1094  00F7  0AA8               	incf	___aldiv@counter,f
  1095  00F8  2906               	goto	l891
  1096  00F9                     l889:
  1097  00F9  3001               	movlw	1
  1098  00FA  00F4               	movwf	??___aldiv
  1099  00FB                     u275:
  1100  00FB  1003               	clrc
  1101  00FC  0DA0               	rlf	___aldiv@divisor,f
  1102  00FD  0DA1               	rlf	___aldiv@divisor+1,f
  1103  00FE  0DA2               	rlf	___aldiv@divisor+2,f
  1104  00FF  0DA3               	rlf	___aldiv@divisor+3,f
  1105  0100  0BF4               	decfsz	??___aldiv,f
  1106  0101  28FB               	goto	u275
  1107  0102  3001               	movlw	1
  1108  0103  00F4               	movwf	??___aldiv
  1109  0104  0874               	movf	??___aldiv,w
  1110  0105  07A8               	addwf	___aldiv@counter,f
  1111  0106                     l891:
  1112  0106  1FA3               	btfss	___aldiv@divisor+3,7
  1113  0107  2909               	goto	u281
  1114  0108  290A               	goto	u280
  1115  0109                     u281:
  1116  0109  28F9               	goto	l889
  1117  010A                     u280:
  1118  010A                     l893:
  1119  010A  3001               	movlw	1
  1120  010B  00F4               	movwf	??___aldiv
  1121  010C                     u295:
  1122  010C  1003               	clrc
  1123  010D  0DAA               	rlf	___aldiv@quotient,f
  1124  010E  0DAB               	rlf	___aldiv@quotient+1,f
  1125  010F  0DAC               	rlf	___aldiv@quotient+2,f
  1126  0110  0DAD               	rlf	___aldiv@quotient+3,f
  1127  0111  0BF4               	decfsz	??___aldiv,f
  1128  0112  290C               	goto	u295
  1129  0113                     l895:
  1130  0113  0823               	movf	___aldiv@divisor+3,w
  1131  0114  0227               	subwf	___aldiv@dividend+3,w
  1132  0115  1D03               	skipz
  1133  0116  2921               	goto	u305
  1134  0117  0822               	movf	___aldiv@divisor+2,w
  1135  0118  0226               	subwf	___aldiv@dividend+2,w
  1136  0119  1D03               	skipz
  1137  011A  2921               	goto	u305
  1138  011B  0821               	movf	___aldiv@divisor+1,w
  1139  011C  0225               	subwf	___aldiv@dividend+1,w
  1140  011D  1D03               	skipz
  1141  011E  2921               	goto	u305
  1142  011F  0820               	movf	___aldiv@divisor,w
  1143  0120  0224               	subwf	___aldiv@dividend,w
  1144  0121                     u305:
  1145  0121  1C03               	skipc
  1146  0122  2924               	goto	u301
  1147  0123  2925               	goto	u300
  1148  0124                     u301:
  1149  0124  2934               	goto	l901
  1150  0125                     u300:
  1151  0125                     l897:
  1152  0125  0820               	movf	___aldiv@divisor,w
  1153  0126  02A4               	subwf	___aldiv@dividend,f
  1154  0127  0821               	movf	___aldiv@divisor+1,w
  1155  0128  1C03               	skipc
  1156  0129  0F21               	incfsz	___aldiv@divisor+1,w
  1157  012A  02A5               	subwf	___aldiv@dividend+1,f
  1158  012B  0822               	movf	___aldiv@divisor+2,w
  1159  012C  1C03               	skipc
  1160  012D  0F22               	incfsz	___aldiv@divisor+2,w
  1161  012E  02A6               	subwf	___aldiv@dividend+2,f
  1162  012F  0823               	movf	___aldiv@divisor+3,w
  1163  0130  1C03               	skipc
  1164  0131  0F23               	incfsz	___aldiv@divisor+3,w
  1165  0132  02A7               	subwf	___aldiv@dividend+3,f
  1166  0133                     l899:
  1167  0133  142A               	bsf	___aldiv@quotient,0
  1168  0134                     l901:
  1169  0134  3001               	movlw	1
  1170  0135                     u315:
  1171  0135  1003               	clrc
  1172  0136  0CA3               	rrf	___aldiv@divisor+3,f
  1173  0137  0CA2               	rrf	___aldiv@divisor+2,f
  1174  0138  0CA1               	rrf	___aldiv@divisor+1,f
  1175  0139  0CA0               	rrf	___aldiv@divisor,f
  1176  013A  3EFF               	addlw	-1
  1177  013B  1D03               	skipz
  1178  013C  2935               	goto	u315
  1179  013D                     l903:
  1180  013D  3001               	movlw	1
  1181  013E  02A8               	subwf	___aldiv@counter,f
  1182  013F  1D03               	btfss	3,2
  1183  0140  2942               	goto	u321
  1184  0141  2943               	goto	u320
  1185  0142                     u321:
  1186  0142  290A               	goto	l893
  1187  0143                     u320:
  1188  0143                     l905:
  1189  0143  0829               	movf	___aldiv@sign,w
  1190  0144  1903               	btfsc	3,2
  1191  0145  2947               	goto	u331
  1192  0146  2948               	goto	u330
  1193  0147                     u331:
  1194  0147  2953               	goto	l909
  1195  0148                     u330:
  1196  0148                     l907:
  1197  0148  09AA               	comf	___aldiv@quotient,f
  1198  0149  09AB               	comf	___aldiv@quotient+1,f
  1199  014A  09AC               	comf	___aldiv@quotient+2,f
  1200  014B  09AD               	comf	___aldiv@quotient+3,f
  1201  014C  0AAA               	incf	___aldiv@quotient,f
  1202  014D  1903               	skipnz
  1203  014E  0AAB               	incf	___aldiv@quotient+1,f
  1204  014F  1903               	skipnz
  1205  0150  0AAC               	incf	___aldiv@quotient+2,f
  1206  0151  1903               	skipnz
  1207  0152  0AAD               	incf	___aldiv@quotient+3,f
  1208  0153                     l909:
  1209  0153  082D               	movf	___aldiv@quotient+3,w
  1210  0154  00A3               	movwf	?___aldiv+3
  1211  0155  082C               	movf	___aldiv@quotient+2,w
  1212  0156  00A2               	movwf	?___aldiv+2
  1213  0157  082B               	movf	___aldiv@quotient+1,w
  1214  0158  00A1               	movwf	?___aldiv+1
  1215  0159  082A               	movf	___aldiv@quotient,w
  1216  015A  00A0               	movwf	?___aldiv
  1217  015B                     l308:
  1218  015B  0008               	return
  1219  015C                     __end_of___aldiv:
  1220                           
  1221                           	psect	text3
  1222  0228                     __ptext3:	
  1223 ;; *************** function _Setup *****************
  1224 ;; Defined at:
  1225 ;;		line 52 in file "MASTER.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		status,2
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _Setup
  1255  0228                     _Setup:
  1256  0228                     l927:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _Setup: [status,2]
  1259                           
  1260                           
  1261                           ;MASTER.c: 54:     ANSEL = 0b00000000;
  1262  0228  1683               	bsf	3,5	;RP0=1, select bank3
  1263  0229  1703               	bsf	3,6	;RP1=1, select bank3
  1264  022A  0188               	clrf	8	;volatile
  1265                           
  1266                           ;MASTER.c: 55:     TRISA = 0b00000000;
  1267  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1268  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1269  022D  0185               	clrf	5	;volatile
  1270                           
  1271                           ;MASTER.c: 57:     PORTA = 0;
  1272  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1273  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0230  0185               	clrf	5	;volatile
  1275                           
  1276                           ;MASTER.c: 58:     PORTC = 0;
  1277  0231  0187               	clrf	7	;volatile
  1278  0232                     l56:
  1279  0232  0008               	return
  1280  0233                     __end_of_Setup:
  1281                           
  1282                           	psect	text4
  1283  021B                     __ptext4:	
  1284 ;; *************** function _I2C_stop *****************
  1285 ;; Defined at:
  1286 ;;		line 45 in file "I2C.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    2
  1307 ;; This function calls:
  1308 ;;		_I2C_sleep
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _I2C_stop
  1316  021B                     _I2C_stop:
  1317  021B                     l955:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _I2C_stop: [status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;I2C.c: 46:     I2C_sleep();
  1323  021B  120A  118A  2257  120A  118A  	fcall	_I2C_sleep
  1324  0220                     l957:
  1325                           
  1326                           ;I2C.c: 47:     PEN = 1;
  1327  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1328  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1329  0222  1511               	bsf	17,2	;volatile
  1330  0223                     l132:	
  1331                           ;I2C.c: 48:     while(PEN);
  1332                           
  1333  0223  1911               	btfsc	17,2	;volatile
  1334  0224  2A26               	goto	u411
  1335  0225  2A27               	goto	u410
  1336  0226                     u411:
  1337  0226  2A23               	goto	l132
  1338  0227                     u410:
  1339  0227                     l135:
  1340  0227  0008               	return
  1341  0228                     __end_of_I2C_stop:
  1342                           
  1343                           	psect	text5
  1344  024F                     __ptext5:	
  1345 ;; *************** function _I2C_rstart *****************
  1346 ;; Defined at:
  1347 ;;		line 35 in file "I2C.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		None
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _I2C_rstart
  1377  024F                     _I2C_rstart:
  1378  024F                     l941:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _I2C_rstart: []
  1381                           
  1382                           
  1383                           ;I2C.c: 36:     RSEN = 1;
  1384  024F  1683               	bsf	3,5	;RP0=1, select bank1
  1385  0250  1303               	bcf	3,6	;RP1=0, select bank1
  1386  0251  1491               	bsf	17,1	;volatile
  1387  0252                     l120:	
  1388                           ;I2C.c: 37:     while(RSEN);
  1389                           
  1390  0252  1891               	btfsc	17,1	;volatile
  1391  0253  2A55               	goto	u371
  1392  0254  2A56               	goto	u370
  1393  0255                     u371:
  1394  0255  2A52               	goto	l120
  1395  0256                     u370:
  1396  0256                     l123:
  1397  0256  0008               	return
  1398  0257                     __end_of_I2C_rstart:
  1399                           
  1400                           	psect	text6
  1401  01F0                     __ptext6:	
  1402 ;; *************** function _I2C_init *****************
  1403 ;; Defined at:
  1404 ;;		line 12 in file "I2C.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _I2C_init
  1434  01F0                     _I2C_init:
  1435  01F0                     l929:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _I2C_init: [wreg+status,2]
  1438                           
  1439                           
  1440                           ;I2C.c: 13:     TRISC3 = 1;
  1441  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1442  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1443  01F2  1587               	bsf	7,3	;volatile
  1444                           
  1445                           ;I2C.c: 14:     TRISC4 = 1;
  1446  01F3  1607               	bsf	7,4	;volatile
  1447  01F4                     l931:
  1448                           
  1449                           ;I2C.c: 15:     SSPBUF = 0x00;
  1450  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01F6  0193               	clrf	19	;volatile
  1453  01F7                     l933:
  1454                           
  1455                           ;I2C.c: 16:     SSPSTAT = 0xc0;
  1456  01F7  30C0               	movlw	192
  1457  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1458  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1459  01FA  0094               	movwf	20	;volatile
  1460  01FB                     l935:
  1461                           
  1462                           ;I2C.c: 17:     SSPCON = 0X28;
  1463  01FB  3028               	movlw	40
  1464  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1465  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1466  01FE  0094               	movwf	20	;volatile
  1467                           
  1468                           ;I2C.c: 18:     SSPCON2 = 0x00;
  1469  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0201  0191               	clrf	17	;volatile
  1472  0202                     l937:
  1473                           
  1474                           ;I2C.c: 19:     SSPIF = 0;
  1475  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0204  118C               	bcf	12,3	;volatile
  1478  0205                     l939:
  1479                           
  1480                           ;I2C.c: 20:     SSPADD = 9;
  1481  0205  3009               	movlw	9
  1482  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0208  0093               	movwf	19	;volatile
  1485  0209                     l105:
  1486  0209  0008               	return
  1487  020A                     __end_of_I2C_init:
  1488                           
  1489                           	psect	text7
  1490  020A                     __ptext7:	
  1491 ;; *************** function _I2C_TX *****************
  1492 ;; Defined at:
  1493 ;;		line 58 in file "I2C.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  c               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  c               1    4[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      unsigned char 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         1       0       0       0       0
  1511 ;;Total ram usage:        1 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		_I2C_sleep
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _I2C_TX
  1523  020A                     _I2C_TX:
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in _I2C_TX: [wreg+status,2+status,0+pclath+cstack]
  1527                           ;I2C_TX@c stored from wreg
  1528  020A  00F4               	movwf	I2C_TX@c
  1529  020B                     l943:
  1530                           
  1531                           ;I2C.c: 59:     SSPBUF = c;
  1532  020B  0874               	movf	I2C_TX@c,w
  1533  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1534  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1535  020E  0093               	movwf	19	;volatile
  1536  020F                     l144:	
  1537                           ;I2C.c: 60:     while(BF);
  1538                           
  1539  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0211  1814               	btfsc	20,0	;volatile
  1542  0212  2A14               	goto	u381
  1543  0213  2A15               	goto	u380
  1544  0214                     u381:
  1545  0214  2A0F               	goto	l144
  1546  0215                     u380:
  1547  0215                     l945:
  1548                           
  1549                           ;I2C.c: 61:     I2C_sleep();
  1550  0215  120A  118A  2257  120A  118A  	fcall	_I2C_sleep
  1551  021A                     l147:
  1552  021A  0008               	return
  1553  021B                     __end_of_I2C_TX:
  1554                           
  1555                           	psect	text8
  1556  0257                     __ptext8:	
  1557 ;; *************** function _I2C_sleep *****************
  1558 ;; Defined at:
  1559 ;;		line 29 in file "I2C.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		None
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;;		_I2C_stop
  1585 ;;		_I2C_TX
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _I2C_sleep
  1591  0257                     _I2C_sleep:
  1592  0257                     l871:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _I2C_sleep: []
  1595                           
  1596  0257                     l114:	
  1597                           ;I2C.c: 30:    while (SSPIF ==0);
  1598                           
  1599  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0259  1D8C               	btfss	12,3	;volatile
  1602  025A  2A5C               	goto	u231
  1603  025B  2A5D               	goto	u230
  1604  025C                     u231:
  1605  025C  2A57               	goto	l114
  1606  025D                     u230:
  1607  025D                     l116:
  1608                           
  1609                           ;I2C.c: 31:    SSPIF = 0;
  1610  025D  118C               	bcf	12,3	;volatile
  1611  025E                     l117:
  1612  025E  0008               	return
  1613  025F                     __end_of_I2C_sleep:
  1614                           
  1615                           	psect	text9
  1616  0233                     __ptext9:	
  1617 ;; *************** function _I2C_RX *****************
  1618 ;; Defined at:
  1619 ;;		line 51 in file "I2C.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _I2C_RX
  1649  0233                     _I2C_RX:
  1650  0233                     l947:	
  1651                           ;incstack = 0
  1652                           ; Regs used in _I2C_RX: [wreg]
  1653                           
  1654                           
  1655                           ;I2C.c: 52:     RCEN = 1;
  1656  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0235  1591               	bsf	17,3	;volatile
  1659  0236                     l138:	
  1660                           ;I2C.c: 53:     while(!BF);
  1661                           
  1662  0236  1C14               	btfss	20,0	;volatile
  1663  0237  2A39               	goto	u391
  1664  0238  2A3A               	goto	u390
  1665  0239                     u391:
  1666  0239  2A36               	goto	l138
  1667  023A                     u390:
  1668  023A                     l949:
  1669                           
  1670                           ;I2C.c: 54:     return SSPBUF;
  1671  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1672  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1673  023C  0813               	movf	19,w	;volatile
  1674  023D                     l141:
  1675  023D  0008               	return
  1676  023E                     __end_of_I2C_RX:
  1677                           
  1678                           	psect	text10
  1679  023E                     __ptext10:	
  1680 ;; *************** function _I2C_NACK *****************
  1681 ;; Defined at:
  1682 ;;		line 40 in file "I2C.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		None
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _I2C_NACK
  1712  023E                     _I2C_NACK:
  1713  023E                     l953:	
  1714                           ;incstack = 0
  1715                           ; Regs used in _I2C_NACK: []
  1716                           
  1717                           
  1718                           ;I2C.c: 41:     ACKDT = 1;
  1719  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1720  023F  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0240  1691               	bsf	17,5	;volatile
  1722                           
  1723                           ;I2C.c: 42:     ACKEN =1;
  1724  0241  1611               	bsf	17,4	;volatile
  1725  0242                     l126:	
  1726                           ;I2C.c: 43:     while(ACKEN);
  1727                           
  1728  0242  1A11               	btfsc	17,4	;volatile
  1729  0243  2A45               	goto	u401
  1730  0244  2A46               	goto	u400
  1731  0245                     u401:
  1732  0245  2A42               	goto	l126
  1733  0246                     u400:
  1734  0246                     l129:
  1735  0246  0008               	return
  1736  0247                     __end_of_I2C_NACK:
  1737                           
  1738                           	psect	text11
  1739  01CF                     __ptext11:	
  1740 ;; *************** function _myISR *****************
  1741 ;; Defined at:
  1742 ;;		line 66 in file "MASTER.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          4       0       0       0       0
  1759 ;;      Totals:         4       0       0       0       0
  1760 ;;Total ram usage:        4 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		Interrupt level 1
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           
  1770                           ;psect for function _myISR
  1771  01CF                     _myISR:
  1772  01CF                     i1l827:
  1773                           
  1774                           ;MASTER.c: 67:     if(PIR1bits.TXIF == 1){
  1775  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1776  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1777  01D1  1E0C               	btfss	12,4	;volatile
  1778  01D2  29D4               	goto	u20_21
  1779  01D3  29D5               	goto	u20_20
  1780  01D4                     u20_21:
  1781  01D4  29E7               	goto	i1l64
  1782  01D5                     u20_20:
  1783  01D5                     i1l829:
  1784                           
  1785                           ;MASTER.c: 68:        TXREG = Temperatura[c1];
  1786  01D5  0879               	movf	_c1,w
  1787  01D6  3E41               	addlw	(low (_Temperatura| 0))& (0+255)
  1788  01D7  0084               	movwf	4
  1789  01D8  1383               	bcf	3,7	;select IRP bank0
  1790  01D9  0800               	movf	0,w
  1791  01DA  0099               	movwf	25	;volatile
  1792  01DB                     i1l831:
  1793                           
  1794                           ;MASTER.c: 69:        if (c1 == 20){
  1795  01DB  3014               	movlw	20
  1796  01DC  0679               	xorwf	_c1,w
  1797  01DD  1D03               	btfss	3,2
  1798  01DE  29E0               	goto	u21_21
  1799  01DF  29E1               	goto	u21_20
  1800  01E0                     u21_21:
  1801  01E0  29E3               	goto	i1l835
  1802  01E1                     u21_20:
  1803  01E1                     i1l833:
  1804                           
  1805                           ;MASTER.c: 70:            c1=0;
  1806  01E1  01F9               	clrf	_c1
  1807                           
  1808                           ;MASTER.c: 71:        }
  1809  01E2  29E7               	goto	i1l64
  1810  01E3                     i1l835:
  1811                           
  1812                           ;MASTER.c: 73:             c1++;
  1813  01E3  3001               	movlw	1
  1814  01E4  00F0               	movwf	??_myISR
  1815  01E5  0870               	movf	??_myISR,w
  1816  01E6  07F9               	addwf	_c1,f
  1817  01E7                     i1l64:
  1818  01E7  0873               	movf	??_myISR+3,w
  1819  01E8  008A               	movwf	10
  1820  01E9  0872               	movf	??_myISR+2,w
  1821  01EA  0084               	movwf	4
  1822  01EB  0E71               	swapf	??_myISR+1,w
  1823  01EC  0083               	movwf	3
  1824  01ED  0EFE               	swapf	btemp,f
  1825  01EE  0E7E               	swapf	btemp,w
  1826  01EF  0009               	retfie
  1827  01F0                     __end_of_myISR:
  1828  007E                     btemp	set	126	;btemp
  1829  007E                     wtemp0	set	126
  1830                           
  1831                           	psect	intentry
  1832  0004                     __pintentry:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0]
  1835                           
  1836  0004                     interrupt_function:
  1837  007E                     saved_w	set	btemp
  1838  0004  00FE               	movwf	btemp
  1839  0005  0E03               	swapf	3,w
  1840  0006  00F1               	movwf	??_myISR+1
  1841  0007  0804               	movf	4,w
  1842  0008  00F2               	movwf	??_myISR+2
  1843  0009  080A               	movf	10,w
  1844  000A  00F3               	movwf	??_myISR+3
  1845  000B  120A  118A  29CF   	ljmp	_myISR
  1846                           
  1847                           	psect	config
  1848                           
  1849                           ;Config register CONFIG1 @ 0x2007
  1850                           ;	Oscillator Selection bits
  1851                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1852                           ;	Watchdog Timer Enable bit
  1853                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1854                           ;	Power-up Timer Enable bit
  1855                           ;	PWRTE = OFF, PWRT disabled
  1856                           ;	RE3/MCLR pin function select bit
  1857                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1858                           ;	Code Protection bit
  1859                           ;	CP = OFF, Program memory code protection is disabled
  1860                           ;	Data Code Protection bit
  1861                           ;	CPD = OFF, Data memory code protection is disabled
  1862                           ;	Brown Out Reset Selection bits
  1863                           ;	BOREN = OFF, BOR disabled
  1864                           ;	Internal External Switchover bit
  1865                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1866                           ;	Fail-Safe Clock Monitor Enabled bit
  1867                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1868                           ;	Low Voltage Programming Enable bit
  1869                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1870                           ;	In-Circuit Debugger Mode bit
  1871                           ;	DEBUG = 0x1, unprogrammed default
  1872  2007                     	org	8199
  1873  2007  20D1               	dw	8401
  1874                           
  1875                           ;Config register CONFIG2 @ 0x2008
  1876                           ;	Brown-out Reset Selection bit
  1877                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1878                           ;	Flash Program Memory Self Write Enable bits
  1879                           ;	WRT = OFF, Write protection off
  1880  2008                     	org	8200
  1881  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     33      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_USART_Initialize
    _USART_Initialize->___aldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Initialize
    _USART_Initialize->___aldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     617
                                             30 BANK0      3     3      0
                           _I2C_NACK
                             _I2C_RX
                             _I2C_TX
                           _I2C_init
                         _I2C_rstart
                          _I2C_sleep
                           _I2C_stop
                              _Setup
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                    20    16      4     595
                                              5 COMMON     4     4      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (1) _I2C_rstart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_TX                                               1     1      0      22
                                              4 COMMON     1     1      0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (2) _I2C_sleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_RX                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_NACK
   _I2C_RX
   _I2C_TX
     _I2C_sleep
   _I2C_init
   _I2C_rstart
   _I2C_sleep
   _I2C_stop
     _I2C_sleep
   _Setup
   _USART_Initialize
     ___aldiv

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      40       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      40      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 22:06:33 2021

                       _BF 04A0                         l15 01CE                         l56 0232  
                       _c1 0079                         _rx 0055                         fsr 0004  
       __size_of_I2C_sleep 0008   __end_of_USART_Initialize 01CF                        l120 0252  
                      l105 0209                        l114 0257                        l123 0256  
                      l116 025D                        l132 0223                        l141 023D  
                      l117 025E                        l126 0242                        l135 0227  
                      l144 020F                        l129 0246                        l138 0236  
                      l147 021A                        l308 015B                        l298 00D3  
                      l901 0134                        l903 013D                        l905 0143  
                      l921 01CB                        l913 015C                        l931 01F4  
                      l907 0148                        l923 01CC                        l915 0169  
                      l933 01F7                        l941 024F                        l909 0153  
                      l925 01CD                        l917 01C6                        l871 0257  
                      l943 020B                        l935 01FB                        l927 0228  
                      l919 01CA                        l953 023E                        l945 0215  
                      l937 0202                        l929 01F0                        l881 00E2  
                      l873 00BF                        l961 0024                        l947 0233  
                      l939 0205                        l955 021B                        l891 0106  
                      l883 00E6                        l875 00C2                        l971 005D  
                      l963 0033                        l949 023A                        l957 0220  
                      l893 010A                        l885 00EE                        l877 00C6  
                      l981 0096                        l973 0068                        l965 0038  
                      l895 0113                        l887 00F6                        l879 00D7  
                      l983 009B                        l975 007C                        l967 0047  
                      l959 001F                        l897 0125                        l889 00F9  
                      l985 00A0                        l977 0081                        l969 0057  
                      l899 0133                        l987 00AB                        l979 008C  
                      l989 00B0                        u300 0125                        u301 0124  
                      u230 025D                        u231 025C                        u400 0246  
                      u320 0143                        u240 00C6                        u401 0245  
                      u321 0142                        u305 0121                        u241 00C5  
                      u410 0227                        u330 0148                        u250 00D7  
                      u411 0226                        u331 0147                        u315 0135  
                      u251 00D6                        u260 00F6                        u340 0177  
                      u261 00F5                        u350 0190                        u280 010A  
                      _PEN 048A                        u281 0109                        u361 01A2  
                      u345 0172                        u370 0256                        u362 01A3  
                      u371 0255                        u275 00FB                        u363 01A8  
                      u355 018B                        u427 0040                        u380 0215  
                      u364 01A9                        u381 0214                        u365 01AE  
                      u437 0052                        u390 023A                        u366 01AF  
                      u391 0239                        u295 010C                        u447 0063  
                      u457 0073                        u467 0087                        _SEN 0488  
                      u477 00A6                        u487 00B6                        fsr0 0004  
                      indf 0000        __size_of_I2C_rstart 0008                       _RCEN 048B  
                     i1l64 01E7                       _RSEN 0489           __end_of_I2C_NACK 0247  
                     _main 001F                       btemp 007E           __end_of_I2C_init 020A  
                     start 000E           __end_of_I2C_stop 0228            __end_of___aldiv 015C  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
                    _ANSEL 0188                      i1l831 01DB                      i1l833 01E1  
                    i1l835 01E3                      i1l827 01CF                      i1l829 01D5  
                    u20_20 01D5                      u20_21 01D4                      u21_20 01E1  
                    u21_21 01E0                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _TRISA 0085                      _SSPIF 0063  
                    _TXREG 0019                      _Setup 0228                      _myISR 01CF  
                    pclath 000A          __end_of_I2C_sleep 025F                      status 0003  
                    wtemp0 007E            __initialization 0011               __end_of_main 00BF  
                   ??_main 003E                     ?_Setup 0070                     ?_myISR 0070  
                   _I2C_RX 0233                     _I2C_TX 020A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPBUF 0013  
                   _SSPCON 0014               ??_I2C_rstart 0074                  ??___aldiv 0074  
                ?_I2C_NACK 0070                     saved_w 007E                  ?_I2C_init 0070  
                ?_I2C_stop 0070         __end_of_I2C_rstart 0257    __end_of__initialization 001B  
           __pcstackCOMMON 0070              __end_of_Setup 0233              __end_of_myISR 01F0  
               ??_I2C_NACK 0074                    I2C_TX@c 0074          ?_USART_Initialize 002E  
               ??_I2C_init 0074         ??_USART_Initialize 0032                 ??_I2C_stop 0074  
                  ??_Setup 0074                    ??_myISR 0070                    ?_I2C_RX 0070  
                  ?_I2C_TX 0070                 __pbssBANK0 0041                 __pmaintext 001F  
               __pintentry 0004                    _SSPCON2 0091                    _SSPSTAT 0094  
          __size_of_I2C_RX 000B            __size_of_I2C_TX 0011                  _I2C_sleep 0257  
                  ___aldiv 00BF                _Temperatura 0041                    __ptext1 015C  
                  __ptext2 00BF                    __ptext3 0228                    __ptext4 021B  
                  __ptext5 024F                    __ptext6 01F0                    __ptext7 020A  
                  __ptext8 0257                    __ptext9 0233           ___aldiv@dividend 0024  
                  clrloop0 0248       end_of_initialization 001B                 ?_I2C_sleep 0070  
        USART_Initialize@x 0075                  _RCSTAbits 0018           ___aldiv@quotient 002A  
        __size_of_I2C_NACK 0009          __size_of_I2C_init 001A          __size_of_I2C_stop 000D  
           __end_of_I2C_RX 023E             __end_of_I2C_TX 021B                  _TXSTAbits 0098  
              _BAUDCTLbits 0187        start_initialization 0011                   ??_I2C_RX 0074  
                 ??_I2C_TX 0074  __size_of_USART_Initialize 0073                ??_I2C_sleep 0074  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
                 ?___aldiv 0020                   _I2C_NACK 023E                   _I2C_init 01F0  
                 _I2C_stop 021B             __size_of_Setup 000B             __size_of_myISR 0021  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0028  
                clear_ram0 0247                   _PIE1bits 008C                   _PIR1bits 000C  
         _USART_Initialize 015C                 _I2C_rstart 024F           __size_of___aldiv 009D  
                 __ptext10 023E                   __ptext11 01CF              __size_of_main 00A0  
               _INTCONbits 000B                   intlevel1 0000                ?_I2C_rstart 0070  
             ___aldiv@sign 0029   USART_Initialize@baudrate 002E  
