

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 01:26:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378                           
   379                           	psect	strings
   380  0446                     __pstrings:
   381  0446                     stringtab:
   382  0446                     __stringtab:
   383  0446                     stringcode:	
   384                           ;	String table - string pointers are 1 byte each
   385                           
   386  0446                     stringdir:
   387  0446  3004               	movlw	high stringdir
   388  0447  008A               	movwf	10
   389  0448  0804               	movf	4,w
   390  0449  0A84               	incf	4,f
   391  044A  0782               	addwf	2,f
   392  044B                     __stringbase:
   393  044B  3400               	retlw	0
   394  044C                     __end_of__stringtab:
   395  044C                     _dpowers:
   396  044C  3401               	retlw	1
   397  044D  3400               	retlw	0
   398  044E  340A               	retlw	10
   399  044F  3400               	retlw	0
   400  0450  3464               	retlw	100
   401  0451  3400               	retlw	0
   402  0452  34E8               	retlw	232
   403  0453  3403               	retlw	3
   404  0454  3410               	retlw	16
   405  0455  3427               	retlw	39
   406  0456                     __end_of_dpowers:
   407  0014                     _SSPCON	set	20
   408  0013                     _SSPBUF	set	19
   409  0019                     _TXREG	set	25
   410  000C                     _PIR1bits	set	12
   411  001A                     _RCREG	set	26
   412  0007                     _PORTC	set	7
   413  0009                     _PORTE	set	9
   414  000B                     _INTCONbits	set	11
   415  0018                     _RCSTAbits	set	24
   416  0063                     _SSPIF	set	99
   417  0093                     _SSPADD	set	147
   418  0091                     _SSPCON2	set	145
   419  0094                     _SSPSTAT	set	148
   420  0089                     _TRISE	set	137
   421  008C                     _PIE1bits	set	140
   422  0099                     _SPBRG	set	153
   423  0098                     _TXSTAbits	set	152
   424  04A0                     _BF	set	1184
   425  048B                     _RCEN	set	1163
   426  048A                     _PEN	set	1162
   427  048C                     _ACKEN	set	1164
   428  048D                     _ACKDT	set	1165
   429  0489                     _RSEN	set	1161
   430  0488                     _SEN	set	1160
   431  043C                     _TRISC4	set	1084
   432  043B                     _TRISC3	set	1083
   433  0189                     _ANSELH	set	393
   434  0188                     _ANSEL	set	392
   435  0187                     _BAUDCTLbits	set	391
   436  0456                     STR_1:
   437  0456  3420               	retlw	32	;' '
   438  0457  3425               	retlw	37	;'%'
   439  0458  3432               	retlw	50	;'2'
   440  0459  3469               	retlw	105	;'i'
   441  045A  3420               	retlw	32	;' '
   442  045B  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445  000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448  000F                     __initialization:
   449                           
   450                           ; Clear objects allocated to COMMON
   451  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   452  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455  0011  1283               	bcf	3,5	;RP0=0, select bank0
   456  0012  1303               	bcf	3,6	;RP1=0, select bank0
   457  0013  01C1               	clrf	__pbssBANK0& (0+127)
   458  0014  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   459  0015                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462  0015                     __end_of__initialization:
   463  0015  0183               	clrf	3
   464  0016  120A  118A  29A1   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMMON
   467  0079                     __pbssCOMMON:
   468  0079                     _leds:
   469  0079                     	ds	1
   470  007A                     _c1:
   471  007A                     	ds	1
   472                           
   473                           	psect	bssBANK0
   474  0041                     __pbssBANK0:
   475  0041                     _rx:
   476  0041                     	ds	1
   477  0042                     _Temperatura:
   478  0042                     	ds	1
   479                           
   480                           	psect	cstackCOMMON
   481  0070                     __pcstackCOMMON:
   482  0070                     ?_isdigit:
   483  0070                     ?_I2C_init:	
   484                           ; 1 bit 
   485                           
   486  0070                     ?_I2C_rstart:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_I2C_TX:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_I2C_sleep:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_RX:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_I2C_NACK:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_stop:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_Setup:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_myISR:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_myISR:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_conversion:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519                           
   520                           ; 1 bytes @ 0x0
   521  0070                     	ds	3
   522  0073                     ??_I2C_init:
   523  0073                     ??_I2C_rstart:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     ??_I2C_TX:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     ??_I2C_sleep:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ??_I2C_RX:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ??_I2C_NACK:	
   536                           ; 1 bytes @ 0x3
   537                           
   538  0073                     ??_I2C_stop:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ??_isdigit:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     ??_Setup:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     ??___aldiv:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ?___wmul:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ?___lwdiv:	
   554                           ; 2 bytes @ 0x3
   555                           
   556  0073                     I2C_TX@c:	
   557                           ; 2 bytes @ 0x3
   558                           
   559  0073                     _isdigit$791:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ___wmul@multiplier:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     ___lwdiv@divisor:	
   566                           ; 2 bytes @ 0x3
   567                           
   568                           
   569                           ; 2 bytes @ 0x3
   570  0073                     	ds	1
   571  0074                     isdigit@c:
   572  0074                     USART_Initialize@x:	
   573                           ; 1 bytes @ 0x4
   574                           
   575                           
   576                           ; 4 bytes @ 0x4
   577  0074                     	ds	1
   578  0075                     ___wmul@multiplicand:
   579  0075                     ___lwdiv@dividend:	
   580                           ; 2 bytes @ 0x5
   581                           
   582                           
   583                           ; 2 bytes @ 0x5
   584  0075                     	ds	2
   585  0077                     ??___wmul:
   586  0077                     ??___lwdiv:	
   587                           ; 1 bytes @ 0x7
   588                           
   589  0077                     ___wmul@product:	
   590                           ; 1 bytes @ 0x7
   591                           
   592                           
   593                           ; 2 bytes @ 0x7
   594  0077                     	ds	1
   595  0078                     ??___lwmod:
   596                           
   597                           ; 1 bytes @ 0x8
   598  0078                     	ds	1
   599                           
   600                           	psect	cstackBANK0
   601  0020                     __pcstackBANK0:
   602  0020                     ?___aldiv:
   603  0020                     ___lwdiv@counter:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  0020                     ___aldiv@divisor:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 4 bytes @ 0x0
   611  0020                     	ds	1
   612  0021                     ___lwdiv@quotient:
   613                           
   614                           ; 2 bytes @ 0x1
   615  0021                     	ds	2
   616  0023                     ?___lwmod:
   617  0023                     ___lwmod@divisor:	
   618                           ; 2 bytes @ 0x3
   619                           
   620                           
   621                           ; 2 bytes @ 0x3
   622  0023                     	ds	1
   623  0024                     ___aldiv@dividend:
   624                           
   625                           ; 4 bytes @ 0x4
   626  0024                     	ds	1
   627  0025                     ___lwmod@dividend:
   628                           
   629                           ; 2 bytes @ 0x5
   630  0025                     	ds	2
   631  0027                     ___lwmod@counter:
   632                           
   633                           ; 1 bytes @ 0x7
   634  0027                     	ds	1
   635  0028                     ?_sprintf:
   636  0028                     sprintf@f:	
   637                           ; 2 bytes @ 0x8
   638                           
   639  0028                     ___aldiv@counter:	
   640                           ; 1 bytes @ 0x8
   641                           
   642                           
   643                           ; 1 bytes @ 0x8
   644  0028                     	ds	1
   645  0029                     ___aldiv@sign:
   646                           
   647                           ; 1 bytes @ 0x9
   648  0029                     	ds	1
   649  002A                     ___aldiv@quotient:
   650                           
   651                           ; 4 bytes @ 0xA
   652  002A                     	ds	1
   653  002B                     ??_sprintf:
   654                           
   655                           ; 1 bytes @ 0xB
   656  002B                     	ds	3
   657  002E                     ?_USART_Initialize:
   658  002E                     sprintf@ap:	
   659                           ; 1 bytes @ 0xE
   660                           
   661  002E                     USART_Initialize@baudrate:	
   662                           ; 1 bytes @ 0xE
   663                           
   664                           
   665                           ; 4 bytes @ 0xE
   666  002E                     	ds	1
   667  002F                     sprintf@prec:
   668                           
   669                           ; 1 bytes @ 0xF
   670  002F                     	ds	1
   671  0030                     sprintf@flag:
   672                           
   673                           ; 1 bytes @ 0x10
   674  0030                     	ds	1
   675  0031                     sprintf@val:
   676                           
   677                           ; 2 bytes @ 0x11
   678  0031                     	ds	1
   679  0032                     ??_USART_Initialize:
   680                           
   681                           ; 1 bytes @ 0x12
   682  0032                     	ds	1
   683  0033                     sprintf@sp:
   684                           
   685                           ; 1 bytes @ 0x13
   686  0033                     	ds	1
   687  0034                     sprintf@width:
   688                           
   689                           ; 2 bytes @ 0x14
   690  0034                     	ds	2
   691  0036                     sprintf@c:
   692                           
   693                           ; 1 bytes @ 0x16
   694  0036                     	ds	1
   695  0037                     ??_conversion:
   696                           
   697                           ; 1 bytes @ 0x17
   698  0037                     	ds	7
   699  003E                     ??_main:
   700                           
   701                           ; 1 bytes @ 0x1E
   702  003E                     	ds	3
   703                           
   704                           	psect	maintext
   705  01A1                     __pmaintext:	
   706 ;;
   707 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   708 ;;
   709 ;; *************** function _main *****************
   710 ;; Defined at:
   711 ;;		line 101 in file "MASTER.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : B00/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       3       0       0       0
   728 ;;      Totals:         0       3       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels required when called:    4
   731 ;; This function calls:
   732 ;;		_I2C_NACK
   733 ;;		_I2C_RX
   734 ;;		_I2C_TX
   735 ;;		_I2C_init
   736 ;;		_I2C_rstart
   737 ;;		_I2C_sleep
   738 ;;		_I2C_stop
   739 ;;		_Setup
   740 ;;		_USART_Initialize
   741 ;;		_conversion
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _main
   749  01A1                     _main:
   750  01A1                     l1679:	
   751                           ;incstack = 0
   752                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   753                           
   754                           
   755                           ;MASTER.c: 102:     Setup();
   756  01A1  120A  118A  24A0  120A  118A  	fcall	_Setup
   757  01A6                     l1681:
   758                           
   759                           ;MASTER.c: 103:     USART_Initialize(9600);
   760  01A6  3000               	movlw	0
   761  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   762  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   763  01A9  00B1               	movwf	USART_Initialize@baudrate+3
   764  01AA  3000               	movlw	0
   765  01AB  00B0               	movwf	USART_Initialize@baudrate+2
   766  01AC  3025               	movlw	37
   767  01AD  00AF               	movwf	USART_Initialize@baudrate+1
   768  01AE  3080               	movlw	128
   769  01AF  00AE               	movwf	USART_Initialize@baudrate
   770  01B0  120A  118A  22E3  120A  118A  	fcall	_USART_Initialize
   771  01B5                     l1683:
   772                           
   773                           ;MASTER.c: 104:     I2C_init();
   774  01B5  120A  118A  242C  120A  118A  	fcall	_I2C_init
   775  01BA                     l1685:
   776                           
   777                           ;MASTER.c: 105:     _delay((unsigned long)((600)*(8000000/4000.0)));
   778  01BA  3007               	movlw	7
   779  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   780  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   781  01BD  00C0               	movwf	??_main+2
   782  01BE  3017               	movlw	23
   783  01BF  00BF               	movwf	??_main+1
   784  01C0  3069               	movlw	105
   785  01C1  00BE               	movwf	??_main
   786  01C2                     u1547:
   787  01C2  0BBE               	decfsz	??_main,f
   788  01C3  29C2               	goto	u1547
   789  01C4  0BBF               	decfsz	??_main+1,f
   790  01C5  29C2               	goto	u1547
   791  01C6  0BC0               	decfsz	??_main+2,f
   792  01C7  29C2               	goto	u1547
   793  01C8  29C9               	nop2
   794  01C9                     l1687:
   795                           
   796                           ;MASTER.c: 108:         I2C_rstart();
   797  01C9  120A  118A  24C0  120A  118A  	fcall	_I2C_rstart
   798                           
   799                           ;MASTER.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
   800  01CE  301A               	movlw	26
   801  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   802  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   803  01D1  00BF               	movwf	??_main+1
   804  01D2  30F7               	movlw	247
   805  01D3  00BE               	movwf	??_main
   806  01D4                     u1557:
   807  01D4  0BBE               	decfsz	??_main,f
   808  01D5  29D4               	goto	u1557
   809  01D6  0BBF               	decfsz	??_main+1,f
   810  01D7  29D4               	goto	u1557
   811  01D8  29D9               	nop2
   812  01D9                     l1689:
   813                           
   814                           ;MASTER.c: 113:         I2C_TX(0x90);
   815  01D9  3090               	movlw	144
   816  01DA  120A  118A  2482  120A  118A  	fcall	_I2C_TX
   817  01DF                     l1691:
   818                           
   819                           ;MASTER.c: 114:         _delay((unsigned long)((10)*(8000000/4000.0)));
   820  01DF  301A               	movlw	26
   821  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   822  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   823  01E2  00BF               	movwf	??_main+1
   824  01E3  30F7               	movlw	247
   825  01E4  00BE               	movwf	??_main
   826  01E5                     u1567:
   827  01E5  0BBE               	decfsz	??_main,f
   828  01E6  29E5               	goto	u1567
   829  01E7  0BBF               	decfsz	??_main+1,f
   830  01E8  29E5               	goto	u1567
   831  01E9  29EA               	nop2
   832  01EA                     l1693:
   833                           
   834                           ;MASTER.c: 117:         I2C_rstart();
   835  01EA  120A  118A  24C0  120A  118A  	fcall	_I2C_rstart
   836                           
   837                           ;MASTER.c: 118:         _delay((unsigned long)((10)*(8000000/4000.0)));
   838  01EF  301A               	movlw	26
   839  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   840  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   841  01F2  00BF               	movwf	??_main+1
   842  01F3  30F7               	movlw	247
   843  01F4  00BE               	movwf	??_main
   844  01F5                     u1577:
   845  01F5  0BBE               	decfsz	??_main,f
   846  01F6  29F5               	goto	u1577
   847  01F7  0BBF               	decfsz	??_main+1,f
   848  01F8  29F5               	goto	u1577
   849  01F9  29FA               	nop2
   850                           
   851                           ;MASTER.c: 121:         SSPBUF = 0x91;
   852  01FA  3091               	movlw	145
   853  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   854  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   855  01FD  0093               	movwf	19	;volatile
   856  01FE                     l1695:
   857                           
   858                           ;MASTER.c: 122:         I2C_sleep();
   859  01FE  120A  118A  24C8  120A  118A  	fcall	_I2C_sleep
   860  0203                     l1697:
   861                           
   862                           ;MASTER.c: 123:         _delay((unsigned long)((10)*(8000000/4000.0)));
   863  0203  301A               	movlw	26
   864  0204  1283               	bcf	3,5	;RP0=0, select bank0
   865  0205  1303               	bcf	3,6	;RP1=0, select bank0
   866  0206  00BF               	movwf	??_main+1
   867  0207  30F7               	movlw	247
   868  0208  00BE               	movwf	??_main
   869  0209                     u1587:
   870  0209  0BBE               	decfsz	??_main,f
   871  020A  2A09               	goto	u1587
   872  020B  0BBF               	decfsz	??_main+1,f
   873  020C  2A09               	goto	u1587
   874  020D  2A0E               	nop2
   875  020E                     l1699:
   876                           
   877                           ;MASTER.c: 126:         rx = I2C_RX();
   878  020E  120A  118A  24AC  120A  118A  	fcall	_I2C_RX
   879  0213  1283               	bcf	3,5	;RP0=0, select bank0
   880  0214  1303               	bcf	3,6	;RP1=0, select bank0
   881  0215  00BE               	movwf	??_main
   882  0216  083E               	movf	??_main,w
   883  0217  00C1               	movwf	_rx
   884  0218                     l1701:
   885                           
   886                           ;MASTER.c: 127:         I2C_sleep();
   887  0218  120A  118A  24C8  120A  118A  	fcall	_I2C_sleep
   888  021D                     l1703:
   889                           
   890                           ;MASTER.c: 130:         I2C_NACK();
   891  021D  120A  118A  24B7  120A  118A  	fcall	_I2C_NACK
   892  0222                     l1705:
   893                           
   894                           ;MASTER.c: 131:         _delay((unsigned long)((10)*(8000000/4000.0)));
   895  0222  301A               	movlw	26
   896  0223  1283               	bcf	3,5	;RP0=0, select bank0
   897  0224  1303               	bcf	3,6	;RP1=0, select bank0
   898  0225  00BF               	movwf	??_main+1
   899  0226  30F7               	movlw	247
   900  0227  00BE               	movwf	??_main
   901  0228                     u1597:
   902  0228  0BBE               	decfsz	??_main,f
   903  0229  2A28               	goto	u1597
   904  022A  0BBF               	decfsz	??_main+1,f
   905  022B  2A28               	goto	u1597
   906  022C  2A2D               	nop2
   907  022D                     l1707:
   908                           
   909                           ;MASTER.c: 134:         I2C_stop();
   910  022D  120A  118A  2493  120A  118A  	fcall	_I2C_stop
   911  0232                     l1709:
   912                           
   913                           ;MASTER.c: 135:         _delay((unsigned long)((10)*(8000000/4000.0)));
   914  0232  301A               	movlw	26
   915  0233  1283               	bcf	3,5	;RP0=0, select bank0
   916  0234  1303               	bcf	3,6	;RP1=0, select bank0
   917  0235  00BF               	movwf	??_main+1
   918  0236  30F7               	movlw	247
   919  0237  00BE               	movwf	??_main
   920  0238                     u1607:
   921  0238  0BBE               	decfsz	??_main,f
   922  0239  2A38               	goto	u1607
   923  023A  0BBF               	decfsz	??_main+1,f
   924  023B  2A38               	goto	u1607
   925  023C  2A3D               	nop2
   926  023D                     l1711:
   927                           
   928                           ;MASTER.c: 136:         conversion();
   929  023D  120A  118A  245C  120A  118A  	fcall	_conversion
   930  0242  29C9               	goto	l1687
   931  0243  120A  118A  280C   	ljmp	start
   932  0246                     __end_of_main:
   933                           
   934                           	psect	text1
   935  045C                     __ptext1:	
   936 ;; *************** function _conversion *****************
   937 ;; Defined at:
   938 ;;		line 95 in file "MASTER.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       3       0       0       0
   955 ;;      Totals:         0       3       0       0       0
   956 ;;Total ram usage:        3 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		_sprintf
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _conversion
   968  045C                     _conversion:
   969  045C                     l1677:	
   970                           ;incstack = 0
   971                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973                           
   974                           ;MASTER.c: 96:     sprintf(Temperatura, " %2i ", rx);
   975  045C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   976  045D  1283               	bcf	3,5	;RP0=0, select bank0
   977  045E  1303               	bcf	3,6	;RP1=0, select bank0
   978  045F  00B7               	movwf	??_conversion
   979  0460  0837               	movf	??_conversion,w
   980  0461  00A8               	movwf	sprintf@f
   981  0462  0841               	movf	_rx,w
   982  0463  00B8               	movwf	??_conversion+1
   983  0464  01B9               	clrf	??_conversion+2
   984  0465  0838               	movf	??_conversion+1,w
   985  0466  00A9               	movwf	?_sprintf+1
   986  0467  0839               	movf	??_conversion+2,w
   987  0468  00AA               	movwf	?_sprintf+2
   988  0469  3042               	movlw	(low (_Temperatura| 0))& (0+255)
   989  046A  120A  118A  2019  120A  118A  	fcall	_sprintf
   990  046F                     l82:
   991  046F  0008               	return
   992  0470                     __end_of_conversion:
   993                           
   994                           	psect	text2
   995  0019                     __ptext2:	
   996 ;; *************** function _sprintf *****************
   997 ;; Defined at:
   998 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  sp              1    wreg     PTR unsigned char 
  1001 ;;		 -> Temperatura(1), 
  1002 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1003 ;;		 -> STR_1(6), 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1006 ;;		 -> Temperatura(1), 
  1007 ;;  tmpval          4    0        struct .
  1008 ;;  width           2   20[BANK0 ] int 
  1009 ;;  val             2   17[BANK0 ] unsigned int 
  1010 ;;  cp              2    0        PTR const unsigned char 
  1011 ;;  len             2    0        unsigned int 
  1012 ;;  c               1   22[BANK0 ] unsigned char 
  1013 ;;  flag            1   16[BANK0 ] unsigned char 
  1014 ;;  prec            1   15[BANK0 ] char 
  1015 ;;  ap              1   14[BANK0 ] PTR void [1]
  1016 ;;		 -> ?_sprintf(2), 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    8[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       3       0       0       0
  1027 ;;      Locals:         0       9       0       0       0
  1028 ;;      Temps:          0       3       0       0       0
  1029 ;;      Totals:         0      15       0       0       0
  1030 ;;Total ram usage:       15 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		___lwdiv
  1035 ;;		___lwmod
  1036 ;;		___wmul
  1037 ;;		_isdigit
  1038 ;; This function is called by:
  1039 ;;		_conversion
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _sprintf
  1045  0019                     _sprintf:
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1049                           ;sprintf@sp stored from wreg
  1050  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1051  001A  1303               	bcf	3,6	;RP1=0, select bank0
  1052  001B  00B3               	movwf	sprintf@sp
  1053  001C                     l1531:
  1054  001C  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1055  001D  00AB               	movwf	??_sprintf
  1056  001E  082B               	movf	??_sprintf,w
  1057  001F  00AE               	movwf	sprintf@ap
  1058  0020  298A               	goto	l1613
  1059  0021                     l1533:
  1060  0021  3025               	movlw	37
  1061  0022  0636               	xorwf	sprintf@c,w
  1062  0023  1903               	btfsc	3,2
  1063  0024  2826               	goto	u1271
  1064  0025  2827               	goto	u1270
  1065  0026                     u1271:
  1066  0026  2833               	goto	l1539
  1067  0027                     u1270:
  1068  0027                     l1535:
  1069  0027  0836               	movf	sprintf@c,w
  1070  0028  00AB               	movwf	??_sprintf
  1071  0029  0833               	movf	sprintf@sp,w
  1072  002A  0084               	movwf	4
  1073  002B  082B               	movf	??_sprintf,w
  1074  002C  1383               	bcf	3,7	;select IRP bank0
  1075  002D  0080               	movwf	0
  1076  002E                     l1537:
  1077  002E  3001               	movlw	1
  1078  002F  00AB               	movwf	??_sprintf
  1079  0030  082B               	movf	??_sprintf,w
  1080  0031  07B3               	addwf	sprintf@sp,f
  1081  0032  298A               	goto	l1613
  1082  0033                     l1539:
  1083  0033  01B4               	clrf	sprintf@width
  1084  0034  01B5               	clrf	sprintf@width+1
  1085  0035  01B0               	clrf	sprintf@flag
  1086  0036                     l1541:
  1087  0036  0828               	movf	sprintf@f,w
  1088  0037  0084               	movwf	4
  1089  0038  120A  118A  2446  120A  118A  	fcall	stringdir
  1090  003D  120A  118A  2470  120A  118A  	fcall	_isdigit
  1091  0042  1C03               	btfss	3,0
  1092  0043  2845               	goto	u1281
  1093  0044  2846               	goto	u1280
  1094  0045                     u1281:
  1095  0045  2886               	goto	l1555
  1096  0046                     u1280:
  1097  0046                     l1543:
  1098  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0048  01B4               	clrf	sprintf@width
  1101  0049  01B5               	clrf	sprintf@width+1
  1102  004A                     l1545:
  1103  004A  300A               	movlw	10
  1104  004B  00F3               	movwf	___wmul@multiplier
  1105  004C  3000               	movlw	0
  1106  004D  00F4               	movwf	___wmul@multiplier+1
  1107  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1108  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0050  0835               	movf	sprintf@width+1,w
  1110  0051  00F6               	movwf	___wmul@multiplicand+1
  1111  0052  0834               	movf	sprintf@width,w
  1112  0053  00F5               	movwf	___wmul@multiplicand
  1113  0054  120A  118A  2407  120A  118A  	fcall	___wmul
  1114  0059  0874               	movf	?___wmul+1,w
  1115  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1116  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1117  005C  00B5               	movwf	sprintf@width+1
  1118  005D  0873               	movf	?___wmul,w
  1119  005E  00B4               	movwf	sprintf@width
  1120  005F                     l1547:
  1121  005F  0828               	movf	sprintf@f,w
  1122  0060  0084               	movwf	4
  1123  0061  120A  118A  2446  120A  118A  	fcall	stringdir
  1124  0066  3ED0               	addlw	208
  1125  0067  00AB               	movwf	??_sprintf
  1126  0068  30FF               	movlw	255
  1127  0069  1803               	skipnc
  1128  006A  3000               	movlw	0
  1129  006B  00AC               	movwf	??_sprintf+1
  1130  006C  082B               	movf	??_sprintf,w
  1131  006D  07B4               	addwf	sprintf@width,f
  1132  006E  1803               	skipnc
  1133  006F  0AB5               	incf	sprintf@width+1,f
  1134  0070  082C               	movf	??_sprintf+1,w
  1135  0071  07B5               	addwf	sprintf@width+1,f
  1136  0072                     l1549:
  1137  0072  3001               	movlw	1
  1138  0073  00AB               	movwf	??_sprintf
  1139  0074  082B               	movf	??_sprintf,w
  1140  0075  07A8               	addwf	sprintf@f,f
  1141  0076                     l1551:
  1142  0076  0828               	movf	sprintf@f,w
  1143  0077  0084               	movwf	4
  1144  0078  120A  118A  2446  120A  118A  	fcall	stringdir
  1145  007D  120A  118A  2470  120A  118A  	fcall	_isdigit
  1146  0082  1803               	btfsc	3,0
  1147  0083  2885               	goto	u1291
  1148  0084  2886               	goto	u1290
  1149  0085                     u1291:
  1150  0085  284A               	goto	l1545
  1151  0086                     u1290:
  1152  0086                     l1555:
  1153  0086  3001               	movlw	1
  1154  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0089  07A8               	addwf	sprintf@f,f
  1157  008A  30FF               	movlw	-1
  1158  008B  0728               	addwf	sprintf@f,w
  1159  008C  0084               	movwf	4
  1160  008D  120A  118A  2446  120A  118A  	fcall	stringdir
  1161  0092  00B6               	movwf	sprintf@c
  1162  0093  00AB               	movwf	??_sprintf
  1163  0094  01AC               	clrf	??_sprintf+1
  1164                           
  1165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1166                           ; Switch size 1, requested type "simple"
  1167                           ; Number of cases is 1, Range of values is 0 to 0
  1168                           ; switch strategies available:
  1169                           ; Name         Instructions Cycles
  1170                           ; simple_byte            4     3 (average)
  1171                           ; direct_byte           11     8 (fixed)
  1172                           ; jumptable            260     6 (fixed)
  1173                           ;	Chosen strategy is simple_byte
  1174  0095  082C               	movf	??_sprintf+1,w
  1175  0096  3A00               	xorlw	0	; case 0
  1176  0097  1903               	skipnz
  1177  0098  289A               	goto	l1733
  1178  0099  298A               	goto	l1613
  1179  009A                     l1733:
  1180                           
  1181                           ; Switch size 1, requested type "simple"
  1182                           ; Number of cases is 3, Range of values is 0 to 105
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte           10     6 (average)
  1186                           ; jumptable            260     6 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188  009A  082B               	movf	??_sprintf,w
  1189  009B  3A00               	xorlw	0	; case 0
  1190  009C  1903               	skipnz
  1191  009D  299C               	goto	l1615
  1192  009E  3A64               	xorlw	100	; case 100
  1193  009F  1903               	skipnz
  1194  00A0  28A5               	goto	l1557
  1195  00A1  3A0D               	xorlw	13	; case 105
  1196  00A2  1903               	skipnz
  1197  00A3  28A5               	goto	l1557
  1198  00A4  298A               	goto	l1613
  1199  00A5                     l1557:
  1200  00A5  082E               	movf	sprintf@ap,w
  1201  00A6  0084               	movwf	4
  1202  00A7  1383               	bcf	3,7	;select IRP bank0
  1203  00A8  0800               	movf	0,w
  1204  00A9  00B1               	movwf	sprintf@val
  1205  00AA  0A84               	incf	4,f
  1206  00AB  0800               	movf	0,w
  1207  00AC  00B2               	movwf	sprintf@val+1
  1208  00AD                     l1559:
  1209  00AD  3002               	movlw	2
  1210  00AE  00AB               	movwf	??_sprintf
  1211  00AF  082B               	movf	??_sprintf,w
  1212  00B0  07AE               	addwf	sprintf@ap,f
  1213  00B1                     l1561:
  1214  00B1  1FB2               	btfss	sprintf@val+1,7
  1215  00B2  28B4               	goto	u1301
  1216  00B3  28B5               	goto	u1300
  1217  00B4                     u1301:
  1218  00B4  28BE               	goto	l1567
  1219  00B5                     u1300:
  1220  00B5                     l1563:
  1221  00B5  3003               	movlw	3
  1222  00B6  00AB               	movwf	??_sprintf
  1223  00B7  082B               	movf	??_sprintf,w
  1224  00B8  04B0               	iorwf	sprintf@flag,f
  1225  00B9                     l1565:
  1226  00B9  09B1               	comf	sprintf@val,f
  1227  00BA  09B2               	comf	sprintf@val+1,f
  1228  00BB  0AB1               	incf	sprintf@val,f
  1229  00BC  1903               	skipnz
  1230  00BD  0AB2               	incf	sprintf@val+1,f
  1231  00BE                     l1567:
  1232  00BE  01B6               	clrf	sprintf@c
  1233  00BF  0AB6               	incf	sprintf@c,f
  1234  00C0                     l1573:
  1235  00C0  0836               	movf	sprintf@c,w
  1236  00C1  00AB               	movwf	??_sprintf
  1237  00C2  072B               	addwf	??_sprintf,w
  1238  00C3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1239  00C4  0084               	movwf	4
  1240  00C5  120A  118A  2446  120A  118A  	fcall	stringdir
  1241  00CA  00AC               	movwf	??_sprintf+1
  1242  00CB  120A  118A  2446  120A  118A  	fcall	stringdir
  1243  00D0  00AD               	movwf	??_sprintf+2
  1244  00D1  082D               	movf	??_sprintf+2,w
  1245  00D2  0232               	subwf	sprintf@val+1,w
  1246  00D3  1D03               	skipz
  1247  00D4  28D7               	goto	u1315
  1248  00D5  082C               	movf	??_sprintf+1,w
  1249  00D6  0231               	subwf	sprintf@val,w
  1250  00D7                     u1315:
  1251  00D7  1803               	skipnc
  1252  00D8  28DA               	goto	u1311
  1253  00D9  28DB               	goto	u1310
  1254  00DA                     u1311:
  1255  00DA  28DC               	goto	l1577
  1256  00DB                     u1310:
  1257  00DB  28E6               	goto	l1579
  1258  00DC                     l1577:
  1259  00DC  3001               	movlw	1
  1260  00DD  00AB               	movwf	??_sprintf
  1261  00DE  082B               	movf	??_sprintf,w
  1262  00DF  07B6               	addwf	sprintf@c,f
  1263  00E0  3005               	movlw	5
  1264  00E1  0636               	xorwf	sprintf@c,w
  1265  00E2  1D03               	btfss	3,2
  1266  00E3  28E5               	goto	u1321
  1267  00E4  28E6               	goto	u1320
  1268  00E5                     u1321:
  1269  00E5  28C0               	goto	l1573
  1270  00E6                     u1320:
  1271  00E6                     l1579:
  1272  00E6  0834               	movf	sprintf@width,w
  1273  00E7  0435               	iorwf	sprintf@width+1,w
  1274  00E8  1903               	btfsc	3,2
  1275  00E9  28EB               	goto	u1331
  1276  00EA  28EC               	goto	u1330
  1277  00EB                     u1331:
  1278  00EB  28F8               	goto	l275
  1279  00EC                     u1330:
  1280  00EC                     l1581:
  1281  00EC  0830               	movf	sprintf@flag,w
  1282  00ED  3903               	andlw	3
  1283  00EE  1903               	btfsc	3,2
  1284  00EF  28F1               	goto	u1341
  1285  00F0  28F2               	goto	u1340
  1286  00F1                     u1341:
  1287  00F1  28F8               	goto	l275
  1288  00F2                     u1340:
  1289  00F2                     l1583:
  1290  00F2  30FF               	movlw	255
  1291  00F3  07B4               	addwf	sprintf@width,f
  1292  00F4  1803               	skipnc
  1293  00F5  0AB5               	incf	sprintf@width+1,f
  1294  00F6  30FF               	movlw	255
  1295  00F7  07B5               	addwf	sprintf@width+1,f
  1296  00F8                     l275:
  1297  00F8  0835               	movf	sprintf@width+1,w
  1298  00F9  3A80               	xorlw	128
  1299  00FA  3C80               	sublw	128
  1300  00FB  1D03               	skipz
  1301  00FC  28FF               	goto	u1355
  1302  00FD  0834               	movf	sprintf@width,w
  1303  00FE  0236               	subwf	sprintf@c,w
  1304  00FF                     u1355:
  1305  00FF  1803               	skipnc
  1306  0100  2902               	goto	u1351
  1307  0101  2903               	goto	u1350
  1308  0102                     u1351:
  1309  0102  290F               	goto	l1587
  1310  0103                     u1350:
  1311  0103                     l1585:
  1312  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0105  0836               	movf	sprintf@c,w
  1315  0106  00AB               	movwf	??_sprintf
  1316  0107  01AC               	clrf	??_sprintf+1
  1317  0108  082B               	movf	??_sprintf,w
  1318  0109  02B4               	subwf	sprintf@width,f
  1319  010A  082C               	movf	??_sprintf+1,w
  1320  010B  1C03               	skipc
  1321  010C  03B5               	decf	sprintf@width+1,f
  1322  010D  02B5               	subwf	sprintf@width+1,f
  1323  010E  2913               	goto	l1589
  1324  010F                     l1587:
  1325  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0111  01B4               	clrf	sprintf@width
  1328  0112  01B5               	clrf	sprintf@width+1
  1329  0113                     l1589:
  1330  0113  0834               	movf	sprintf@width,w
  1331  0114  0435               	iorwf	sprintf@width+1,w
  1332  0115  1903               	btfsc	3,2
  1333  0116  2918               	goto	u1361
  1334  0117  2919               	goto	u1360
  1335  0118                     u1361:
  1336  0118  2930               	goto	l1597
  1337  0119                     u1360:
  1338  0119                     l1591:
  1339  0119  3020               	movlw	32
  1340  011A  00AB               	movwf	??_sprintf
  1341  011B  0833               	movf	sprintf@sp,w
  1342  011C  0084               	movwf	4
  1343  011D  082B               	movf	??_sprintf,w
  1344  011E  1383               	bcf	3,7	;select IRP bank0
  1345  011F  0080               	movwf	0
  1346  0120                     l1593:
  1347  0120  3001               	movlw	1
  1348  0121  00AB               	movwf	??_sprintf
  1349  0122  082B               	movf	??_sprintf,w
  1350  0123  07B3               	addwf	sprintf@sp,f
  1351  0124                     l1595:
  1352  0124  30FF               	movlw	255
  1353  0125  07B4               	addwf	sprintf@width,f
  1354  0126  1803               	skipnc
  1355  0127  0AB5               	incf	sprintf@width+1,f
  1356  0128  30FF               	movlw	255
  1357  0129  07B5               	addwf	sprintf@width+1,f
  1358  012A  0834               	movf	sprintf@width,w
  1359  012B  0435               	iorwf	sprintf@width+1,w
  1360  012C  1D03               	btfss	3,2
  1361  012D  292F               	goto	u1371
  1362  012E  2930               	goto	u1370
  1363  012F                     u1371:
  1364  012F  2919               	goto	l1591
  1365  0130                     u1370:
  1366  0130                     l1597:
  1367  0130  0830               	movf	sprintf@flag,w
  1368  0131  3903               	andlw	3
  1369  0132  1903               	btfsc	3,2
  1370  0133  2935               	goto	u1381
  1371  0134  2936               	goto	u1380
  1372  0135                     u1381:
  1373  0135  2941               	goto	l1603
  1374  0136                     u1380:
  1375  0136                     l1599:
  1376  0136  302D               	movlw	45
  1377  0137  00AB               	movwf	??_sprintf
  1378  0138  0833               	movf	sprintf@sp,w
  1379  0139  0084               	movwf	4
  1380  013A  082B               	movf	??_sprintf,w
  1381  013B  1383               	bcf	3,7	;select IRP bank0
  1382  013C  0080               	movwf	0
  1383  013D                     l1601:
  1384  013D  3001               	movlw	1
  1385  013E  00AB               	movwf	??_sprintf
  1386  013F  082B               	movf	??_sprintf,w
  1387  0140  07B3               	addwf	sprintf@sp,f
  1388  0141                     l1603:
  1389  0141  0836               	movf	sprintf@c,w
  1390  0142  00AB               	movwf	??_sprintf
  1391  0143  082B               	movf	??_sprintf,w
  1392  0144  00AF               	movwf	sprintf@prec
  1393  0145  2981               	goto	l1611
  1394  0146                     l1605:
  1395  0146  300A               	movlw	10
  1396  0147  00A3               	movwf	___lwmod@divisor
  1397  0148  3000               	movlw	0
  1398  0149  00A4               	movwf	___lwmod@divisor+1
  1399  014A  082F               	movf	sprintf@prec,w
  1400  014B  00AB               	movwf	??_sprintf
  1401  014C  072B               	addwf	??_sprintf,w
  1402  014D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1403  014E  0084               	movwf	4
  1404  014F  120A  118A  2446  120A  118A  	fcall	stringdir
  1405  0154  00F3               	movwf	___lwdiv@divisor
  1406  0155  120A  118A  2446  120A  118A  	fcall	stringdir
  1407  015A  00F4               	movwf	___lwdiv@divisor+1
  1408  015B  0832               	movf	sprintf@val+1,w
  1409  015C  00F6               	movwf	___lwdiv@dividend+1
  1410  015D  0831               	movf	sprintf@val,w
  1411  015E  00F5               	movwf	___lwdiv@dividend
  1412  015F  120A  118A  2356  120A  118A  	fcall	___lwdiv
  1413  0164  0874               	movf	?___lwdiv+1,w
  1414  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0167  00A6               	movwf	___lwmod@dividend+1
  1417  0168  0873               	movf	?___lwdiv,w
  1418  0169  00A5               	movwf	___lwmod@dividend
  1419  016A  120A  118A  239C  120A  118A  	fcall	___lwmod
  1420  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0171  0823               	movf	?___lwmod,w
  1423  0172  3E30               	addlw	48
  1424  0173  00AC               	movwf	??_sprintf+1
  1425  0174  082C               	movf	??_sprintf+1,w
  1426  0175  00B6               	movwf	sprintf@c
  1427  0176                     l1607:
  1428  0176  0836               	movf	sprintf@c,w
  1429  0177  00AB               	movwf	??_sprintf
  1430  0178  0833               	movf	sprintf@sp,w
  1431  0179  0084               	movwf	4
  1432  017A  082B               	movf	??_sprintf,w
  1433  017B  1383               	bcf	3,7	;select IRP bank0
  1434  017C  0080               	movwf	0
  1435  017D                     l1609:
  1436  017D  3001               	movlw	1
  1437  017E  00AB               	movwf	??_sprintf
  1438  017F  082B               	movf	??_sprintf,w
  1439  0180  07B3               	addwf	sprintf@sp,f
  1440  0181                     l1611:
  1441  0181  30FF               	movlw	255
  1442  0182  00AB               	movwf	??_sprintf
  1443  0183  082B               	movf	??_sprintf,w
  1444  0184  07AF               	addwf	sprintf@prec,f
  1445  0185  0A2F               	incf	sprintf@prec,w
  1446  0186  1D03               	btfss	3,2
  1447  0187  2989               	goto	u1391
  1448  0188  298A               	goto	u1390
  1449  0189                     u1391:
  1450  0189  2946               	goto	l1605
  1451  018A                     u1390:
  1452  018A                     l1613:
  1453  018A  3001               	movlw	1
  1454  018B  07A8               	addwf	sprintf@f,f
  1455  018C  30FF               	movlw	-1
  1456  018D  0728               	addwf	sprintf@f,w
  1457  018E  0084               	movwf	4
  1458  018F  120A  118A  2446  120A  118A  	fcall	stringdir
  1459  0194  00AB               	movwf	??_sprintf
  1460  0195  082B               	movf	??_sprintf,w
  1461  0196  00B6               	movwf	sprintf@c
  1462  0197  0836               	movf	sprintf@c,w
  1463  0198  1D03               	btfss	3,2
  1464  0199  299B               	goto	u1401
  1465  019A  299C               	goto	u1400
  1466  019B                     u1401:
  1467  019B  2821               	goto	l1533
  1468  019C                     u1400:
  1469  019C                     l1615:
  1470  019C  0833               	movf	sprintf@sp,w
  1471  019D  0084               	movwf	4
  1472  019E  1383               	bcf	3,7	;select IRP bank0
  1473  019F  0180               	clrf	0
  1474  01A0                     l286:
  1475  01A0  0008               	return
  1476  01A1                     __end_of_sprintf:
  1477                           
  1478                           	psect	text3
  1479  0470                     __ptext3:	
  1480 ;; *************** function _isdigit *****************
  1481 ;; Defined at:
  1482 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  c               1    wreg     unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  c               1    4[COMMON] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         2       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0
  1499 ;;      Totals:         2       0       0       0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_sprintf
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _isdigit
  1512  0470                     _isdigit:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1516                           ;isdigit@c stored from wreg
  1517  0470  00F4               	movwf	isdigit@c
  1518  0471                     l1143:
  1519  0471  01F3               	clrf	_isdigit$791
  1520  0472                     l1145:
  1521  0472  303A               	movlw	58
  1522  0473  0274               	subwf	isdigit@c,w
  1523  0474  1803               	skipnc
  1524  0475  2C77               	goto	u581
  1525  0476  2C78               	goto	u580
  1526  0477                     u581:
  1527  0477  2C80               	goto	l1151
  1528  0478                     u580:
  1529  0478                     l1147:
  1530  0478  3030               	movlw	48
  1531  0479  0274               	subwf	isdigit@c,w
  1532  047A  1C03               	skipc
  1533  047B  2C7D               	goto	u591
  1534  047C  2C7E               	goto	u590
  1535  047D                     u591:
  1536  047D  2C80               	goto	l1151
  1537  047E                     u590:
  1538  047E                     l1149:
  1539  047E  01F3               	clrf	_isdigit$791
  1540  047F  0AF3               	incf	_isdigit$791,f
  1541  0480                     l1151:
  1542  0480  0C73               	rrf	_isdigit$791,w
  1543  0481                     l743:
  1544  0481  0008               	return
  1545  0482                     __end_of_isdigit:
  1546                           
  1547                           	psect	text4
  1548  0407                     __ptext4:	
  1549 ;; *************** function ___wmul *****************
  1550 ;; Defined at:
  1551 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  multiplier      2    3[COMMON] unsigned int 
  1554 ;;  multiplicand    2    5[COMMON] unsigned int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  product         2    7[COMMON] unsigned int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2    3[COMMON] unsigned int 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         4       0       0       0       0
  1567 ;;      Locals:         2       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         6       0       0       0       0
  1570 ;;Total ram usage:        6 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_sprintf
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function ___wmul
  1582  0407                     ___wmul:
  1583  0407                     l1155:	
  1584                           ;incstack = 0
  1585                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1586                           
  1587  0407  01F7               	clrf	___wmul@product
  1588  0408  01F8               	clrf	___wmul@product+1
  1589  0409                     l1157:
  1590  0409  1C73               	btfss	___wmul@multiplier,0
  1591  040A  2C0C               	goto	u601
  1592  040B  2C0D               	goto	u600
  1593  040C                     u601:
  1594  040C  2C13               	goto	l290
  1595  040D                     u600:
  1596  040D                     l1159:
  1597  040D  0875               	movf	___wmul@multiplicand,w
  1598  040E  07F7               	addwf	___wmul@product,f
  1599  040F  1803               	skipnc
  1600  0410  0AF8               	incf	___wmul@product+1,f
  1601  0411  0876               	movf	___wmul@multiplicand+1,w
  1602  0412  07F8               	addwf	___wmul@product+1,f
  1603  0413                     l290:
  1604  0413  3001               	movlw	1
  1605  0414                     u615:
  1606  0414  1003               	clrc
  1607  0415  0DF5               	rlf	___wmul@multiplicand,f
  1608  0416  0DF6               	rlf	___wmul@multiplicand+1,f
  1609  0417  3EFF               	addlw	-1
  1610  0418  1D03               	skipz
  1611  0419  2C14               	goto	u615
  1612  041A                     l1161:
  1613  041A  3001               	movlw	1
  1614  041B                     u625:
  1615  041B  1003               	clrc
  1616  041C  0CF4               	rrf	___wmul@multiplier+1,f
  1617  041D  0CF3               	rrf	___wmul@multiplier,f
  1618  041E  3EFF               	addlw	-1
  1619  041F  1D03               	skipz
  1620  0420  2C1B               	goto	u625
  1621  0421                     l1163:
  1622  0421  0873               	movf	___wmul@multiplier,w
  1623  0422  0474               	iorwf	___wmul@multiplier+1,w
  1624  0423  1D03               	btfss	3,2
  1625  0424  2C26               	goto	u631
  1626  0425  2C27               	goto	u630
  1627  0426                     u631:
  1628  0426  2C09               	goto	l1157
  1629  0427                     u630:
  1630  0427                     l1165:
  1631  0427  0878               	movf	___wmul@product+1,w
  1632  0428  00F4               	movwf	?___wmul+1
  1633  0429  0877               	movf	___wmul@product,w
  1634  042A  00F3               	movwf	?___wmul
  1635  042B                     l292:
  1636  042B  0008               	return
  1637  042C                     __end_of___wmul:
  1638                           
  1639                           	psect	text5
  1640  039C                     __ptext5:	
  1641 ;; *************** function ___lwmod *****************
  1642 ;; Defined at:
  1643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  divisor         2    3[BANK0 ] unsigned int 
  1646 ;;  dividend        2    5[BANK0 ] unsigned int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  counter         1    7[BANK0 ] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  2    3[BANK0 ] unsigned int 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       4       0       0       0
  1659 ;;      Locals:         0       1       0       0       0
  1660 ;;      Temps:          1       0       0       0       0
  1661 ;;      Totals:         1       5       0       0       0
  1662 ;;Total ram usage:        6 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_sprintf
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function ___lwmod
  1674  039C                     ___lwmod:
  1675  039C                     l1509:	
  1676                           ;incstack = 0
  1677                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1678                           
  1679  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1680  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1681  039E  0823               	movf	___lwmod@divisor,w
  1682  039F  0424               	iorwf	___lwmod@divisor+1,w
  1683  03A0  1903               	btfsc	3,2
  1684  03A1  2BA3               	goto	u1211
  1685  03A2  2BA4               	goto	u1210
  1686  03A3                     u1211:
  1687  03A3  2BD3               	goto	l1527
  1688  03A4                     u1210:
  1689  03A4                     l1511:
  1690  03A4  01A7               	clrf	___lwmod@counter
  1691  03A5  0AA7               	incf	___lwmod@counter,f
  1692  03A6  2BB2               	goto	l1517
  1693  03A7                     l1513:
  1694  03A7  3001               	movlw	1
  1695  03A8                     u1225:
  1696  03A8  1003               	clrc
  1697  03A9  0DA3               	rlf	___lwmod@divisor,f
  1698  03AA  0DA4               	rlf	___lwmod@divisor+1,f
  1699  03AB  3EFF               	addlw	-1
  1700  03AC  1D03               	skipz
  1701  03AD  2BA8               	goto	u1225
  1702  03AE                     l1515:
  1703  03AE  3001               	movlw	1
  1704  03AF  00F8               	movwf	??___lwmod
  1705  03B0  0878               	movf	??___lwmod,w
  1706  03B1  07A7               	addwf	___lwmod@counter,f
  1707  03B2                     l1517:
  1708  03B2  1FA4               	btfss	___lwmod@divisor+1,7
  1709  03B3  2BB5               	goto	u1231
  1710  03B4  2BB6               	goto	u1230
  1711  03B5                     u1231:
  1712  03B5  2BA7               	goto	l1513
  1713  03B6                     u1230:
  1714  03B6                     l1519:
  1715  03B6  0824               	movf	___lwmod@divisor+1,w
  1716  03B7  0226               	subwf	___lwmod@dividend+1,w
  1717  03B8  1D03               	skipz
  1718  03B9  2BBC               	goto	u1245
  1719  03BA  0823               	movf	___lwmod@divisor,w
  1720  03BB  0225               	subwf	___lwmod@dividend,w
  1721  03BC                     u1245:
  1722  03BC  1C03               	skipc
  1723  03BD  2BBF               	goto	u1241
  1724  03BE  2BC0               	goto	u1240
  1725  03BF                     u1241:
  1726  03BF  2BC6               	goto	l1523
  1727  03C0                     u1240:
  1728  03C0                     l1521:
  1729  03C0  0823               	movf	___lwmod@divisor,w
  1730  03C1  02A5               	subwf	___lwmod@dividend,f
  1731  03C2  0824               	movf	___lwmod@divisor+1,w
  1732  03C3  1C03               	skipc
  1733  03C4  03A6               	decf	___lwmod@dividend+1,f
  1734  03C5  02A6               	subwf	___lwmod@dividend+1,f
  1735  03C6                     l1523:
  1736  03C6  3001               	movlw	1
  1737  03C7                     u1255:
  1738  03C7  1003               	clrc
  1739  03C8  0CA4               	rrf	___lwmod@divisor+1,f
  1740  03C9  0CA3               	rrf	___lwmod@divisor,f
  1741  03CA  3EFF               	addlw	-1
  1742  03CB  1D03               	skipz
  1743  03CC  2BC7               	goto	u1255
  1744  03CD                     l1525:
  1745  03CD  3001               	movlw	1
  1746  03CE  02A7               	subwf	___lwmod@counter,f
  1747  03CF  1D03               	btfss	3,2
  1748  03D0  2BD2               	goto	u1261
  1749  03D1  2BD3               	goto	u1260
  1750  03D2                     u1261:
  1751  03D2  2BB6               	goto	l1519
  1752  03D3                     u1260:
  1753  03D3                     l1527:
  1754  03D3  0826               	movf	___lwmod@dividend+1,w
  1755  03D4  00A4               	movwf	?___lwmod+1
  1756  03D5  0825               	movf	___lwmod@dividend,w
  1757  03D6  00A3               	movwf	?___lwmod
  1758  03D7                     l572:
  1759  03D7  0008               	return
  1760  03D8                     __end_of___lwmod:
  1761                           
  1762                           	psect	text6
  1763  0356                     __ptext6:	
  1764 ;; *************** function ___lwdiv *****************
  1765 ;; Defined at:
  1766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  divisor         2    3[COMMON] unsigned int 
  1769 ;;  dividend        2    5[COMMON] unsigned int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  quotient        2    1[BANK0 ] unsigned int 
  1772 ;;  counter         1    0[BANK0 ] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2    3[COMMON] unsigned int 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         4       0       0       0       0
  1783 ;;      Locals:         0       3       0       0       0
  1784 ;;      Temps:          1       0       0       0       0
  1785 ;;      Totals:         5       3       0       0       0
  1786 ;;Total ram usage:        8 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_sprintf
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function ___lwdiv
  1798  0356                     ___lwdiv:
  1799  0356                     l1483:	
  1800                           ;incstack = 0
  1801                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1802                           
  1803  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0358  01A1               	clrf	___lwdiv@quotient
  1806  0359  01A2               	clrf	___lwdiv@quotient+1
  1807  035A                     l1485:
  1808  035A  0873               	movf	___lwdiv@divisor,w
  1809  035B  0474               	iorwf	___lwdiv@divisor+1,w
  1810  035C  1903               	btfsc	3,2
  1811  035D  2B5F               	goto	u1141
  1812  035E  2B60               	goto	u1140
  1813  035F                     u1141:
  1814  035F  2B97               	goto	l1505
  1815  0360                     u1140:
  1816  0360                     l1487:
  1817  0360  01A0               	clrf	___lwdiv@counter
  1818  0361  0AA0               	incf	___lwdiv@counter,f
  1819  0362  2B6E               	goto	l1493
  1820  0363                     l1489:
  1821  0363  3001               	movlw	1
  1822  0364                     u1155:
  1823  0364  1003               	clrc
  1824  0365  0DF3               	rlf	___lwdiv@divisor,f
  1825  0366  0DF4               	rlf	___lwdiv@divisor+1,f
  1826  0367  3EFF               	addlw	-1
  1827  0368  1D03               	skipz
  1828  0369  2B64               	goto	u1155
  1829  036A                     l1491:
  1830  036A  3001               	movlw	1
  1831  036B  00F7               	movwf	??___lwdiv
  1832  036C  0877               	movf	??___lwdiv,w
  1833  036D  07A0               	addwf	___lwdiv@counter,f
  1834  036E                     l1493:
  1835  036E  1FF4               	btfss	___lwdiv@divisor+1,7
  1836  036F  2B71               	goto	u1161
  1837  0370  2B72               	goto	u1160
  1838  0371                     u1161:
  1839  0371  2B63               	goto	l1489
  1840  0372                     u1160:
  1841  0372                     l1495:
  1842  0372  3001               	movlw	1
  1843  0373                     u1175:
  1844  0373  1003               	clrc
  1845  0374  0DA1               	rlf	___lwdiv@quotient,f
  1846  0375  0DA2               	rlf	___lwdiv@quotient+1,f
  1847  0376  3EFF               	addlw	-1
  1848  0377  1D03               	skipz
  1849  0378  2B73               	goto	u1175
  1850  0379  0874               	movf	___lwdiv@divisor+1,w
  1851  037A  0276               	subwf	___lwdiv@dividend+1,w
  1852  037B  1D03               	skipz
  1853  037C  2B7F               	goto	u1185
  1854  037D  0873               	movf	___lwdiv@divisor,w
  1855  037E  0275               	subwf	___lwdiv@dividend,w
  1856  037F                     u1185:
  1857  037F  1C03               	skipc
  1858  0380  2B82               	goto	u1181
  1859  0381  2B83               	goto	u1180
  1860  0382                     u1181:
  1861  0382  2B8A               	goto	l1501
  1862  0383                     u1180:
  1863  0383                     l1497:
  1864  0383  0873               	movf	___lwdiv@divisor,w
  1865  0384  02F5               	subwf	___lwdiv@dividend,f
  1866  0385  0874               	movf	___lwdiv@divisor+1,w
  1867  0386  1C03               	skipc
  1868  0387  03F6               	decf	___lwdiv@dividend+1,f
  1869  0388  02F6               	subwf	___lwdiv@dividend+1,f
  1870  0389                     l1499:
  1871  0389  1421               	bsf	___lwdiv@quotient,0
  1872  038A                     l1501:
  1873  038A  3001               	movlw	1
  1874  038B                     u1195:
  1875  038B  1003               	clrc
  1876  038C  0CF4               	rrf	___lwdiv@divisor+1,f
  1877  038D  0CF3               	rrf	___lwdiv@divisor,f
  1878  038E  3EFF               	addlw	-1
  1879  038F  1D03               	skipz
  1880  0390  2B8B               	goto	u1195
  1881  0391                     l1503:
  1882  0391  3001               	movlw	1
  1883  0392  02A0               	subwf	___lwdiv@counter,f
  1884  0393  1D03               	btfss	3,2
  1885  0394  2B96               	goto	u1201
  1886  0395  2B97               	goto	u1200
  1887  0396                     u1201:
  1888  0396  2B72               	goto	l1495
  1889  0397                     u1200:
  1890  0397                     l1505:
  1891  0397  0822               	movf	___lwdiv@quotient+1,w
  1892  0398  00F4               	movwf	?___lwdiv+1
  1893  0399  0821               	movf	___lwdiv@quotient,w
  1894  039A  00F3               	movwf	?___lwdiv
  1895  039B                     l562:
  1896  039B  0008               	return
  1897  039C                     __end_of___lwdiv:
  1898                           
  1899                           	psect	text7
  1900  02E3                     __ptext7:	
  1901 ;; *************** function _USART_Initialize *****************
  1902 ;; Defined at:
  1903 ;;		line 13 in file "usart.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  baudrate        4   14[BANK0 ] const long 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  x               4    4[COMMON] long 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       4       0       0       0
  1918 ;;      Locals:         4       0       0       0       0
  1919 ;;      Temps:          0      12       0       0       0
  1920 ;;      Totals:         4      16       0       0       0
  1921 ;;Total ram usage:       20 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    2
  1924 ;; This function calls:
  1925 ;;		___aldiv
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _USART_Initialize
  1933  02E3                     _USART_Initialize:
  1934  02E3                     l1663:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1937                           
  1938                           
  1939                           ;usart.c: 14:     long int x;;usart.c: 17:     TXSTAbits.TX9 = 0;
  1940  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1941  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1942  02E5  1318               	bcf	24,6	;volatile
  1943                           
  1944                           ;usart.c: 19:     TXSTAbits.TXEN = 1;
  1945  02E6  1698               	bsf	24,5	;volatile
  1946                           
  1947                           ;usart.c: 21:     TXSTAbits.SYNC = 0;
  1948  02E7  1218               	bcf	24,4	;volatile
  1949                           
  1950                           ;usart.c: 23:     TXSTAbits.BRGH = 0;
  1951  02E8  1118               	bcf	24,2	;volatile
  1952                           
  1953                           ;usart.c: 24:     BAUDCTLbits.BRG16 = 0;
  1954  02E9  1683               	bsf	3,5	;RP0=1, select bank3
  1955  02EA  1703               	bsf	3,6	;RP1=1, select bank3
  1956  02EB  1187               	bcf	7,3	;volatile
  1957                           
  1958                           ;usart.c: 27:     RCSTAbits.SPEN = 1;
  1959  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1960  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1961  02EE  1798               	bsf	24,7	;volatile
  1962                           
  1963                           ;usart.c: 29:     RCSTAbits.CREN = 1;
  1964  02EF  1618               	bsf	24,4	;volatile
  1965  02F0                     l1665:
  1966                           
  1967                           ;usart.c: 31:     x = (8000000 - baudrate*64)/(baudrate*64);
  1968  02F0  082E               	movf	USART_Initialize@baudrate,w
  1969  02F1  00B2               	movwf	??_USART_Initialize
  1970  02F2  082F               	movf	USART_Initialize@baudrate+1,w
  1971  02F3  00B3               	movwf	??_USART_Initialize+1
  1972  02F4  0830               	movf	USART_Initialize@baudrate+2,w
  1973  02F5  00B4               	movwf	??_USART_Initialize+2
  1974  02F6  0831               	movf	USART_Initialize@baudrate+3,w
  1975  02F7  00B5               	movwf	??_USART_Initialize+3
  1976  02F8  3006               	movlw	6
  1977  02F9                     u1515:
  1978  02F9  1003               	clrc
  1979  02FA  0DB2               	rlf	??_USART_Initialize,f
  1980  02FB  0DB3               	rlf	??_USART_Initialize+1,f
  1981  02FC  0DB4               	rlf	??_USART_Initialize+2,f
  1982  02FD  0DB5               	rlf	??_USART_Initialize+3,f
  1983  02FE                     u1510:
  1984  02FE  3EFF               	addlw	-1
  1985  02FF  1D03               	skipz
  1986  0300  2AF9               	goto	u1515
  1987  0301  0835               	movf	??_USART_Initialize+3,w
  1988  0302  00A3               	movwf	___aldiv@divisor+3
  1989  0303  0834               	movf	??_USART_Initialize+2,w
  1990  0304  00A2               	movwf	___aldiv@divisor+2
  1991  0305  0833               	movf	??_USART_Initialize+1,w
  1992  0306  00A1               	movwf	___aldiv@divisor+1
  1993  0307  0832               	movf	??_USART_Initialize,w
  1994  0308  00A0               	movwf	___aldiv@divisor
  1995  0309  082E               	movf	USART_Initialize@baudrate,w
  1996  030A  00B6               	movwf	??_USART_Initialize+4
  1997  030B  082F               	movf	USART_Initialize@baudrate+1,w
  1998  030C  00B7               	movwf	??_USART_Initialize+5
  1999  030D  0830               	movf	USART_Initialize@baudrate+2,w
  2000  030E  00B8               	movwf	??_USART_Initialize+6
  2001  030F  0831               	movf	USART_Initialize@baudrate+3,w
  2002  0310  00B9               	movwf	??_USART_Initialize+7
  2003  0311  3006               	movlw	6
  2004  0312                     u1525:
  2005  0312  1003               	clrc
  2006  0313  0DB6               	rlf	??_USART_Initialize+4,f
  2007  0314  0DB7               	rlf	??_USART_Initialize+5,f
  2008  0315  0DB8               	rlf	??_USART_Initialize+6,f
  2009  0316  0DB9               	rlf	??_USART_Initialize+7,f
  2010  0317                     u1520:
  2011  0317  3EFF               	addlw	-1
  2012  0318  1D03               	skipz
  2013  0319  2B12               	goto	u1525
  2014  031A  3000               	movlw	0
  2015  031B  00BA               	movwf	??_USART_Initialize+8
  2016  031C  3012               	movlw	18
  2017  031D  00BB               	movwf	??_USART_Initialize+9
  2018  031E  307A               	movlw	122
  2019  031F  00BC               	movwf	??_USART_Initialize+10
  2020  0320  3000               	movlw	0
  2021  0321  00BD               	movwf	??_USART_Initialize+11
  2022  0322  0836               	movf	??_USART_Initialize+4,w
  2023  0323  02BA               	subwf	??_USART_Initialize+8,f
  2024  0324  0837               	movf	??_USART_Initialize+5,w
  2025  0325  1C03               	skipc
  2026  0326  0F37               	incfsz	??_USART_Initialize+5,w
  2027  0327  2B29               	goto	u1531
  2028  0328  2B2A               	goto	u1532
  2029  0329                     u1531:
  2030  0329  02BB               	subwf	??_USART_Initialize+9,f
  2031  032A                     u1532:
  2032  032A  0838               	movf	??_USART_Initialize+6,w
  2033  032B  1C03               	skipc
  2034  032C  0F38               	incfsz	??_USART_Initialize+6,w
  2035  032D  2B2F               	goto	u1533
  2036  032E  2B30               	goto	u1534
  2037  032F                     u1533:
  2038  032F  02BC               	subwf	??_USART_Initialize+10,f
  2039  0330                     u1534:
  2040  0330  0839               	movf	??_USART_Initialize+7,w
  2041  0331  1C03               	skipc
  2042  0332  0F39               	incfsz	??_USART_Initialize+7,w
  2043  0333  2B35               	goto	u1535
  2044  0334  2B36               	goto	u1536
  2045  0335                     u1535:
  2046  0335  02BD               	subwf	??_USART_Initialize+11,f
  2047  0336                     u1536:
  2048  0336  083D               	movf	??_USART_Initialize+11,w
  2049  0337  00A7               	movwf	___aldiv@dividend+3
  2050  0338  083C               	movf	??_USART_Initialize+10,w
  2051  0339  00A6               	movwf	___aldiv@dividend+2
  2052  033A  083B               	movf	??_USART_Initialize+9,w
  2053  033B  00A5               	movwf	___aldiv@dividend+1
  2054  033C  083A               	movf	??_USART_Initialize+8,w
  2055  033D  00A4               	movwf	___aldiv@dividend
  2056  033E  120A  118A  2246  120A  118A  	fcall	___aldiv
  2057  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0345  0823               	movf	?___aldiv+3,w
  2060  0346  00F7               	movwf	USART_Initialize@x+3
  2061  0347  0822               	movf	?___aldiv+2,w
  2062  0348  00F6               	movwf	USART_Initialize@x+2
  2063  0349  0821               	movf	?___aldiv+1,w
  2064  034A  00F5               	movwf	USART_Initialize@x+1
  2065  034B  0820               	movf	?___aldiv,w
  2066  034C  00F4               	movwf	USART_Initialize@x
  2067  034D                     l1667:
  2068                           
  2069                           ;usart.c: 32:     SPBRG = x;
  2070  034D  0874               	movf	USART_Initialize@x,w
  2071  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2072  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2073  0350  0099               	movwf	25	;volatile
  2074  0351                     l1669:
  2075                           
  2076                           ;usart.c: 35:     INTCONbits.GIE = 1;
  2077  0351  178B               	bsf	11,7	;volatile
  2078  0352                     l1671:
  2079                           
  2080                           ;usart.c: 37:     INTCONbits.PEIE = 1;
  2081  0352  170B               	bsf	11,6	;volatile
  2082  0353                     l1673:
  2083                           
  2084                           ;usart.c: 40:     PIE1bits.RCIE = 1;
  2085  0353  168C               	bsf	12,5	;volatile
  2086  0354                     l1675:
  2087                           
  2088                           ;usart.c: 42:     PIE1bits.TXIE = 1;
  2089  0354  160C               	bsf	12,4	;volatile
  2090  0355                     l15:
  2091  0355  0008               	return
  2092  0356                     __end_of_USART_Initialize:
  2093                           
  2094                           	psect	text8
  2095  0246                     __ptext8:	
  2096 ;; *************** function ___aldiv *****************
  2097 ;; Defined at:
  2098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  divisor         4    0[BANK0 ] long 
  2101 ;;  dividend        4    4[BANK0 ] long 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  quotient        4   10[BANK0 ] long 
  2104 ;;  sign            1    9[BANK0 ] unsigned char 
  2105 ;;  counter         1    8[BANK0 ] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  4    0[BANK0 ] long 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2115 ;;      Params:         0       8       0       0       0
  2116 ;;      Locals:         0       6       0       0       0
  2117 ;;      Temps:          1       0       0       0       0
  2118 ;;      Totals:         1      14       0       0       0
  2119 ;;Total ram usage:       15 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_USART_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function ___aldiv
  2131  0246                     ___aldiv:
  2132  0246                     l1623:	
  2133                           ;incstack = 0
  2134                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2135                           
  2136  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0248  01A9               	clrf	___aldiv@sign
  2139  0249                     l1625:
  2140  0249  1FA3               	btfss	___aldiv@divisor+3,7
  2141  024A  2A4C               	goto	u1411
  2142  024B  2A4D               	goto	u1410
  2143  024C                     u1411:
  2144  024C  2A5A               	goto	l355
  2145  024D                     u1410:
  2146  024D                     l1627:
  2147  024D  09A0               	comf	___aldiv@divisor,f
  2148  024E  09A1               	comf	___aldiv@divisor+1,f
  2149  024F  09A2               	comf	___aldiv@divisor+2,f
  2150  0250  09A3               	comf	___aldiv@divisor+3,f
  2151  0251  0AA0               	incf	___aldiv@divisor,f
  2152  0252  1903               	skipnz
  2153  0253  0AA1               	incf	___aldiv@divisor+1,f
  2154  0254  1903               	skipnz
  2155  0255  0AA2               	incf	___aldiv@divisor+2,f
  2156  0256  1903               	skipnz
  2157  0257  0AA3               	incf	___aldiv@divisor+3,f
  2158  0258  01A9               	clrf	___aldiv@sign
  2159  0259  0AA9               	incf	___aldiv@sign,f
  2160  025A                     l355:
  2161  025A  1FA7               	btfss	___aldiv@dividend+3,7
  2162  025B  2A5D               	goto	u1421
  2163  025C  2A5E               	goto	u1420
  2164  025D                     u1421:
  2165  025D  2A6D               	goto	l1633
  2166  025E                     u1420:
  2167  025E                     l1629:
  2168  025E  09A4               	comf	___aldiv@dividend,f
  2169  025F  09A5               	comf	___aldiv@dividend+1,f
  2170  0260  09A6               	comf	___aldiv@dividend+2,f
  2171  0261  09A7               	comf	___aldiv@dividend+3,f
  2172  0262  0AA4               	incf	___aldiv@dividend,f
  2173  0263  1903               	skipnz
  2174  0264  0AA5               	incf	___aldiv@dividend+1,f
  2175  0265  1903               	skipnz
  2176  0266  0AA6               	incf	___aldiv@dividend+2,f
  2177  0267  1903               	skipnz
  2178  0268  0AA7               	incf	___aldiv@dividend+3,f
  2179  0269                     l1631:
  2180  0269  3001               	movlw	1
  2181  026A  00F3               	movwf	??___aldiv
  2182  026B  0873               	movf	??___aldiv,w
  2183  026C  06A9               	xorwf	___aldiv@sign,f
  2184  026D                     l1633:
  2185  026D  3000               	movlw	0
  2186  026E  00AD               	movwf	___aldiv@quotient+3
  2187  026F  3000               	movlw	0
  2188  0270  00AC               	movwf	___aldiv@quotient+2
  2189  0271  3000               	movlw	0
  2190  0272  00AB               	movwf	___aldiv@quotient+1
  2191  0273  3000               	movlw	0
  2192  0274  00AA               	movwf	___aldiv@quotient
  2193  0275                     l1635:
  2194  0275  0823               	movf	___aldiv@divisor+3,w
  2195  0276  0422               	iorwf	___aldiv@divisor+2,w
  2196  0277  0421               	iorwf	___aldiv@divisor+1,w
  2197  0278  0420               	iorwf	___aldiv@divisor,w
  2198  0279  1903               	skipnz
  2199  027A  2A7C               	goto	u1431
  2200  027B  2A7D               	goto	u1430
  2201  027C                     u1431:
  2202  027C  2ACA               	goto	l1655
  2203  027D                     u1430:
  2204  027D                     l1637:
  2205  027D  01A8               	clrf	___aldiv@counter
  2206  027E  0AA8               	incf	___aldiv@counter,f
  2207  027F  2A8D               	goto	l1641
  2208  0280                     l1639:
  2209  0280  3001               	movlw	1
  2210  0281  00F3               	movwf	??___aldiv
  2211  0282                     u1445:
  2212  0282  1003               	clrc
  2213  0283  0DA0               	rlf	___aldiv@divisor,f
  2214  0284  0DA1               	rlf	___aldiv@divisor+1,f
  2215  0285  0DA2               	rlf	___aldiv@divisor+2,f
  2216  0286  0DA3               	rlf	___aldiv@divisor+3,f
  2217  0287  0BF3               	decfsz	??___aldiv,f
  2218  0288  2A82               	goto	u1445
  2219  0289  3001               	movlw	1
  2220  028A  00F3               	movwf	??___aldiv
  2221  028B  0873               	movf	??___aldiv,w
  2222  028C  07A8               	addwf	___aldiv@counter,f
  2223  028D                     l1641:
  2224  028D  1FA3               	btfss	___aldiv@divisor+3,7
  2225  028E  2A90               	goto	u1451
  2226  028F  2A91               	goto	u1450
  2227  0290                     u1451:
  2228  0290  2A80               	goto	l1639
  2229  0291                     u1450:
  2230  0291                     l1643:
  2231  0291  3001               	movlw	1
  2232  0292  00F3               	movwf	??___aldiv
  2233  0293                     u1465:
  2234  0293  1003               	clrc
  2235  0294  0DAA               	rlf	___aldiv@quotient,f
  2236  0295  0DAB               	rlf	___aldiv@quotient+1,f
  2237  0296  0DAC               	rlf	___aldiv@quotient+2,f
  2238  0297  0DAD               	rlf	___aldiv@quotient+3,f
  2239  0298  0BF3               	decfsz	??___aldiv,f
  2240  0299  2A93               	goto	u1465
  2241  029A                     l1645:
  2242  029A  0823               	movf	___aldiv@divisor+3,w
  2243  029B  0227               	subwf	___aldiv@dividend+3,w
  2244  029C  1D03               	skipz
  2245  029D  2AA8               	goto	u1475
  2246  029E  0822               	movf	___aldiv@divisor+2,w
  2247  029F  0226               	subwf	___aldiv@dividend+2,w
  2248  02A0  1D03               	skipz
  2249  02A1  2AA8               	goto	u1475
  2250  02A2  0821               	movf	___aldiv@divisor+1,w
  2251  02A3  0225               	subwf	___aldiv@dividend+1,w
  2252  02A4  1D03               	skipz
  2253  02A5  2AA8               	goto	u1475
  2254  02A6  0820               	movf	___aldiv@divisor,w
  2255  02A7  0224               	subwf	___aldiv@dividend,w
  2256  02A8                     u1475:
  2257  02A8  1C03               	skipc
  2258  02A9  2AAB               	goto	u1471
  2259  02AA  2AAC               	goto	u1470
  2260  02AB                     u1471:
  2261  02AB  2ABB               	goto	l1651
  2262  02AC                     u1470:
  2263  02AC                     l1647:
  2264  02AC  0820               	movf	___aldiv@divisor,w
  2265  02AD  02A4               	subwf	___aldiv@dividend,f
  2266  02AE  0821               	movf	___aldiv@divisor+1,w
  2267  02AF  1C03               	skipc
  2268  02B0  0F21               	incfsz	___aldiv@divisor+1,w
  2269  02B1  02A5               	subwf	___aldiv@dividend+1,f
  2270  02B2  0822               	movf	___aldiv@divisor+2,w
  2271  02B3  1C03               	skipc
  2272  02B4  0F22               	incfsz	___aldiv@divisor+2,w
  2273  02B5  02A6               	subwf	___aldiv@dividend+2,f
  2274  02B6  0823               	movf	___aldiv@divisor+3,w
  2275  02B7  1C03               	skipc
  2276  02B8  0F23               	incfsz	___aldiv@divisor+3,w
  2277  02B9  02A7               	subwf	___aldiv@dividend+3,f
  2278  02BA                     l1649:
  2279  02BA  142A               	bsf	___aldiv@quotient,0
  2280  02BB                     l1651:
  2281  02BB  3001               	movlw	1
  2282  02BC                     u1485:
  2283  02BC  1003               	clrc
  2284  02BD  0CA3               	rrf	___aldiv@divisor+3,f
  2285  02BE  0CA2               	rrf	___aldiv@divisor+2,f
  2286  02BF  0CA1               	rrf	___aldiv@divisor+1,f
  2287  02C0  0CA0               	rrf	___aldiv@divisor,f
  2288  02C1  3EFF               	addlw	-1
  2289  02C2  1D03               	skipz
  2290  02C3  2ABC               	goto	u1485
  2291  02C4                     l1653:
  2292  02C4  3001               	movlw	1
  2293  02C5  02A8               	subwf	___aldiv@counter,f
  2294  02C6  1D03               	btfss	3,2
  2295  02C7  2AC9               	goto	u1491
  2296  02C8  2ACA               	goto	u1490
  2297  02C9                     u1491:
  2298  02C9  2A91               	goto	l1643
  2299  02CA                     u1490:
  2300  02CA                     l1655:
  2301  02CA  0829               	movf	___aldiv@sign,w
  2302  02CB  1903               	btfsc	3,2
  2303  02CC  2ACE               	goto	u1501
  2304  02CD  2ACF               	goto	u1500
  2305  02CE                     u1501:
  2306  02CE  2ADA               	goto	l1659
  2307  02CF                     u1500:
  2308  02CF                     l1657:
  2309  02CF  09AA               	comf	___aldiv@quotient,f
  2310  02D0  09AB               	comf	___aldiv@quotient+1,f
  2311  02D1  09AC               	comf	___aldiv@quotient+2,f
  2312  02D2  09AD               	comf	___aldiv@quotient+3,f
  2313  02D3  0AAA               	incf	___aldiv@quotient,f
  2314  02D4  1903               	skipnz
  2315  02D5  0AAB               	incf	___aldiv@quotient+1,f
  2316  02D6  1903               	skipnz
  2317  02D7  0AAC               	incf	___aldiv@quotient+2,f
  2318  02D8  1903               	skipnz
  2319  02D9  0AAD               	incf	___aldiv@quotient+3,f
  2320  02DA                     l1659:
  2321  02DA  082D               	movf	___aldiv@quotient+3,w
  2322  02DB  00A3               	movwf	?___aldiv+3
  2323  02DC  082C               	movf	___aldiv@quotient+2,w
  2324  02DD  00A2               	movwf	?___aldiv+2
  2325  02DE  082B               	movf	___aldiv@quotient+1,w
  2326  02DF  00A1               	movwf	?___aldiv+1
  2327  02E0  082A               	movf	___aldiv@quotient,w
  2328  02E1  00A0               	movwf	?___aldiv
  2329  02E2                     l365:
  2330  02E2  0008               	return
  2331  02E3                     __end_of___aldiv:
  2332                           
  2333                           	psect	text9
  2334  04A0                     __ptext9:	
  2335 ;; *************** function _Setup *****************
  2336 ;; Defined at:
  2337 ;;		line 53 in file "MASTER.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		status,2
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _Setup
  2367  04A0                     _Setup:
  2368  04A0                     l1365:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _Setup: [status,2]
  2371                           
  2372                           
  2373                           ;MASTER.c: 55:     ANSEL = 0b00000000;
  2374  04A0  1683               	bsf	3,5	;RP0=1, select bank3
  2375  04A1  1703               	bsf	3,6	;RP1=1, select bank3
  2376  04A2  0188               	clrf	8	;volatile
  2377                           
  2378                           ;MASTER.c: 56:     ANSELH = 0b00000000;
  2379  04A3  0189               	clrf	9	;volatile
  2380                           
  2381                           ;MASTER.c: 57:     TRISE= 0b00000000;
  2382  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2383  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2384  04A6  0189               	clrf	9	;volatile
  2385                           
  2386                           ;MASTER.c: 59:     PORTE = 0;
  2387  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2388  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2389  04A9  0189               	clrf	9	;volatile
  2390                           
  2391                           ;MASTER.c: 60:     PORTC = 0;
  2392  04AA  0187               	clrf	7	;volatile
  2393  04AB                     l64:
  2394  04AB  0008               	return
  2395  04AC                     __end_of_Setup:
  2396                           
  2397                           	psect	text10
  2398  0493                     __ptext10:	
  2399 ;; *************** function _I2C_stop *****************
  2400 ;; Defined at:
  2401 ;;		line 45 in file "I2C.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    2
  2422 ;; This function calls:
  2423 ;;		_I2C_sleep
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _I2C_stop
  2431  0493                     _I2C_stop:
  2432  0493                     l1395:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _I2C_stop: [status,2+status,0+pclath+cstack]
  2435                           
  2436                           
  2437                           ;I2C.c: 46:     I2C_sleep();
  2438  0493  120A  118A  24C8  120A  118A  	fcall	_I2C_sleep
  2439  0498                     l1397:
  2440                           
  2441                           ;I2C.c: 47:     PEN = 1;
  2442  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2444  049A  1511               	bsf	17,2	;volatile
  2445  049B                     l150:	
  2446                           ;I2C.c: 48:     while(PEN);
  2447                           
  2448  049B  1911               	btfsc	17,2	;volatile
  2449  049C  2C9E               	goto	u1091
  2450  049D  2C9F               	goto	u1090
  2451  049E                     u1091:
  2452  049E  2C9B               	goto	l150
  2453  049F                     u1090:
  2454  049F                     l153:
  2455  049F  0008               	return
  2456  04A0                     __end_of_I2C_stop:
  2457                           
  2458                           	psect	text11
  2459  04C0                     __ptext11:	
  2460 ;; *************** function _I2C_rstart *****************
  2461 ;; Defined at:
  2462 ;;		line 35 in file "I2C.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		None
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _I2C_rstart
  2492  04C0                     _I2C_rstart:
  2493  04C0                     l1381:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _I2C_rstart: []
  2496                           
  2497                           
  2498                           ;I2C.c: 36:     RSEN = 1;
  2499  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2500  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  2501  04C2  1491               	bsf	17,1	;volatile
  2502  04C3                     l138:	
  2503                           ;I2C.c: 37:     while(RSEN);
  2504                           
  2505  04C3  1891               	btfsc	17,1	;volatile
  2506  04C4  2CC6               	goto	u1051
  2507  04C5  2CC7               	goto	u1050
  2508  04C6                     u1051:
  2509  04C6  2CC3               	goto	l138
  2510  04C7                     u1050:
  2511  04C7                     l141:
  2512  04C7  0008               	return
  2513  04C8                     __end_of_I2C_rstart:
  2514                           
  2515                           	psect	text12
  2516  042C                     __ptext12:	
  2517 ;; *************** function _I2C_init *****************
  2518 ;; Defined at:
  2519 ;;		line 12 in file "I2C.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    1
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _I2C_init
  2549  042C                     _I2C_init:
  2550  042C                     l1369:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _I2C_init: [wreg+status,2]
  2553                           
  2554                           
  2555                           ;I2C.c: 13:     TRISC3 = 1;
  2556  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2557  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2558  042E  1587               	bsf	7,3	;volatile
  2559                           
  2560                           ;I2C.c: 14:     TRISC4 = 1;
  2561  042F  1607               	bsf	7,4	;volatile
  2562  0430                     l1371:
  2563                           
  2564                           ;I2C.c: 15:     SSPBUF = 0x00;
  2565  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0432  0193               	clrf	19	;volatile
  2568  0433                     l1373:
  2569                           
  2570                           ;I2C.c: 16:     SSPSTAT = 0xc0;
  2571  0433  30C0               	movlw	192
  2572  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2574  0436  0094               	movwf	20	;volatile
  2575  0437                     l1375:
  2576                           
  2577                           ;I2C.c: 17:     SSPCON = 0X28;
  2578  0437  3028               	movlw	40
  2579  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2581  043A  0094               	movwf	20	;volatile
  2582                           
  2583                           ;I2C.c: 18:     SSPCON2 = 0x00;
  2584  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2585  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2586  043D  0191               	clrf	17	;volatile
  2587  043E                     l1377:
  2588                           
  2589                           ;I2C.c: 19:     SSPIF = 0;
  2590  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2591  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0440  118C               	bcf	12,3	;volatile
  2593  0441                     l1379:
  2594                           
  2595                           ;I2C.c: 20:     SSPADD = 9;
  2596  0441  3009               	movlw	9
  2597  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0444  0093               	movwf	19	;volatile
  2600  0445                     l123:
  2601  0445  0008               	return
  2602  0446                     __end_of_I2C_init:
  2603                           
  2604                           	psect	text13
  2605  0482                     __ptext13:	
  2606 ;; *************** function _I2C_TX *****************
  2607 ;; Defined at:
  2608 ;;		line 58 in file "I2C.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  c               1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  c               1    3[COMMON] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_I2C_sleep
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _I2C_TX
  2638  0482                     _I2C_TX:
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _I2C_TX: [wreg+status,2+status,0+pclath+cstack]
  2642                           ;I2C_TX@c stored from wreg
  2643  0482  00F3               	movwf	I2C_TX@c
  2644  0483                     l1383:
  2645                           
  2646                           ;I2C.c: 59:     SSPBUF = c;
  2647  0483  0873               	movf	I2C_TX@c,w
  2648  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0486  0093               	movwf	19	;volatile
  2651  0487                     l162:	
  2652                           ;I2C.c: 60:     while(BF);
  2653                           
  2654  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2655  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2656  0489  1814               	btfsc	20,0	;volatile
  2657  048A  2C8C               	goto	u1061
  2658  048B  2C8D               	goto	u1060
  2659  048C                     u1061:
  2660  048C  2C87               	goto	l162
  2661  048D                     u1060:
  2662  048D                     l1385:
  2663                           
  2664                           ;I2C.c: 61:     I2C_sleep();
  2665  048D  120A  118A  24C8  120A  118A  	fcall	_I2C_sleep
  2666  0492                     l165:
  2667  0492  0008               	return
  2668  0493                     __end_of_I2C_TX:
  2669                           
  2670                           	psect	text14
  2671  04C8                     __ptext14:	
  2672 ;; *************** function _I2C_sleep *****************
  2673 ;; Defined at:
  2674 ;;		line 29 in file "I2C.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;;		_I2C_stop
  2700 ;;		_I2C_TX
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _I2C_sleep
  2706  04C8                     _I2C_sleep:
  2707  04C8                     l1309:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _I2C_sleep: []
  2710                           
  2711  04C8                     l132:	
  2712                           ;I2C.c: 30:    while (SSPIF ==0);
  2713                           
  2714  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2715  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2716  04CA  1D8C               	btfss	12,3	;volatile
  2717  04CB  2CCD               	goto	u911
  2718  04CC  2CCE               	goto	u910
  2719  04CD                     u911:
  2720  04CD  2CC8               	goto	l132
  2721  04CE                     u910:
  2722  04CE                     l134:
  2723                           
  2724                           ;I2C.c: 31:    SSPIF = 0;
  2725  04CE  118C               	bcf	12,3	;volatile
  2726  04CF                     l135:
  2727  04CF  0008               	return
  2728  04D0                     __end_of_I2C_sleep:
  2729                           
  2730                           	psect	text15
  2731  04AC                     __ptext15:	
  2732 ;; *************** function _I2C_RX *****************
  2733 ;; Defined at:
  2734 ;;		line 51 in file "I2C.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _I2C_RX
  2764  04AC                     _I2C_RX:
  2765  04AC                     l1387:	
  2766                           ;incstack = 0
  2767                           ; Regs used in _I2C_RX: [wreg]
  2768                           
  2769                           
  2770                           ;I2C.c: 52:     RCEN = 1;
  2771  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2772  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2773  04AE  1591               	bsf	17,3	;volatile
  2774  04AF                     l156:	
  2775                           ;I2C.c: 53:     while(!BF);
  2776                           
  2777  04AF  1C14               	btfss	20,0	;volatile
  2778  04B0  2CB2               	goto	u1071
  2779  04B1  2CB3               	goto	u1070
  2780  04B2                     u1071:
  2781  04B2  2CAF               	goto	l156
  2782  04B3                     u1070:
  2783  04B3                     l1389:
  2784                           
  2785                           ;I2C.c: 54:     return SSPBUF;
  2786  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2787  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2788  04B5  0813               	movf	19,w	;volatile
  2789  04B6                     l159:
  2790  04B6  0008               	return
  2791  04B7                     __end_of_I2C_RX:
  2792                           
  2793                           	psect	text16
  2794  04B7                     __ptext16:	
  2795 ;; *************** function _I2C_NACK *****************
  2796 ;; Defined at:
  2797 ;;		line 40 in file "I2C.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		None
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _I2C_NACK
  2827  04B7                     _I2C_NACK:
  2828  04B7                     l1393:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _I2C_NACK: []
  2831                           
  2832                           
  2833                           ;I2C.c: 41:     ACKDT = 1;
  2834  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2835  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2836  04B9  1691               	bsf	17,5	;volatile
  2837                           
  2838                           ;I2C.c: 42:     ACKEN =1;
  2839  04BA  1611               	bsf	17,4	;volatile
  2840  04BB                     l144:	
  2841                           ;I2C.c: 43:     while(ACKEN);
  2842                           
  2843  04BB  1A11               	btfsc	17,4	;volatile
  2844  04BC  2CBE               	goto	u1081
  2845  04BD  2CBF               	goto	u1080
  2846  04BE                     u1081:
  2847  04BE  2CBB               	goto	l144
  2848  04BF                     u1080:
  2849  04BF                     l147:
  2850  04BF  0008               	return
  2851  04C0                     __end_of_I2C_NACK:
  2852                           
  2853                           	psect	text17
  2854  03D8                     __ptext17:	
  2855 ;; *************** function _myISR *****************
  2856 ;; Defined at:
  2857 ;;		line 68 in file "MASTER.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0
  2873 ;;      Temps:          3       0       0       0       0
  2874 ;;      Totals:         3       0       0       0       0
  2875 ;;Total ram usage:        3 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		Interrupt level 1
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _myISR
  2886  03D8                     _myISR:
  2887  03D8                     i1l1399:
  2888                           
  2889                           ;MASTER.c: 71:         leds = RCREG;
  2890  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2891  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2892  03DA  081A               	movf	26,w	;volatile
  2893  03DB  00F0               	movwf	??_myISR
  2894  03DC  0870               	movf	??_myISR,w
  2895  03DD  00F9               	movwf	_leds
  2896  03DE                     i1l1401:
  2897                           
  2898                           ;MASTER.c: 74:     if (leds == 1) {
  2899  03DE  0379               	decf	_leds,w
  2900  03DF  1D03               	btfss	3,2
  2901  03E0  2BE2               	goto	u110_21
  2902  03E1  2BE3               	goto	u110_20
  2903  03E2                     u110_21:
  2904  03E2  2BE5               	goto	i1l1405
  2905  03E3                     u110_20:
  2906  03E3                     i1l1403:
  2907                           
  2908                           ;MASTER.c: 75:         PORTE = 0b00000000;
  2909  03E3  0189               	clrf	9	;volatile
  2910                           
  2911                           ;MASTER.c: 76:     } else if (leds == 2) {
  2912  03E4  2C00               	goto	i1l76
  2913  03E5                     i1l1405:
  2914  03E5  3002               	movlw	2
  2915  03E6  0679               	xorwf	_leds,w
  2916  03E7  1D03               	btfss	3,2
  2917  03E8  2BEA               	goto	u111_21
  2918  03E9  2BEB               	goto	u111_20
  2919  03EA                     u111_21:
  2920  03EA  2BEE               	goto	i1l1409
  2921  03EB                     u111_20:
  2922  03EB                     i1l1407:
  2923                           
  2924                           ;MASTER.c: 77:         PORTE = 0b00000001;
  2925  03EB  3001               	movlw	1
  2926  03EC  0089               	movwf	9	;volatile
  2927                           
  2928                           ;MASTER.c: 78:     } else if (leds == 3) {
  2929  03ED  2C00               	goto	i1l76
  2930  03EE                     i1l1409:
  2931  03EE  3003               	movlw	3
  2932  03EF  0679               	xorwf	_leds,w
  2933  03F0  1D03               	btfss	3,2
  2934  03F1  2BF3               	goto	u112_21
  2935  03F2  2BF4               	goto	u112_20
  2936  03F3                     u112_21:
  2937  03F3  2BF7               	goto	i1l1413
  2938  03F4                     u112_20:
  2939  03F4                     i1l1411:
  2940                           
  2941                           ;MASTER.c: 79:         PORTE = 0b00000010;
  2942  03F4  3002               	movlw	2
  2943  03F5  0089               	movwf	9	;volatile
  2944                           
  2945                           ;MASTER.c: 80:     } else if (leds == 4) {
  2946  03F6  2C00               	goto	i1l76
  2947  03F7                     i1l1413:
  2948  03F7  3004               	movlw	4
  2949  03F8  0679               	xorwf	_leds,w
  2950  03F9  1D03               	btfss	3,2
  2951  03FA  2BFC               	goto	u113_21
  2952  03FB  2BFD               	goto	u113_20
  2953  03FC                     u113_21:
  2954  03FC  2C00               	goto	i1l70
  2955  03FD                     u113_20:
  2956  03FD                     i1l1415:
  2957                           
  2958                           ;MASTER.c: 81:         PORTE = 0b00000011;
  2959  03FD  3003               	movlw	3
  2960  03FE  0089               	movwf	9	;volatile
  2961  03FF  2C00               	goto	i1l76
  2962  0400                     i1l70:
  2963  0400                     i1l76:
  2964  0400  0872               	movf	??_myISR+2,w
  2965  0401  008A               	movwf	10
  2966  0402  0E71               	swapf	??_myISR+1,w
  2967  0403  0083               	movwf	3
  2968  0404  0EFE               	swapf	btemp,f
  2969  0405  0E7E               	swapf	btemp,w
  2970  0406  0009               	retfie
  2971  0407                     __end_of_myISR:
  2972  007E                     btemp	set	126	;btemp
  2973  007E                     wtemp0	set	126
  2974                           
  2975                           	psect	intentry
  2976  0004                     __pintentry:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _myISR: [wreg+status,2+status,0]
  2979                           
  2980  0004                     interrupt_function:
  2981  007E                     saved_w	set	btemp
  2982  0004  00FE               	movwf	btemp
  2983  0005  0E03               	swapf	3,w
  2984  0006  00F1               	movwf	??_myISR+1
  2985  0007  080A               	movf	10,w
  2986  0008  00F2               	movwf	??_myISR+2
  2987  0009  120A  118A  2BD8   	ljmp	_myISR
  2988                           
  2989                           	psect	config
  2990                           
  2991                           ;Config register CONFIG1 @ 0x2007
  2992                           ;	Oscillator Selection bits
  2993                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2994                           ;	Watchdog Timer Enable bit
  2995                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2996                           ;	Power-up Timer Enable bit
  2997                           ;	PWRTE = OFF, PWRT disabled
  2998                           ;	RE3/MCLR pin function select bit
  2999                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3000                           ;	Code Protection bit
  3001                           ;	CP = OFF, Program memory code protection is disabled
  3002                           ;	Data Code Protection bit
  3003                           ;	CPD = OFF, Data memory code protection is disabled
  3004                           ;	Brown Out Reset Selection bits
  3005                           ;	BOREN = OFF, BOR disabled
  3006                           ;	Internal External Switchover bit
  3007                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3008                           ;	Fail-Safe Clock Monitor Enabled bit
  3009                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3010                           ;	Low Voltage Programming Enable bit
  3011                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3012                           ;	In-Circuit Debugger Mode bit
  3013                           ;	DEBUG = 0x1, unprogrammed default
  3014  2007                     	org	8199
  3015  2007  20D1               	dw	8401
  3016                           
  3017                           ;Config register CONFIG2 @ 0x2008
  3018                           ;	Brown-out Reset Selection bit
  3019                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3020                           ;	Flash Program Memory Self Write Enable bits
  3021                           ;	WRT = OFF, Write protection off
  3022  2008                     	org	8200
  3023  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     33      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> Temperatura(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Initialize
    _conversion->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Initialize->___aldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3199
                                             30 BANK0      3     3      0
                           _I2C_NACK
                             _I2C_RX
                             _I2C_TX
                           _I2C_init
                         _I2C_rstart
                          _I2C_sleep
                           _I2C_stop
                              _Setup
                   _USART_Initialize
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           3     3      0    2366
                                             23 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2366
                                              8 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Initialize                                    20    16      4     811
                                              4 COMMON     4     4      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (1) _I2C_rstart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_TX                                               1     1      0      22
                                              3 COMMON     1     1      0
                          _I2C_sleep
 ---------------------------------------------------------------------------------
 (2) _I2C_sleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_RX                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_NACK
   _I2C_RX
   _I2C_TX
     _I2C_sleep
   _I2C_init
   _I2C_rstart
   _I2C_sleep
   _I2C_stop
     _I2C_sleep
   _Setup
   _USART_Initialize
     ___aldiv
   _conversion
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 01:26:55 2021

                        pc 0002                         _BF 04A0                         l15 0355  
                       l64 04AB                         l82 046F                         _c1 007A  
                       _rx 0041                         fsr 0004        ___wmul@multiplicand 0075  
       __size_of_I2C_sleep 0008   __end_of_USART_Initialize 0356                        l123 0445  
                      l132 04C8                        l141 04C7                        l134 04CE  
                      l150 049B                        l135 04CF                        l144 04BB  
                      l153 049F                        l162 0487                        l138 04C3  
                      l147 04BF                        l156 04AF                        l165 0492  
                      l159 04B6                        l290 0413                        l355 025A  
                      l275 00F8                        l292 042B                        l365 02E2  
                      l286 01A0                        l562 039B                        l572 03D7  
                      l743 0481                        u600 040D                        _PEN 048A  
                      u601 040C                        u630 0427                        u631 0426  
                      u615 0414                        u625 041B                        u580 0478  
                      _SEN 0488                        u581 0477                        u910 04CE  
                      u590 047E                        u911 04CD                        u591 047D  
                      fsr0 0004                        indf 0000        __size_of_I2C_rstart 0008  
                     l1151 0480                       l1143 0471                       l1161 041A  
                     l1145 0472                       l1163 0421                       l1155 0407  
                     l1147 0478                       l1309 04C8                       l1501 038A  
                     l1165 0427                       l1157 0409                       l1149 047E  
                     l1503 0391                       l1511 03A4                       l1159 040D  
                     l1505 0397                       l1521 03C0                       l1513 03A7  
                     l1601 013D                       l1371 0430                       l1523 03C6  
                     l1515 03AE                       l1611 0181                       l1603 0141  
                     l1531 001C                       l1373 0433                       l1381 04C0  
                     l1365 04A0                       l1525 03CD                       l1517 03B2  
                     l1509 039C                       l1605 0146                       l1541 0036  
                     l1533 0021                       l1613 018A                       l1701 0218  
                     l1383 0483                       l1375 0437                       l1631 0269  
                     l1623 0246                       l1519 03B6                       l1527 03D3  
                     l1607 0176                       l1615 019C                       l1551 0076  
                     l1543 0046                       l1535 0027                       l1711 023D  
                     l1703 021D                       l1393 04B7                       l1385 048D  
                     l1377 043E                       l1369 042C                       l1641 028D  
                     l1633 026D                       l1625 0249                       l1609 017D  
                     l1561 00B1                       l1545 004A                       l1537 002E  
                     l1705 0222                       l1387 04AC                       l1379 0441  
                     l1395 0493                       l1651 02BB                       l1643 0291  
                     l1635 0275                       l1627 024D                       l1491 036A  
                     l1483 0356                       l1563 00B5                       l1547 005F  
                     l1555 0086                       l1539 0033                       l1707 022D  
                     l1389 04B3                       l1397 0498                       l1653 02C4  
                     l1645 029A                       l1637 027D                       l1629 025E  
                     l1493 036E                       l1485 035A                       l1581 00EC  
                     l1573 00C0                       l1565 00B9                       l1557 00A5  
                     l1733 009A                       l1549 0072                       l1709 0232  
                     l1647 02AC                       l1639 0280                       l1655 02CA  
                     l1671 0352                       l1663 02E3                       l1495 0372  
                     l1487 0360                       l1591 0119                       l1583 00F2  
                     l1567 00BE                       l1559 00AD                       l1657 02CF  
                     l1649 02BA                       l1673 0353                       l1665 02F0  
                     l1497 0383                       l1489 0363                       l1593 0120  
                     l1585 0103                       l1577 00DC                       l1681 01A6  
                     l1659 02DA                       l1675 0354                       l1667 034D  
                     l1499 0389                       l1595 0124                       l1587 010F  
                     l1579 00E6                       l1691 01DF                       l1683 01B5  
                     l1669 0351                       l1597 0130                       l1589 0113  
                     l1677 045C                       l1693 01EA                       l1685 01BA  
                     l1599 0136                       l1695 01FE                       l1687 01C9  
                     l1679 01A1                       l1697 0203                       l1689 01D9  
                     l1699 020E                       STR_1 0456                       u1200 0397  
                     u1201 0396                       u1050 04C7                       u1210 03A4  
                     u1051 04C6                       u1211 03A3                       u1060 048D  
                     u1140 0360                       u1300 00B5                       u1061 048C  
                     u1141 035F                       u1301 00B4                       u1070 04B3  
                     u1230 03B6                       u1310 00DB                       u1071 04B2  
                     u1231 03B5                       u1311 00DA                       u1080 04BF  
                     u1160 0372                       u1240 03C0                       u1400 019C  
                     u1320 00E6                       u1081 04BE                       u1161 0371  
                     u1241 03BF                       u1225 03A8                       u1401 019B  
                     u1321 00E5                       u1090 049F                       u1410 024D  
                     u1330 00EC                       u1091 049E                       u1411 024C  
                     u1155 0364                       u1331 00EB                       u1315 00D7  
                     u1500 02CF                       u1420 025E                       u1180 0383  
                     u1260 03D3                       u1340 00F2                       u1501 02CE  
                     u1421 025D                       u1181 0382                       u1261 03D2  
                     u1245 03BC                       u1341 00F1                       u1430 027D  
                     u1510 02FE                       u1350 0103                       u1270 0027  
                     u1431 027C                       u1175 0373                       u1255 03C7  
                     u1351 0102                       u1271 0026                       u1520 0317  
                     u1360 0119                       u1280 0046                       u1185 037F  
                     u1361 0118                       u1281 0045                       u1450 0291  
                     u1370 0130                       u1290 0086                       u1451 0290  
                     u1531 0329                       u1515 02F9                       u1195 038B  
                     u1371 012F                       u1355 00FF                       u1291 0085  
                     u1532 032A                       u1380 0136                       u1445 0282  
                     u1533 032F                       u1525 0312                       u1381 0135  
                     u1470 02AC                       u1534 0330                       u1390 018A  
                     u1471 02AB                       u1535 0335                       u1391 0189  
                     u1607 0238                       u1536 0336                       u1465 0293  
                     u1490 02CA                       u1491 02C9                       u1475 02A8  
                     u1547 01C2                       u1485 02BC                       u1557 01D4  
                     u1567 01E5                       u1577 01F5                       u1587 0209  
                     u1597 0228                       _RCEN 048B                       i1l70 0400  
                     i1l76 0400                       _RSEN 0489           __end_of_I2C_NACK 04C0  
                     _main 01A1                       _leds 0079                       btemp 007E  
         __end_of_I2C_init 0446                       start 000C           __end_of_I2C_stop 04A0  
          __end_of___aldiv 02E3                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D                      _ANSEL 0188            __end_of___lwdiv 039C  
          __end_of___lwmod 03D8                      _RCREG 001A                      _SPBRG 0099  
                    _PORTC 0007                      _PORTE 0009                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019                      _Setup 04A0  
          __end_of_dpowers 0456                      _myISR 03D8            __end_of_isdigit 0482  
                    pclath 000A          __end_of_I2C_sleep 04D0                      status 0003  
                    wtemp0 007E            __end_of_sprintf 01A1            __initialization 000F  
             __end_of_main 0246                     ??_main 003E                     ?_Setup 0070  
                   ?_myISR 0070                     _I2C_RX 04AC                     _I2C_TX 0482  
                   _ANSELH 0189                     u110_20 03E3                     u110_21 03E2  
                   u111_20 03EB                     u111_21 03EA                     i1l1401 03DE  
                   i1l1411 03F4                     i1l1403 03E3                     i1l1413 03F7  
                   i1l1405 03E5                     i1l1415 03FD                     i1l1407 03EB  
                   u112_20 03F4                     u112_21 03F3                     i1l1409 03EE  
                   u113_20 03FD                     u113_21 03FC                     i1l1399 03D8  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPBUF 0013                     _SSPCON 0014               ??_I2C_rstart 0073  
                ??___aldiv 0073                     ___wmul 0407                  ??___lwdiv 0077  
                ??___lwmod 0078                  ?_I2C_NACK 0070                  ??_isdigit 0073  
                   saved_w 007E                  ?_I2C_init 0070                  ?_I2C_stop 0070  
                ??_sprintf 002B         __end_of_I2C_rstart 04C8    __end_of__initialization 0015  
           __pcstackCOMMON 0070              __end_of_Setup 04AC              __end_of_myISR 0407  
               ??_I2C_NACK 0073                    I2C_TX@c 0073          ?_USART_Initialize 002E  
               ??_I2C_init 0073         ??_USART_Initialize 0032                 ??_I2C_stop 0073  
                  ??_Setup 0073                    ??_myISR 0070                    ?_I2C_RX 0070  
                  ?_I2C_TX 0070               sprintf@width 0034                 __pbssBANK0 0041  
               __pmaintext 01A1                    ?___wmul 0073                 __pintentry 0004  
                  _SSPCON2 0091                    _SSPSTAT 0094            __size_of_I2C_RX 000B  
          __size_of_I2C_TX 0011                 __stringtab 0446                 _conversion 045C  
                _I2C_sleep 04C8                    ___aldiv 0246            __size_of___wmul 0025  
                  ___lwdiv 0356                    ___lwmod 039C                _Temperatura 0042  
                  __ptext1 045C                    __ptext2 0019                    __ptext3 0470  
                  __ptext4 0407                    __ptext5 039C                    __ptext6 0356  
                  __ptext7 02E3                    __ptext8 0246                    __ptext9 04A0  
                  _dpowers 044C                    _isdigit 0470           ___aldiv@dividend 0024  
                  _sprintf 0019       end_of_initialization 0015                 ?_I2C_sleep 0070  
        USART_Initialize@x 0074                  _RCSTAbits 0018           ___aldiv@quotient 002A  
        __size_of_I2C_NACK 0009          __size_of_I2C_init 001A          __size_of_I2C_stop 000D  
           __end_of_I2C_RX 04B7             __end_of_I2C_TX 0493                ?_conversion 0070  
                _TXSTAbits 0098             __end_of___wmul 042C                _BAUDCTLbits 0187  
      start_initialization 000F                   ??_I2C_RX 0073                   ??_I2C_TX 0073  
__size_of_USART_Initialize 0073                ??_I2C_sleep 0073                   ??___wmul 0077  
      __size_of_conversion 0014                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                sprintf@flag 0030                sprintf@prec 002F  
         ___lwdiv@dividend 0075                   ?___aldiv 0020                   ?___lwdiv 0073  
                 ?___lwmod 0023                  __pstrings 0446                   _I2C_NACK 04B7  
                 ?_isdigit 0070                   _I2C_init 042C                   _I2C_stop 0493  
           __size_of_Setup 000C           ___lwdiv@quotient 0021             __size_of_myISR 002F  
                 ?_sprintf 0028            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0028             ___wmul@product 0077                   _PIE1bits 008C  
                 _PIR1bits 000C                __stringbase 044B          ___wmul@multiplier 0073  
             ??_conversion 0037           _USART_Initialize 02E3                 _I2C_rstart 04C0  
         __size_of___aldiv 009D           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 044C                _isdigit$791 0073                 sprintf@val 0031  
       __end_of_conversion 0470           __size_of_isdigit 0012            ___lwdiv@divisor 0073  
          ___lwdiv@counter 0020                   __ptext10 0493                   __ptext11 04C0  
                 __ptext12 042C                   __ptext13 0482                   __ptext14 04C8  
                 __ptext15 04AC                   __ptext16 04B7                   __ptext17 03D8  
         __size_of_sprintf 0188              __size_of_main 00A5                 _INTCONbits 000B  
                 isdigit@c 0074                   intlevel1 0000                  sprintf@ap 002E  
                sprintf@sp 0033           ___lwmod@dividend 0025                  stringcode 0446  
              ?_I2C_rstart 0070                   sprintf@c 0036                   sprintf@f 0028  
          ___lwmod@divisor 0023            ___lwmod@counter 0027                   stringdir 0446  
                 stringtab 0446               ___aldiv@sign 0029   USART_Initialize@baudrate 002E  
