

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 22:03:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  1000                     __pstrings:
   486  1000                     stringtab:
   487  1000                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  1000  1BFF               	btfsc	btemp+1,7
   491  1001  280A               	ljmp	stringcode
   492  1002  1383               	bcf	3,7
   493  1003  187F               	btfsc	btemp+1,0
   494  1004  1783               	bsf	3,7
   495  1005  0800               	movf	0,w
   496  1006  0A84               	incf	4,f
   497  1007  1903               	skipnz
   498  1008  0AFF               	incf	btemp+1,f
   499  1009  0008               	return
   500  100A                     stringcode:
   501  100A                     stringdir:
   502  100A  3010               	movlw	high stringdir
   503  100B  008A               	movwf	10
   504  100C  0804               	movf	4,w
   505  100D  0A84               	incf	4,f
   506  100E  0782               	addwf	2,f
   507  100F                     __stringbase:
   508  100F  3400               	retlw	0
   509  1010                     __end_of__stringtab:
   510  1010                     __powers_:
   511  1010  3400               	retlw	0
   512  1011  3480               	retlw	128
   513  1012  343F               	retlw	63
   514  1013  3400               	retlw	0
   515  1014  3420               	retlw	32
   516  1015  3441               	retlw	65
   517  1016  3400               	retlw	0
   518  1017  34C8               	retlw	200
   519  1018  3442               	retlw	66
   520  1019  3400               	retlw	0
   521  101A  347A               	retlw	122
   522  101B  3444               	retlw	68
   523  101C  3440               	retlw	64
   524  101D  341C               	retlw	28
   525  101E  3446               	retlw	70
   526  101F  3450               	retlw	80
   527  1020  34C3               	retlw	195
   528  1021  3447               	retlw	71
   529  1022  3424               	retlw	36
   530  1023  3474               	retlw	116
   531  1024  3449               	retlw	73
   532  1025  3497               	retlw	151
   533  1026  3418               	retlw	24
   534  1027  344B               	retlw	75
   535  1028  34BC               	retlw	188
   536  1029  34BE               	retlw	190
   537  102A  344C               	retlw	76
   538  102B  346B               	retlw	107
   539  102C  346E               	retlw	110
   540  102D  344E               	retlw	78
   541  102E  3403               	retlw	3
   542  102F  3415               	retlw	21
   543  1030  3450               	retlw	80
   544  1031  3479               	retlw	121
   545  1032  34AD               	retlw	173
   546  1033  3460               	retlw	96
   547  1034  34F3               	retlw	243
   548  1035  3449               	retlw	73
   549  1036  3471               	retlw	113
   550  1037                     __end_of__powers_:
   551  1037                     __npowers_:
   552  1037  3400               	retlw	0
   553  1038  3480               	retlw	128
   554  1039  343F               	retlw	63
   555  103A  34CD               	retlw	205
   556  103B  34CC               	retlw	204
   557  103C  343D               	retlw	61
   558  103D  34D7               	retlw	215
   559  103E  3423               	retlw	35
   560  103F  343C               	retlw	60
   561  1040  3412               	retlw	18
   562  1041  3483               	retlw	131
   563  1042  343A               	retlw	58
   564  1043  34B7               	retlw	183
   565  1044  34D1               	retlw	209
   566  1045  3438               	retlw	56
   567  1046  34C6               	retlw	198
   568  1047  3427               	retlw	39
   569  1048  3437               	retlw	55
   570  1049  3438               	retlw	56
   571  104A  3486               	retlw	134
   572  104B  3435               	retlw	53
   573  104C  34C0               	retlw	192
   574  104D  34D6               	retlw	214
   575  104E  3433               	retlw	51
   576  104F  34CC               	retlw	204
   577  1050  342B               	retlw	43
   578  1051  3432               	retlw	50
   579  1052  3470               	retlw	112
   580  1053  3489               	retlw	137
   581  1054  3430               	retlw	48
   582  1055  34E7               	retlw	231
   583  1056  34DB               	retlw	219
   584  1057  342E               	retlw	46
   585  1058  34E5               	retlw	229
   586  1059  343C               	retlw	60
   587  105A  341E               	retlw	30
   588  105B  3442               	retlw	66
   589  105C  34A2               	retlw	162
   590  105D  340D               	retlw	13
   591  105E                     __end_of__npowers_:
   592  105E                     _dpowers:
   593  105E  3401               	retlw	1
   594  105F  3400               	retlw	0
   595  1060  3400               	retlw	0
   596  1061  3400               	retlw	0
   597  1062  340A               	retlw	10
   598  1063  3400               	retlw	0
   599  1064  3400               	retlw	0
   600  1065  3400               	retlw	0
   601  1066  3464               	retlw	100
   602  1067  3400               	retlw	0
   603  1068  3400               	retlw	0
   604  1069  3400               	retlw	0
   605  106A  34E8               	retlw	232
   606  106B  3403               	retlw	3
   607  106C  3400               	retlw	0
   608  106D  3400               	retlw	0
   609  106E  3410               	retlw	16
   610  106F  3427               	retlw	39
   611  1070  3400               	retlw	0
   612  1071  3400               	retlw	0
   613  1072  34A0               	retlw	160
   614  1073  3486               	retlw	134
   615  1074  3401               	retlw	1
   616  1075  3400               	retlw	0
   617  1076  3440               	retlw	64
   618  1077  3442               	retlw	66
   619  1078  340F               	retlw	15
   620  1079  3400               	retlw	0
   621  107A  3480               	retlw	128
   622  107B  3496               	retlw	150
   623  107C  3498               	retlw	152
   624  107D  3400               	retlw	0
   625  107E  3400               	retlw	0
   626  107F  34E1               	retlw	225
   627  1080  34F5               	retlw	245
   628  1081  3405               	retlw	5
   629  1082  3400               	retlw	0
   630  1083  34CA               	retlw	202
   631  1084  349A               	retlw	154
   632  1085  343B               	retlw	59
   633  1086                     __end_of_dpowers:
   634  001A                     _RCREG	set	26
   635  0019                     _TXREG	set	25
   636  001E                     _ADRESH	set	30
   637  001F                     _ADCON0bits	set	31
   638  000C                     _PIR1bits	set	12
   639  000B                     _INTCONbits	set	11
   640  0009                     _PORTE	set	9
   641  0006                     _PORTB	set	6
   642  0005                     _PORTA	set	5
   643  00C4                     _CREN	set	196
   644  00C7                     _SPEN	set	199
   645  0037                     _RB7	set	55
   646  0036                     _RB6	set	54
   647  0035                     _RB5	set	53
   648  0034                     _RB4	set	52
   649  0033                     _RB3	set	51
   650  0032                     _RB2	set	50
   651  0031                     _RB1	set	49
   652  0030                     _RB0	set	48
   653  0049                     _RE1	set	73
   654  0048                     _RE0	set	72
   655  0065                     _RCIF	set	101
   656  0099                     _SPBRG	set	153
   657  0086                     _TRISBbits	set	134
   658  0089                     _TRISEbits	set	137
   659  0085                     _TRISAbits	set	133
   660  009F                     _ADCON1	set	159
   661  008C                     _PIE1bits	set	140
   662  0089                     _TRISE	set	137
   663  0086                     _TRISB	set	134
   664  0085                     _TRISA	set	133
   665  04C1                     _TRMT	set	1217
   666  04C5                     _TXEN	set	1221
   667  043E                     _TRISC6	set	1086
   668  043F                     _TRISC7	set	1087
   669  04C4                     _SYNC	set	1220
   670  04C2                     _BRGH	set	1218
   671  0189                     _ANSELHbits	set	393
   672  0188                     _ANSELbits	set	392
   673  0188                     _ANSEL	set	392
   674  0189                     _ANSELH	set	393
   675  1086                     STR_1:
   676  1086  3456               	retlw	86	;'V'
   677  1087  3431               	retlw	49	;'1'
   678  1088  3420               	retlw	32	;' '
   679  1089  3420               	retlw	32	;' '
   680  108A  3420               	retlw	32	;' '
   681  108B  3456               	retlw	86	;'V'
   682  108C  3432               	retlw	50	;'2'
   683  108D  3420               	retlw	32	;' '
   684  108E  3420               	retlw	32	;' '
   685  108F  3420               	retlw	32	;' '
   686  1090  3463               	retlw	99	;'c'
   687  1091  346F               	retlw	111	;'o'
   688  1092  346E               	retlw	110	;'n'
   689  1093  3474               	retlw	116	;'t'
   690  1094  3461               	retlw	97	;'a'
   691  1095  3464               	retlw	100	;'d'
   692  1096  346F               	retlw	111	;'o'
   693  1097  3472               	retlw	114	;'r'
   694  1098  3420               	retlw	32	;' '
   695  1099  340A               	retlw	10
   696  109A  3400               	retlw	0
   697  109B                     STR_2:
   698  109B  3425               	retlw	37	;'%'
   699  109C  3432               	retlw	50	;'2'
   700  109D  342E               	retlw	46	;'.'
   701  109E  3431               	retlw	49	;'1'
   702  109F  3466               	retlw	102	;'f'
   703  10A0  3420               	retlw	32	;' '
   704  10A1  3420               	retlw	32	;' '
   705  10A2  3420               	retlw	32	;' '
   706  10A3  3425               	retlw	37	;'%'
   707  10A4  3432               	retlw	50	;'2'
   708  10A5  342E               	retlw	46	;'.'
   709  10A6  3431               	retlw	49	;'1'
   710  10A7  3466               	retlw	102	;'f'
   711  10A8  3420               	retlw	32	;' '
   712  10A9  3420               	retlw	32	;' '
   713  10AA  3420               	retlw	32	;' '
   714  10AB  3425               	retlw	37	;'%'
   715  10AC  3464               	retlw	100	;'d'
   716  10AD  3400               	retlw	0
   717  10AE                     STR_3:
   718  10AE  3456               	retlw	86	;'V'
   719  10AF  3431               	retlw	49	;'1'
   720  10B0  3420               	retlw	32	;' '
   721  10B1  3420               	retlw	32	;' '
   722  10B2  3420               	retlw	32	;' '
   723  10B3  3456               	retlw	86	;'V'
   724  10B4  3432               	retlw	50	;'2'
   725  10B5  3420               	retlw	32	;' '
   726  10B6  3420               	retlw	32	;' '
   727  10B7  3420               	retlw	32	;' '
   728  10B8  3463               	retlw	99	;'c'
   729  10B9  346F               	retlw	111	;'o'
   730  10BA  346E               	retlw	110	;'n'
   731  10BB  3474               	retlw	116	;'t'
   732  10BC  3461               	retlw	97	;'a'
   733  10BD  3400               	retlw	0
   734                           
   735                           	psect	cinit
   736  000F                     start_initialization:	
   737                           ; #config settings
   738                           
   739  000F                     __initialization:
   740                           
   741                           ; Clear objects allocated to COMMON
   742  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   743                           
   744                           ; Clear objects allocated to BANK0
   745  0010  1283               	bcf	3,5	;RP0=0, select bank0
   746  0011  1303               	bcf	3,6	;RP1=0, select bank0
   747  0012  01EC               	clrf	__pbssBANK0& (0+127)
   748  0013  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   749                           
   750                           ; Clear objects allocated to BANK1
   751  0014  1383               	bcf	3,7	;select IRP bank0
   752  0015  30BF               	movlw	low __pbssBANK1
   753  0016  0084               	movwf	4
   754  0017  30DA               	movlw	low (__pbssBANK1+27)
   755  0018  160A  158A  2481  120A  118A  	fcall	clear_ram0
   756  001D                     end_of_initialization:	
   757                           ;End of C runtime variable initialization code
   758                           
   759  001D                     __end_of__initialization:
   760  001D  0183               	clrf	3
   761  001E  160A  118A  2E0A   	ljmp	_main	;jump to C main() function
   762                           
   763                           	psect	bssCOMMON
   764  007A                     __pbssCOMMON:
   765  007A                     _RUSART:
   766  007A                     	ds	1
   767                           
   768                           	psect	bssBANK0
   769  006C                     __pbssBANK0:
   770  006C                     _vADC1:
   771  006C                     	ds	1
   772  006D                     _contador:
   773  006D                     	ds	1
   774                           
   775                           	psect	bssBANK1
   776  00BF                     __pbssBANK1:
   777  00BF                     _V2:
   778  00BF                     	ds	3
   779  00C2                     _V1:
   780  00C2                     	ds	3
   781  00C5                     _vADC2:
   782  00C5                     	ds	1
   783  00C6                     _data:
   784  00C6                     	ds	20
   785                           
   786                           	psect	clrtext
   787  1C81                     clear_ram0:	
   788                           ;	Called with FSR containing the base address, and
   789                           ;	W with the last address+1
   790                           
   791  1C81  0064               	clrwdt	;clear the watchdog before getting into this loop
   792  1C82                     clrloop0:
   793  1C82  0180               	clrf	0	;clear RAM location pointed to by FSR
   794  1C83  0A84               	incf	4,f	;increment pointer
   795  1C84  0604               	xorwf	4,w	;XOR with final address
   796  1C85  1903               	btfsc	3,2	;have we reached the end yet?
   797  1C86  3400               	retlw	0	;all done for this memory range, return
   798  1C87  0604               	xorwf	4,w	;XOR again to restore value
   799  1C88  2C82               	goto	clrloop0	;do the next byte
   800                           
   801                           	psect	cstackBANK1
   802  00A0                     __pcstackBANK1:
   803  00A0                     ??_sprintf:
   804                           
   805                           ; 1 bytes @ 0x0
   806  00A0                     	ds	6
   807  00A6                     _sprintf$1068:
   808                           
   809                           ; 3 bytes @ 0x6
   810  00A6                     	ds	3
   811  00A9                     sprintf@ap:
   812                           
   813                           ; 1 bytes @ 0x9
   814  00A9                     	ds	1
   815  00AA                     sprintf@flag:
   816                           
   817                           ; 2 bytes @ 0xA
   818  00AA                     	ds	2
   819  00AC                     sprintf@width:
   820                           
   821                           ; 2 bytes @ 0xC
   822  00AC                     	ds	2
   823  00AE                     sprintf@tmpval:
   824                           
   825                           ; 4 bytes @ 0xE
   826  00AE                     	ds	4
   827  00B2                     sprintf@val:
   828                           
   829                           ; 4 bytes @ 0x12
   830  00B2                     	ds	4
   831  00B6                     sprintf@eexp:
   832                           
   833                           ; 2 bytes @ 0x16
   834  00B6                     	ds	2
   835  00B8                     sprintf@fval:
   836                           
   837                           ; 3 bytes @ 0x18
   838  00B8                     	ds	3
   839  00BB                     sprintf@sp:
   840                           
   841                           ; 1 bytes @ 0x1B
   842  00BB                     	ds	1
   843  00BC                     sprintf@prec:
   844                           
   845                           ; 2 bytes @ 0x1C
   846  00BC                     	ds	2
   847  00BE                     sprintf@c:
   848                           
   849                           ; 1 bytes @ 0x1E
   850  00BE                     	ds	1
   851                           
   852                           	psect	cstackCOMMON
   853  0070                     __pcstackCOMMON:
   854  0070                     ?_isdigit:
   855  0070                     ?_Read_USART:	
   856                           ; 1 bit 
   857                           
   858  0070                     ??_Read_USART:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_config_ADC:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_LCD_ON:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_LCD_Clear:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_ValorADC:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_Write_USART:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_PUERTO:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_Setup:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_ISR:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ??_ISR:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_main:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_char_LCD:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_comandosLCD:	
   895                           ; 1 bytes @ 0x0
   896                           
   897                           
   898                           ; 1 bytes @ 0x0
   899  0070                     	ds	3
   900  0073                     ?___ftge:
   901  0073                     ??_config_ADC:	
   902                           ; 1 bit 
   903                           
   904  0073                     ??_ValorADC:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     ??_Write_USART:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     ??_PUERTO:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     ??_isdigit:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     ??_Setup:	
   917                           ; 1 bytes @ 0x3
   918                           
   919  0073                     ??___lldiv:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     ??___aldiv:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0073                     ?___wmul:	
   926                           ; 1 bytes @ 0x3
   927                           
   928  0073                     ?___awmod:	
   929                           ; 2 bytes @ 0x3
   930                           
   931  0073                     ?___lwmod:	
   932                           ; 2 bytes @ 0x3
   933                           
   934  0073                     ?___ftpack:	
   935                           ; 2 bytes @ 0x3
   936                           
   937  0073                     ?___ftneg:	
   938                           ; 3 bytes @ 0x3
   939                           
   940  0073                     ?__tdiv_to_l_:	
   941                           ; 3 bytes @ 0x3
   942                           
   943  0073                     ?__div_to_l_:	
   944                           ; 4 bytes @ 0x3
   945                           
   946  0073                     PUERTO@x:	
   947                           ; 4 bytes @ 0x3
   948                           
   949  0073                     Write_USART@a:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     _isdigit$873:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ___wmul@multiplier:	
   956                           ; 1 bytes @ 0x3
   957                           
   958  0073                     ___awmod@divisor:	
   959                           ; 2 bytes @ 0x3
   960                           
   961  0073                     ___lwmod@divisor:	
   962                           ; 2 bytes @ 0x3
   963                           
   964  0073                     __div_to_l_@f1:	
   965                           ; 2 bytes @ 0x3
   966                           
   967  0073                     ___ftpack@arg:	
   968                           ; 3 bytes @ 0x3
   969                           
   970  0073                     __tdiv_to_l_@f1:	
   971                           ; 3 bytes @ 0x3
   972                           
   973  0073                     ___ftge@ff1:	
   974                           ; 3 bytes @ 0x3
   975                           
   976  0073                     ___ftneg@f1:	
   977                           ; 3 bytes @ 0x3
   978                           
   979                           
   980                           ; 3 bytes @ 0x3
   981  0073                     	ds	1
   982  0074                     ?_Write_USART_String:
   983  0074                     ??_char_LCD:	
   984                           ; 1 bytes @ 0x4
   985                           
   986  0074                     ??_comandosLCD:	
   987                           ; 1 bytes @ 0x4
   988                           
   989  0074                     ___aldiv@counter:	
   990                           ; 1 bytes @ 0x4
   991                           
   992  0074                     isdigit@c:	
   993                           ; 1 bytes @ 0x4
   994                           
   995  0074                     Write_USART_String@a:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0074                     ___lldiv@quotient:	
   999                           ; 2 bytes @ 0x4
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x4
  1003  0074                     	ds	1
  1004  0075                     ValorADC@x:
  1005  0075                     char_LCD@caracter:	
  1006                           ; 1 bytes @ 0x5
  1007                           
  1008  0075                     comandosLCD@x:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0075                     ___aldiv@sign:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014  0075                     ___wmul@multiplicand:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017  0075                     ___awmod@dividend:	
  1018                           ; 2 bytes @ 0x5
  1019                           
  1020  0075                     ___lwmod@dividend:	
  1021                           ; 2 bytes @ 0x5
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x5
  1025  0075                     	ds	1
  1026  0076                     ??_LCD_ON:
  1027  0076                     ??_LCD_Clear:	
  1028                           ; 1 bytes @ 0x6
  1029                           
  1030  0076                     ??_Write_USART_String:	
  1031                           ; 1 bytes @ 0x6
  1032                           
  1033  0076                     ?_LCD_Cursor:	
  1034                           ; 1 bytes @ 0x6
  1035                           
  1036  0076                     ?_LCD_Print:	
  1037                           ; 1 bytes @ 0x6
  1038                           
  1039  0076                     ??___ftneg:	
  1040                           ; 1 bytes @ 0x6
  1041                           
  1042  0076                     LCD_Cursor@y:	
  1043                           ; 1 bytes @ 0x6
  1044                           
  1045  0076                     ___ftpack@exp:	
  1046                           ; 1 bytes @ 0x6
  1047                           
  1048  0076                     LCD_Print@a:	
  1049                           ; 1 bytes @ 0x6
  1050                           
  1051  0076                     __div_to_l_@f2:	
  1052                           ; 2 bytes @ 0x6
  1053                           
  1054  0076                     __tdiv_to_l_@f2:	
  1055                           ; 3 bytes @ 0x6
  1056                           
  1057  0076                     ___ftge@ff2:	
  1058                           ; 3 bytes @ 0x6
  1059                           
  1060  0076                     ___aldiv@quotient:	
  1061                           ; 3 bytes @ 0x6
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x6
  1065  0076                     	ds	1
  1066  0077                     ??_LCD_Cursor:
  1067  0077                     ??___wmul:	
  1068                           ; 1 bytes @ 0x7
  1069                           
  1070  0077                     ??___awmod:	
  1071                           ; 1 bytes @ 0x7
  1072                           
  1073  0077                     ??___lwmod:	
  1074                           ; 1 bytes @ 0x7
  1075                           
  1076  0077                     Write_USART_String@i:	
  1077                           ; 1 bytes @ 0x7
  1078                           
  1079  0077                     ___ftpack@sign:	
  1080                           ; 1 bytes @ 0x7
  1081                           
  1082  0077                     ___wmul@product:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x7
  1087  0077                     	ds	1
  1088  0078                     ??___awtoft:
  1089  0078                     ??___lltoft:	
  1090                           ; 1 bytes @ 0x8
  1091                           
  1092  0078                     LCD_Cursor@x:	
  1093                           ; 1 bytes @ 0x8
  1094                           
  1095  0078                     ___lldiv@counter:	
  1096                           ; 1 bytes @ 0x8
  1097                           
  1098  0078                     ___awmod@counter:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  0078                     ___lwmod@counter:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  0078                     LCD_Print@i:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x8
  1109  0078                     	ds	1
  1110  0079                     ??___ftge:
  1111  0079                     ??___llmod:	
  1112                           ; 1 bytes @ 0x9
  1113                           
  1114  0079                     ??___lwdiv:	
  1115                           ; 1 bytes @ 0x9
  1116                           
  1117  0079                     LCD_Cursor@a:	
  1118                           ; 1 bytes @ 0x9
  1119                           
  1120  0079                     ___awmod@sign:	
  1121                           ; 1 bytes @ 0x9
  1122                           
  1123  0079                     ___lltoft@exp:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126                           
  1127                           ; 1 bytes @ 0x9
  1128  0079                     	ds	1
  1129  007A                     ??___ftsub:
  1130                           
  1131                           	psect	cstackBANK0
  1132  0020                     __pcstackBANK0:	
  1133                           ; 1 bytes @ 0xA
  1134                           
  1135  0020                     ??_LCD_Print:
  1136  0020                     ??__tdiv_to_l_:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0020                     ??__div_to_l_:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0020                     ??___ftpack:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0020                     ?___awdiv:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0020                     ?___lwdiv:	
  1149                           ; 2 bytes @ 0x0
  1150                           
  1151  0020                     ?___lldiv:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154  0020                     ?___aldiv:	
  1155                           ; 4 bytes @ 0x0
  1156                           
  1157  0020                     ___awdiv@divisor:	
  1158                           ; 4 bytes @ 0x0
  1159                           
  1160  0020                     ___lwdiv@divisor:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163  0020                     ___lldiv@divisor:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0020                     ___aldiv@divisor:	
  1167                           ; 4 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0x0
  1171  0020                     	ds	2
  1172  0022                     ___awdiv@dividend:
  1173  0022                     ___lwdiv@dividend:	
  1174                           ; 2 bytes @ 0x2
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x2
  1178  0022                     	ds	1
  1179  0023                     ?___awtoft:
  1180  0023                     ?___lltoft:	
  1181                           ; 3 bytes @ 0x3
  1182                           
  1183  0023                     ___awtoft@c:	
  1184                           ; 3 bytes @ 0x3
  1185                           
  1186  0023                     ___lltoft@c:	
  1187                           ; 2 bytes @ 0x3
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x3
  1191  0023                     	ds	1
  1192  0024                     ??___awdiv:
  1193  0024                     ___lwdiv@quotient:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196  0024                     ___lldiv@dividend:	
  1197                           ; 2 bytes @ 0x4
  1198                           
  1199  0024                     ___aldiv@dividend:	
  1200                           ; 4 bytes @ 0x4
  1201                           
  1202  0024                     __tdiv_to_l_@quot:	
  1203                           ; 4 bytes @ 0x4
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x4
  1207  0024                     	ds	1
  1208  0025                     ___awdiv@counter:
  1209                           
  1210                           ; 1 bytes @ 0x5
  1211  0025                     	ds	1
  1212  0026                     ___awdiv@sign:
  1213  0026                     ___awtoft@sign:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216  0026                     ___lwdiv@counter:	
  1217                           ; 1 bytes @ 0x6
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x6
  1221  0026                     	ds	1
  1222  0027                     ___awdiv@quotient:
  1223                           
  1224                           ; 2 bytes @ 0x7
  1225  0027                     	ds	1
  1226  0028                     ?_USART_Init:
  1227  0028                     ?___llmod:	
  1228                           ; 1 bytes @ 0x8
  1229                           
  1230  0028                     __tdiv_to_l_@cntr:	
  1231                           ; 4 bytes @ 0x8
  1232                           
  1233  0028                     USART_Init@baudrate:	
  1234                           ; 1 bytes @ 0x8
  1235                           
  1236  0028                     __div_to_l_@quot:	
  1237                           ; 4 bytes @ 0x8
  1238                           
  1239  0028                     ___llmod@divisor:	
  1240                           ; 4 bytes @ 0x8
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x8
  1244  0028                     	ds	1
  1245  0029                     ?___bmul:
  1246  0029                     ___bmul@multiplicand:	
  1247                           ; 1 bytes @ 0x9
  1248                           
  1249  0029                     __tdiv_to_l_@exp1:	
  1250                           ; 1 bytes @ 0x9
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x9
  1254  0029                     	ds	1
  1255  002A                     ??___bmul:
  1256                           
  1257                           ; 1 bytes @ 0xA
  1258  002A                     	ds	1
  1259  002B                     ___bmul@product:
  1260                           
  1261                           ; 1 bytes @ 0xB
  1262  002B                     	ds	1
  1263  002C                     ??_USART_Init:
  1264  002C                     ___bmul@multiplier:	
  1265                           ; 1 bytes @ 0xC
  1266                           
  1267  002C                     __div_to_l_@cntr:	
  1268                           ; 1 bytes @ 0xC
  1269                           
  1270  002C                     ___llmod@dividend:	
  1271                           ; 1 bytes @ 0xC
  1272                           
  1273                           
  1274                           ; 4 bytes @ 0xC
  1275  002C                     	ds	1
  1276  002D                     ?___ftmul:
  1277  002D                     __div_to_l_@exp1:	
  1278                           ; 3 bytes @ 0xD
  1279                           
  1280  002D                     ___ftmul@f1:	
  1281                           ; 1 bytes @ 0xD
  1282                           
  1283                           
  1284                           ; 3 bytes @ 0xD
  1285  002D                     	ds	3
  1286  0030                     ___llmod@counter:
  1287  0030                     ___ftmul@f2:	
  1288                           ; 1 bytes @ 0x10
  1289                           
  1290                           
  1291                           ; 3 bytes @ 0x10
  1292  0030                     	ds	3
  1293  0033                     ??___ftmul:
  1294                           
  1295                           ; 1 bytes @ 0x13
  1296  0033                     	ds	4
  1297  0037                     ___ftmul@exp:
  1298                           
  1299                           ; 1 bytes @ 0x17
  1300  0037                     	ds	1
  1301  0038                     USART_Init@x:
  1302  0038                     ___ftmul@f3_as_product:	
  1303                           ; 2 bytes @ 0x18
  1304                           
  1305                           
  1306                           ; 3 bytes @ 0x18
  1307  0038                     	ds	3
  1308  003B                     ___ftmul@cntr:
  1309                           
  1310                           ; 1 bytes @ 0x1B
  1311  003B                     	ds	1
  1312  003C                     ___ftmul@sign:
  1313                           
  1314                           ; 1 bytes @ 0x1C
  1315  003C                     	ds	1
  1316  003D                     ?_conversion:
  1317  003D                     ?_fround:	
  1318                           ; 3 bytes @ 0x1D
  1319                           
  1320  003D                     ?_scale:	
  1321                           ; 3 bytes @ 0x1D
  1322                           
  1323                           
  1324                           ; 3 bytes @ 0x1D
  1325  003D                     	ds	3
  1326  0040                     ??_conversion:
  1327  0040                     ??_fround:	
  1328                           ; 1 bytes @ 0x20
  1329                           
  1330  0040                     ??_scale:	
  1331                           ; 1 bytes @ 0x20
  1332                           
  1333                           
  1334                           ; 1 bytes @ 0x20
  1335  0040                     	ds	2
  1336  0042                     conversion@b:
  1337  0042                     _scale$1067:	
  1338                           ; 1 bytes @ 0x22
  1339                           
  1340                           
  1341                           ; 3 bytes @ 0x22
  1342  0042                     	ds	3
  1343  0045                     scale@scl:
  1344                           
  1345                           ; 1 bytes @ 0x25
  1346  0045                     	ds	1
  1347  0046                     ?___fttol:
  1348  0046                     ___fttol@f1:	
  1349                           ; 4 bytes @ 0x26
  1350                           
  1351  0046                     _fround$1066:	
  1352                           ; 3 bytes @ 0x26
  1353                           
  1354                           
  1355                           ; 3 bytes @ 0x26
  1356  0046                     	ds	3
  1357  0049                     _fround$1065:
  1358                           
  1359                           ; 3 bytes @ 0x29
  1360  0049                     	ds	1
  1361  004A                     ??___fttol:
  1362                           
  1363                           ; 1 bytes @ 0x2A
  1364  004A                     	ds	2
  1365  004C                     fround@prec:
  1366                           
  1367                           ; 1 bytes @ 0x2C
  1368  004C                     	ds	1
  1369  004D                     ?___ftadd:
  1370  004D                     ___ftadd@f1:	
  1371                           ; 3 bytes @ 0x2D
  1372                           
  1373                           
  1374                           ; 3 bytes @ 0x2D
  1375  004D                     	ds	1
  1376  004E                     ___fttol@sign1:
  1377                           
  1378                           ; 1 bytes @ 0x2E
  1379  004E                     	ds	1
  1380  004F                     ___fttol@lval:
  1381                           
  1382                           ; 4 bytes @ 0x2F
  1383  004F                     	ds	1
  1384  0050                     ___ftadd@f2:
  1385                           
  1386                           ; 3 bytes @ 0x30
  1387  0050                     	ds	3
  1388  0053                     ??___ftadd:
  1389  0053                     ___fttol@exp1:	
  1390                           ; 1 bytes @ 0x33
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x33
  1394  0053                     	ds	4
  1395  0057                     ___ftadd@sign:
  1396                           
  1397                           ; 1 bytes @ 0x37
  1398  0057                     	ds	1
  1399  0058                     ___ftadd@exp2:
  1400                           
  1401                           ; 1 bytes @ 0x38
  1402  0058                     	ds	1
  1403  0059                     ___ftadd@exp1:
  1404                           
  1405                           ; 1 bytes @ 0x39
  1406  0059                     	ds	1
  1407  005A                     ?___ftsub:
  1408  005A                     ___ftsub@f2:	
  1409                           ; 3 bytes @ 0x3A
  1410                           
  1411                           
  1412                           ; 3 bytes @ 0x3A
  1413  005A                     	ds	3
  1414  005D                     ___ftsub@f1:
  1415                           
  1416                           ; 3 bytes @ 0x3D
  1417  005D                     	ds	3
  1418  0060                     ?_sprintf:
  1419  0060                     sprintf@f:	
  1420                           ; 2 bytes @ 0x40
  1421                           
  1422                           
  1423                           ; 1 bytes @ 0x40
  1424  0060                     	ds	9
  1425  0069                     ??_main:
  1426                           
  1427                           ; 1 bytes @ 0x49
  1428  0069                     	ds	3
  1429                           
  1430                           	psect	maintext
  1431  160A                     __pmaintext:	
  1432 ;;
  1433 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1434 ;;
  1435 ;; *************** function _main *****************
  1436 ;; Defined at:
  1437 ;;		line 107 in file "LAB3.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : B00/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       3       0       0       0
  1454 ;;      Totals:         0       3       0       0       0
  1455 ;;Total ram usage:        3 bytes
  1456 ;; Hardware stack levels required when called:    6
  1457 ;; This function calls:
  1458 ;;		_LCD_Clear
  1459 ;;		_LCD_Cursor
  1460 ;;		_LCD_ON
  1461 ;;		_LCD_Print
  1462 ;;		_Setup
  1463 ;;		_USART_Init
  1464 ;;		_ValorADC
  1465 ;;		_Write_USART
  1466 ;;		_Write_USART_String
  1467 ;;		_config_ADC
  1468 ;;		_conversion
  1469 ;;		_sprintf
  1470 ;; This function is called by:
  1471 ;;		Startup code after reset
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _main
  1477  160A                     _main:
  1478  160A                     l4264:	
  1479                           ;incstack = 0
  1480                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1481                           
  1482                           
  1483                           ;LAB3.c: 108:     Setup();
  1484  160A  120A  118A  27E1  160A  118A  	fcall	_Setup
  1485  160F                     l4266:
  1486                           
  1487                           ;LAB3.c: 109:     config_ADC();
  1488  160F  160A  158A  2489  160A  118A  	fcall	_config_ADC
  1489  1614                     l4268:
  1490                           
  1491                           ;LAB3.c: 110:     USART_Init(9600);
  1492  1614  3000               	movlw	0
  1493  1615  1283               	bcf	3,5	;RP0=0, select bank0
  1494  1616  1303               	bcf	3,6	;RP1=0, select bank0
  1495  1617  00AB               	movwf	USART_Init@baudrate+3
  1496  1618  3000               	movlw	0
  1497  1619  00AA               	movwf	USART_Init@baudrate+2
  1498  161A  3025               	movlw	37
  1499  161B  00A9               	movwf	USART_Init@baudrate+1
  1500  161C  3080               	movlw	128
  1501  161D  00A8               	movwf	USART_Init@baudrate
  1502  161E  160A  118A  2448  160A  118A  	fcall	_USART_Init
  1503  1623                     l4270:
  1504                           
  1505                           ;LAB3.c: 111:     LCD_ON();
  1506  1623  160A  158A  25D1  160A  118A  	fcall	_LCD_ON
  1507  1628                     l4272:
  1508                           
  1509                           ;LAB3.c: 112:     LCD_Clear();
  1510  1628  160A  158A  249F  160A  118A  	fcall	_LCD_Clear
  1511  162D                     l4274:
  1512                           
  1513                           ;LAB3.c: 114:       vADC1 = ValorADC(0);
  1514  162D  3000               	movlw	0
  1515  162E  160A  118A  2704  160A  118A  	fcall	_ValorADC
  1516  1633  1283               	bcf	3,5	;RP0=0, select bank0
  1517  1634  1303               	bcf	3,6	;RP1=0, select bank0
  1518  1635  00E9               	movwf	??_main
  1519  1636  0869               	movf	??_main,w
  1520  1637  00EC               	movwf	_vADC1
  1521  1638                     l4276:
  1522                           
  1523                           ;LAB3.c: 115:       vADC2 = ValorADC(1);
  1524  1638  3001               	movlw	1
  1525  1639  160A  118A  2704  160A  118A  	fcall	_ValorADC
  1526  163E  1283               	bcf	3,5	;RP0=0, select bank0
  1527  163F  1303               	bcf	3,6	;RP1=0, select bank0
  1528  1640  00E9               	movwf	??_main
  1529  1641  0869               	movf	??_main,w
  1530  1642  1683               	bsf	3,5	;RP0=1, select bank1
  1531  1643  1303               	bcf	3,6	;RP1=0, select bank1
  1532  1644  00C5               	movwf	_vADC2^(0+128)
  1533  1645                     l4278:
  1534                           
  1535                           ;LAB3.c: 116:       V1 = conversion(vADC1);
  1536  1645  1283               	bcf	3,5	;RP0=0, select bank0
  1537  1646  1303               	bcf	3,6	;RP1=0, select bank0
  1538  1647  086C               	movf	_vADC1,w
  1539  1648  160A  158A  25A6  160A  118A  	fcall	_conversion
  1540  164D  1283               	bcf	3,5	;RP0=0, select bank0
  1541  164E  1303               	bcf	3,6	;RP1=0, select bank0
  1542  164F  083D               	movf	?_conversion,w
  1543  1650  1683               	bsf	3,5	;RP0=1, select bank1
  1544  1651  1303               	bcf	3,6	;RP1=0, select bank1
  1545  1652  00C2               	movwf	_V1^(0+128)
  1546  1653  1283               	bcf	3,5	;RP0=0, select bank0
  1547  1654  1303               	bcf	3,6	;RP1=0, select bank0
  1548  1655  083E               	movf	?_conversion+1,w
  1549  1656  1683               	bsf	3,5	;RP0=1, select bank1
  1550  1657  1303               	bcf	3,6	;RP1=0, select bank1
  1551  1658  00C3               	movwf	(_V1+1)^(0+128)
  1552  1659  1283               	bcf	3,5	;RP0=0, select bank0
  1553  165A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  165B  083F               	movf	?_conversion+2,w
  1555  165C  1683               	bsf	3,5	;RP0=1, select bank1
  1556  165D  1303               	bcf	3,6	;RP1=0, select bank1
  1557  165E  00C4               	movwf	(_V1+2)^(0+128)
  1558  165F                     l4280:
  1559                           
  1560                           ;LAB3.c: 117:       V2 = conversion(vADC2);
  1561  165F  0845               	movf	_vADC2^(0+128),w
  1562  1660  160A  158A  25A6  160A  118A  	fcall	_conversion
  1563  1665  1283               	bcf	3,5	;RP0=0, select bank0
  1564  1666  1303               	bcf	3,6	;RP1=0, select bank0
  1565  1667  083D               	movf	?_conversion,w
  1566  1668  1683               	bsf	3,5	;RP0=1, select bank1
  1567  1669  1303               	bcf	3,6	;RP1=0, select bank1
  1568  166A  00BF               	movwf	_V2^(0+128)
  1569  166B  1283               	bcf	3,5	;RP0=0, select bank0
  1570  166C  1303               	bcf	3,6	;RP1=0, select bank0
  1571  166D  083E               	movf	?_conversion+1,w
  1572  166E  1683               	bsf	3,5	;RP0=1, select bank1
  1573  166F  1303               	bcf	3,6	;RP1=0, select bank1
  1574  1670  00C0               	movwf	(_V2+1)^(0+128)
  1575  1671  1283               	bcf	3,5	;RP0=0, select bank0
  1576  1672  1303               	bcf	3,6	;RP1=0, select bank0
  1577  1673  083F               	movf	?_conversion+2,w
  1578  1674  1683               	bsf	3,5	;RP0=1, select bank1
  1579  1675  1303               	bcf	3,6	;RP1=0, select bank1
  1580  1676  00C1               	movwf	(_V2+2)^(0+128)
  1581  1677                     l4282:
  1582                           
  1583                           ;LAB3.c: 118:       Write_USART_String("V1   V2   contador \n");
  1584  1677  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1585  1678  00F4               	movwf	Write_USART_String@a
  1586  1679  3080               	movlw	128
  1587  167A  00F5               	movwf	Write_USART_String@a+1
  1588  167B  160A  158A  257B  160A  118A  	fcall	_Write_USART_String
  1589  1680                     l4284:
  1590                           
  1591                           ;LAB3.c: 119:       sprintf(data, "%2.1f   %2.1f   %d", V1, V2, contador);
  1592  1680  308C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1593  1681  1283               	bcf	3,5	;RP0=0, select bank0
  1594  1682  1303               	bcf	3,6	;RP1=0, select bank0
  1595  1683  00E9               	movwf	??_main
  1596  1684  0869               	movf	??_main,w
  1597  1685  00E0               	movwf	sprintf@f
  1598  1686  1683               	bsf	3,5	;RP0=1, select bank1
  1599  1687  1303               	bcf	3,6	;RP1=0, select bank1
  1600  1688  0842               	movf	_V1^(0+128),w
  1601  1689  1283               	bcf	3,5	;RP0=0, select bank0
  1602  168A  1303               	bcf	3,6	;RP1=0, select bank0
  1603  168B  00E1               	movwf	?_sprintf+1
  1604  168C  1683               	bsf	3,5	;RP0=1, select bank1
  1605  168D  1303               	bcf	3,6	;RP1=0, select bank1
  1606  168E  0843               	movf	(_V1+1)^(0+128),w
  1607  168F  1283               	bcf	3,5	;RP0=0, select bank0
  1608  1690  1303               	bcf	3,6	;RP1=0, select bank0
  1609  1691  00E2               	movwf	?_sprintf+2
  1610  1692  1683               	bsf	3,5	;RP0=1, select bank1
  1611  1693  1303               	bcf	3,6	;RP1=0, select bank1
  1612  1694  0844               	movf	(_V1+2)^(0+128),w
  1613  1695  1283               	bcf	3,5	;RP0=0, select bank0
  1614  1696  1303               	bcf	3,6	;RP1=0, select bank0
  1615  1697  00E3               	movwf	?_sprintf+3
  1616  1698  1683               	bsf	3,5	;RP0=1, select bank1
  1617  1699  1303               	bcf	3,6	;RP1=0, select bank1
  1618  169A  083F               	movf	_V2^(0+128),w
  1619  169B  1283               	bcf	3,5	;RP0=0, select bank0
  1620  169C  1303               	bcf	3,6	;RP1=0, select bank0
  1621  169D  00E4               	movwf	?_sprintf+4
  1622  169E  1683               	bsf	3,5	;RP0=1, select bank1
  1623  169F  1303               	bcf	3,6	;RP1=0, select bank1
  1624  16A0  0840               	movf	(_V2+1)^(0+128),w
  1625  16A1  1283               	bcf	3,5	;RP0=0, select bank0
  1626  16A2  1303               	bcf	3,6	;RP1=0, select bank0
  1627  16A3  00E5               	movwf	?_sprintf+5
  1628  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  1629  16A5  1303               	bcf	3,6	;RP1=0, select bank1
  1630  16A6  0841               	movf	(_V2+2)^(0+128),w
  1631  16A7  1283               	bcf	3,5	;RP0=0, select bank0
  1632  16A8  1303               	bcf	3,6	;RP1=0, select bank0
  1633  16A9  00E6               	movwf	?_sprintf+6
  1634  16AA  086D               	movf	_contador,w
  1635  16AB  00EA               	movwf	??_main+1
  1636  16AC  01EB               	clrf	??_main+2
  1637  16AD  086A               	movf	??_main+1,w
  1638  16AE  00E7               	movwf	?_sprintf+7
  1639  16AF  086B               	movf	??_main+2,w
  1640  16B0  00E8               	movwf	?_sprintf+8
  1641  16B1  30C6               	movlw	(low (_data| 0))& (0+255)
  1642  16B2  120A  158A  228B  160A  118A  	fcall	_sprintf
  1643  16B7                     l4286:
  1644                           
  1645                           ;LAB3.c: 120:       Write_USART_String(data);
  1646  16B7  30C6               	movlw	(low (_data| 0))& (0+255)
  1647  16B8  00F4               	movwf	Write_USART_String@a
  1648  16B9  3000               	movlw	0
  1649  16BA  00F5               	movwf	Write_USART_String@a+1
  1650  16BB  160A  158A  257B  160A  118A  	fcall	_Write_USART_String
  1651  16C0                     l4288:
  1652                           
  1653                           ;LAB3.c: 121:       Write_USART(13);
  1654  16C0  300D               	movlw	13
  1655  16C1  160A  158A  2493  160A  118A  	fcall	_Write_USART
  1656  16C6                     l4290:
  1657                           
  1658                           ;LAB3.c: 122:       Write_USART(10);
  1659  16C6  300A               	movlw	10
  1660  16C7  160A  158A  2493  160A  118A  	fcall	_Write_USART
  1661  16CC                     l4292:
  1662                           
  1663                           ;LAB3.c: 123:       LCD_Clear();
  1664  16CC  160A  158A  249F  160A  118A  	fcall	_LCD_Clear
  1665  16D1                     l4294:
  1666                           
  1667                           ;LAB3.c: 124:       LCD_Cursor(1,1);
  1668  16D1  01F6               	clrf	LCD_Cursor@y
  1669  16D2  0AF6               	incf	LCD_Cursor@y,f
  1670  16D3  3001               	movlw	1
  1671  16D4  160A  158A  250D  160A  118A  	fcall	_LCD_Cursor
  1672  16D9                     l4296:
  1673                           
  1674                           ;LAB3.c: 125:       LCD_Print("V1   V2   conta");
  1675  16D9  309F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1676  16DA  00F6               	movwf	LCD_Print@a
  1677  16DB  3080               	movlw	128
  1678  16DC  00F7               	movwf	LCD_Print@a+1
  1679  16DD  160A  158A  270D  160A  118A  	fcall	_LCD_Print
  1680  16E2                     l4298:
  1681                           
  1682                           ;LAB3.c: 126:       LCD_Cursor(2,0);
  1683  16E2  01F6               	clrf	LCD_Cursor@y
  1684  16E3  3002               	movlw	2
  1685  16E4  160A  158A  250D  160A  118A  	fcall	_LCD_Cursor
  1686  16E9                     l4300:
  1687                           
  1688                           ;LAB3.c: 127:       LCD_Print(data);
  1689  16E9  30C6               	movlw	(low (_data| 0))& (0+255)
  1690  16EA  00F6               	movwf	LCD_Print@a
  1691  16EB  3000               	movlw	0
  1692  16EC  00F7               	movwf	LCD_Print@a+1
  1693  16ED  160A  158A  270D  160A  118A  	fcall	_LCD_Print
  1694  16F2                     l4302:
  1695                           
  1696                           ;LAB3.c: 128:       _delay((unsigned long)((500)*(8000000/4000.0)));
  1697  16F2  3006               	movlw	6
  1698  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  1699  16F4  1303               	bcf	3,6	;RP1=0, select bank0
  1700  16F5  00EB               	movwf	??_main+2
  1701  16F6  3013               	movlw	19
  1702  16F7  00EA               	movwf	??_main+1
  1703  16F8  30AD               	movlw	173
  1704  16F9  00E9               	movwf	??_main
  1705  16FA                     u6607:
  1706  16FA  0BE9               	decfsz	??_main,f
  1707  16FB  2EFA               	goto	u6607
  1708  16FC  0BEA               	decfsz	??_main+1,f
  1709  16FD  2EFA               	goto	u6607
  1710  16FE  0BEB               	decfsz	??_main+2,f
  1711  16FF  2EFA               	goto	u6607
  1712  1700  2E2D               	goto	l4274
  1713  1701  120A  118A  280C   	ljmp	start
  1714  1704                     __end_of_main:
  1715                           
  1716                           	psect	text1
  1717  0A8B                     __ptext1:	
  1718 ;; *************** function _sprintf *****************
  1719 ;; Defined at:
  1720 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  sp              1    wreg     PTR unsigned char 
  1723 ;;		 -> data(20), 
  1724 ;;  f               1   64[BANK0 ] PTR const unsigned char 
  1725 ;;		 -> STR_2(19), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1728 ;;		 -> data(20), 
  1729 ;;  val             4   18[BANK1 ] unsigned long 
  1730 ;;  tmpval          4   14[BANK1 ] struct .
  1731 ;;  fval            3   24[BANK1 ] struct .
  1732 ;;  prec            2   28[BANK1 ] int 
  1733 ;;  eexp            2   22[BANK1 ] int 
  1734 ;;  width           2   12[BANK1 ] int 
  1735 ;;  flag            2   10[BANK1 ] unsigned short 
  1736 ;;  cp              2    0        PTR const unsigned char 
  1737 ;;  len             2    0        unsigned int 
  1738 ;;  c               1   30[BANK1 ] unsigned char 
  1739 ;;  ap              1    9[BANK1 ] PTR void [1]
  1740 ;;		 -> ?_sprintf(2), 
  1741 ;;  d               1    0        unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  2   64[BANK0 ] int 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       9       0       0       0
  1752 ;;      Locals:         0       0      25       0       0
  1753 ;;      Temps:          0       0       6       0       0
  1754 ;;      Totals:         0       9      31       0       0
  1755 ;;Total ram usage:       40 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		___awdiv
  1760 ;;		___ftadd
  1761 ;;		___ftge
  1762 ;;		___ftmul
  1763 ;;		___ftneg
  1764 ;;		___ftsub
  1765 ;;		___fttol
  1766 ;;		___lldiv
  1767 ;;		___llmod
  1768 ;;		___lltoft
  1769 ;;		___wmul
  1770 ;;		__div_to_l_
  1771 ;;		__tdiv_to_l_
  1772 ;;		_fround
  1773 ;;		_isdigit
  1774 ;;		_scale
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _sprintf
  1782  0A8B                     _sprintf:
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           ;sprintf@sp stored from wreg
  1787  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0A8D  00BB               	movwf	sprintf@sp^(0+128)
  1790  0A8E                     l3952:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1793  0A8E  3061               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1794  0A8F  00A0               	movwf	??_sprintf^(0+128)
  1795  0A90  0820               	movf	??_sprintf^(0+128),w
  1796  0A91  00A9               	movwf	sprintf@ap^(0+128)
  1797  0A92                     L1:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1800  0A92  120A  118A  2E1B   	goto	l4232
  1801  0A95                     l3954:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1804  0A95  3025               	movlw	37
  1805  0A96  063E               	xorwf	sprintf@c^(0+128),w
  1806  0A97  1903               	btfsc	3,2
  1807  0A98  2A9A               	goto	u6011
  1808  0A99  2A9B               	goto	u6010
  1809  0A9A                     u6011:
  1810  0A9A  2AA7               	goto	l3960
  1811  0A9B                     u6010:
  1812  0A9B                     l3956:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1815  0A9B  083E               	movf	sprintf@c^(0+128),w
  1816  0A9C  00A0               	movwf	??_sprintf^(0+128)
  1817  0A9D  083B               	movf	sprintf@sp^(0+128),w
  1818  0A9E  0084               	movwf	4
  1819  0A9F  0820               	movf	??_sprintf^(0+128),w
  1820  0AA0  1383               	bcf	3,7	;select IRP bank0
  1821  0AA1  0080               	movwf	0
  1822  0AA2                     l3958:
  1823  0AA2  3001               	movlw	1
  1824  0AA3  00A0               	movwf	??_sprintf^(0+128)
  1825  0AA4  0820               	movf	??_sprintf^(0+128),w
  1826  0AA5  07BB               	addwf	sprintf@sp^(0+128),f
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1829  0AA6  2A92               	goto	L1
  1830  0AA7                     l3960:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1833  0AA7  01AC               	clrf	sprintf@width^(0+128)
  1834  0AA8  01AD               	clrf	(sprintf@width+1)^(0+128)
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1837  0AA9  01AA               	clrf	sprintf@flag^(0+128)
  1838  0AAA  01AB               	clrf	(sprintf@flag+1)^(0+128)
  1839  0AAB                     l3962:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1842  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0AAD  0860               	movf	sprintf@f,w
  1845  0AAE  0084               	movwf	4
  1846  0AAF  160A  118A  200A  120A  158A  	fcall	stringdir
  1847  0AB4  160A  158A  24AC  120A  158A  	fcall	_isdigit
  1848  0AB9  1C03               	btfss	3,0
  1849  0ABA  2ABC               	goto	u6021
  1850  0ABB  2ABD               	goto	u6020
  1851  0ABC                     u6021:
  1852  0ABC  2B03               	goto	l3974
  1853  0ABD                     u6020:
  1854  0ABD                     l3964:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1857  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0ABF  01AC               	clrf	sprintf@width^(0+128)
  1860  0AC0  01AD               	clrf	(sprintf@width+1)^(0+128)
  1861  0AC1                     l3966:
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1864  0AC1  300A               	movlw	10
  1865  0AC2  00F3               	movwf	___wmul@multiplier
  1866  0AC3  3000               	movlw	0
  1867  0AC4  00F4               	movwf	___wmul@multiplier+1
  1868  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0AC6  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0AC7  082D               	movf	(sprintf@width+1)^(0+128),w
  1871  0AC8  00F6               	movwf	___wmul@multiplicand+1
  1872  0AC9  082C               	movf	sprintf@width^(0+128),w
  1873  0ACA  00F5               	movwf	___wmul@multiplicand
  1874  0ACB  160A  158A  2556  120A  158A  	fcall	___wmul
  1875  0AD0  0874               	movf	?___wmul+1,w
  1876  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0AD3  00AD               	movwf	(sprintf@width+1)^(0+128)
  1879  0AD4  0873               	movf	?___wmul,w
  1880  0AD5  00AC               	movwf	sprintf@width^(0+128)
  1881  0AD6                     l3968:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1884  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0AD8  0860               	movf	sprintf@f,w
  1887  0AD9  0084               	movwf	4
  1888  0ADA  160A  118A  200A  120A  158A  	fcall	stringdir
  1889  0ADF  3ED0               	addlw	208
  1890  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  1891  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0AE2  00A0               	movwf	??_sprintf^(0+128)
  1893  0AE3  30FF               	movlw	255
  1894  0AE4  1803               	skipnc
  1895  0AE5  3000               	movlw	0
  1896  0AE6  00A1               	movwf	(??_sprintf^(0+128)+1)
  1897  0AE7  0820               	movf	??_sprintf^(0+128),w
  1898  0AE8  07AC               	addwf	sprintf@width^(0+128),f
  1899  0AE9  1803               	skipnc
  1900  0AEA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  1901  0AEB  0821               	movf	(??_sprintf+1)^(0+128),w
  1902  0AEC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  1903  0AED                     l3970:
  1904  0AED  3001               	movlw	1
  1905  0AEE  00A0               	movwf	??_sprintf^(0+128)
  1906  0AEF  0820               	movf	??_sprintf^(0+128),w
  1907  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0AF2  07E0               	addwf	sprintf@f,f
  1910  0AF3                     l3972:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1913  0AF3  0860               	movf	sprintf@f,w
  1914  0AF4  0084               	movwf	4
  1915  0AF5  160A  118A  200A  120A  158A  	fcall	stringdir
  1916  0AFA  160A  158A  24AC  120A  158A  	fcall	_isdigit
  1917  0AFF  1803               	btfsc	3,0
  1918  0B00  2B02               	goto	u6031
  1919  0B01  2B03               	goto	u6030
  1920  0B02                     u6031:
  1921  0B02  2AC1               	goto	l3966
  1922  0B03                     u6030:
  1923  0B03                     l3974:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1926  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0B05  0860               	movf	sprintf@f,w
  1929  0B06  0084               	movwf	4
  1930  0B07  160A  118A  200A  120A  158A  	fcall	stringdir
  1931  0B0C  3A2E               	xorlw	46
  1932  0B0D  1D03               	skipz
  1933  0B0E  2B10               	goto	u6041
  1934  0B0F  2B11               	goto	u6040
  1935  0B10                     u6041:
  1936  0B10  2B63               	goto	l3990
  1937  0B11                     u6040:
  1938  0B11                     l3976:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1941  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0B13  172B               	bsf	(sprintf@flag^(0+128)+1),6
  1944  0B14                     l3978:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1947  0B14  3001               	movlw	1
  1948  0B15  00A0               	movwf	??_sprintf^(0+128)
  1949  0B16  0820               	movf	??_sprintf^(0+128),w
  1950  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0B19  07E0               	addwf	sprintf@f,f
  1953  0B1A                     l3980:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1956  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0B1C  01BC               	clrf	sprintf@prec^(0+128)
  1959  0B1D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1962  0B1E  2B51               	goto	l3988
  1963  0B1F                     l3982:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1966  0B1F  300A               	movlw	10
  1967  0B20  00F3               	movwf	___wmul@multiplier
  1968  0B21  3000               	movlw	0
  1969  0B22  00F4               	movwf	___wmul@multiplier+1
  1970  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0B25  083D               	movf	(sprintf@prec+1)^(0+128),w
  1973  0B26  00F6               	movwf	___wmul@multiplicand+1
  1974  0B27  083C               	movf	sprintf@prec^(0+128),w
  1975  0B28  00F5               	movwf	___wmul@multiplicand
  1976  0B29  160A  158A  2556  120A  158A  	fcall	___wmul
  1977  0B2E  0874               	movf	?___wmul+1,w
  1978  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0B30  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0B31  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1981  0B32  0873               	movf	?___wmul,w
  1982  0B33  00BC               	movwf	sprintf@prec^(0+128)
  1983  0B34                     l3984:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1986  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0B36  0860               	movf	sprintf@f,w
  1989  0B37  0084               	movwf	4
  1990  0B38  160A  118A  200A  120A  158A  	fcall	stringdir
  1991  0B3D  3ED0               	addlw	208
  1992  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0B40  00A0               	movwf	??_sprintf^(0+128)
  1995  0B41  30FF               	movlw	255
  1996  0B42  1803               	skipnc
  1997  0B43  3000               	movlw	0
  1998  0B44  00A1               	movwf	(??_sprintf^(0+128)+1)
  1999  0B45  0820               	movf	??_sprintf^(0+128),w
  2000  0B46  07BC               	addwf	sprintf@prec^(0+128),f
  2001  0B47  1803               	skipnc
  2002  0B48  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2003  0B49  0821               	movf	(??_sprintf+1)^(0+128),w
  2004  0B4A  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2005  0B4B                     l3986:
  2006  0B4B  3001               	movlw	1
  2007  0B4C  00A0               	movwf	??_sprintf^(0+128)
  2008  0B4D  0820               	movf	??_sprintf^(0+128),w
  2009  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0B50  07E0               	addwf	sprintf@f,f
  2012  0B51                     l3988:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2015  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0B52  0860               	movf	sprintf@f,w
  2017  0B53  0084               	movwf	4
  2018  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  2019  0B59  160A  158A  24AC  120A  158A  	fcall	_isdigit
  2020  0B5E  1803               	btfsc	3,0
  2021  0B5F  2B61               	goto	u6051
  2022  0B60  2B62               	goto	u6050
  2023  0B61                     u6051:
  2024  0B61  2B1F               	goto	l3982
  2025  0B62                     u6050:
  2026  0B62  2B6B               	goto	l3996
  2027  0B63                     l3990:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2030  0B63  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0B64  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0B65  01BC               	clrf	sprintf@prec^(0+128)
  2033  0B66  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2034  0B67                     l3992:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2037  0B67  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2038  0B68  2B6B               	goto	l3996
  2039  0B69                     l374:	
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2041                           
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2044  0B69  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2047  0B6A  2B8F               	goto	l3998
  2048  0B6B                     l3996:
  2049  0B6B  3001               	movlw	1
  2050  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0B6E  07E0               	addwf	sprintf@f,f
  2053  0B6F  30FF               	movlw	-1
  2054  0B70  0760               	addwf	sprintf@f,w
  2055  0B71  0084               	movwf	4
  2056  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  2057  0B77  1683               	bsf	3,5	;RP0=1, select bank1
  2058  0B78  1303               	bcf	3,6	;RP1=0, select bank1
  2059  0B79  00BE               	movwf	sprintf@c^(0+128)
  2060  0B7A  00A0               	movwf	??_sprintf^(0+128)
  2061  0B7B  01A1               	clrf	(??_sprintf^(0+128)+1)
  2062                           
  2063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2064                           ; Switch size 1, requested type "simple"
  2065                           ; Number of cases is 1, Range of values is 0 to 0
  2066                           ; switch strategies available:
  2067                           ; Name         Instructions Cycles
  2068                           ; simple_byte            4     3 (average)
  2069                           ; direct_byte           11     8 (fixed)
  2070                           ; jumptable            260     6 (fixed)
  2071                           ;	Chosen strategy is simple_byte
  2072  0B7C  0821               	movf	(??_sprintf+1)^(0+128),w
  2073  0B7D  3A00               	xorlw	0	; case 0
  2074  0B7E  1903               	skipnz
  2075  0B7F  2B81               	goto	l4354
  2076  0B80  2A92               	goto	L1
  2077  0B81                     l4354:
  2078                           
  2079                           ; Switch size 1, requested type "simple"
  2080                           ; Number of cases is 4, Range of values is 0 to 105
  2081                           ; switch strategies available:
  2082                           ; Name         Instructions Cycles
  2083                           ; simple_byte           13     7 (average)
  2084                           ; jumptable            260     6 (fixed)
  2085                           ;	Chosen strategy is simple_byte
  2086  0B81  0820               	movf	??_sprintf^(0+128),w
  2087  0B82  3A00               	xorlw	0	; case 0
  2088  0B83  1903               	skipnz
  2089  0B84  2D42               	goto	L3
  2090  0B85  3A64               	xorlw	100	; case 100
  2091  0B86  1903               	skipnz
  2092  0B87  2B8F               	goto	l3998
  2093  0B88  3A02               	xorlw	2	; case 102
  2094  0B89  1903               	skipnz
  2095  0B8A  2B69               	goto	l374
  2096  0B8B  3A0F               	xorlw	15	; case 105
  2097  0B8C  1903               	skipnz
  2098  0B8D  2B8F               	goto	l3998
  2099  0B8E  2A92               	goto	L1
  2100  0B8F                     l3998:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2103  0B8F  3000               	movlw	0
  2104  0B90  052A               	andwf	sprintf@flag^(0+128),w
  2105  0B91  00A0               	movwf	??_sprintf^(0+128)
  2106  0B92  3007               	movlw	7
  2107  0B93  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2108  0B94  00A1               	movwf	(??_sprintf+1)^(0+128)
  2109  0B95  0820               	movf	??_sprintf^(0+128),w
  2110  0B96  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2111  0B97  1903               	btfsc	3,2
  2112  0B98  2B9A               	goto	u6061
  2113  0B99  2B9D               	goto	u6060
  2114  0B9A                     u6061:
  2115  0B9A  120A  118A  2C6C   	goto	l4154
  2116  0B9D                     u6060:
  2117  0B9D                     l4000:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2120  0B9D  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2121  0B9E  2BA0               	goto	u6071
  2122  0B9F  2BA1               	goto	u6070
  2123  0BA0                     u6071:
  2124  0BA0  2BA5               	goto	l4004
  2125  0BA1                     u6070:
  2126  0BA1                     l4002:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2129  0BA1  3006               	movlw	6
  2130  0BA2  00BC               	movwf	sprintf@prec^(0+128)
  2131  0BA3  3000               	movlw	0
  2132  0BA4  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2133  0BA5                     l4004:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2136  0BA5  0829               	movf	sprintf@ap^(0+128),w
  2137  0BA6  0084               	movwf	4
  2138  0BA7  1383               	bcf	3,7	;select IRP bank0
  2139  0BA8  0800               	movf	0,w
  2140  0BA9  00B8               	movwf	sprintf@fval^(0+128)
  2141  0BAA  0A84               	incf	4,f
  2142  0BAB  0800               	movf	0,w
  2143  0BAC  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2144  0BAD  0A84               	incf	4,f
  2145  0BAE  0800               	movf	0,w
  2146  0BAF  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2147  0BB0                     l4006:
  2148  0BB0  3003               	movlw	3
  2149  0BB1  00A0               	movwf	??_sprintf^(0+128)
  2150  0BB2  0820               	movf	??_sprintf^(0+128),w
  2151  0BB3  07A9               	addwf	sprintf@ap^(0+128),f
  2152  0BB4                     l4008:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2155  0BB4  0838               	movf	sprintf@fval^(0+128),w
  2156  0BB5  00F3               	movwf	___ftge@ff1
  2157  0BB6  0839               	movf	(sprintf@fval+1)^(0+128),w
  2158  0BB7  00F4               	movwf	___ftge@ff1+1
  2159  0BB8  083A               	movf	(sprintf@fval+2)^(0+128),w
  2160  0BB9  00F5               	movwf	___ftge@ff1+2
  2161  0BBA  3000               	movlw	0
  2162  0BBB  00F6               	movwf	___ftge@ff2
  2163  0BBC  3000               	movlw	0
  2164  0BBD  00F7               	movwf	___ftge@ff2+1
  2165  0BBE  3000               	movlw	0
  2166  0BBF  00F8               	movwf	___ftge@ff2+2
  2167  0BC0  160A  158A  265D  120A  158A  	fcall	___ftge
  2168  0BC5  1803               	btfsc	3,0
  2169  0BC6  2BC8               	goto	u6081
  2170  0BC7  2BC9               	goto	u6080
  2171  0BC8                     u6081:
  2172  0BC8  2BE2               	goto	l4014
  2173  0BC9                     u6080:
  2174  0BC9                     l4010:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2177  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0BCB  0838               	movf	sprintf@fval^(0+128),w
  2180  0BCC  00F3               	movwf	___ftneg@f1
  2181  0BCD  0839               	movf	(sprintf@fval+1)^(0+128),w
  2182  0BCE  00F4               	movwf	___ftneg@f1+1
  2183  0BCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2184  0BD0  00F5               	movwf	___ftneg@f1+2
  2185  0BD1  160A  118A  20BF  120A  158A  	fcall	___ftneg
  2186  0BD6  0873               	movf	?___ftneg,w
  2187  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0BD9  00B8               	movwf	sprintf@fval^(0+128)
  2190  0BDA  0874               	movf	?___ftneg+1,w
  2191  0BDB  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2192  0BDC  0875               	movf	?___ftneg+2,w
  2193  0BDD  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2194  0BDE                     l4012:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2197  0BDE  3003               	movlw	3
  2198  0BDF  04AA               	iorwf	sprintf@flag^(0+128),f
  2199  0BE0  3000               	movlw	0
  2200  0BE1  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2201  0BE2                     l4014:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2204  0BE2  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0BE3  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0BE4  01B6               	clrf	sprintf@eexp^(0+128)
  2207  0BE5  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2208  0BE6                     l4016:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2211  0BE6  083A               	movf	(sprintf@fval+2)^(0+128),w
  2212  0BE7  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2213  0BE8  0438               	iorwf	sprintf@fval^(0+128),w
  2214  0BE9  1903               	skipnz
  2215  0BEA  2BEC               	goto	u6091
  2216  0BEB  2BED               	goto	u6090
  2217  0BEC                     u6091:
  2218  0BEC  2CE7               	goto	l4042
  2219  0BED                     u6090:
  2220  0BED                     l4018:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2223  0BED  30B8               	movlw	low (sprintf@fval| 0)
  2224  0BEE  0084               	movwf	4
  2225  0BEF  1383               	bcf	3,7	;select IRP bank1
  2226  0BF0  0800               	movf	0,w
  2227  0BF1  00A0               	movwf	??_sprintf^(0+128)
  2228  0BF2  0A84               	incf	4,f
  2229  0BF3  0800               	movf	0,w
  2230  0BF4  00A1               	movwf	(??_sprintf^(0+128)+1)
  2231  0BF5  0A84               	incf	4,f
  2232  0BF6  0800               	movf	0,w
  2233  0BF7  00A2               	movwf	(??_sprintf^(0+128)+2)
  2234  0BF8  0A84               	incf	4,f
  2235  0BF9  0800               	movf	0,w
  2236  0BFA  00A3               	movwf	(??_sprintf^(0+128)+3)
  2237  0BFB  300F               	movlw	15
  2238  0BFC                     u6105:
  2239  0BFC  1003               	clrc
  2240  0BFD  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2241  0BFE  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2242  0BFF  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2243  0C00  0CA0               	rrf	??_sprintf^(0+128),f
  2244  0C01                     u6100:
  2245  0C01  3EFF               	addlw	-1
  2246  0C02  1D03               	skipz
  2247  0C03  2BFC               	goto	u6105
  2248  0C04  30FF               	movlw	255
  2249  0C05  0520               	andwf	??_sprintf^(0+128),w
  2250  0C06  00A4               	movwf	(??_sprintf+4)^(0+128)
  2251  0C07  3000               	movlw	0
  2252  0C08  0521               	andwf	(??_sprintf+1)^(0+128),w
  2253  0C09  00A5               	movwf	(??_sprintf+5)^(0+128)
  2254  0C0A  0824               	movf	(??_sprintf+4)^(0+128),w
  2255  0C0B  3E82               	addlw	130
  2256  0C0C  00B6               	movwf	sprintf@eexp^(0+128)
  2257  0C0D  0825               	movf	(??_sprintf+5)^(0+128),w
  2258  0C0E  1803               	skipnc
  2259  0C0F  3E01               	addlw	1
  2260  0C10  3EFF               	addlw	255
  2261  0C11  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2262  0C12                     l4020:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2265  0C12  30FF               	movlw	255
  2266  0C13  07B6               	addwf	sprintf@eexp^(0+128),f
  2267  0C14  1803               	skipnc
  2268  0C15  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2269  0C16  30FF               	movlw	255
  2270  0C17  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2271  0C18                     l4022:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2274  0C18  3003               	movlw	3
  2275  0C19  00F3               	movwf	___wmul@multiplier
  2276  0C1A  3000               	movlw	0
  2277  0C1B  00F4               	movwf	___wmul@multiplier+1
  2278  0C1C  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2279  0C1D  00F6               	movwf	___wmul@multiplicand+1
  2280  0C1E  0836               	movf	sprintf@eexp^(0+128),w
  2281  0C1F  00F5               	movwf	___wmul@multiplicand
  2282  0C20  160A  158A  2556  120A  158A  	fcall	___wmul
  2283  0C25  0874               	movf	?___wmul+1,w
  2284  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0C28  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2287  0C29  0873               	movf	?___wmul,w
  2288  0C2A  00B6               	movwf	sprintf@eexp^(0+128)
  2289  0C2B                     l4024:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2292  0C2B  300A               	movlw	10
  2293  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0C2E  00A0               	movwf	___awdiv@divisor
  2296  0C2F  3000               	movlw	0
  2297  0C30  00A1               	movwf	___awdiv@divisor+1
  2298  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  2299  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  2300  0C33  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2301  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0C36  00A3               	movwf	___awdiv@dividend+1
  2304  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0C39  0836               	movf	sprintf@eexp^(0+128),w
  2307  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0C3C  00A2               	movwf	___awdiv@dividend
  2310  0C3D  160A  118A  2177  120A  158A  	fcall	___awdiv
  2311  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0C44  0821               	movf	?___awdiv+1,w
  2314  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0C47  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2317  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0C4A  0820               	movf	?___awdiv,w
  2320  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  2322  0C4D  00B6               	movwf	sprintf@eexp^(0+128)
  2323  0C4E                     l4026:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2326  0C4E  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2327  0C4F  2C51               	goto	u6111
  2328  0C50  2C52               	goto	u6110
  2329  0C51                     u6111:
  2330  0C51  2C58               	goto	l4030
  2331  0C52                     u6110:
  2332  0C52                     l4028:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2335  0C52  30FF               	movlw	255
  2336  0C53  07B6               	addwf	sprintf@eexp^(0+128),f
  2337  0C54  1803               	skipnc
  2338  0C55  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2339  0C56  30FF               	movlw	255
  2340  0C57  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2341  0C58                     l4030:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2344  0C58  0336               	decf	sprintf@eexp^(0+128),w
  2345  0C59  3AFF               	xorlw	255
  2346  0C5A  120A  158A  2545  120A  158A  	fcall	_scale
  2347  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0C61  083D               	movf	?_scale,w
  2350  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0C64  00AE               	movwf	sprintf@tmpval^(0+128)
  2353  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0C67  083E               	movf	?_scale+1,w
  2356  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0C6A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2359  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0C6D  083F               	movf	?_scale+2,w
  2362  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0C70  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2365  0C71                     l4032:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2368  0C71  0838               	movf	sprintf@fval^(0+128),w
  2369  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0C74  00AD               	movwf	___ftmul@f1
  2372  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0C77  0839               	movf	(sprintf@fval+1)^(0+128),w
  2375  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0C7A  00AE               	movwf	___ftmul@f1+1
  2378  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  2379  0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  2380  0C7D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2381  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0C80  00AF               	movwf	___ftmul@f1+2
  2384  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0C82  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0C83  082E               	movf	sprintf@tmpval^(0+128),w
  2387  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0C86  00B0               	movwf	___ftmul@f2
  2390  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0C89  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2393  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0C8C  00B1               	movwf	___ftmul@f2+1
  2396  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0C8E  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0C8F  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2399  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0C92  00B2               	movwf	___ftmul@f2+2
  2402  0C93  160A  118A  2525  120A  158A  	fcall	___ftmul
  2403  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0C9A  082D               	movf	?___ftmul,w
  2406  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0C9D  00AE               	movwf	sprintf@tmpval^(0+128)
  2409  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0CA0  082E               	movf	?___ftmul+1,w
  2412  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0CA3  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2415  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0CA6  082F               	movf	?___ftmul+2,w
  2418  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0CA9  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2421  0CAA                     l4034:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2424  0CAA  082E               	movf	sprintf@tmpval^(0+128),w
  2425  0CAB  00F3               	movwf	___ftge@ff1
  2426  0CAC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2427  0CAD  00F4               	movwf	___ftge@ff1+1
  2428  0CAE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2429  0CAF  00F5               	movwf	___ftge@ff1+2
  2430  0CB0  3000               	movlw	0
  2431  0CB1  00F6               	movwf	___ftge@ff2
  2432  0CB2  3080               	movlw	128
  2433  0CB3  00F7               	movwf	___ftge@ff2+1
  2434  0CB4  303F               	movlw	63
  2435  0CB5  00F8               	movwf	___ftge@ff2+2
  2436  0CB6  160A  158A  265D  120A  158A  	fcall	___ftge
  2437  0CBB  1803               	btfsc	3,0
  2438  0CBC  2CBE               	goto	u6121
  2439  0CBD  2CBF               	goto	u6120
  2440  0CBE                     u6121:
  2441  0CBE  2CC8               	goto	l4038
  2442  0CBF                     u6120:
  2443  0CBF                     l4036:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2446  0CBF  30FF               	movlw	255
  2447  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0CC2  07B6               	addwf	sprintf@eexp^(0+128),f
  2450  0CC3  1803               	skipnc
  2451  0CC4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2452  0CC5  30FF               	movlw	255
  2453  0CC6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2454  0CC7  2CE7               	goto	l4042
  2455  0CC8                     l4038:
  2456  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0CCA  082E               	movf	sprintf@tmpval^(0+128),w
  2459  0CCB  00F3               	movwf	___ftge@ff1
  2460  0CCC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2461  0CCD  00F4               	movwf	___ftge@ff1+1
  2462  0CCE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2463  0CCF  00F5               	movwf	___ftge@ff1+2
  2464  0CD0  3000               	movlw	0
  2465  0CD1  00F6               	movwf	___ftge@ff2
  2466  0CD2  3020               	movlw	32
  2467  0CD3  00F7               	movwf	___ftge@ff2+1
  2468  0CD4  3041               	movlw	65
  2469  0CD5  00F8               	movwf	___ftge@ff2+2
  2470  0CD6  160A  158A  265D  120A  158A  	fcall	___ftge
  2471  0CDB  1C03               	btfss	3,0
  2472  0CDC  2CDE               	goto	u6131
  2473  0CDD  2CDF               	goto	u6130
  2474  0CDE                     u6131:
  2475  0CDE  2CE7               	goto	l4042
  2476  0CDF                     u6130:
  2477  0CDF                     l4040:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2480  0CDF  3001               	movlw	1
  2481  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0CE2  07B6               	addwf	sprintf@eexp^(0+128),f
  2484  0CE3  1803               	skipnc
  2485  0CE4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2486  0CE5  3000               	movlw	0
  2487  0CE6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2488  0CE7                     l4042:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2491  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0CE9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2494  0CEA  3A80               	xorlw	128
  2495  0CEB  00FF               	movwf	btemp+1
  2496  0CEC  3080               	movlw	128
  2497  0CED  027F               	subwf	btemp+1,w
  2498  0CEE  1D03               	skipz
  2499  0CEF  2CF2               	goto	u6145
  2500  0CF0  300D               	movlw	13
  2501  0CF1  023C               	subwf	sprintf@prec^(0+128),w
  2502  0CF2                     u6145:
  2503  0CF2  1803               	skipnc
  2504  0CF3  2CF5               	goto	u6141
  2505  0CF4  2CF6               	goto	u6140
  2506  0CF5                     u6141:
  2507  0CF5  2D2F               	goto	l4046
  2508  0CF6                     u6140:
  2509  0CF6                     l4044:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2512  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  2514  0CF8  083C               	movf	sprintf@prec^(0+128),w
  2515  0CF9  120A  118A  2638  120A  158A  	fcall	_fround
  2516  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0D00  083D               	movf	?_fround,w
  2519  0D01  00CD               	movwf	___ftadd@f1
  2520  0D02  083E               	movf	?_fround+1,w
  2521  0D03  00CE               	movwf	___ftadd@f1+1
  2522  0D04  083F               	movf	?_fround+2,w
  2523  0D05  00CF               	movwf	___ftadd@f1+2
  2524  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  2525  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  2526  0D08  0838               	movf	sprintf@fval^(0+128),w
  2527  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0D0B  00D0               	movwf	___ftadd@f2
  2530  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0D0E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2533  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0D11  00D1               	movwf	___ftadd@f2+1
  2536  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0D13  1303               	bcf	3,6	;RP1=0, select bank1
  2538  0D14  083A               	movf	(sprintf@fval+2)^(0+128),w
  2539  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0D17  00D2               	movwf	___ftadd@f2+2
  2542  0D18  120A  158A  2155  120A  158A  	fcall	___ftadd
  2543  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0D1F  084D               	movf	?___ftadd,w
  2546  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0D22  00B8               	movwf	sprintf@fval^(0+128)
  2549  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0D25  084E               	movf	?___ftadd+1,w
  2552  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0D28  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2555  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0D2B  084F               	movf	?___ftadd+2,w
  2558  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0D2E  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2561  0D2F                     l4046:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2564  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  2565  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  2566  0D31  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2567  0D32  3A80               	xorlw	128
  2568  0D33  00FF               	movwf	btemp+1
  2569  0D34  3080               	movlw	128
  2570  0D35  027F               	subwf	btemp+1,w
  2571  0D36  1D03               	skipz
  2572  0D37  2D3A               	goto	u6155
  2573  0D38  300A               	movlw	10
  2574  0D39  0236               	subwf	sprintf@eexp^(0+128),w
  2575  0D3A                     u6155:
  2576  0D3A  1803               	skipnc
  2577  0D3B  2D3F               	goto	u6151
  2578  0D3C  120A  118A  2821   	goto	u6150
  2579  0D3F                     u6151:
  2580  0D3F  120A  118A  2858   	goto	l4054
  2581  0D42                     L3:
  2582  0D42                     L2:
  2583  0D42  120A  118A  2E33   	ljmp	l4234
  2584                           
  2585                           	psect	text2
  2586  0D45                     __ptext2:	
  2587 ;; *************** function _scale *****************
  2588 ;; Defined at:
  2589 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  scl             1    wreg     char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  scl             1   37[BANK0 ] char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  3   29[BANK0 ] char 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       3       0       0       0
  2604 ;;      Locals:         0       4       0       0       0
  2605 ;;      Temps:          0       2       0       0       0
  2606 ;;      Totals:         0       9       0       0       0
  2607 ;;Total ram usage:        9 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    4
  2610 ;; This function calls:
  2611 ;;		___awdiv
  2612 ;;		___awmod
  2613 ;;		___bmul
  2614 ;;		___ftmul
  2615 ;; This function is called by:
  2616 ;;		_sprintf
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _scale
  2622  0D45                     _scale:
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2626                           ;scale@scl stored from wreg
  2627  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0D47  00C5               	movwf	scale@scl
  2630  0D48                     l3752:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2633  0D48  1FC5               	btfss	scale@scl,7
  2634  0D49  2D4B               	goto	u5611
  2635  0D4A  2D4C               	goto	u5610
  2636  0D4B                     u5611:
  2637  0D4B  2EA7               	goto	l3774
  2638  0D4C                     u5610:
  2639  0D4C                     l3754:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2642  0D4C  09C5               	comf	scale@scl,f
  2643  0D4D  0AC5               	incf	scale@scl,f
  2644  0D4E                     l3756:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2647  0D4E  0845               	movf	scale@scl,w
  2648  0D4F  3A80               	xorlw	128
  2649  0D50  3E12               	addlw	-238
  2650  0D51  1C03               	skipc
  2651  0D52  2D54               	goto	u5621
  2652  0D53  2D55               	goto	u5620
  2653  0D54                     u5621:
  2654  0D54  2E13               	goto	l3764
  2655  0D55                     u5620:
  2656  0D55                     l3758:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2659  0D55  3003               	movlw	3
  2660  0D56  00C0               	movwf	??_scale
  2661  0D57  0840               	movf	??_scale,w
  2662  0D58  00A9               	movwf	___bmul@multiplicand
  2663  0D59  0845               	movf	scale@scl,w
  2664  0D5A  00F5               	movwf	___awmod@dividend
  2665  0D5B  01F6               	clrf	___awmod@dividend+1
  2666  0D5C  1BF5               	btfsc	___awmod@dividend,7
  2667  0D5D  03F6               	decf	___awmod@dividend+1,f
  2668  0D5E  3064               	movlw	100
  2669  0D5F  00F3               	movwf	___awmod@divisor
  2670  0D60  3000               	movlw	0
  2671  0D61  00F4               	movwf	___awmod@divisor+1
  2672  0D62  160A  158A  27A7  120A  158A  	fcall	___awmod
  2673  0D67  0874               	movf	?___awmod+1,w
  2674  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0D6A  00A3               	movwf	___awdiv@dividend+1
  2677  0D6B  0873               	movf	?___awmod,w
  2678  0D6C  00A2               	movwf	___awdiv@dividend
  2679  0D6D  300A               	movlw	10
  2680  0D6E  00A0               	movwf	___awdiv@divisor
  2681  0D6F  3000               	movlw	0
  2682  0D70  00A1               	movwf	___awdiv@divisor+1
  2683  0D71  160A  118A  2177  120A  158A  	fcall	___awdiv
  2684  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0D78  0820               	movf	?___awdiv,w
  2687  0D79  160A  158A  24BE  120A  158A  	fcall	___bmul
  2688  0D7E  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2689  0D7F  0084               	movwf	4
  2690  0D80  160A  118A  200A  120A  158A  	fcall	stringdir
  2691  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0D87  00AD               	movwf	___ftmul@f1
  2694  0D88  160A  118A  200A  120A  158A  	fcall	stringdir
  2695  0D8D  00AE               	movwf	___ftmul@f1+1
  2696  0D8E  160A  118A  200A  120A  158A  	fcall	stringdir
  2697  0D93  00AF               	movwf	___ftmul@f1+2
  2698  0D94  3003               	movlw	3
  2699  0D95  00C1               	movwf	??_scale+1
  2700  0D96  0841               	movf	??_scale+1,w
  2701  0D97  00A9               	movwf	___bmul@multiplicand
  2702  0D98  0845               	movf	scale@scl,w
  2703  0D99  00A2               	movwf	___awdiv@dividend
  2704  0D9A  01A3               	clrf	___awdiv@dividend+1
  2705  0D9B  1BA2               	btfsc	___awdiv@dividend,7
  2706  0D9C  03A3               	decf	___awdiv@dividend+1,f
  2707  0D9D  3064               	movlw	100
  2708  0D9E  00A0               	movwf	___awdiv@divisor
  2709  0D9F  3000               	movlw	0
  2710  0DA0  00A1               	movwf	___awdiv@divisor+1
  2711  0DA1  160A  118A  2177  120A  158A  	fcall	___awdiv
  2712  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0DA8  0820               	movf	?___awdiv,w
  2715  0DA9  160A  158A  24BE  120A  158A  	fcall	___bmul
  2716  0DAE  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2717  0DAF  0084               	movwf	4
  2718  0DB0  160A  118A  200A  120A  158A  	fcall	stringdir
  2719  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0DB7  00B0               	movwf	___ftmul@f2
  2722  0DB8  160A  118A  200A  120A  158A  	fcall	stringdir
  2723  0DBD  00B1               	movwf	___ftmul@f2+1
  2724  0DBE  160A  118A  200A  120A  158A  	fcall	stringdir
  2725  0DC3  00B2               	movwf	___ftmul@f2+2
  2726  0DC4  160A  118A  2525  120A  158A  	fcall	___ftmul
  2727  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0DCB  082D               	movf	?___ftmul,w
  2730  0DCC  00C2               	movwf	_scale$1067
  2731  0DCD  082E               	movf	?___ftmul+1,w
  2732  0DCE  00C3               	movwf	_scale$1067+1
  2733  0DCF  082F               	movf	?___ftmul+2,w
  2734  0DD0  00C4               	movwf	_scale$1067+2
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2737  0DD1  3003               	movlw	3
  2738  0DD2  00C0               	movwf	??_scale
  2739  0DD3  0840               	movf	??_scale,w
  2740  0DD4  00A9               	movwf	___bmul@multiplicand
  2741  0DD5  0845               	movf	scale@scl,w
  2742  0DD6  00F5               	movwf	___awmod@dividend
  2743  0DD7  01F6               	clrf	___awmod@dividend+1
  2744  0DD8  1BF5               	btfsc	___awmod@dividend,7
  2745  0DD9  03F6               	decf	___awmod@dividend+1,f
  2746  0DDA  300A               	movlw	10
  2747  0DDB  00F3               	movwf	___awmod@divisor
  2748  0DDC  3000               	movlw	0
  2749  0DDD  00F4               	movwf	___awmod@divisor+1
  2750  0DDE  160A  158A  27A7  120A  158A  	fcall	___awmod
  2751  0DE3  0873               	movf	?___awmod,w
  2752  0DE4  160A  158A  24BE  120A  158A  	fcall	___bmul
  2753  0DE9  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2754  0DEA  0084               	movwf	4
  2755  0DEB  160A  118A  200A  120A  158A  	fcall	stringdir
  2756  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0DF2  00AD               	movwf	___ftmul@f1
  2759  0DF3  160A  118A  200A  120A  158A  	fcall	stringdir
  2760  0DF8  00AE               	movwf	___ftmul@f1+1
  2761  0DF9  160A  118A  200A  120A  158A  	fcall	stringdir
  2762  0DFE  00AF               	movwf	___ftmul@f1+2
  2763  0DFF  0842               	movf	_scale$1067,w
  2764  0E00  00B0               	movwf	___ftmul@f2
  2765  0E01  0843               	movf	_scale$1067+1,w
  2766  0E02  00B1               	movwf	___ftmul@f2+1
  2767  0E03  0844               	movf	_scale$1067+2,w
  2768  0E04  00B2               	movwf	___ftmul@f2+2
  2769  0E05  160A  118A  2525  120A  158A  	fcall	___ftmul
  2770  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0E0C  082D               	movf	?___ftmul,w
  2773  0E0D  00BD               	movwf	?_scale
  2774  0E0E  082E               	movf	?___ftmul+1,w
  2775  0E0F  00BE               	movwf	?_scale+1
  2776  0E10  082F               	movf	?___ftmul+2,w
  2777  0E11  00BF               	movwf	?_scale+2
  2778  0E12  2FFF               	goto	l352
  2779  0E13                     l3764:
  2780  0E13  0845               	movf	scale@scl,w
  2781  0E14  3A80               	xorlw	128
  2782  0E15  3E75               	addlw	-139
  2783  0E16  1C03               	skipc
  2784  0E17  2E19               	goto	u5631
  2785  0E18  2E1A               	goto	u5630
  2786  0E19                     u5631:
  2787  0E19  2E86               	goto	l3770
  2788  0E1A                     u5630:
  2789  0E1A                     l3766:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2792  0E1A  3003               	movlw	3
  2793  0E1B  00C0               	movwf	??_scale
  2794  0E1C  0840               	movf	??_scale,w
  2795  0E1D  00A9               	movwf	___bmul@multiplicand
  2796  0E1E  0845               	movf	scale@scl,w
  2797  0E1F  00F5               	movwf	___awmod@dividend
  2798  0E20  01F6               	clrf	___awmod@dividend+1
  2799  0E21  1BF5               	btfsc	___awmod@dividend,7
  2800  0E22  03F6               	decf	___awmod@dividend+1,f
  2801  0E23  300A               	movlw	10
  2802  0E24  00F3               	movwf	___awmod@divisor
  2803  0E25  3000               	movlw	0
  2804  0E26  00F4               	movwf	___awmod@divisor+1
  2805  0E27  160A  158A  27A7  120A  158A  	fcall	___awmod
  2806  0E2C  0873               	movf	?___awmod,w
  2807  0E2D  160A  158A  24BE  120A  158A  	fcall	___bmul
  2808  0E32  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2809  0E33  0084               	movwf	4
  2810  0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  2811  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0E3B  00AD               	movwf	___ftmul@f1
  2814  0E3C  160A  118A  200A  120A  158A  	fcall	stringdir
  2815  0E41  00AE               	movwf	___ftmul@f1+1
  2816  0E42  160A  118A  200A  120A  158A  	fcall	stringdir
  2817  0E47  00AF               	movwf	___ftmul@f1+2
  2818  0E48  3003               	movlw	3
  2819  0E49  00C1               	movwf	??_scale+1
  2820  0E4A  0841               	movf	??_scale+1,w
  2821  0E4B  00A9               	movwf	___bmul@multiplicand
  2822  0E4C  0845               	movf	scale@scl,w
  2823  0E4D  00A2               	movwf	___awdiv@dividend
  2824  0E4E  01A3               	clrf	___awdiv@dividend+1
  2825  0E4F  1BA2               	btfsc	___awdiv@dividend,7
  2826  0E50  03A3               	decf	___awdiv@dividend+1,f
  2827  0E51  300A               	movlw	10
  2828  0E52  00A0               	movwf	___awdiv@divisor
  2829  0E53  3000               	movlw	0
  2830  0E54  00A1               	movwf	___awdiv@divisor+1
  2831  0E55  160A  118A  2177  120A  158A  	fcall	___awdiv
  2832  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0E5C  0820               	movf	?___awdiv,w
  2835  0E5D  160A  158A  24BE  120A  158A  	fcall	___bmul
  2836  0E62  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2837  0E63  0084               	movwf	4
  2838  0E64  160A  118A  200A  120A  158A  	fcall	stringdir
  2839  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0E6B  00B0               	movwf	___ftmul@f2
  2842  0E6C  160A  118A  200A  120A  158A  	fcall	stringdir
  2843  0E71  00B1               	movwf	___ftmul@f2+1
  2844  0E72  160A  118A  200A  120A  158A  	fcall	stringdir
  2845  0E77  00B2               	movwf	___ftmul@f2+2
  2846  0E78  160A  118A  2525  120A  158A  	fcall	___ftmul
  2847  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0E7F  082D               	movf	?___ftmul,w
  2850  0E80  00BD               	movwf	?_scale
  2851  0E81  082E               	movf	?___ftmul+1,w
  2852  0E82  00BE               	movwf	?_scale+1
  2853  0E83  082F               	movf	?___ftmul+2,w
  2854  0E84  00BF               	movwf	?_scale+2
  2855  0E85  2FFF               	goto	l352
  2856  0E86                     l3770:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2859  0E86  3003               	movlw	3
  2860  0E87  00C0               	movwf	??_scale
  2861  0E88  0840               	movf	??_scale,w
  2862  0E89  00A9               	movwf	___bmul@multiplicand
  2863  0E8A  0845               	movf	scale@scl,w
  2864  0E8B  160A  158A  24BE  120A  158A  	fcall	___bmul
  2865  0E90  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2866  0E91  0084               	movwf	4
  2867  0E92  160A  118A  200A  120A  158A  	fcall	stringdir
  2868  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0E99  00BD               	movwf	?_scale
  2871  0E9A  160A  118A  200A  120A  158A  	fcall	stringdir
  2872  0E9F  00BE               	movwf	?_scale+1
  2873  0EA0  160A  118A  200A  120A  158A  	fcall	stringdir
  2874  0EA5  00BF               	movwf	?_scale+2
  2875  0EA6  2FFF               	goto	l352
  2876  0EA7                     l3774:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2879  0EA7  0845               	movf	scale@scl,w
  2880  0EA8  3A80               	xorlw	128
  2881  0EA9  3E12               	addlw	-238
  2882  0EAA  1C03               	skipc
  2883  0EAB  2EAD               	goto	u5641
  2884  0EAC  2EAE               	goto	u5640
  2885  0EAD                     u5641:
  2886  0EAD  2F6C               	goto	l3782
  2887  0EAE                     u5640:
  2888  0EAE                     l3776:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2891  0EAE  3003               	movlw	3
  2892  0EAF  00C0               	movwf	??_scale
  2893  0EB0  0840               	movf	??_scale,w
  2894  0EB1  00A9               	movwf	___bmul@multiplicand
  2895  0EB2  0845               	movf	scale@scl,w
  2896  0EB3  00F5               	movwf	___awmod@dividend
  2897  0EB4  01F6               	clrf	___awmod@dividend+1
  2898  0EB5  1BF5               	btfsc	___awmod@dividend,7
  2899  0EB6  03F6               	decf	___awmod@dividend+1,f
  2900  0EB7  3064               	movlw	100
  2901  0EB8  00F3               	movwf	___awmod@divisor
  2902  0EB9  3000               	movlw	0
  2903  0EBA  00F4               	movwf	___awmod@divisor+1
  2904  0EBB  160A  158A  27A7  120A  158A  	fcall	___awmod
  2905  0EC0  0874               	movf	?___awmod+1,w
  2906  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0EC3  00A3               	movwf	___awdiv@dividend+1
  2909  0EC4  0873               	movf	?___awmod,w
  2910  0EC5  00A2               	movwf	___awdiv@dividend
  2911  0EC6  300A               	movlw	10
  2912  0EC7  00A0               	movwf	___awdiv@divisor
  2913  0EC8  3000               	movlw	0
  2914  0EC9  00A1               	movwf	___awdiv@divisor+1
  2915  0ECA  160A  118A  2177  120A  158A  	fcall	___awdiv
  2916  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0ED1  0820               	movf	?___awdiv,w
  2919  0ED2  160A  158A  24BE  120A  158A  	fcall	___bmul
  2920  0ED7  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2921  0ED8  0084               	movwf	4
  2922  0ED9  160A  118A  200A  120A  158A  	fcall	stringdir
  2923  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0EE0  00AD               	movwf	___ftmul@f1
  2926  0EE1  160A  118A  200A  120A  158A  	fcall	stringdir
  2927  0EE6  00AE               	movwf	___ftmul@f1+1
  2928  0EE7  160A  118A  200A  120A  158A  	fcall	stringdir
  2929  0EEC  00AF               	movwf	___ftmul@f1+2
  2930  0EED  3003               	movlw	3
  2931  0EEE  00C1               	movwf	??_scale+1
  2932  0EEF  0841               	movf	??_scale+1,w
  2933  0EF0  00A9               	movwf	___bmul@multiplicand
  2934  0EF1  0845               	movf	scale@scl,w
  2935  0EF2  00A2               	movwf	___awdiv@dividend
  2936  0EF3  01A3               	clrf	___awdiv@dividend+1
  2937  0EF4  1BA2               	btfsc	___awdiv@dividend,7
  2938  0EF5  03A3               	decf	___awdiv@dividend+1,f
  2939  0EF6  3064               	movlw	100
  2940  0EF7  00A0               	movwf	___awdiv@divisor
  2941  0EF8  3000               	movlw	0
  2942  0EF9  00A1               	movwf	___awdiv@divisor+1
  2943  0EFA  160A  118A  2177  120A  158A  	fcall	___awdiv
  2944  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0F01  0820               	movf	?___awdiv,w
  2947  0F02  160A  158A  24BE  120A  158A  	fcall	___bmul
  2948  0F07  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2949  0F08  0084               	movwf	4
  2950  0F09  160A  118A  200A  120A  158A  	fcall	stringdir
  2951  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0F10  00B0               	movwf	___ftmul@f2
  2954  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2955  0F16  00B1               	movwf	___ftmul@f2+1
  2956  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2957  0F1C  00B2               	movwf	___ftmul@f2+2
  2958  0F1D  160A  118A  2525  120A  158A  	fcall	___ftmul
  2959  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0F24  082D               	movf	?___ftmul,w
  2962  0F25  00C2               	movwf	_scale$1067
  2963  0F26  082E               	movf	?___ftmul+1,w
  2964  0F27  00C3               	movwf	_scale$1067+1
  2965  0F28  082F               	movf	?___ftmul+2,w
  2966  0F29  00C4               	movwf	_scale$1067+2
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2969  0F2A  3003               	movlw	3
  2970  0F2B  00C0               	movwf	??_scale
  2971  0F2C  0840               	movf	??_scale,w
  2972  0F2D  00A9               	movwf	___bmul@multiplicand
  2973  0F2E  0845               	movf	scale@scl,w
  2974  0F2F  00F5               	movwf	___awmod@dividend
  2975  0F30  01F6               	clrf	___awmod@dividend+1
  2976  0F31  1BF5               	btfsc	___awmod@dividend,7
  2977  0F32  03F6               	decf	___awmod@dividend+1,f
  2978  0F33  300A               	movlw	10
  2979  0F34  00F3               	movwf	___awmod@divisor
  2980  0F35  3000               	movlw	0
  2981  0F36  00F4               	movwf	___awmod@divisor+1
  2982  0F37  160A  158A  27A7  120A  158A  	fcall	___awmod
  2983  0F3C  0873               	movf	?___awmod,w
  2984  0F3D  160A  158A  24BE  120A  158A  	fcall	___bmul
  2985  0F42  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2986  0F43  0084               	movwf	4
  2987  0F44  160A  118A  200A  120A  158A  	fcall	stringdir
  2988  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0F4B  00AD               	movwf	___ftmul@f1
  2991  0F4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2992  0F51  00AE               	movwf	___ftmul@f1+1
  2993  0F52  160A  118A  200A  120A  158A  	fcall	stringdir
  2994  0F57  00AF               	movwf	___ftmul@f1+2
  2995  0F58  0842               	movf	_scale$1067,w
  2996  0F59  00B0               	movwf	___ftmul@f2
  2997  0F5A  0843               	movf	_scale$1067+1,w
  2998  0F5B  00B1               	movwf	___ftmul@f2+1
  2999  0F5C  0844               	movf	_scale$1067+2,w
  3000  0F5D  00B2               	movwf	___ftmul@f2+2
  3001  0F5E  160A  118A  2525  120A  158A  	fcall	___ftmul
  3002  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0F65  082D               	movf	?___ftmul,w
  3005  0F66  00BD               	movwf	?_scale
  3006  0F67  082E               	movf	?___ftmul+1,w
  3007  0F68  00BE               	movwf	?_scale+1
  3008  0F69  082F               	movf	?___ftmul+2,w
  3009  0F6A  00BF               	movwf	?_scale+2
  3010  0F6B  2FFF               	goto	l352
  3011  0F6C                     l3782:
  3012  0F6C  0845               	movf	scale@scl,w
  3013  0F6D  3A80               	xorlw	128
  3014  0F6E  3E75               	addlw	-139
  3015  0F6F  1C03               	skipc
  3016  0F70  2F72               	goto	u5651
  3017  0F71  2F73               	goto	u5650
  3018  0F72                     u5651:
  3019  0F72  2FDF               	goto	l3788
  3020  0F73                     u5650:
  3021  0F73                     l3784:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3024  0F73  3003               	movlw	3
  3025  0F74  00C0               	movwf	??_scale
  3026  0F75  0840               	movf	??_scale,w
  3027  0F76  00A9               	movwf	___bmul@multiplicand
  3028  0F77  0845               	movf	scale@scl,w
  3029  0F78  00F5               	movwf	___awmod@dividend
  3030  0F79  01F6               	clrf	___awmod@dividend+1
  3031  0F7A  1BF5               	btfsc	___awmod@dividend,7
  3032  0F7B  03F6               	decf	___awmod@dividend+1,f
  3033  0F7C  300A               	movlw	10
  3034  0F7D  00F3               	movwf	___awmod@divisor
  3035  0F7E  3000               	movlw	0
  3036  0F7F  00F4               	movwf	___awmod@divisor+1
  3037  0F80  160A  158A  27A7  120A  158A  	fcall	___awmod
  3038  0F85  0873               	movf	?___awmod,w
  3039  0F86  160A  158A  24BE  120A  158A  	fcall	___bmul
  3040  0F8B  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3041  0F8C  0084               	movwf	4
  3042  0F8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3043  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0F94  00AD               	movwf	___ftmul@f1
  3046  0F95  160A  118A  200A  120A  158A  	fcall	stringdir
  3047  0F9A  00AE               	movwf	___ftmul@f1+1
  3048  0F9B  160A  118A  200A  120A  158A  	fcall	stringdir
  3049  0FA0  00AF               	movwf	___ftmul@f1+2
  3050  0FA1  3003               	movlw	3
  3051  0FA2  00C1               	movwf	??_scale+1
  3052  0FA3  0841               	movf	??_scale+1,w
  3053  0FA4  00A9               	movwf	___bmul@multiplicand
  3054  0FA5  0845               	movf	scale@scl,w
  3055  0FA6  00A2               	movwf	___awdiv@dividend
  3056  0FA7  01A3               	clrf	___awdiv@dividend+1
  3057  0FA8  1BA2               	btfsc	___awdiv@dividend,7
  3058  0FA9  03A3               	decf	___awdiv@dividend+1,f
  3059  0FAA  300A               	movlw	10
  3060  0FAB  00A0               	movwf	___awdiv@divisor
  3061  0FAC  3000               	movlw	0
  3062  0FAD  00A1               	movwf	___awdiv@divisor+1
  3063  0FAE  160A  118A  2177  120A  158A  	fcall	___awdiv
  3064  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0FB5  0820               	movf	?___awdiv,w
  3067  0FB6  160A  158A  24BE  120A  158A  	fcall	___bmul
  3068  0FBB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3069  0FBC  0084               	movwf	4
  3070  0FBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3071  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0FC4  00B0               	movwf	___ftmul@f2
  3074  0FC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3075  0FCA  00B1               	movwf	___ftmul@f2+1
  3076  0FCB  160A  118A  200A  120A  158A  	fcall	stringdir
  3077  0FD0  00B2               	movwf	___ftmul@f2+2
  3078  0FD1  160A  118A  2525  120A  158A  	fcall	___ftmul
  3079  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0FD8  082D               	movf	?___ftmul,w
  3082  0FD9  00BD               	movwf	?_scale
  3083  0FDA  082E               	movf	?___ftmul+1,w
  3084  0FDB  00BE               	movwf	?_scale+1
  3085  0FDC  082F               	movf	?___ftmul+2,w
  3086  0FDD  00BF               	movwf	?_scale+2
  3087  0FDE  2FFF               	goto	l352
  3088  0FDF                     l3788:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3091  0FDF  3003               	movlw	3
  3092  0FE0  00C0               	movwf	??_scale
  3093  0FE1  0840               	movf	??_scale,w
  3094  0FE2  00A9               	movwf	___bmul@multiplicand
  3095  0FE3  0845               	movf	scale@scl,w
  3096  0FE4  160A  158A  24BE  120A  158A  	fcall	___bmul
  3097  0FE9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3098  0FEA  0084               	movwf	4
  3099  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3100  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0FF2  00BD               	movwf	?_scale
  3103  0FF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3104  0FF8  00BE               	movwf	?_scale+1
  3105  0FF9  160A  118A  200A  120A  158A  	fcall	stringdir
  3106  0FFE  00BF               	movwf	?_scale+2
  3107  0FFF                     l352:
  3108  0FFF  0008               	return
  3109  1000                     __end_of_scale:
  3110                           
  3111                           	psect	text3
  3112  1FA7                     __ptext3:	
  3113 ;; *************** function ___awmod *****************
  3114 ;; Defined at:
  3115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  divisor         2    3[COMMON] int 
  3118 ;;  dividend        2    5[COMMON] int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  sign            1    9[COMMON] unsigned char 
  3121 ;;  counter         1    8[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    3[COMMON] int 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         4       0       0       0       0
  3132 ;;      Locals:         2       0       0       0       0
  3133 ;;      Temps:          1       0       0       0       0
  3134 ;;      Totals:         7       0       0       0       0
  3135 ;;Total ram usage:        7 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_scale
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function ___awmod
  3147  1FA7                     ___awmod:
  3148  1FA7                     l2328:	
  3149                           ;incstack = 0
  3150                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3151                           
  3152  1FA7  01F9               	clrf	___awmod@sign
  3153  1FA8                     l2330:
  3154  1FA8  1FF6               	btfss	___awmod@dividend+1,7
  3155  1FA9  2FAB               	goto	u2781
  3156  1FAA  2FAC               	goto	u2780
  3157  1FAB                     u2781:
  3158  1FAB  2FB3               	goto	l2336
  3159  1FAC                     u2780:
  3160  1FAC                     l2332:
  3161  1FAC  09F5               	comf	___awmod@dividend,f
  3162  1FAD  09F6               	comf	___awmod@dividend+1,f
  3163  1FAE  0AF5               	incf	___awmod@dividend,f
  3164  1FAF  1903               	skipnz
  3165  1FB0  0AF6               	incf	___awmod@dividend+1,f
  3166  1FB1                     l2334:
  3167  1FB1  01F9               	clrf	___awmod@sign
  3168  1FB2  0AF9               	incf	___awmod@sign,f
  3169  1FB3                     l2336:
  3170  1FB3  1FF4               	btfss	___awmod@divisor+1,7
  3171  1FB4  2FB6               	goto	u2791
  3172  1FB5  2FB7               	goto	u2790
  3173  1FB6                     u2791:
  3174  1FB6  2FBC               	goto	l2340
  3175  1FB7                     u2790:
  3176  1FB7                     l2338:
  3177  1FB7  09F3               	comf	___awmod@divisor,f
  3178  1FB8  09F4               	comf	___awmod@divisor+1,f
  3179  1FB9  0AF3               	incf	___awmod@divisor,f
  3180  1FBA  1903               	skipnz
  3181  1FBB  0AF4               	incf	___awmod@divisor+1,f
  3182  1FBC                     l2340:
  3183  1FBC  0873               	movf	___awmod@divisor,w
  3184  1FBD  0474               	iorwf	___awmod@divisor+1,w
  3185  1FBE  1903               	btfsc	3,2
  3186  1FBF  2FC1               	goto	u2801
  3187  1FC0  2FC2               	goto	u2800
  3188  1FC1                     u2801:
  3189  1FC1  2FF1               	goto	l2358
  3190  1FC2                     u2800:
  3191  1FC2                     l2342:
  3192  1FC2  01F8               	clrf	___awmod@counter
  3193  1FC3  0AF8               	incf	___awmod@counter,f
  3194  1FC4  2FD0               	goto	l2348
  3195  1FC5                     l2344:
  3196  1FC5  3001               	movlw	1
  3197  1FC6                     u2815:
  3198  1FC6  1003               	clrc
  3199  1FC7  0DF3               	rlf	___awmod@divisor,f
  3200  1FC8  0DF4               	rlf	___awmod@divisor+1,f
  3201  1FC9  3EFF               	addlw	-1
  3202  1FCA  1D03               	skipz
  3203  1FCB  2FC6               	goto	u2815
  3204  1FCC                     l2346:
  3205  1FCC  3001               	movlw	1
  3206  1FCD  00F7               	movwf	??___awmod
  3207  1FCE  0877               	movf	??___awmod,w
  3208  1FCF  07F8               	addwf	___awmod@counter,f
  3209  1FD0                     l2348:
  3210  1FD0  1FF4               	btfss	___awmod@divisor+1,7
  3211  1FD1  2FD3               	goto	u2821
  3212  1FD2  2FD4               	goto	u2820
  3213  1FD3                     u2821:
  3214  1FD3  2FC5               	goto	l2344
  3215  1FD4                     u2820:
  3216  1FD4                     l2350:
  3217  1FD4  0874               	movf	___awmod@divisor+1,w
  3218  1FD5  0276               	subwf	___awmod@dividend+1,w
  3219  1FD6  1D03               	skipz
  3220  1FD7  2FDA               	goto	u2835
  3221  1FD8  0873               	movf	___awmod@divisor,w
  3222  1FD9  0275               	subwf	___awmod@dividend,w
  3223  1FDA                     u2835:
  3224  1FDA  1C03               	skipc
  3225  1FDB  2FDD               	goto	u2831
  3226  1FDC  2FDE               	goto	u2830
  3227  1FDD                     u2831:
  3228  1FDD  2FE4               	goto	l2354
  3229  1FDE                     u2830:
  3230  1FDE                     l2352:
  3231  1FDE  0873               	movf	___awmod@divisor,w
  3232  1FDF  02F5               	subwf	___awmod@dividend,f
  3233  1FE0  0874               	movf	___awmod@divisor+1,w
  3234  1FE1  1C03               	skipc
  3235  1FE2  03F6               	decf	___awmod@dividend+1,f
  3236  1FE3  02F6               	subwf	___awmod@dividend+1,f
  3237  1FE4                     l2354:
  3238  1FE4  3001               	movlw	1
  3239  1FE5                     u2845:
  3240  1FE5  1003               	clrc
  3241  1FE6  0CF4               	rrf	___awmod@divisor+1,f
  3242  1FE7  0CF3               	rrf	___awmod@divisor,f
  3243  1FE8  3EFF               	addlw	-1
  3244  1FE9  1D03               	skipz
  3245  1FEA  2FE5               	goto	u2845
  3246  1FEB                     l2356:
  3247  1FEB  3001               	movlw	1
  3248  1FEC  02F8               	subwf	___awmod@counter,f
  3249  1FED  1D03               	btfss	3,2
  3250  1FEE  2FF0               	goto	u2851
  3251  1FEF  2FF1               	goto	u2850
  3252  1FF0                     u2851:
  3253  1FF0  2FD4               	goto	l2350
  3254  1FF1                     u2850:
  3255  1FF1                     l2358:
  3256  1FF1  0879               	movf	___awmod@sign,w
  3257  1FF2  1903               	btfsc	3,2
  3258  1FF3  2FF5               	goto	u2861
  3259  1FF4  2FF6               	goto	u2860
  3260  1FF5                     u2861:
  3261  1FF5  2FFB               	goto	l2362
  3262  1FF6                     u2860:
  3263  1FF6                     l2360:
  3264  1FF6  09F5               	comf	___awmod@dividend,f
  3265  1FF7  09F6               	comf	___awmod@dividend+1,f
  3266  1FF8  0AF5               	incf	___awmod@dividend,f
  3267  1FF9  1903               	skipnz
  3268  1FFA  0AF6               	incf	___awmod@dividend+1,f
  3269  1FFB                     l2362:
  3270  1FFB  0876               	movf	___awmod@dividend+1,w
  3271  1FFC  00F4               	movwf	?___awmod+1
  3272  1FFD  0875               	movf	___awmod@dividend,w
  3273  1FFE  00F3               	movwf	?___awmod
  3274  1FFF                     l644:
  3275  1FFF  0008               	return
  3276  2000                     __end_of___awmod:
  3277                           
  3278                           	psect	text4
  3279  1177                     __ptext4:	
  3280 ;; *************** function ___awdiv *****************
  3281 ;; Defined at:
  3282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  divisor         2    0[BANK0 ] int 
  3285 ;;  dividend        2    2[BANK0 ] int 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  quotient        2    7[BANK0 ] int 
  3288 ;;  sign            1    6[BANK0 ] unsigned char 
  3289 ;;  counter         1    5[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2    0[BANK0 ] int 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       4       0       0       0
  3300 ;;      Locals:         0       4       0       0       0
  3301 ;;      Temps:          0       1       0       0       0
  3302 ;;      Totals:         0       9       0       0       0
  3303 ;;Total ram usage:        9 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    2
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_scale
  3310 ;;		_sprintf
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function ___awdiv
  3316  1177                     ___awdiv:
  3317  1177                     l3538:	
  3318                           ;incstack = 0
  3319                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3320                           
  3321  1177  1283               	bcf	3,5	;RP0=0, select bank0
  3322  1178  1303               	bcf	3,6	;RP1=0, select bank0
  3323  1179  01A6               	clrf	___awdiv@sign
  3324  117A                     l3540:
  3325  117A  1FA1               	btfss	___awdiv@divisor+1,7
  3326  117B  297D               	goto	u5111
  3327  117C  297E               	goto	u5110
  3328  117D                     u5111:
  3329  117D  2985               	goto	l3546
  3330  117E                     u5110:
  3331  117E                     l3542:
  3332  117E  09A0               	comf	___awdiv@divisor,f
  3333  117F  09A1               	comf	___awdiv@divisor+1,f
  3334  1180  0AA0               	incf	___awdiv@divisor,f
  3335  1181  1903               	skipnz
  3336  1182  0AA1               	incf	___awdiv@divisor+1,f
  3337  1183                     l3544:
  3338  1183  01A6               	clrf	___awdiv@sign
  3339  1184  0AA6               	incf	___awdiv@sign,f
  3340  1185                     l3546:
  3341  1185  1FA3               	btfss	___awdiv@dividend+1,7
  3342  1186  2988               	goto	u5121
  3343  1187  2989               	goto	u5120
  3344  1188                     u5121:
  3345  1188  2992               	goto	l3552
  3346  1189                     u5120:
  3347  1189                     l3548:
  3348  1189  09A2               	comf	___awdiv@dividend,f
  3349  118A  09A3               	comf	___awdiv@dividend+1,f
  3350  118B  0AA2               	incf	___awdiv@dividend,f
  3351  118C  1903               	skipnz
  3352  118D  0AA3               	incf	___awdiv@dividend+1,f
  3353  118E                     l3550:
  3354  118E  3001               	movlw	1
  3355  118F  00A4               	movwf	??___awdiv
  3356  1190  0824               	movf	??___awdiv,w
  3357  1191  06A6               	xorwf	___awdiv@sign,f
  3358  1192                     l3552:
  3359  1192  01A7               	clrf	___awdiv@quotient
  3360  1193  01A8               	clrf	___awdiv@quotient+1
  3361  1194                     l3554:
  3362  1194  0820               	movf	___awdiv@divisor,w
  3363  1195  0421               	iorwf	___awdiv@divisor+1,w
  3364  1196  1903               	btfsc	3,2
  3365  1197  2999               	goto	u5131
  3366  1198  299A               	goto	u5130
  3367  1199                     u5131:
  3368  1199  29D1               	goto	l3574
  3369  119A                     u5130:
  3370  119A                     l3556:
  3371  119A  01A5               	clrf	___awdiv@counter
  3372  119B  0AA5               	incf	___awdiv@counter,f
  3373  119C  29A8               	goto	l3562
  3374  119D                     l3558:
  3375  119D  3001               	movlw	1
  3376  119E                     u5145:
  3377  119E  1003               	clrc
  3378  119F  0DA0               	rlf	___awdiv@divisor,f
  3379  11A0  0DA1               	rlf	___awdiv@divisor+1,f
  3380  11A1  3EFF               	addlw	-1
  3381  11A2  1D03               	skipz
  3382  11A3  299E               	goto	u5145
  3383  11A4                     l3560:
  3384  11A4  3001               	movlw	1
  3385  11A5  00A4               	movwf	??___awdiv
  3386  11A6  0824               	movf	??___awdiv,w
  3387  11A7  07A5               	addwf	___awdiv@counter,f
  3388  11A8                     l3562:
  3389  11A8  1FA1               	btfss	___awdiv@divisor+1,7
  3390  11A9  29AB               	goto	u5151
  3391  11AA  29AC               	goto	u5150
  3392  11AB                     u5151:
  3393  11AB  299D               	goto	l3558
  3394  11AC                     u5150:
  3395  11AC                     l3564:
  3396  11AC  3001               	movlw	1
  3397  11AD                     u5165:
  3398  11AD  1003               	clrc
  3399  11AE  0DA7               	rlf	___awdiv@quotient,f
  3400  11AF  0DA8               	rlf	___awdiv@quotient+1,f
  3401  11B0  3EFF               	addlw	-1
  3402  11B1  1D03               	skipz
  3403  11B2  29AD               	goto	u5165
  3404  11B3  0821               	movf	___awdiv@divisor+1,w
  3405  11B4  0223               	subwf	___awdiv@dividend+1,w
  3406  11B5  1D03               	skipz
  3407  11B6  29B9               	goto	u5175
  3408  11B7  0820               	movf	___awdiv@divisor,w
  3409  11B8  0222               	subwf	___awdiv@dividend,w
  3410  11B9                     u5175:
  3411  11B9  1C03               	skipc
  3412  11BA  29BC               	goto	u5171
  3413  11BB  29BD               	goto	u5170
  3414  11BC                     u5171:
  3415  11BC  29C4               	goto	l3570
  3416  11BD                     u5170:
  3417  11BD                     l3566:
  3418  11BD  0820               	movf	___awdiv@divisor,w
  3419  11BE  02A2               	subwf	___awdiv@dividend,f
  3420  11BF  0821               	movf	___awdiv@divisor+1,w
  3421  11C0  1C03               	skipc
  3422  11C1  03A3               	decf	___awdiv@dividend+1,f
  3423  11C2  02A3               	subwf	___awdiv@dividend+1,f
  3424  11C3                     l3568:
  3425  11C3  1427               	bsf	___awdiv@quotient,0
  3426  11C4                     l3570:
  3427  11C4  3001               	movlw	1
  3428  11C5                     u5185:
  3429  11C5  1003               	clrc
  3430  11C6  0CA1               	rrf	___awdiv@divisor+1,f
  3431  11C7  0CA0               	rrf	___awdiv@divisor,f
  3432  11C8  3EFF               	addlw	-1
  3433  11C9  1D03               	skipz
  3434  11CA  29C5               	goto	u5185
  3435  11CB                     l3572:
  3436  11CB  3001               	movlw	1
  3437  11CC  02A5               	subwf	___awdiv@counter,f
  3438  11CD  1D03               	btfss	3,2
  3439  11CE  29D0               	goto	u5191
  3440  11CF  29D1               	goto	u5190
  3441  11D0                     u5191:
  3442  11D0  29AC               	goto	l3564
  3443  11D1                     u5190:
  3444  11D1                     l3574:
  3445  11D1  0826               	movf	___awdiv@sign,w
  3446  11D2  1903               	btfsc	3,2
  3447  11D3  29D5               	goto	u5201
  3448  11D4  29D6               	goto	u5200
  3449  11D5                     u5201:
  3450  11D5  29DB               	goto	l3578
  3451  11D6                     u5200:
  3452  11D6                     l3576:
  3453  11D6  09A7               	comf	___awdiv@quotient,f
  3454  11D7  09A8               	comf	___awdiv@quotient+1,f
  3455  11D8  0AA7               	incf	___awdiv@quotient,f
  3456  11D9  1903               	skipnz
  3457  11DA  0AA8               	incf	___awdiv@quotient+1,f
  3458  11DB                     l3578:
  3459  11DB  0828               	movf	___awdiv@quotient+1,w
  3460  11DC  00A1               	movwf	?___awdiv+1
  3461  11DD  0827               	movf	___awdiv@quotient,w
  3462  11DE  00A0               	movwf	?___awdiv
  3463  11DF                     l631:
  3464  11DF  0008               	return
  3465  11E0                     __end_of___awdiv:
  3466                           
  3467                           	psect	text5
  3468  1CAC                     __ptext5:	
  3469 ;; *************** function _isdigit *****************
  3470 ;; Defined at:
  3471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  c               1    wreg     unsigned char 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  c               1    4[COMMON] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;		None               void
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         2       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         2       0       0       0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_sprintf
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           
  3500                           ;psect for function _isdigit
  3501  1CAC                     _isdigit:
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3505                           ;isdigit@c stored from wreg
  3506  1CAC  00F4               	movwf	isdigit@c
  3507  1CAD                     l2628:
  3508  1CAD  01F3               	clrf	_isdigit$873
  3509  1CAE                     l2630:
  3510  1CAE  303A               	movlw	58
  3511  1CAF  0274               	subwf	isdigit@c,w
  3512  1CB0  1803               	skipnc
  3513  1CB1  2CB3               	goto	u3461
  3514  1CB2  2CB4               	goto	u3460
  3515  1CB3                     u3461:
  3516  1CB3  2CBC               	goto	l2636
  3517  1CB4                     u3460:
  3518  1CB4                     l2632:
  3519  1CB4  3030               	movlw	48
  3520  1CB5  0274               	subwf	isdigit@c,w
  3521  1CB6  1C03               	skipc
  3522  1CB7  2CB9               	goto	u3471
  3523  1CB8  2CBA               	goto	u3470
  3524  1CB9                     u3471:
  3525  1CB9  2CBC               	goto	l2636
  3526  1CBA                     u3470:
  3527  1CBA                     l2634:
  3528  1CBA  01F3               	clrf	_isdigit$873
  3529  1CBB  0AF3               	incf	_isdigit$873,f
  3530  1CBC                     l2636:
  3531  1CBC  0C73               	rrf	_isdigit$873,w
  3532  1CBD                     l910:
  3533  1CBD  0008               	return
  3534  1CBE                     __end_of_isdigit:
  3535                           
  3536                           	psect	text6
  3537  0638                     __ptext6:	
  3538 ;; *************** function _fround *****************
  3539 ;; Defined at:
  3540 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  prec            1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  prec            1   44[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  3   29[BANK0 ] unsigned char 
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       3       0       0       0
  3555 ;;      Locals:         0       7       0       0       0
  3556 ;;      Temps:          0       6       0       0       0
  3557 ;;      Totals:         0      16       0       0       0
  3558 ;;Total ram usage:       16 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    4
  3561 ;; This function calls:
  3562 ;;		___bmul
  3563 ;;		___ftmul
  3564 ;;		___lwdiv
  3565 ;;		___lwmod
  3566 ;; This function is called by:
  3567 ;;		_sprintf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _fround
  3573  0638                     _fround:
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3577                           ;fround@prec stored from wreg
  3578  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3580  063A  00CC               	movwf	fround@prec
  3581  063B                     l3730:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3584  063B  306E               	movlw	110
  3585  063C  024C               	subwf	fround@prec,w
  3586  063D  1C03               	skipc
  3587  063E  2E40               	goto	u5591
  3588  063F  2E41               	goto	u5590
  3589  0640                     u5591:
  3590  0640  2F1E               	goto	l3740
  3591  0641                     u5590:
  3592  0641                     l3732:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3595  0641  3003               	movlw	3
  3596  0642  00C0               	movwf	??_fround
  3597  0643  0840               	movf	??_fround,w
  3598  0644  00A9               	movwf	___bmul@multiplicand
  3599  0645  084C               	movf	fround@prec,w
  3600  0646  00C1               	movwf	??_fround+1
  3601  0647  01C2               	clrf	??_fround+2
  3602  0648  0841               	movf	??_fround+1,w
  3603  0649  00F5               	movwf	___lwmod@dividend
  3604  064A  0842               	movf	??_fround+2,w
  3605  064B  00F6               	movwf	___lwmod@dividend+1
  3606  064C  3064               	movlw	100
  3607  064D  00F3               	movwf	___lwmod@divisor
  3608  064E  3000               	movlw	0
  3609  064F  00F4               	movwf	___lwmod@divisor+1
  3610  0650  160A  158A  2695  120A  118A  	fcall	___lwmod
  3611  0655  0874               	movf	?___lwmod+1,w
  3612  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0658  00A3               	movwf	___lwdiv@dividend+1
  3615  0659  0873               	movf	?___lwmod,w
  3616  065A  00A2               	movwf	___lwdiv@dividend
  3617  065B  300A               	movlw	10
  3618  065C  00A0               	movwf	___lwdiv@divisor
  3619  065D  3000               	movlw	0
  3620  065E  00A1               	movwf	___lwdiv@divisor+1
  3621  065F  160A  118A  20C9  120A  118A  	fcall	___lwdiv
  3622  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3623  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0666  0820               	movf	?___lwdiv,w
  3625  0667  160A  158A  24BE  120A  118A  	fcall	___bmul
  3626  066C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3627  066D  0084               	movwf	4
  3628  066E  160A  118A  200A  120A  118A  	fcall	stringdir
  3629  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0675  00AD               	movwf	___ftmul@f1
  3632  0676  160A  118A  200A  120A  118A  	fcall	stringdir
  3633  067B  00AE               	movwf	___ftmul@f1+1
  3634  067C  160A  118A  200A  120A  118A  	fcall	stringdir
  3635  0681  00AF               	movwf	___ftmul@f1+2
  3636  0682  3003               	movlw	3
  3637  0683  00C3               	movwf	??_fround+3
  3638  0684  0843               	movf	??_fround+3,w
  3639  0685  00A9               	movwf	___bmul@multiplicand
  3640  0686  084C               	movf	fround@prec,w
  3641  0687  00C4               	movwf	??_fround+4
  3642  0688  01C5               	clrf	??_fround+5
  3643  0689  0844               	movf	??_fround+4,w
  3644  068A  00A2               	movwf	___lwdiv@dividend
  3645  068B  0845               	movf	??_fround+5,w
  3646  068C  00A3               	movwf	___lwdiv@dividend+1
  3647  068D  3064               	movlw	100
  3648  068E  00A0               	movwf	___lwdiv@divisor
  3649  068F  3000               	movlw	0
  3650  0690  00A1               	movwf	___lwdiv@divisor+1
  3651  0691  160A  118A  20C9  120A  118A  	fcall	___lwdiv
  3652  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0698  0820               	movf	?___lwdiv,w
  3655  0699  160A  158A  24BE  120A  118A  	fcall	___bmul
  3656  069E  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3657  069F  0084               	movwf	4
  3658  06A0  160A  118A  200A  120A  118A  	fcall	stringdir
  3659  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3660  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3661  06A7  00B0               	movwf	___ftmul@f2
  3662  06A8  160A  118A  200A  120A  118A  	fcall	stringdir
  3663  06AD  00B1               	movwf	___ftmul@f2+1
  3664  06AE  160A  118A  200A  120A  118A  	fcall	stringdir
  3665  06B3  00B2               	movwf	___ftmul@f2+2
  3666  06B4  160A  118A  2525  120A  118A  	fcall	___ftmul
  3667  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3668  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3669  06BB  082D               	movf	?___ftmul,w
  3670  06BC  00C9               	movwf	_fround$1065
  3671  06BD  082E               	movf	?___ftmul+1,w
  3672  06BE  00CA               	movwf	_fround$1065+1
  3673  06BF  082F               	movf	?___ftmul+2,w
  3674  06C0  00CB               	movwf	_fround$1065+2
  3675                           
  3676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3677  06C1  3003               	movlw	3
  3678  06C2  00C0               	movwf	??_fround
  3679  06C3  0840               	movf	??_fround,w
  3680  06C4  00A9               	movwf	___bmul@multiplicand
  3681  06C5  084C               	movf	fround@prec,w
  3682  06C6  00C1               	movwf	??_fround+1
  3683  06C7  01C2               	clrf	??_fround+2
  3684  06C8  0841               	movf	??_fround+1,w
  3685  06C9  00F5               	movwf	___lwmod@dividend
  3686  06CA  0842               	movf	??_fround+2,w
  3687  06CB  00F6               	movwf	___lwmod@dividend+1
  3688  06CC  300A               	movlw	10
  3689  06CD  00F3               	movwf	___lwmod@divisor
  3690  06CE  3000               	movlw	0
  3691  06CF  00F4               	movwf	___lwmod@divisor+1
  3692  06D0  160A  158A  2695  120A  118A  	fcall	___lwmod
  3693  06D5  0873               	movf	?___lwmod,w
  3694  06D6  160A  158A  24BE  120A  118A  	fcall	___bmul
  3695  06DB  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3696  06DC  0084               	movwf	4
  3697  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3698  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3699  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3700  06E4  00AD               	movwf	___ftmul@f1
  3701  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3702  06EA  00AE               	movwf	___ftmul@f1+1
  3703  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3704  06F0  00AF               	movwf	___ftmul@f1+2
  3705  06F1  0849               	movf	_fround$1065,w
  3706  06F2  00B0               	movwf	___ftmul@f2
  3707  06F3  084A               	movf	_fround$1065+1,w
  3708  06F4  00B1               	movwf	___ftmul@f2+1
  3709  06F5  084B               	movf	_fround$1065+2,w
  3710  06F6  00B2               	movwf	___ftmul@f2+2
  3711  06F7  160A  118A  2525  120A  118A  	fcall	___ftmul
  3712  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3713  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3714  06FE  082D               	movf	?___ftmul,w
  3715  06FF  00C6               	movwf	_fround$1066
  3716  0700  082E               	movf	?___ftmul+1,w
  3717  0701  00C7               	movwf	_fround$1066+1
  3718  0702  082F               	movf	?___ftmul+2,w
  3719  0703  00C8               	movwf	_fround$1066+2
  3720  0704                     l3734:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3723  0704  3000               	movlw	0
  3724  0705  00AD               	movwf	___ftmul@f1
  3725  0706  3000               	movlw	0
  3726  0707  00AE               	movwf	___ftmul@f1+1
  3727  0708  303F               	movlw	63
  3728  0709  00AF               	movwf	___ftmul@f1+2
  3729  070A  0846               	movf	_fround$1066,w
  3730  070B  00B0               	movwf	___ftmul@f2
  3731  070C  0847               	movf	_fround$1066+1,w
  3732  070D  00B1               	movwf	___ftmul@f2+1
  3733  070E  0848               	movf	_fround$1066+2,w
  3734  070F  00B2               	movwf	___ftmul@f2+2
  3735  0710  160A  118A  2525  120A  118A  	fcall	___ftmul
  3736  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0717  082D               	movf	?___ftmul,w
  3739  0718  00BD               	movwf	?_fround
  3740  0719  082E               	movf	?___ftmul+1,w
  3741  071A  00BE               	movwf	?_fround+1
  3742  071B  082F               	movf	?___ftmul+2,w
  3743  071C  00BF               	movwf	?_fround+2
  3744  071D  2FE0               	goto	l345
  3745  071E                     l3740:
  3746  071E  300B               	movlw	11
  3747  071F  024C               	subwf	fround@prec,w
  3748  0720  1C03               	skipc
  3749  0721  2F23               	goto	u5601
  3750  0722  2F24               	goto	u5600
  3751  0723                     u5601:
  3752  0723  2FAD               	goto	l3748
  3753  0724                     u5600:
  3754  0724                     l3742:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3757  0724  3003               	movlw	3
  3758  0725  00C0               	movwf	??_fround
  3759  0726  0840               	movf	??_fround,w
  3760  0727  00A9               	movwf	___bmul@multiplicand
  3761  0728  084C               	movf	fround@prec,w
  3762  0729  00C1               	movwf	??_fround+1
  3763  072A  01C2               	clrf	??_fround+2
  3764  072B  0841               	movf	??_fround+1,w
  3765  072C  00F5               	movwf	___lwmod@dividend
  3766  072D  0842               	movf	??_fround+2,w
  3767  072E  00F6               	movwf	___lwmod@dividend+1
  3768  072F  300A               	movlw	10
  3769  0730  00F3               	movwf	___lwmod@divisor
  3770  0731  3000               	movlw	0
  3771  0732  00F4               	movwf	___lwmod@divisor+1
  3772  0733  160A  158A  2695  120A  118A  	fcall	___lwmod
  3773  0738  0873               	movf	?___lwmod,w
  3774  0739  160A  158A  24BE  120A  118A  	fcall	___bmul
  3775  073E  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3776  073F  0084               	movwf	4
  3777  0740  160A  118A  200A  120A  118A  	fcall	stringdir
  3778  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3780  0747  00AD               	movwf	___ftmul@f1
  3781  0748  160A  118A  200A  120A  118A  	fcall	stringdir
  3782  074D  00AE               	movwf	___ftmul@f1+1
  3783  074E  160A  118A  200A  120A  118A  	fcall	stringdir
  3784  0753  00AF               	movwf	___ftmul@f1+2
  3785  0754  3003               	movlw	3
  3786  0755  00C3               	movwf	??_fround+3
  3787  0756  0843               	movf	??_fround+3,w
  3788  0757  00A9               	movwf	___bmul@multiplicand
  3789  0758  084C               	movf	fround@prec,w
  3790  0759  00C4               	movwf	??_fround+4
  3791  075A  01C5               	clrf	??_fround+5
  3792  075B  0844               	movf	??_fround+4,w
  3793  075C  00A2               	movwf	___lwdiv@dividend
  3794  075D  0845               	movf	??_fround+5,w
  3795  075E  00A3               	movwf	___lwdiv@dividend+1
  3796  075F  300A               	movlw	10
  3797  0760  00A0               	movwf	___lwdiv@divisor
  3798  0761  3000               	movlw	0
  3799  0762  00A1               	movwf	___lwdiv@divisor+1
  3800  0763  160A  118A  20C9  120A  118A  	fcall	___lwdiv
  3801  0768  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0769  1303               	bcf	3,6	;RP1=0, select bank0
  3803  076A  0820               	movf	?___lwdiv,w
  3804  076B  160A  158A  24BE  120A  118A  	fcall	___bmul
  3805  0770  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3806  0771  0084               	movwf	4
  3807  0772  160A  118A  200A  120A  118A  	fcall	stringdir
  3808  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0779  00B0               	movwf	___ftmul@f2
  3811  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  3812  077F  00B1               	movwf	___ftmul@f2+1
  3813  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  3814  0785  00B2               	movwf	___ftmul@f2+2
  3815  0786  160A  118A  2525  120A  118A  	fcall	___ftmul
  3816  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3817  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3818  078D  082D               	movf	?___ftmul,w
  3819  078E  00C9               	movwf	_fround$1065
  3820  078F  082E               	movf	?___ftmul+1,w
  3821  0790  00CA               	movwf	_fround$1065+1
  3822  0791  082F               	movf	?___ftmul+2,w
  3823  0792  00CB               	movwf	_fround$1065+2
  3824  0793                     l3744:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3827  0793  3000               	movlw	0
  3828  0794  00AD               	movwf	___ftmul@f1
  3829  0795  3000               	movlw	0
  3830  0796  00AE               	movwf	___ftmul@f1+1
  3831  0797  303F               	movlw	63
  3832  0798  00AF               	movwf	___ftmul@f1+2
  3833  0799  0849               	movf	_fround$1065,w
  3834  079A  00B0               	movwf	___ftmul@f2
  3835  079B  084A               	movf	_fround$1065+1,w
  3836  079C  00B1               	movwf	___ftmul@f2+1
  3837  079D  084B               	movf	_fround$1065+2,w
  3838  079E  00B2               	movwf	___ftmul@f2+2
  3839  079F  160A  118A  2525  120A  118A  	fcall	___ftmul
  3840  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3841  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3842  07A6  082D               	movf	?___ftmul,w
  3843  07A7  00BD               	movwf	?_fround
  3844  07A8  082E               	movf	?___ftmul+1,w
  3845  07A9  00BE               	movwf	?_fround+1
  3846  07AA  082F               	movf	?___ftmul+2,w
  3847  07AB  00BF               	movwf	?_fround+2
  3848  07AC  2FE0               	goto	l345
  3849  07AD                     l3748:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3852  07AD  3000               	movlw	0
  3853  07AE  00AD               	movwf	___ftmul@f1
  3854  07AF  3000               	movlw	0
  3855  07B0  00AE               	movwf	___ftmul@f1+1
  3856  07B1  303F               	movlw	63
  3857  07B2  00AF               	movwf	___ftmul@f1+2
  3858  07B3  3003               	movlw	3
  3859  07B4  00C0               	movwf	??_fround
  3860  07B5  0840               	movf	??_fround,w
  3861  07B6  00A9               	movwf	___bmul@multiplicand
  3862  07B7  084C               	movf	fround@prec,w
  3863  07B8  160A  158A  24BE  120A  118A  	fcall	___bmul
  3864  07BD  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3865  07BE  0084               	movwf	4
  3866  07BF  160A  118A  200A  120A  118A  	fcall	stringdir
  3867  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3868  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3869  07C6  00B0               	movwf	___ftmul@f2
  3870  07C7  160A  118A  200A  120A  118A  	fcall	stringdir
  3871  07CC  00B1               	movwf	___ftmul@f2+1
  3872  07CD  160A  118A  200A  120A  118A  	fcall	stringdir
  3873  07D2  00B2               	movwf	___ftmul@f2+2
  3874  07D3  160A  118A  2525  120A  118A  	fcall	___ftmul
  3875  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3876  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3877  07DA  082D               	movf	?___ftmul,w
  3878  07DB  00BD               	movwf	?_fround
  3879  07DC  082E               	movf	?___ftmul+1,w
  3880  07DD  00BE               	movwf	?_fround+1
  3881  07DE  082F               	movf	?___ftmul+2,w
  3882  07DF  00BF               	movwf	?_fround+2
  3883  07E0                     l345:
  3884  07E0  0008               	return
  3885  07E1                     __end_of_fround:
  3886                           
  3887                           	psect	text7
  3888  1E95                     __ptext7:	
  3889 ;; *************** function ___lwmod *****************
  3890 ;; Defined at:
  3891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  divisor         2    3[COMMON] unsigned int 
  3894 ;;  dividend        2    5[COMMON] unsigned int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  counter         1    8[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    3[COMMON] unsigned int 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         4       0       0       0       0
  3907 ;;      Locals:         1       0       0       0       0
  3908 ;;      Temps:          1       0       0       0       0
  3909 ;;      Totals:         6       0       0       0       0
  3910 ;;Total ram usage:        6 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    2
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_fround
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function ___lwmod
  3922  1E95                     ___lwmod:
  3923  1E95                     l2512:	
  3924                           ;incstack = 0
  3925                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3926                           
  3927  1E95  0873               	movf	___lwmod@divisor,w
  3928  1E96  0474               	iorwf	___lwmod@divisor+1,w
  3929  1E97  1903               	btfsc	3,2
  3930  1E98  2E9A               	goto	u3321
  3931  1E99  2E9B               	goto	u3320
  3932  1E9A                     u3321:
  3933  1E9A  2ECA               	goto	l2530
  3934  1E9B                     u3320:
  3935  1E9B                     l2514:
  3936  1E9B  01F8               	clrf	___lwmod@counter
  3937  1E9C  0AF8               	incf	___lwmod@counter,f
  3938  1E9D  2EA9               	goto	l2520
  3939  1E9E                     l2516:
  3940  1E9E  3001               	movlw	1
  3941  1E9F                     u3335:
  3942  1E9F  1003               	clrc
  3943  1EA0  0DF3               	rlf	___lwmod@divisor,f
  3944  1EA1  0DF4               	rlf	___lwmod@divisor+1,f
  3945  1EA2  3EFF               	addlw	-1
  3946  1EA3  1D03               	skipz
  3947  1EA4  2E9F               	goto	u3335
  3948  1EA5                     l2518:
  3949  1EA5  3001               	movlw	1
  3950  1EA6  00F7               	movwf	??___lwmod
  3951  1EA7  0877               	movf	??___lwmod,w
  3952  1EA8  07F8               	addwf	___lwmod@counter,f
  3953  1EA9                     l2520:
  3954  1EA9  1FF4               	btfss	___lwmod@divisor+1,7
  3955  1EAA  2EAC               	goto	u3341
  3956  1EAB  2EAD               	goto	u3340
  3957  1EAC                     u3341:
  3958  1EAC  2E9E               	goto	l2516
  3959  1EAD                     u3340:
  3960  1EAD                     l2522:
  3961  1EAD  0874               	movf	___lwmod@divisor+1,w
  3962  1EAE  0276               	subwf	___lwmod@dividend+1,w
  3963  1EAF  1D03               	skipz
  3964  1EB0  2EB3               	goto	u3355
  3965  1EB1  0873               	movf	___lwmod@divisor,w
  3966  1EB2  0275               	subwf	___lwmod@dividend,w
  3967  1EB3                     u3355:
  3968  1EB3  1C03               	skipc
  3969  1EB4  2EB6               	goto	u3351
  3970  1EB5  2EB7               	goto	u3350
  3971  1EB6                     u3351:
  3972  1EB6  2EBD               	goto	l2526
  3973  1EB7                     u3350:
  3974  1EB7                     l2524:
  3975  1EB7  0873               	movf	___lwmod@divisor,w
  3976  1EB8  02F5               	subwf	___lwmod@dividend,f
  3977  1EB9  0874               	movf	___lwmod@divisor+1,w
  3978  1EBA  1C03               	skipc
  3979  1EBB  03F6               	decf	___lwmod@dividend+1,f
  3980  1EBC  02F6               	subwf	___lwmod@dividend+1,f
  3981  1EBD                     l2526:
  3982  1EBD  3001               	movlw	1
  3983  1EBE                     u3365:
  3984  1EBE  1003               	clrc
  3985  1EBF  0CF4               	rrf	___lwmod@divisor+1,f
  3986  1EC0  0CF3               	rrf	___lwmod@divisor,f
  3987  1EC1  3EFF               	addlw	-1
  3988  1EC2  1D03               	skipz
  3989  1EC3  2EBE               	goto	u3365
  3990  1EC4                     l2528:
  3991  1EC4  3001               	movlw	1
  3992  1EC5  02F8               	subwf	___lwmod@counter,f
  3993  1EC6  1D03               	btfss	3,2
  3994  1EC7  2EC9               	goto	u3371
  3995  1EC8  2ECA               	goto	u3370
  3996  1EC9                     u3371:
  3997  1EC9  2EAD               	goto	l2522
  3998  1ECA                     u3370:
  3999  1ECA                     l2530:
  4000  1ECA  0876               	movf	___lwmod@dividend+1,w
  4001  1ECB  00F4               	movwf	?___lwmod+1
  4002  1ECC  0875               	movf	___lwmod@dividend,w
  4003  1ECD  00F3               	movwf	?___lwmod
  4004  1ECE                     l900:
  4005  1ECE  0008               	return
  4006  1ECF                     __end_of___lwmod:
  4007                           
  4008                           	psect	text8
  4009  10C9                     __ptext8:	
  4010 ;; *************** function ___lwdiv *****************
  4011 ;; Defined at:
  4012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  divisor         2    0[BANK0 ] unsigned int 
  4015 ;;  dividend        2    2[BANK0 ] unsigned int 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  quotient        2    4[BANK0 ] unsigned int 
  4018 ;;  counter         1    6[BANK0 ] unsigned char 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[BANK0 ] unsigned int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       4       0       0       0
  4029 ;;      Locals:         0       3       0       0       0
  4030 ;;      Temps:          1       0       0       0       0
  4031 ;;      Totals:         1       7       0       0       0
  4032 ;;Total ram usage:        8 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    2
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_fround
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function ___lwdiv
  4044  10C9                     ___lwdiv:
  4045  10C9                     l2486:	
  4046                           ;incstack = 0
  4047                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4048                           
  4049  10C9  1283               	bcf	3,5	;RP0=0, select bank0
  4050  10CA  1303               	bcf	3,6	;RP1=0, select bank0
  4051  10CB  01A4               	clrf	___lwdiv@quotient
  4052  10CC  01A5               	clrf	___lwdiv@quotient+1
  4053  10CD                     l2488:
  4054  10CD  0820               	movf	___lwdiv@divisor,w
  4055  10CE  0421               	iorwf	___lwdiv@divisor+1,w
  4056  10CF  1903               	btfsc	3,2
  4057  10D0  28D2               	goto	u3251
  4058  10D1  28D3               	goto	u3250
  4059  10D2                     u3251:
  4060  10D2  290A               	goto	l2508
  4061  10D3                     u3250:
  4062  10D3                     l2490:
  4063  10D3  01A6               	clrf	___lwdiv@counter
  4064  10D4  0AA6               	incf	___lwdiv@counter,f
  4065  10D5  28E1               	goto	l2496
  4066  10D6                     l2492:
  4067  10D6  3001               	movlw	1
  4068  10D7                     u3265:
  4069  10D7  1003               	clrc
  4070  10D8  0DA0               	rlf	___lwdiv@divisor,f
  4071  10D9  0DA1               	rlf	___lwdiv@divisor+1,f
  4072  10DA  3EFF               	addlw	-1
  4073  10DB  1D03               	skipz
  4074  10DC  28D7               	goto	u3265
  4075  10DD                     l2494:
  4076  10DD  3001               	movlw	1
  4077  10DE  00F9               	movwf	??___lwdiv
  4078  10DF  0879               	movf	??___lwdiv,w
  4079  10E0  07A6               	addwf	___lwdiv@counter,f
  4080  10E1                     l2496:
  4081  10E1  1FA1               	btfss	___lwdiv@divisor+1,7
  4082  10E2  28E4               	goto	u3271
  4083  10E3  28E5               	goto	u3270
  4084  10E4                     u3271:
  4085  10E4  28D6               	goto	l2492
  4086  10E5                     u3270:
  4087  10E5                     l2498:
  4088  10E5  3001               	movlw	1
  4089  10E6                     u3285:
  4090  10E6  1003               	clrc
  4091  10E7  0DA4               	rlf	___lwdiv@quotient,f
  4092  10E8  0DA5               	rlf	___lwdiv@quotient+1,f
  4093  10E9  3EFF               	addlw	-1
  4094  10EA  1D03               	skipz
  4095  10EB  28E6               	goto	u3285
  4096  10EC  0821               	movf	___lwdiv@divisor+1,w
  4097  10ED  0223               	subwf	___lwdiv@dividend+1,w
  4098  10EE  1D03               	skipz
  4099  10EF  28F2               	goto	u3295
  4100  10F0  0820               	movf	___lwdiv@divisor,w
  4101  10F1  0222               	subwf	___lwdiv@dividend,w
  4102  10F2                     u3295:
  4103  10F2  1C03               	skipc
  4104  10F3  28F5               	goto	u3291
  4105  10F4  28F6               	goto	u3290
  4106  10F5                     u3291:
  4107  10F5  28FD               	goto	l2504
  4108  10F6                     u3290:
  4109  10F6                     l2500:
  4110  10F6  0820               	movf	___lwdiv@divisor,w
  4111  10F7  02A2               	subwf	___lwdiv@dividend,f
  4112  10F8  0821               	movf	___lwdiv@divisor+1,w
  4113  10F9  1C03               	skipc
  4114  10FA  03A3               	decf	___lwdiv@dividend+1,f
  4115  10FB  02A3               	subwf	___lwdiv@dividend+1,f
  4116  10FC                     l2502:
  4117  10FC  1424               	bsf	___lwdiv@quotient,0
  4118  10FD                     l2504:
  4119  10FD  3001               	movlw	1
  4120  10FE                     u3305:
  4121  10FE  1003               	clrc
  4122  10FF  0CA1               	rrf	___lwdiv@divisor+1,f
  4123  1100  0CA0               	rrf	___lwdiv@divisor,f
  4124  1101  3EFF               	addlw	-1
  4125  1102  1D03               	skipz
  4126  1103  28FE               	goto	u3305
  4127  1104                     l2506:
  4128  1104  3001               	movlw	1
  4129  1105  02A6               	subwf	___lwdiv@counter,f
  4130  1106  1D03               	btfss	3,2
  4131  1107  2909               	goto	u3311
  4132  1108  290A               	goto	u3310
  4133  1109                     u3311:
  4134  1109  28E5               	goto	l2498
  4135  110A                     u3310:
  4136  110A                     l2508:
  4137  110A  0825               	movf	___lwdiv@quotient+1,w
  4138  110B  00A1               	movwf	?___lwdiv+1
  4139  110C  0824               	movf	___lwdiv@quotient,w
  4140  110D  00A0               	movwf	?___lwdiv
  4141  110E                     l890:
  4142  110E  0008               	return
  4143  110F                     __end_of___lwdiv:
  4144                           
  4145                           	psect	text9
  4146  1CBE                     __ptext9:	
  4147 ;; *************** function ___bmul *****************
  4148 ;; Defined at:
  4149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  multiplier      1    wreg     unsigned char 
  4152 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  multiplier      1   12[BANK0 ] unsigned char 
  4155 ;;  product         1   11[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       1       0       0       0
  4166 ;;      Locals:         0       2       0       0       0
  4167 ;;      Temps:          0       1       0       0       0
  4168 ;;      Totals:         0       4       0       0       0
  4169 ;;Total ram usage:        4 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    2
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_fround
  4176 ;;		_scale
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function ___bmul
  4182  1CBE                     ___bmul:
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4186                           ;___bmul@multiplier stored from wreg
  4187  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
  4188  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
  4189  1CC0  00AC               	movwf	___bmul@multiplier
  4190  1CC1                     l2270:
  4191  1CC1  01AB               	clrf	___bmul@product
  4192  1CC2                     l2272:
  4193  1CC2  1C2C               	btfss	___bmul@multiplier,0
  4194  1CC3  2CC5               	goto	u2661
  4195  1CC4  2CC6               	goto	u2660
  4196  1CC5                     u2661:
  4197  1CC5  2CCA               	goto	l2276
  4198  1CC6                     u2660:
  4199  1CC6                     l2274:
  4200  1CC6  0829               	movf	___bmul@multiplicand,w
  4201  1CC7  00AA               	movwf	??___bmul
  4202  1CC8  082A               	movf	??___bmul,w
  4203  1CC9  07AB               	addwf	___bmul@product,f
  4204  1CCA                     l2276:
  4205  1CCA  1003               	clrc
  4206  1CCB  0DA9               	rlf	___bmul@multiplicand,f
  4207  1CCC                     l2278:
  4208  1CCC  1003               	clrc
  4209  1CCD  0CAC               	rrf	___bmul@multiplier,f
  4210  1CCE  082C               	movf	___bmul@multiplier,w
  4211  1CCF  1D03               	btfss	3,2
  4212  1CD0  2CD2               	goto	u2671
  4213  1CD1  2CD3               	goto	u2670
  4214  1CD2                     u2671:
  4215  1CD2  2CC2               	goto	l2272
  4216  1CD3                     u2670:
  4217  1CD3                     l2280:
  4218  1CD3  082B               	movf	___bmul@product,w
  4219  1CD4                     l474:
  4220  1CD4  0008               	return
  4221  1CD5                     __end_of___bmul:
  4222                           
  4223                           	psect	text10
  4224  138B                     __ptext10:	
  4225 ;; *************** function __tdiv_to_l_ *****************
  4226 ;; Defined at:
  4227 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  f1              3    3[COMMON] float 
  4230 ;;  f2              3    6[COMMON] float 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  quot            4    4[BANK0 ] unsigned long 
  4233 ;;  exp1            1    9[BANK0 ] unsigned char 
  4234 ;;  cntr            1    8[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4    3[COMMON] unsigned long 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         6       0       0       0       0
  4245 ;;      Locals:         0       6       0       0       0
  4246 ;;      Temps:          0       4       0       0       0
  4247 ;;      Totals:         6      10       0       0       0
  4248 ;;Total ram usage:       16 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    2
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_sprintf
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function __tdiv_to_l_
  4260  138B                     __tdiv_to_l_:
  4261  138B                     l2640:	
  4262                           ;incstack = 0
  4263                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4264                           
  4265  138B  0873               	movf	__tdiv_to_l_@f1,w
  4266  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4267  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4268  138E  00A0               	movwf	??__tdiv_to_l_
  4269  138F  0874               	movf	__tdiv_to_l_@f1+1,w
  4270  1390  00A1               	movwf	??__tdiv_to_l_+1
  4271  1391  0875               	movf	__tdiv_to_l_@f1+2,w
  4272  1392  00A2               	movwf	??__tdiv_to_l_+2
  4273  1393  1003               	clrc
  4274  1394  0D21               	rlf	??__tdiv_to_l_+1,w
  4275  1395  0D22               	rlf	??__tdiv_to_l_+2,w
  4276  1396  00A3               	movwf	??__tdiv_to_l_+3
  4277  1397  0823               	movf	??__tdiv_to_l_+3,w
  4278  1398  00A9               	movwf	__tdiv_to_l_@exp1
  4279  1399  0829               	movf	__tdiv_to_l_@exp1,w
  4280  139A  1D03               	btfss	3,2
  4281  139B  2B9D               	goto	u3481
  4282  139C  2B9E               	goto	u3480
  4283  139D                     u3481:
  4284  139D  2BA7               	goto	l2646
  4285  139E                     u3480:
  4286  139E                     l2642:
  4287  139E  3000               	movlw	0
  4288  139F  00F6               	movwf	?__tdiv_to_l_+3
  4289  13A0  3000               	movlw	0
  4290  13A1  00F5               	movwf	?__tdiv_to_l_+2
  4291  13A2  3000               	movlw	0
  4292  13A3  00F4               	movwf	?__tdiv_to_l_+1
  4293  13A4  3000               	movlw	0
  4294  13A5  00F3               	movwf	?__tdiv_to_l_
  4295  13A6  2C47               	goto	l733
  4296  13A7                     l2646:
  4297  13A7  0876               	movf	__tdiv_to_l_@f2,w
  4298  13A8  00A0               	movwf	??__tdiv_to_l_
  4299  13A9  0877               	movf	__tdiv_to_l_@f2+1,w
  4300  13AA  00A1               	movwf	??__tdiv_to_l_+1
  4301  13AB  0878               	movf	__tdiv_to_l_@f2+2,w
  4302  13AC  00A2               	movwf	??__tdiv_to_l_+2
  4303  13AD  1003               	clrc
  4304  13AE  0D21               	rlf	??__tdiv_to_l_+1,w
  4305  13AF  0D22               	rlf	??__tdiv_to_l_+2,w
  4306  13B0  00A3               	movwf	??__tdiv_to_l_+3
  4307  13B1  0823               	movf	??__tdiv_to_l_+3,w
  4308  13B2  00A8               	movwf	__tdiv_to_l_@cntr
  4309  13B3  0828               	movf	__tdiv_to_l_@cntr,w
  4310  13B4  1D03               	btfss	3,2
  4311  13B5  2BB7               	goto	u3491
  4312  13B6  2BB8               	goto	u3490
  4313  13B7                     u3491:
  4314  13B7  2BB9               	goto	l734
  4315  13B8                     u3490:
  4316  13B8  2B9E               	goto	l2642
  4317  13B9                     l734:
  4318  13B9  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4319  13BA                     l2652:
  4320  13BA  30FF               	movlw	255
  4321  13BB  05F3               	andwf	__tdiv_to_l_@f1,f
  4322  13BC  30FF               	movlw	255
  4323  13BD  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4324  13BE  3000               	movlw	0
  4325  13BF  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4326  13C0                     l2654:
  4327  13C0  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4328  13C1  30FF               	movlw	255
  4329  13C2  05F6               	andwf	__tdiv_to_l_@f2,f
  4330  13C3  30FF               	movlw	255
  4331  13C4  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4332  13C5  3000               	movlw	0
  4333  13C6  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4334  13C7  3000               	movlw	0
  4335  13C8  00A7               	movwf	__tdiv_to_l_@quot+3
  4336  13C9  3000               	movlw	0
  4337  13CA  00A6               	movwf	__tdiv_to_l_@quot+2
  4338  13CB  3000               	movlw	0
  4339  13CC  00A5               	movwf	__tdiv_to_l_@quot+1
  4340  13CD  3000               	movlw	0
  4341  13CE  00A4               	movwf	__tdiv_to_l_@quot
  4342  13CF                     l2656:
  4343  13CF  307F               	movlw	127
  4344  13D0  02A9               	subwf	__tdiv_to_l_@exp1,f
  4345  13D1                     l2658:
  4346  13D1  3098               	movlw	152
  4347  13D2  0728               	addwf	__tdiv_to_l_@cntr,w
  4348  13D3  00A0               	movwf	??__tdiv_to_l_
  4349  13D4  0820               	movf	??__tdiv_to_l_,w
  4350  13D5  02A9               	subwf	__tdiv_to_l_@exp1,f
  4351  13D6  3018               	movlw	24
  4352  13D7  00A0               	movwf	??__tdiv_to_l_
  4353  13D8  0820               	movf	??__tdiv_to_l_,w
  4354  13D9  00A8               	movwf	__tdiv_to_l_@cntr
  4355  13DA                     l2660:
  4356  13DA  3001               	movlw	1
  4357  13DB  00A0               	movwf	??__tdiv_to_l_
  4358  13DC                     u3505:
  4359  13DC  1003               	clrc
  4360  13DD  0DA4               	rlf	__tdiv_to_l_@quot,f
  4361  13DE  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4362  13DF  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4363  13E0  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4364  13E1  0BA0               	decfsz	??__tdiv_to_l_,f
  4365  13E2  2BDC               	goto	u3505
  4366  13E3                     l2662:
  4367  13E3  0878               	movf	__tdiv_to_l_@f2+2,w
  4368  13E4  0275               	subwf	__tdiv_to_l_@f1+2,w
  4369  13E5  1D03               	skipz
  4370  13E6  2BED               	goto	u3515
  4371  13E7  0877               	movf	__tdiv_to_l_@f2+1,w
  4372  13E8  0274               	subwf	__tdiv_to_l_@f1+1,w
  4373  13E9  1D03               	skipz
  4374  13EA  2BED               	goto	u3515
  4375  13EB  0876               	movf	__tdiv_to_l_@f2,w
  4376  13EC  0273               	subwf	__tdiv_to_l_@f1,w
  4377  13ED                     u3515:
  4378  13ED  1C03               	skipc
  4379  13EE  2BF0               	goto	u3511
  4380  13EF  2BF1               	goto	u3510
  4381  13F0                     u3511:
  4382  13F0  2BFC               	goto	l2668
  4383  13F1                     u3510:
  4384  13F1                     l2664:
  4385  13F1  0876               	movf	__tdiv_to_l_@f2,w
  4386  13F2  02F3               	subwf	__tdiv_to_l_@f1,f
  4387  13F3  0877               	movf	__tdiv_to_l_@f2+1,w
  4388  13F4  1C03               	skipc
  4389  13F5  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4390  13F6  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4391  13F7  0878               	movf	__tdiv_to_l_@f2+2,w
  4392  13F8  1C03               	skipc
  4393  13F9  0A78               	incf	__tdiv_to_l_@f2+2,w
  4394  13FA  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4395  13FB                     l2666:
  4396  13FB  1424               	bsf	__tdiv_to_l_@quot,0
  4397  13FC                     l2668:
  4398  13FC  3001               	movlw	1
  4399  13FD                     u3525:
  4400  13FD  1003               	clrc
  4401  13FE  0DF3               	rlf	__tdiv_to_l_@f1,f
  4402  13FF  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4403  1400  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4404  1401  3EFF               	addlw	-1
  4405  1402  1D03               	skipz
  4406  1403  2BFD               	goto	u3525
  4407  1404                     l2670:
  4408  1404  3001               	movlw	1
  4409  1405  02A8               	subwf	__tdiv_to_l_@cntr,f
  4410  1406  1D03               	btfss	3,2
  4411  1407  2C09               	goto	u3531
  4412  1408  2C0A               	goto	u3530
  4413  1409                     u3531:
  4414  1409  2BDA               	goto	l2660
  4415  140A                     u3530:
  4416  140A                     l737:
  4417  140A  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4418  140B  2C0D               	goto	u3541
  4419  140C  2C0E               	goto	u3540
  4420  140D                     u3541:
  4421  140D  2C28               	goto	l2680
  4422  140E                     u3540:
  4423  140E                     l2672:
  4424  140E  0829               	movf	__tdiv_to_l_@exp1,w
  4425  140F  3A80               	xorlw	128
  4426  1410  3E97               	addlw	151
  4427  1411  1803               	skipnc
  4428  1412  2C14               	goto	u3551
  4429  1413  2C15               	goto	u3550
  4430  1414                     u3551:
  4431  1414  2C16               	goto	l2678
  4432  1415                     u3550:
  4433  1415  2B9E               	goto	l2642
  4434  1416                     l2678:
  4435  1416  3001               	movlw	1
  4436  1417                     u3565:
  4437  1417  1003               	clrc
  4438  1418  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4439  1419  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4440  141A  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4441  141B  0CA4               	rrf	__tdiv_to_l_@quot,f
  4442  141C  3EFF               	addlw	-1
  4443  141D  1D03               	skipz
  4444  141E  2C17               	goto	u3565
  4445  141F  3001               	movlw	1
  4446  1420  00A0               	movwf	??__tdiv_to_l_
  4447  1421  0820               	movf	??__tdiv_to_l_,w
  4448  1422  07A9               	addwf	__tdiv_to_l_@exp1,f
  4449  1423  1D03               	btfss	3,2
  4450  1424  2C26               	goto	u3571
  4451  1425  2C27               	goto	u3570
  4452  1426                     u3571:
  4453  1426  2C16               	goto	l2678
  4454  1427                     u3570:
  4455  1427  2C3F               	goto	l2688
  4456  1428                     l2680:
  4457  1428  3018               	movlw	24
  4458  1429  0229               	subwf	__tdiv_to_l_@exp1,w
  4459  142A  1C03               	skipc
  4460  142B  2C2D               	goto	u3581
  4461  142C  2C2E               	goto	u3580
  4462  142D                     u3581:
  4463  142D  2C3A               	goto	l744
  4464  142E                     u3580:
  4465  142E  2B9E               	goto	l2642
  4466  142F                     l2686:
  4467  142F  3001               	movlw	1
  4468  1430  00A0               	movwf	??__tdiv_to_l_
  4469  1431                     u3595:
  4470  1431  1003               	clrc
  4471  1432  0DA4               	rlf	__tdiv_to_l_@quot,f
  4472  1433  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4473  1434  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4474  1435  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4475  1436  0BA0               	decfsz	??__tdiv_to_l_,f
  4476  1437  2C31               	goto	u3595
  4477  1438  3001               	movlw	1
  4478  1439  02A9               	subwf	__tdiv_to_l_@exp1,f
  4479  143A                     l744:
  4480  143A  0829               	movf	__tdiv_to_l_@exp1,w
  4481  143B  1D03               	btfss	3,2
  4482  143C  2C3E               	goto	u3601
  4483  143D  2C3F               	goto	u3600
  4484  143E                     u3601:
  4485  143E  2C2F               	goto	l2686
  4486  143F                     u3600:
  4487  143F                     l2688:
  4488  143F  0827               	movf	__tdiv_to_l_@quot+3,w
  4489  1440  00F6               	movwf	?__tdiv_to_l_+3
  4490  1441  0826               	movf	__tdiv_to_l_@quot+2,w
  4491  1442  00F5               	movwf	?__tdiv_to_l_+2
  4492  1443  0825               	movf	__tdiv_to_l_@quot+1,w
  4493  1444  00F4               	movwf	?__tdiv_to_l_+1
  4494  1445  0824               	movf	__tdiv_to_l_@quot,w
  4495  1446  00F3               	movwf	?__tdiv_to_l_
  4496  1447                     l733:
  4497  1447  0008               	return
  4498  1448                     __end_of__tdiv_to_l_:
  4499                           
  4500                           	psect	text11
  4501  0829                     __ptext11:	
  4502 ;; *************** function __div_to_l_ *****************
  4503 ;; Defined at:
  4504 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  f1              3    3[COMMON] unsigned long 
  4507 ;;  f2              3    6[COMMON] unsigned long 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  quot            4    8[BANK0 ] unsigned long 
  4510 ;;  exp1            1   13[BANK0 ] unsigned char 
  4511 ;;  cntr            1   12[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4    3[COMMON] unsigned long 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         6       0       0       0       0
  4522 ;;      Locals:         0       6       0       0       0
  4523 ;;      Temps:          0       8       0       0       0
  4524 ;;      Totals:         6      14       0       0       0
  4525 ;;Total ram usage:       20 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    2
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_sprintf
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function __div_to_l_
  4537  0829                     __div_to_l_:
  4538  0829                     l2692:	
  4539                           ;incstack = 0
  4540                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4541                           
  4542  0829  3073               	movlw	low (__div_to_l_@f1| 0)
  4543  082A  0084               	movwf	4
  4544  082B  0800               	movf	0,w
  4545  082C  1283               	bcf	3,5	;RP0=0, select bank0
  4546  082D  1303               	bcf	3,6	;RP1=0, select bank0
  4547  082E  00A0               	movwf	??__div_to_l_
  4548  082F  0A84               	incf	4,f
  4549  0830  0800               	movf	0,w
  4550  0831  00A1               	movwf	??__div_to_l_+1
  4551  0832  0A84               	incf	4,f
  4552  0833  0800               	movf	0,w
  4553  0834  00A2               	movwf	??__div_to_l_+2
  4554  0835  0A84               	incf	4,f
  4555  0836  0800               	movf	0,w
  4556  0837  00A3               	movwf	??__div_to_l_+3
  4557  0838  1003               	clrc
  4558  0839  0D22               	rlf	??__div_to_l_+2,w
  4559  083A  0D23               	rlf	??__div_to_l_+3,w
  4560  083B  00A4               	movwf	??__div_to_l_+4
  4561  083C  0824               	movf	??__div_to_l_+4,w
  4562  083D  00AD               	movwf	__div_to_l_@exp1
  4563  083E  082D               	movf	__div_to_l_@exp1,w
  4564  083F  1D03               	btfss	3,2
  4565  0840  2842               	goto	u3611
  4566  0841  2843               	goto	u3610
  4567  0842                     u3611:
  4568  0842  284C               	goto	l2698
  4569  0843                     u3610:
  4570  0843                     l2694:
  4571  0843  3000               	movlw	0
  4572  0844  00F6               	movwf	?__div_to_l_+3
  4573  0845  3000               	movlw	0
  4574  0846  00F5               	movwf	?__div_to_l_+2
  4575  0847  3000               	movlw	0
  4576  0848  00F4               	movwf	?__div_to_l_+1
  4577  0849  3000               	movlw	0
  4578  084A  00F3               	movwf	?__div_to_l_
  4579  084B  2954               	goto	l654
  4580  084C                     l2698:
  4581  084C  3076               	movlw	low (__div_to_l_@f2| 0)
  4582  084D  0084               	movwf	4
  4583  084E  0800               	movf	0,w
  4584  084F  00A0               	movwf	??__div_to_l_
  4585  0850  0A84               	incf	4,f
  4586  0851  0800               	movf	0,w
  4587  0852  00A1               	movwf	??__div_to_l_+1
  4588  0853  0A84               	incf	4,f
  4589  0854  0800               	movf	0,w
  4590  0855  00A2               	movwf	??__div_to_l_+2
  4591  0856  0A84               	incf	4,f
  4592  0857  0800               	movf	0,w
  4593  0858  00A3               	movwf	??__div_to_l_+3
  4594  0859  1003               	clrc
  4595  085A  0D22               	rlf	??__div_to_l_+2,w
  4596  085B  0D23               	rlf	??__div_to_l_+3,w
  4597  085C  00A4               	movwf	??__div_to_l_+4
  4598  085D  0824               	movf	??__div_to_l_+4,w
  4599  085E  00AC               	movwf	__div_to_l_@cntr
  4600  085F  082C               	movf	__div_to_l_@cntr,w
  4601  0860  1D03               	btfss	3,2
  4602  0861  2863               	goto	u3621
  4603  0862  2864               	goto	u3620
  4604  0863                     u3621:
  4605  0863  2865               	goto	l2704
  4606  0864                     u3620:
  4607  0864  2843               	goto	l2694
  4608  0865                     l2704:
  4609  0865  3073               	movlw	low (__div_to_l_@f1| 0)
  4610  0866  0084               	movwf	4
  4611  0867  3000               	movlw	0
  4612  0868  0480               	iorwf	0,f
  4613  0869  0A84               	incf	4,f
  4614  086A  3000               	movlw	0
  4615  086B  0480               	iorwf	0,f
  4616  086C  0A84               	incf	4,f
  4617  086D  3080               	movlw	128
  4618  086E  0480               	iorwf	0,f
  4619  086F  0A84               	incf	4,f
  4620  0870  3000               	movlw	0
  4621  0871  0480               	iorwf	0,f
  4622  0872  3073               	movlw	low (__div_to_l_@f1| 0)
  4623  0873  0084               	movwf	4
  4624  0874  30FF               	movlw	255
  4625  0875  0580               	andwf	0,f
  4626  0876  0A84               	incf	4,f
  4627  0877  30FF               	movlw	255
  4628  0878  0580               	andwf	0,f
  4629  0879  0A84               	incf	4,f
  4630  087A  30FF               	movlw	255
  4631  087B  0580               	andwf	0,f
  4632  087C  0A84               	incf	4,f
  4633  087D  3000               	movlw	0
  4634  087E  0580               	andwf	0,f
  4635  087F  3076               	movlw	low (__div_to_l_@f2| 0)
  4636  0880  0084               	movwf	4
  4637  0881  3000               	movlw	0
  4638  0882  0480               	iorwf	0,f
  4639  0883  0A84               	incf	4,f
  4640  0884  3000               	movlw	0
  4641  0885  0480               	iorwf	0,f
  4642  0886  0A84               	incf	4,f
  4643  0887  3080               	movlw	128
  4644  0888  0480               	iorwf	0,f
  4645  0889  0A84               	incf	4,f
  4646  088A  3000               	movlw	0
  4647  088B  0480               	iorwf	0,f
  4648  088C  3076               	movlw	low (__div_to_l_@f2| 0)
  4649  088D  0084               	movwf	4
  4650  088E  30FF               	movlw	255
  4651  088F  0580               	andwf	0,f
  4652  0890  0A84               	incf	4,f
  4653  0891  30FF               	movlw	255
  4654  0892  0580               	andwf	0,f
  4655  0893  0A84               	incf	4,f
  4656  0894  30FF               	movlw	255
  4657  0895  0580               	andwf	0,f
  4658  0896  0A84               	incf	4,f
  4659  0897  3000               	movlw	0
  4660  0898  0580               	andwf	0,f
  4661  0899                     l2706:
  4662  0899  3000               	movlw	0
  4663  089A  00AB               	movwf	__div_to_l_@quot+3
  4664  089B  3000               	movlw	0
  4665  089C  00AA               	movwf	__div_to_l_@quot+2
  4666  089D  3000               	movlw	0
  4667  089E  00A9               	movwf	__div_to_l_@quot+1
  4668  089F  3000               	movlw	0
  4669  08A0  00A8               	movwf	__div_to_l_@quot
  4670  08A1                     l2708:
  4671  08A1  307F               	movlw	127
  4672  08A2  02AD               	subwf	__div_to_l_@exp1,f
  4673  08A3                     l2710:
  4674  08A3  30A0               	movlw	160
  4675  08A4  072C               	addwf	__div_to_l_@cntr,w
  4676  08A5  00A0               	movwf	??__div_to_l_
  4677  08A6  0820               	movf	??__div_to_l_,w
  4678  08A7  02AD               	subwf	__div_to_l_@exp1,f
  4679  08A8                     l2712:
  4680  08A8  3020               	movlw	32
  4681  08A9  00A0               	movwf	??__div_to_l_
  4682  08AA  0820               	movf	??__div_to_l_,w
  4683  08AB  00AC               	movwf	__div_to_l_@cntr
  4684  08AC                     l2714:
  4685  08AC  3001               	movlw	1
  4686  08AD  00A0               	movwf	??__div_to_l_
  4687  08AE                     u3635:
  4688  08AE  1003               	clrc
  4689  08AF  0DA8               	rlf	__div_to_l_@quot,f
  4690  08B0  0DA9               	rlf	__div_to_l_@quot+1,f
  4691  08B1  0DAA               	rlf	__div_to_l_@quot+2,f
  4692  08B2  0DAB               	rlf	__div_to_l_@quot+3,f
  4693  08B3  0BA0               	decfsz	??__div_to_l_,f
  4694  08B4  28AE               	goto	u3635
  4695  08B5                     l2716:
  4696  08B5  3076               	movlw	low (__div_to_l_@f2| 0)
  4697  08B6  0084               	movwf	4
  4698  08B7  0800               	movf	0,w
  4699  08B8  00A0               	movwf	??__div_to_l_
  4700  08B9  0A84               	incf	4,f
  4701  08BA  0800               	movf	0,w
  4702  08BB  00A1               	movwf	??__div_to_l_+1
  4703  08BC  0A84               	incf	4,f
  4704  08BD  0800               	movf	0,w
  4705  08BE  00A2               	movwf	??__div_to_l_+2
  4706  08BF  0A84               	incf	4,f
  4707  08C0  0800               	movf	0,w
  4708  08C1  00A3               	movwf	??__div_to_l_+3
  4709  08C2  3073               	movlw	low (__div_to_l_@f1| 0)
  4710  08C3  0084               	movwf	4
  4711  08C4  0800               	movf	0,w
  4712  08C5  00A4               	movwf	??__div_to_l_+4
  4713  08C6  0A84               	incf	4,f
  4714  08C7  0800               	movf	0,w
  4715  08C8  00A5               	movwf	??__div_to_l_+5
  4716  08C9  0A84               	incf	4,f
  4717  08CA  0800               	movf	0,w
  4718  08CB  00A6               	movwf	??__div_to_l_+6
  4719  08CC  0A84               	incf	4,f
  4720  08CD  0800               	movf	0,w
  4721  08CE  00A7               	movwf	??__div_to_l_+7
  4722  08CF  0823               	movf	??__div_to_l_+3,w
  4723  08D0  0227               	subwf	??__div_to_l_+7,w
  4724  08D1  1D03               	skipz
  4725  08D2  28DD               	goto	u3645
  4726  08D3  0822               	movf	??__div_to_l_+2,w
  4727  08D4  0226               	subwf	??__div_to_l_+6,w
  4728  08D5  1D03               	skipz
  4729  08D6  28DD               	goto	u3645
  4730  08D7  0821               	movf	??__div_to_l_+1,w
  4731  08D8  0225               	subwf	??__div_to_l_+5,w
  4732  08D9  1D03               	skipz
  4733  08DA  28DD               	goto	u3645
  4734  08DB  0820               	movf	??__div_to_l_,w
  4735  08DC  0224               	subwf	??__div_to_l_+4,w
  4736  08DD                     u3645:
  4737  08DD  1C03               	skipc
  4738  08DE  28E0               	goto	u3641
  4739  08DF  28E1               	goto	u3640
  4740  08E0                     u3641:
  4741  08E0  2904               	goto	l657
  4742  08E1                     u3640:
  4743  08E1                     l2718:
  4744  08E1  3076               	movlw	low (__div_to_l_@f2| 0)
  4745  08E2  0084               	movwf	4
  4746  08E3  0800               	movf	0,w
  4747  08E4  00A0               	movwf	??__div_to_l_
  4748  08E5  0A84               	incf	4,f
  4749  08E6  0800               	movf	0,w
  4750  08E7  00A1               	movwf	??__div_to_l_+1
  4751  08E8  0A84               	incf	4,f
  4752  08E9  0800               	movf	0,w
  4753  08EA  00A2               	movwf	??__div_to_l_+2
  4754  08EB  0A84               	incf	4,f
  4755  08EC  0800               	movf	0,w
  4756  08ED  00A3               	movwf	??__div_to_l_+3
  4757  08EE  3073               	movlw	low (__div_to_l_@f1| 0)
  4758  08EF  0084               	movwf	4
  4759  08F0  0820               	movf	??__div_to_l_,w
  4760  08F1  0280               	subwf	0,f
  4761  08F2  0A84               	incf	4,f
  4762  08F3  0821               	movf	??__div_to_l_+1,w
  4763  08F4  1C03               	skipc
  4764  08F5  0F21               	incfsz	??__div_to_l_+1,w
  4765  08F6  0280               	subwf	0,f
  4766  08F7  0A84               	incf	4,f
  4767  08F8  0822               	movf	??__div_to_l_+2,w
  4768  08F9  1C03               	skipc
  4769  08FA  0F22               	incfsz	??__div_to_l_+2,w
  4770  08FB  0280               	subwf	0,f
  4771  08FC  0A84               	incf	4,f
  4772  08FD  0823               	movf	??__div_to_l_+3,w
  4773  08FE  1C03               	skipc
  4774  08FF  0A23               	incf	??__div_to_l_+3,w
  4775  0900  0280               	subwf	0,f
  4776  0901  3003               	movlw	3
  4777  0902  0284               	subwf	4,f
  4778  0903                     l2720:
  4779  0903  1428               	bsf	__div_to_l_@quot,0
  4780  0904                     l657:
  4781  0904  3073               	movlw	low (__div_to_l_@f1| 0)
  4782  0905  0084               	movwf	4
  4783  0906  1003               	clrc
  4784  0907  0D80               	rlf	0,f
  4785  0908  0A84               	incf	4,f
  4786  0909  0D80               	rlf	0,f
  4787  090A  0A84               	incf	4,f
  4788  090B  0D80               	rlf	0,f
  4789  090C  0A84               	incf	4,f
  4790  090D  0D80               	rlf	0,f
  4791  090E  0384               	decf	4,f
  4792  090F  0384               	decf	4,f
  4793  0910  0384               	decf	4,f
  4794  0911                     l2722:
  4795  0911  3001               	movlw	1
  4796  0912  02AC               	subwf	__div_to_l_@cntr,f
  4797  0913  1D03               	btfss	3,2
  4798  0914  2916               	goto	u3651
  4799  0915  2917               	goto	u3650
  4800  0916                     u3651:
  4801  0916  28AC               	goto	l2714
  4802  0917                     u3650:
  4803  0917                     l658:
  4804  0917  1FAD               	btfss	__div_to_l_@exp1,7
  4805  0918  291A               	goto	u3661
  4806  0919  291B               	goto	u3660
  4807  091A                     u3661:
  4808  091A  2935               	goto	l2732
  4809  091B                     u3660:
  4810  091B                     l2724:
  4811  091B  082D               	movf	__div_to_l_@exp1,w
  4812  091C  3A80               	xorlw	128
  4813  091D  3E9F               	addlw	159
  4814  091E  1803               	skipnc
  4815  091F  2921               	goto	u3671
  4816  0920  2922               	goto	u3670
  4817  0921                     u3671:
  4818  0921  2923               	goto	l2730
  4819  0922                     u3670:
  4820  0922  2843               	goto	l2694
  4821  0923                     l2730:
  4822  0923  3001               	movlw	1
  4823  0924                     u3685:
  4824  0924  1003               	clrc
  4825  0925  0CAB               	rrf	__div_to_l_@quot+3,f
  4826  0926  0CAA               	rrf	__div_to_l_@quot+2,f
  4827  0927  0CA9               	rrf	__div_to_l_@quot+1,f
  4828  0928  0CA8               	rrf	__div_to_l_@quot,f
  4829  0929  3EFF               	addlw	-1
  4830  092A  1D03               	skipz
  4831  092B  2924               	goto	u3685
  4832  092C  3001               	movlw	1
  4833  092D  00A0               	movwf	??__div_to_l_
  4834  092E  0820               	movf	??__div_to_l_,w
  4835  092F  07AD               	addwf	__div_to_l_@exp1,f
  4836  0930  1D03               	btfss	3,2
  4837  0931  2933               	goto	u3691
  4838  0932  2934               	goto	u3690
  4839  0933                     u3691:
  4840  0933  2923               	goto	l2730
  4841  0934                     u3690:
  4842  0934  294C               	goto	l2740
  4843  0935                     l2732:
  4844  0935  3020               	movlw	32
  4845  0936  022D               	subwf	__div_to_l_@exp1,w
  4846  0937  1C03               	skipc
  4847  0938  293A               	goto	u3701
  4848  0939  293B               	goto	u3700
  4849  093A                     u3701:
  4850  093A  2947               	goto	l665
  4851  093B                     u3700:
  4852  093B  2843               	goto	l2694
  4853  093C                     l2738:
  4854  093C  3001               	movlw	1
  4855  093D  00A0               	movwf	??__div_to_l_
  4856  093E                     u3715:
  4857  093E  1003               	clrc
  4858  093F  0DA8               	rlf	__div_to_l_@quot,f
  4859  0940  0DA9               	rlf	__div_to_l_@quot+1,f
  4860  0941  0DAA               	rlf	__div_to_l_@quot+2,f
  4861  0942  0DAB               	rlf	__div_to_l_@quot+3,f
  4862  0943  0BA0               	decfsz	??__div_to_l_,f
  4863  0944  293E               	goto	u3715
  4864  0945  3001               	movlw	1
  4865  0946  02AD               	subwf	__div_to_l_@exp1,f
  4866  0947                     l665:
  4867  0947  082D               	movf	__div_to_l_@exp1,w
  4868  0948  1D03               	btfss	3,2
  4869  0949  294B               	goto	u3721
  4870  094A  294C               	goto	u3720
  4871  094B                     u3721:
  4872  094B  293C               	goto	l2738
  4873  094C                     u3720:
  4874  094C                     l2740:
  4875  094C  082B               	movf	__div_to_l_@quot+3,w
  4876  094D  00F6               	movwf	?__div_to_l_+3
  4877  094E  082A               	movf	__div_to_l_@quot+2,w
  4878  094F  00F5               	movwf	?__div_to_l_+2
  4879  0950  0829               	movf	__div_to_l_@quot+1,w
  4880  0951  00F4               	movwf	?__div_to_l_+1
  4881  0952  0828               	movf	__div_to_l_@quot,w
  4882  0953  00F3               	movwf	?__div_to_l_
  4883  0954                     l654:
  4884  0954  0008               	return
  4885  0955                     __end_of__div_to_l_:
  4886                           
  4887                           	psect	text12
  4888  1D56                     __ptext12:	
  4889 ;; *************** function ___wmul *****************
  4890 ;; Defined at:
  4891 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  multiplier      2    3[COMMON] unsigned int 
  4894 ;;  multiplicand    2    5[COMMON] unsigned int 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  product         2    7[COMMON] unsigned int 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  2    3[COMMON] unsigned int 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         4       0       0       0       0
  4907 ;;      Locals:         2       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         6       0       0       0       0
  4910 ;;Total ram usage:        6 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    2
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_sprintf
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           
  4921                           ;psect for function ___wmul
  4922  1D56                     ___wmul:
  4923  1D56                     l2744:	
  4924                           ;incstack = 0
  4925                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4926                           
  4927  1D56  01F7               	clrf	___wmul@product
  4928  1D57  01F8               	clrf	___wmul@product+1
  4929  1D58                     l2746:
  4930  1D58  1C73               	btfss	___wmul@multiplier,0
  4931  1D59  2D5B               	goto	u3731
  4932  1D5A  2D5C               	goto	u3730
  4933  1D5B                     u3731:
  4934  1D5B  2D62               	goto	l448
  4935  1D5C                     u3730:
  4936  1D5C                     l2748:
  4937  1D5C  0875               	movf	___wmul@multiplicand,w
  4938  1D5D  07F7               	addwf	___wmul@product,f
  4939  1D5E  1803               	skipnc
  4940  1D5F  0AF8               	incf	___wmul@product+1,f
  4941  1D60  0876               	movf	___wmul@multiplicand+1,w
  4942  1D61  07F8               	addwf	___wmul@product+1,f
  4943  1D62                     l448:
  4944  1D62  3001               	movlw	1
  4945  1D63                     u3745:
  4946  1D63  1003               	clrc
  4947  1D64  0DF5               	rlf	___wmul@multiplicand,f
  4948  1D65  0DF6               	rlf	___wmul@multiplicand+1,f
  4949  1D66  3EFF               	addlw	-1
  4950  1D67  1D03               	skipz
  4951  1D68  2D63               	goto	u3745
  4952  1D69                     l2750:
  4953  1D69  3001               	movlw	1
  4954  1D6A                     u3755:
  4955  1D6A  1003               	clrc
  4956  1D6B  0CF4               	rrf	___wmul@multiplier+1,f
  4957  1D6C  0CF3               	rrf	___wmul@multiplier,f
  4958  1D6D  3EFF               	addlw	-1
  4959  1D6E  1D03               	skipz
  4960  1D6F  2D6A               	goto	u3755
  4961  1D70                     l2752:
  4962  1D70  0873               	movf	___wmul@multiplier,w
  4963  1D71  0474               	iorwf	___wmul@multiplier+1,w
  4964  1D72  1D03               	btfss	3,2
  4965  1D73  2D75               	goto	u3761
  4966  1D74  2D76               	goto	u3760
  4967  1D75                     u3761:
  4968  1D75  2D58               	goto	l2746
  4969  1D76                     u3760:
  4970  1D76                     l2754:
  4971  1D76  0878               	movf	___wmul@product+1,w
  4972  1D77  00F4               	movwf	?___wmul+1
  4973  1D78  0877               	movf	___wmul@product,w
  4974  1D79  00F3               	movwf	?___wmul
  4975  1D7A                     l450:
  4976  1D7A  0008               	return
  4977  1D7B                     __end_of___wmul:
  4978                           
  4979                           	psect	text13
  4980  1E2A                     __ptext13:	
  4981 ;; *************** function ___lltoft *****************
  4982 ;; Defined at:
  4983 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  c               4    3[BANK0 ] unsigned long 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  exp             1    9[COMMON] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  3    3[BANK0 ] float 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4997 ;;      Params:         0       4       0       0       0
  4998 ;;      Locals:         1       0       0       0       0
  4999 ;;      Temps:          1       0       0       0       0
  5000 ;;      Totals:         2       4       0       0       0
  5001 ;;Total ram usage:        6 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    3
  5004 ;; This function calls:
  5005 ;;		___ftpack
  5006 ;; This function is called by:
  5007 ;;		_sprintf
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function ___lltoft
  5013  1E2A                     ___lltoft:
  5014  1E2A                     l3896:	
  5015                           ;incstack = 0
  5016                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5017                           
  5018  1E2A  308E               	movlw	142
  5019  1E2B  00F8               	movwf	??___lltoft
  5020  1E2C  0878               	movf	??___lltoft,w
  5021  1E2D  00F9               	movwf	___lltoft@exp
  5022  1E2E  2E3C               	goto	l3900
  5023  1E2F                     l3898:
  5024  1E2F  3001               	movlw	1
  5025  1E30                     u5915:
  5026  1E30  1003               	clrc
  5027  1E31  0CA6               	rrf	___lltoft@c+3,f
  5028  1E32  0CA5               	rrf	___lltoft@c+2,f
  5029  1E33  0CA4               	rrf	___lltoft@c+1,f
  5030  1E34  0CA3               	rrf	___lltoft@c,f
  5031  1E35  3EFF               	addlw	-1
  5032  1E36  1D03               	skipz
  5033  1E37  2E30               	goto	u5915
  5034  1E38  3001               	movlw	1
  5035  1E39  00F8               	movwf	??___lltoft
  5036  1E3A  0878               	movf	??___lltoft,w
  5037  1E3B  07F9               	addwf	___lltoft@exp,f
  5038  1E3C                     l3900:
  5039  1E3C  30FF               	movlw	255
  5040  1E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5041  1E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5042  1E3F  0526               	andwf	___lltoft@c+3,w
  5043  1E40  1D03               	btfss	3,2
  5044  1E41  2E43               	goto	u5921
  5045  1E42  2E44               	goto	u5920
  5046  1E43                     u5921:
  5047  1E43  2E2F               	goto	l3898
  5048  1E44                     u5920:
  5049  1E44                     l3902:
  5050  1E44  0823               	movf	___lltoft@c,w
  5051  1E45  00F3               	movwf	___ftpack@arg
  5052  1E46  0824               	movf	___lltoft@c+1,w
  5053  1E47  00F4               	movwf	___ftpack@arg+1
  5054  1E48  0825               	movf	___lltoft@c+2,w
  5055  1E49  00F5               	movwf	___ftpack@arg+2
  5056  1E4A  0879               	movf	___lltoft@exp,w
  5057  1E4B  00F8               	movwf	??___lltoft
  5058  1E4C  0878               	movf	??___lltoft,w
  5059  1E4D  00F6               	movwf	___ftpack@exp
  5060  1E4E  01F7               	clrf	___ftpack@sign
  5061  1E4F  160A  118A  21E0  160A  158A  	fcall	___ftpack
  5062  1E54  0873               	movf	?___ftpack,w
  5063  1E55  1283               	bcf	3,5	;RP0=0, select bank0
  5064  1E56  1303               	bcf	3,6	;RP1=0, select bank0
  5065  1E57  00A3               	movwf	?___lltoft
  5066  1E58  0874               	movf	?___ftpack+1,w
  5067  1E59  00A4               	movwf	?___lltoft+1
  5068  1E5A  0875               	movf	?___ftpack+2,w
  5069  1E5B  00A5               	movwf	?___lltoft+2
  5070  1E5C                     l827:
  5071  1E5C  0008               	return
  5072  1E5D                     __end_of___lltoft:
  5073                           
  5074                           	psect	text14
  5075  1F51                     __ptext14:	
  5076 ;; *************** function ___llmod *****************
  5077 ;; Defined at:
  5078 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  divisor         4    8[BANK0 ] unsigned long 
  5081 ;;  dividend        4   12[BANK0 ] unsigned long 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  counter         1   16[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  4    8[BANK0 ] unsigned long 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5093 ;;      Params:         0       8       0       0       0
  5094 ;;      Locals:         0       1       0       0       0
  5095 ;;      Temps:          1       0       0       0       0
  5096 ;;      Totals:         1       9       0       0       0
  5097 ;;Total ram usage:       10 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    2
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_sprintf
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function ___llmod
  5109  1F51                     ___llmod:
  5110  1F51                     l3876:	
  5111                           ;incstack = 0
  5112                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5113                           
  5114  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  5115  1F52  1303               	bcf	3,6	;RP1=0, select bank0
  5116  1F53  082B               	movf	___llmod@divisor+3,w
  5117  1F54  042A               	iorwf	___llmod@divisor+2,w
  5118  1F55  0429               	iorwf	___llmod@divisor+1,w
  5119  1F56  0428               	iorwf	___llmod@divisor,w
  5120  1F57  1903               	skipnz
  5121  1F58  2F5A               	goto	u5851
  5122  1F59  2F5B               	goto	u5850
  5123  1F5A                     u5851:
  5124  1F5A  2F9E               	goto	l3892
  5125  1F5B                     u5850:
  5126  1F5B                     l3878:
  5127  1F5B  01B0               	clrf	___llmod@counter
  5128  1F5C  0AB0               	incf	___llmod@counter,f
  5129  1F5D  2F6B               	goto	l3882
  5130  1F5E                     l3880:
  5131  1F5E  3001               	movlw	1
  5132  1F5F  00F9               	movwf	??___llmod
  5133  1F60                     u5865:
  5134  1F60  1003               	clrc
  5135  1F61  0DA8               	rlf	___llmod@divisor,f
  5136  1F62  0DA9               	rlf	___llmod@divisor+1,f
  5137  1F63  0DAA               	rlf	___llmod@divisor+2,f
  5138  1F64  0DAB               	rlf	___llmod@divisor+3,f
  5139  1F65  0BF9               	decfsz	??___llmod,f
  5140  1F66  2F60               	goto	u5865
  5141  1F67  3001               	movlw	1
  5142  1F68  00F9               	movwf	??___llmod
  5143  1F69  0879               	movf	??___llmod,w
  5144  1F6A  07B0               	addwf	___llmod@counter,f
  5145  1F6B                     l3882:
  5146  1F6B  1FAB               	btfss	___llmod@divisor+3,7
  5147  1F6C  2F6E               	goto	u5871
  5148  1F6D  2F6F               	goto	u5870
  5149  1F6E                     u5871:
  5150  1F6E  2F5E               	goto	l3880
  5151  1F6F                     u5870:
  5152  1F6F                     l3884:
  5153  1F6F  082B               	movf	___llmod@divisor+3,w
  5154  1F70  022F               	subwf	___llmod@dividend+3,w
  5155  1F71  1D03               	skipz
  5156  1F72  2F7D               	goto	u5885
  5157  1F73  082A               	movf	___llmod@divisor+2,w
  5158  1F74  022E               	subwf	___llmod@dividend+2,w
  5159  1F75  1D03               	skipz
  5160  1F76  2F7D               	goto	u5885
  5161  1F77  0829               	movf	___llmod@divisor+1,w
  5162  1F78  022D               	subwf	___llmod@dividend+1,w
  5163  1F79  1D03               	skipz
  5164  1F7A  2F7D               	goto	u5885
  5165  1F7B  0828               	movf	___llmod@divisor,w
  5166  1F7C  022C               	subwf	___llmod@dividend,w
  5167  1F7D                     u5885:
  5168  1F7D  1C03               	skipc
  5169  1F7E  2F80               	goto	u5881
  5170  1F7F  2F81               	goto	u5880
  5171  1F80                     u5881:
  5172  1F80  2F8F               	goto	l3888
  5173  1F81                     u5880:
  5174  1F81                     l3886:
  5175  1F81  0828               	movf	___llmod@divisor,w
  5176  1F82  02AC               	subwf	___llmod@dividend,f
  5177  1F83  0829               	movf	___llmod@divisor+1,w
  5178  1F84  1C03               	skipc
  5179  1F85  0F29               	incfsz	___llmod@divisor+1,w
  5180  1F86  02AD               	subwf	___llmod@dividend+1,f
  5181  1F87  082A               	movf	___llmod@divisor+2,w
  5182  1F88  1C03               	skipc
  5183  1F89  0F2A               	incfsz	___llmod@divisor+2,w
  5184  1F8A  02AE               	subwf	___llmod@dividend+2,f
  5185  1F8B  082B               	movf	___llmod@divisor+3,w
  5186  1F8C  1C03               	skipc
  5187  1F8D  0F2B               	incfsz	___llmod@divisor+3,w
  5188  1F8E  02AF               	subwf	___llmod@dividend+3,f
  5189  1F8F                     l3888:
  5190  1F8F  3001               	movlw	1
  5191  1F90                     u5895:
  5192  1F90  1003               	clrc
  5193  1F91  0CAB               	rrf	___llmod@divisor+3,f
  5194  1F92  0CAA               	rrf	___llmod@divisor+2,f
  5195  1F93  0CA9               	rrf	___llmod@divisor+1,f
  5196  1F94  0CA8               	rrf	___llmod@divisor,f
  5197  1F95  3EFF               	addlw	-1
  5198  1F96  1D03               	skipz
  5199  1F97  2F90               	goto	u5895
  5200  1F98                     l3890:
  5201  1F98  3001               	movlw	1
  5202  1F99  02B0               	subwf	___llmod@counter,f
  5203  1F9A  1D03               	btfss	3,2
  5204  1F9B  2F9D               	goto	u5901
  5205  1F9C  2F9E               	goto	u5900
  5206  1F9D                     u5901:
  5207  1F9D  2F6F               	goto	l3884
  5208  1F9E                     u5900:
  5209  1F9E                     l3892:
  5210  1F9E  082F               	movf	___llmod@dividend+3,w
  5211  1F9F  00AB               	movwf	?___llmod+3
  5212  1FA0  082E               	movf	___llmod@dividend+2,w
  5213  1FA1  00AA               	movwf	?___llmod+2
  5214  1FA2  082D               	movf	___llmod@dividend+1,w
  5215  1FA3  00A9               	movwf	?___llmod+1
  5216  1FA4  082C               	movf	___llmod@dividend,w
  5217  1FA5  00A8               	movwf	?___llmod
  5218  1FA6                     l819:
  5219  1FA6  0008               	return
  5220  1FA7                     __end_of___llmod:
  5221                           
  5222                           	psect	text15
  5223  110F                     __ptext15:	
  5224 ;; *************** function ___lldiv *****************
  5225 ;; Defined at:
  5226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  divisor         4    0[BANK0 ] unsigned long 
  5229 ;;  dividend        4    4[BANK0 ] unsigned long 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  quotient        4    4[COMMON] unsigned long 
  5232 ;;  counter         1    8[COMMON] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  4    0[BANK0 ] unsigned long 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5242 ;;      Params:         0       8       0       0       0
  5243 ;;      Locals:         5       0       0       0       0
  5244 ;;      Temps:          1       0       0       0       0
  5245 ;;      Totals:         6       8       0       0       0
  5246 ;;Total ram usage:       14 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    2
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_sprintf
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           
  5257                           ;psect for function ___lldiv
  5258  110F                     ___lldiv:
  5259  110F                     l3792:	
  5260                           ;incstack = 0
  5261                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5262                           
  5263  110F  3000               	movlw	0
  5264  1110  00F7               	movwf	___lldiv@quotient+3
  5265  1111  3000               	movlw	0
  5266  1112  00F6               	movwf	___lldiv@quotient+2
  5267  1113  3000               	movlw	0
  5268  1114  00F5               	movwf	___lldiv@quotient+1
  5269  1115  3000               	movlw	0
  5270  1116  00F4               	movwf	___lldiv@quotient
  5271  1117  1283               	bcf	3,5	;RP0=0, select bank0
  5272  1118  1303               	bcf	3,6	;RP1=0, select bank0
  5273  1119  0823               	movf	___lldiv@divisor+3,w
  5274  111A  0422               	iorwf	___lldiv@divisor+2,w
  5275  111B  0421               	iorwf	___lldiv@divisor+1,w
  5276  111C  0420               	iorwf	___lldiv@divisor,w
  5277  111D  1903               	skipnz
  5278  111E  2920               	goto	u5661
  5279  111F  2921               	goto	u5660
  5280  1120                     u5661:
  5281  1120  296E               	goto	l3812
  5282  1121                     u5660:
  5283  1121                     l3794:
  5284  1121  01F8               	clrf	___lldiv@counter
  5285  1122  0AF8               	incf	___lldiv@counter,f
  5286  1123  2931               	goto	l3798
  5287  1124                     l3796:
  5288  1124  3001               	movlw	1
  5289  1125  00F3               	movwf	??___lldiv
  5290  1126                     u5675:
  5291  1126  1003               	clrc
  5292  1127  0DA0               	rlf	___lldiv@divisor,f
  5293  1128  0DA1               	rlf	___lldiv@divisor+1,f
  5294  1129  0DA2               	rlf	___lldiv@divisor+2,f
  5295  112A  0DA3               	rlf	___lldiv@divisor+3,f
  5296  112B  0BF3               	decfsz	??___lldiv,f
  5297  112C  2926               	goto	u5675
  5298  112D  3001               	movlw	1
  5299  112E  00F3               	movwf	??___lldiv
  5300  112F  0873               	movf	??___lldiv,w
  5301  1130  07F8               	addwf	___lldiv@counter,f
  5302  1131                     l3798:
  5303  1131  1FA3               	btfss	___lldiv@divisor+3,7
  5304  1132  2934               	goto	u5681
  5305  1133  2935               	goto	u5680
  5306  1134                     u5681:
  5307  1134  2924               	goto	l3796
  5308  1135                     u5680:
  5309  1135                     l3800:
  5310  1135  3001               	movlw	1
  5311  1136  00F3               	movwf	??___lldiv
  5312  1137                     u5695:
  5313  1137  1003               	clrc
  5314  1138  0DF4               	rlf	___lldiv@quotient,f
  5315  1139  0DF5               	rlf	___lldiv@quotient+1,f
  5316  113A  0DF6               	rlf	___lldiv@quotient+2,f
  5317  113B  0DF7               	rlf	___lldiv@quotient+3,f
  5318  113C  0BF3               	decfsz	??___lldiv,f
  5319  113D  2937               	goto	u5695
  5320  113E                     l3802:
  5321  113E  0823               	movf	___lldiv@divisor+3,w
  5322  113F  0227               	subwf	___lldiv@dividend+3,w
  5323  1140  1D03               	skipz
  5324  1141  294C               	goto	u5705
  5325  1142  0822               	movf	___lldiv@divisor+2,w
  5326  1143  0226               	subwf	___lldiv@dividend+2,w
  5327  1144  1D03               	skipz
  5328  1145  294C               	goto	u5705
  5329  1146  0821               	movf	___lldiv@divisor+1,w
  5330  1147  0225               	subwf	___lldiv@dividend+1,w
  5331  1148  1D03               	skipz
  5332  1149  294C               	goto	u5705
  5333  114A  0820               	movf	___lldiv@divisor,w
  5334  114B  0224               	subwf	___lldiv@dividend,w
  5335  114C                     u5705:
  5336  114C  1C03               	skipc
  5337  114D  294F               	goto	u5701
  5338  114E  2950               	goto	u5700
  5339  114F                     u5701:
  5340  114F  295F               	goto	l3808
  5341  1150                     u5700:
  5342  1150                     l3804:
  5343  1150  0820               	movf	___lldiv@divisor,w
  5344  1151  02A4               	subwf	___lldiv@dividend,f
  5345  1152  0821               	movf	___lldiv@divisor+1,w
  5346  1153  1C03               	skipc
  5347  1154  0F21               	incfsz	___lldiv@divisor+1,w
  5348  1155  02A5               	subwf	___lldiv@dividend+1,f
  5349  1156  0822               	movf	___lldiv@divisor+2,w
  5350  1157  1C03               	skipc
  5351  1158  0F22               	incfsz	___lldiv@divisor+2,w
  5352  1159  02A6               	subwf	___lldiv@dividend+2,f
  5353  115A  0823               	movf	___lldiv@divisor+3,w
  5354  115B  1C03               	skipc
  5355  115C  0F23               	incfsz	___lldiv@divisor+3,w
  5356  115D  02A7               	subwf	___lldiv@dividend+3,f
  5357  115E                     l3806:
  5358  115E  1474               	bsf	___lldiv@quotient,0
  5359  115F                     l3808:
  5360  115F  3001               	movlw	1
  5361  1160                     u5715:
  5362  1160  1003               	clrc
  5363  1161  0CA3               	rrf	___lldiv@divisor+3,f
  5364  1162  0CA2               	rrf	___lldiv@divisor+2,f
  5365  1163  0CA1               	rrf	___lldiv@divisor+1,f
  5366  1164  0CA0               	rrf	___lldiv@divisor,f
  5367  1165  3EFF               	addlw	-1
  5368  1166  1D03               	skipz
  5369  1167  2960               	goto	u5715
  5370  1168                     l3810:
  5371  1168  3001               	movlw	1
  5372  1169  02F8               	subwf	___lldiv@counter,f
  5373  116A  1D03               	btfss	3,2
  5374  116B  296D               	goto	u5721
  5375  116C  296E               	goto	u5720
  5376  116D                     u5721:
  5377  116D  2935               	goto	l3800
  5378  116E                     u5720:
  5379  116E                     l3812:
  5380  116E  0877               	movf	___lldiv@quotient+3,w
  5381  116F  00A3               	movwf	?___lldiv+3
  5382  1170  0876               	movf	___lldiv@quotient+2,w
  5383  1171  00A2               	movwf	?___lldiv+2
  5384  1172  0875               	movf	___lldiv@quotient+1,w
  5385  1173  00A1               	movwf	?___lldiv+1
  5386  1174  0874               	movf	___lldiv@quotient,w
  5387  1175  00A0               	movwf	?___lldiv
  5388  1176                     l484:
  5389  1176  0008               	return
  5390  1177                     __end_of___lldiv:
  5391                           
  5392                           	psect	text16
  5393  1262                     __ptext16:	
  5394 ;; *************** function ___fttol *****************
  5395 ;; Defined at:
  5396 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  f1              3   38[BANK0 ] float 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  lval            4   47[BANK0 ] unsigned long 
  5401 ;;  exp1            1   51[BANK0 ] unsigned char 
  5402 ;;  sign1           1   46[BANK0 ] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  4   38[BANK0 ] long 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       4       0       0       0
  5413 ;;      Locals:         0       6       0       0       0
  5414 ;;      Temps:          0       4       0       0       0
  5415 ;;      Totals:         0      14       0       0       0
  5416 ;;Total ram usage:       14 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    2
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_sprintf
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function ___fttol
  5428  1262                     ___fttol:
  5429  1262                     l2870:	
  5430                           ;incstack = 0
  5431                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5432                           
  5433  1262  1283               	bcf	3,5	;RP0=0, select bank0
  5434  1263  1303               	bcf	3,6	;RP1=0, select bank0
  5435  1264  0846               	movf	___fttol@f1,w
  5436  1265  00CA               	movwf	??___fttol
  5437  1266  0847               	movf	___fttol@f1+1,w
  5438  1267  00CB               	movwf	??___fttol+1
  5439  1268  0848               	movf	___fttol@f1+2,w
  5440  1269  00CC               	movwf	??___fttol+2
  5441  126A  1003               	clrc
  5442  126B  0D4B               	rlf	??___fttol+1,w
  5443  126C  0D4C               	rlf	??___fttol+2,w
  5444  126D  00CD               	movwf	??___fttol+3
  5445  126E  084D               	movf	??___fttol+3,w
  5446  126F  00D3               	movwf	___fttol@exp1
  5447  1270  0853               	movf	___fttol@exp1,w
  5448  1271  1D03               	btfss	3,2
  5449  1272  2A74               	goto	u4001
  5450  1273  2A75               	goto	u4000
  5451  1274                     u4001:
  5452  1274  2A7E               	goto	l2876
  5453  1275                     u4000:
  5454  1275                     l2872:
  5455  1275  3000               	movlw	0
  5456  1276  00C9               	movwf	?___fttol+3
  5457  1277  3000               	movlw	0
  5458  1278  00C8               	movwf	?___fttol+2
  5459  1279  3000               	movlw	0
  5460  127A  00C7               	movwf	?___fttol+1
  5461  127B  3000               	movlw	0
  5462  127C  00C6               	movwf	?___fttol
  5463  127D  2AED               	goto	l778
  5464  127E                     l2876:
  5465  127E  0846               	movf	___fttol@f1,w
  5466  127F  00CA               	movwf	??___fttol
  5467  1280  0847               	movf	___fttol@f1+1,w
  5468  1281  00CB               	movwf	??___fttol+1
  5469  1282  0848               	movf	___fttol@f1+2,w
  5470  1283  00CC               	movwf	??___fttol+2
  5471  1284  3017               	movlw	23
  5472  1285                     u4015:
  5473  1285  1003               	clrc
  5474  1286  0CCC               	rrf	??___fttol+2,f
  5475  1287  0CCB               	rrf	??___fttol+1,f
  5476  1288  0CCA               	rrf	??___fttol,f
  5477  1289                     u4010:
  5478  1289  3EFF               	addlw	-1
  5479  128A  1D03               	skipz
  5480  128B  2A85               	goto	u4015
  5481  128C  084A               	movf	??___fttol,w
  5482  128D  00CD               	movwf	??___fttol+3
  5483  128E  084D               	movf	??___fttol+3,w
  5484  128F  00CE               	movwf	___fttol@sign1
  5485  1290                     l2878:
  5486  1290  17C7               	bsf	___fttol@f1+1,7
  5487  1291                     l2880:
  5488  1291  30FF               	movlw	255
  5489  1292  05C6               	andwf	___fttol@f1,f
  5490  1293  30FF               	movlw	255
  5491  1294  05C7               	andwf	___fttol@f1+1,f
  5492  1295  3000               	movlw	0
  5493  1296  05C8               	andwf	___fttol@f1+2,f
  5494  1297                     l2882:
  5495  1297  0846               	movf	___fttol@f1,w
  5496  1298  00CF               	movwf	___fttol@lval
  5497  1299  0847               	movf	___fttol@f1+1,w
  5498  129A  00D0               	movwf	___fttol@lval+1
  5499  129B  0848               	movf	___fttol@f1+2,w
  5500  129C  00D1               	movwf	___fttol@lval+2
  5501  129D  01D2               	clrf	___fttol@lval+3
  5502  129E                     l2884:
  5503  129E  308E               	movlw	142
  5504  129F  02D3               	subwf	___fttol@exp1,f
  5505  12A0                     l2886:
  5506  12A0  1FD3               	btfss	___fttol@exp1,7
  5507  12A1  2AA3               	goto	u4021
  5508  12A2  2AA4               	goto	u4020
  5509  12A3                     u4021:
  5510  12A3  2ABE               	goto	l2896
  5511  12A4                     u4020:
  5512  12A4                     l2888:
  5513  12A4  0853               	movf	___fttol@exp1,w
  5514  12A5  3A80               	xorlw	128
  5515  12A6  3E8F               	addlw	143
  5516  12A7  1803               	skipnc
  5517  12A8  2AAA               	goto	u4031
  5518  12A9  2AAB               	goto	u4030
  5519  12AA                     u4031:
  5520  12AA  2AAC               	goto	l2894
  5521  12AB                     u4030:
  5522  12AB  2A75               	goto	l2872
  5523  12AC                     l2894:
  5524  12AC  3001               	movlw	1
  5525  12AD                     u4045:
  5526  12AD  1003               	clrc
  5527  12AE  0CD2               	rrf	___fttol@lval+3,f
  5528  12AF  0CD1               	rrf	___fttol@lval+2,f
  5529  12B0  0CD0               	rrf	___fttol@lval+1,f
  5530  12B1  0CCF               	rrf	___fttol@lval,f
  5531  12B2  3EFF               	addlw	-1
  5532  12B3  1D03               	skipz
  5533  12B4  2AAD               	goto	u4045
  5534  12B5  3001               	movlw	1
  5535  12B6  00CA               	movwf	??___fttol
  5536  12B7  084A               	movf	??___fttol,w
  5537  12B8  07D3               	addwf	___fttol@exp1,f
  5538  12B9  1D03               	btfss	3,2
  5539  12BA  2ABC               	goto	u4051
  5540  12BB  2ABD               	goto	u4050
  5541  12BC                     u4051:
  5542  12BC  2AAC               	goto	l2894
  5543  12BD                     u4050:
  5544  12BD  2AD5               	goto	l2904
  5545  12BE                     l2896:
  5546  12BE  3018               	movlw	24
  5547  12BF  0253               	subwf	___fttol@exp1,w
  5548  12C0  1C03               	skipc
  5549  12C1  2AC3               	goto	u4061
  5550  12C2  2AC4               	goto	u4060
  5551  12C3                     u4061:
  5552  12C3  2AD0               	goto	l785
  5553  12C4                     u4060:
  5554  12C4  2A75               	goto	l2872
  5555  12C5                     l2902:
  5556  12C5  3001               	movlw	1
  5557  12C6  00CA               	movwf	??___fttol
  5558  12C7                     u4075:
  5559  12C7  1003               	clrc
  5560  12C8  0DCF               	rlf	___fttol@lval,f
  5561  12C9  0DD0               	rlf	___fttol@lval+1,f
  5562  12CA  0DD1               	rlf	___fttol@lval+2,f
  5563  12CB  0DD2               	rlf	___fttol@lval+3,f
  5564  12CC  0BCA               	decfsz	??___fttol,f
  5565  12CD  2AC7               	goto	u4075
  5566  12CE  3001               	movlw	1
  5567  12CF  02D3               	subwf	___fttol@exp1,f
  5568  12D0                     l785:
  5569  12D0  0853               	movf	___fttol@exp1,w
  5570  12D1  1D03               	btfss	3,2
  5571  12D2  2AD4               	goto	u4081
  5572  12D3  2AD5               	goto	u4080
  5573  12D4                     u4081:
  5574  12D4  2AC5               	goto	l2902
  5575  12D5                     u4080:
  5576  12D5                     l2904:
  5577  12D5  084E               	movf	___fttol@sign1,w
  5578  12D6  1903               	btfsc	3,2
  5579  12D7  2AD9               	goto	u4091
  5580  12D8  2ADA               	goto	u4090
  5581  12D9                     u4091:
  5582  12D9  2AE5               	goto	l2908
  5583  12DA                     u4090:
  5584  12DA                     l2906:
  5585  12DA  09CF               	comf	___fttol@lval,f
  5586  12DB  09D0               	comf	___fttol@lval+1,f
  5587  12DC  09D1               	comf	___fttol@lval+2,f
  5588  12DD  09D2               	comf	___fttol@lval+3,f
  5589  12DE  0ACF               	incf	___fttol@lval,f
  5590  12DF  1903               	skipnz
  5591  12E0  0AD0               	incf	___fttol@lval+1,f
  5592  12E1  1903               	skipnz
  5593  12E2  0AD1               	incf	___fttol@lval+2,f
  5594  12E3  1903               	skipnz
  5595  12E4  0AD2               	incf	___fttol@lval+3,f
  5596  12E5                     l2908:
  5597  12E5  0852               	movf	___fttol@lval+3,w
  5598  12E6  00C9               	movwf	?___fttol+3
  5599  12E7  0851               	movf	___fttol@lval+2,w
  5600  12E8  00C8               	movwf	?___fttol+2
  5601  12E9  0850               	movf	___fttol@lval+1,w
  5602  12EA  00C7               	movwf	?___fttol+1
  5603  12EB  084F               	movf	___fttol@lval,w
  5604  12EC  00C6               	movwf	?___fttol
  5605  12ED                     l778:
  5606  12ED  0008               	return
  5607  12EE                     __end_of___fttol:
  5608                           
  5609                           	psect	text17
  5610  1D31                     __ptext17:	
  5611 ;; *************** function ___ftsub *****************
  5612 ;; Defined at:
  5613 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  f2              3   58[BANK0 ] float 
  5616 ;;  f1              3   61[BANK0 ] float 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  3   58[BANK0 ] float 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         0       6       0       0       0
  5629 ;;      Locals:         0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0
  5631 ;;      Totals:         0       6       0       0       0
  5632 ;;Total ram usage:        6 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    4
  5635 ;; This function calls:
  5636 ;;		___ftadd
  5637 ;; This function is called by:
  5638 ;;		_sprintf
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function ___ftsub
  5644  1D31                     ___ftsub:
  5645  1D31                     l3868:	
  5646                           ;incstack = 0
  5647                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5648                           
  5649  1D31  1283               	bcf	3,5	;RP0=0, select bank0
  5650  1D32  1303               	bcf	3,6	;RP1=0, select bank0
  5651  1D33  085C               	movf	___ftsub@f2+2,w
  5652  1D34  045B               	iorwf	___ftsub@f2+1,w
  5653  1D35  045A               	iorwf	___ftsub@f2,w
  5654  1D36  1903               	skipnz
  5655  1D37  2D39               	goto	u5841
  5656  1D38  2D3A               	goto	u5840
  5657  1D39                     u5841:
  5658  1D39  2D3C               	goto	l3872
  5659  1D3A                     u5840:
  5660  1D3A                     l3870:
  5661  1D3A  3080               	movlw	128
  5662  1D3B  06DC               	xorwf	___ftsub@f2+2,f
  5663  1D3C                     l3872:
  5664  1D3C  085D               	movf	___ftsub@f1,w
  5665  1D3D  00CD               	movwf	___ftadd@f1
  5666  1D3E  085E               	movf	___ftsub@f1+1,w
  5667  1D3F  00CE               	movwf	___ftadd@f1+1
  5668  1D40  085F               	movf	___ftsub@f1+2,w
  5669  1D41  00CF               	movwf	___ftadd@f1+2
  5670  1D42  085A               	movf	___ftsub@f2,w
  5671  1D43  00D0               	movwf	___ftadd@f2
  5672  1D44  085B               	movf	___ftsub@f2+1,w
  5673  1D45  00D1               	movwf	___ftadd@f2+1
  5674  1D46  085C               	movf	___ftsub@f2+2,w
  5675  1D47  00D2               	movwf	___ftadd@f2+2
  5676  1D48  120A  158A  2155  160A  158A  	fcall	___ftadd
  5677  1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  5678  1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  5679  1D4F  084D               	movf	?___ftadd,w
  5680  1D50  00DA               	movwf	?___ftsub
  5681  1D51  084E               	movf	?___ftadd+1,w
  5682  1D52  00DB               	movwf	?___ftsub+1
  5683  1D53  084F               	movf	?___ftadd+2,w
  5684  1D54  00DC               	movwf	?___ftsub+2
  5685  1D55                     l774:
  5686  1D55  0008               	return
  5687  1D56                     __end_of___ftsub:
  5688                           
  5689                           	psect	text18
  5690  0955                     __ptext18:	
  5691 ;; *************** function ___ftadd *****************
  5692 ;; Defined at:
  5693 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  f1              3   45[BANK0 ] float 
  5696 ;;  f2              3   48[BANK0 ] float 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  exp1            1   57[BANK0 ] unsigned char 
  5699 ;;  exp2            1   56[BANK0 ] unsigned char 
  5700 ;;  sign            1   55[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  3   45[BANK0 ] float 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, pclath, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5710 ;;      Params:         0       6       0       0       0
  5711 ;;      Locals:         0       3       0       0       0
  5712 ;;      Temps:          0       4       0       0       0
  5713 ;;      Totals:         0      13       0       0       0
  5714 ;;Total ram usage:       13 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    3
  5717 ;; This function calls:
  5718 ;;		___ftpack
  5719 ;; This function is called by:
  5720 ;;		_sprintf
  5721 ;;		___ftsub
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function ___ftadd
  5727  0955                     ___ftadd:
  5728  0955                     l3582:	
  5729                           ;incstack = 0
  5730                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5731                           
  5732  0955  1283               	bcf	3,5	;RP0=0, select bank0
  5733  0956  1303               	bcf	3,6	;RP1=0, select bank0
  5734  0957  084D               	movf	___ftadd@f1,w
  5735  0958  00D3               	movwf	??___ftadd
  5736  0959  084E               	movf	___ftadd@f1+1,w
  5737  095A  00D4               	movwf	??___ftadd+1
  5738  095B  084F               	movf	___ftadd@f1+2,w
  5739  095C  00D5               	movwf	??___ftadd+2
  5740  095D  1003               	clrc
  5741  095E  0D54               	rlf	??___ftadd+1,w
  5742  095F  0D55               	rlf	??___ftadd+2,w
  5743  0960  00D6               	movwf	??___ftadd+3
  5744  0961  0856               	movf	??___ftadd+3,w
  5745  0962  00D9               	movwf	___ftadd@exp1
  5746  0963  0850               	movf	___ftadd@f2,w
  5747  0964  00D3               	movwf	??___ftadd
  5748  0965  0851               	movf	___ftadd@f2+1,w
  5749  0966  00D4               	movwf	??___ftadd+1
  5750  0967  0852               	movf	___ftadd@f2+2,w
  5751  0968  00D5               	movwf	??___ftadd+2
  5752  0969  1003               	clrc
  5753  096A  0D54               	rlf	??___ftadd+1,w
  5754  096B  0D55               	rlf	??___ftadd+2,w
  5755  096C  00D6               	movwf	??___ftadd+3
  5756  096D  0856               	movf	??___ftadd+3,w
  5757  096E  00D8               	movwf	___ftadd@exp2
  5758  096F  0859               	movf	___ftadd@exp1,w
  5759  0970  1903               	btfsc	3,2
  5760  0971  2973               	goto	u5211
  5761  0972  2974               	goto	u5210
  5762  0973                     u5211:
  5763  0973  2984               	goto	l3588
  5764  0974                     u5210:
  5765  0974                     l3584:
  5766  0974  0858               	movf	___ftadd@exp2,w
  5767  0975  0259               	subwf	___ftadd@exp1,w
  5768  0976  1803               	skipnc
  5769  0977  2979               	goto	u5221
  5770  0978  297A               	goto	u5220
  5771  0979                     u5221:
  5772  0979  298B               	goto	l3592
  5773  097A                     u5220:
  5774  097A                     l3586:
  5775  097A  0858               	movf	___ftadd@exp2,w
  5776  097B  00D3               	movwf	??___ftadd
  5777  097C  0859               	movf	___ftadd@exp1,w
  5778  097D  02D3               	subwf	??___ftadd,f
  5779  097E  3019               	movlw	25
  5780  097F  0253               	subwf	??___ftadd,w
  5781  0980  1C03               	skipc
  5782  0981  2983               	goto	u5231
  5783  0982  2984               	goto	u5230
  5784  0983                     u5231:
  5785  0983  298B               	goto	l3592
  5786  0984                     u5230:
  5787  0984                     l3588:
  5788  0984  0850               	movf	___ftadd@f2,w
  5789  0985  00CD               	movwf	?___ftadd
  5790  0986  0851               	movf	___ftadd@f2+1,w
  5791  0987  00CE               	movwf	?___ftadd+1
  5792  0988  0852               	movf	___ftadd@f2+2,w
  5793  0989  00CF               	movwf	?___ftadd+2
  5794  098A  2A8A               	goto	l694
  5795  098B                     l3592:
  5796  098B  0858               	movf	___ftadd@exp2,w
  5797  098C  1903               	btfsc	3,2
  5798  098D  298F               	goto	u5241
  5799  098E  2990               	goto	u5240
  5800  098F                     u5241:
  5801  098F  29A0               	goto	l697
  5802  0990                     u5240:
  5803  0990                     l3594:
  5804  0990  0859               	movf	___ftadd@exp1,w
  5805  0991  0258               	subwf	___ftadd@exp2,w
  5806  0992  1803               	skipnc
  5807  0993  2995               	goto	u5251
  5808  0994  2996               	goto	u5250
  5809  0995                     u5251:
  5810  0995  29A1               	goto	l3598
  5811  0996                     u5250:
  5812  0996                     l3596:
  5813  0996  0859               	movf	___ftadd@exp1,w
  5814  0997  00D3               	movwf	??___ftadd
  5815  0998  0858               	movf	___ftadd@exp2,w
  5816  0999  02D3               	subwf	??___ftadd,f
  5817  099A  3019               	movlw	25
  5818  099B  0253               	subwf	??___ftadd,w
  5819  099C  1C03               	skipc
  5820  099D  299F               	goto	u5261
  5821  099E  29A0               	goto	u5260
  5822  099F                     u5261:
  5823  099F  29A1               	goto	l3598
  5824  09A0                     u5260:
  5825  09A0                     l697:
  5826  09A0  2A8A               	goto	l694
  5827  09A1                     l3598:
  5828  09A1  3006               	movlw	6
  5829  09A2  00D3               	movwf	??___ftadd
  5830  09A3  0853               	movf	??___ftadd,w
  5831  09A4  00D7               	movwf	___ftadd@sign
  5832  09A5                     l3600:
  5833  09A5  1FCF               	btfss	___ftadd@f1+2,7
  5834  09A6  29A8               	goto	u5271
  5835  09A7  29A9               	goto	u5270
  5836  09A8                     u5271:
  5837  09A8  29AA               	goto	l698
  5838  09A9                     u5270:
  5839  09A9                     l3602:
  5840  09A9  17D7               	bsf	___ftadd@sign,7
  5841  09AA                     l698:
  5842  09AA  1FD2               	btfss	___ftadd@f2+2,7
  5843  09AB  29AD               	goto	u5281
  5844  09AC  29AE               	goto	u5280
  5845  09AD                     u5281:
  5846  09AD  29AF               	goto	l699
  5847  09AE                     u5280:
  5848  09AE                     l3604:
  5849  09AE  1757               	bsf	___ftadd@sign,6
  5850  09AF                     l699:
  5851  09AF  17CE               	bsf	___ftadd@f1+1,7
  5852  09B0                     l3606:
  5853  09B0  30FF               	movlw	255
  5854  09B1  05CD               	andwf	___ftadd@f1,f
  5855  09B2  30FF               	movlw	255
  5856  09B3  05CE               	andwf	___ftadd@f1+1,f
  5857  09B4  3000               	movlw	0
  5858  09B5  05CF               	andwf	___ftadd@f1+2,f
  5859  09B6                     l3608:
  5860  09B6  17D1               	bsf	___ftadd@f2+1,7
  5861  09B7  30FF               	movlw	255
  5862  09B8  05D0               	andwf	___ftadd@f2,f
  5863  09B9  30FF               	movlw	255
  5864  09BA  05D1               	andwf	___ftadd@f2+1,f
  5865  09BB  3000               	movlw	0
  5866  09BC  05D2               	andwf	___ftadd@f2+2,f
  5867  09BD  0858               	movf	___ftadd@exp2,w
  5868  09BE  0259               	subwf	___ftadd@exp1,w
  5869  09BF  1803               	skipnc
  5870  09C0  29C2               	goto	u5291
  5871  09C1  29C3               	goto	u5290
  5872  09C2                     u5291:
  5873  09C2  29EF               	goto	l3620
  5874  09C3                     u5290:
  5875  09C3                     l3610:
  5876  09C3  3001               	movlw	1
  5877  09C4                     u5305:
  5878  09C4  1003               	clrc
  5879  09C5  0DD0               	rlf	___ftadd@f2,f
  5880  09C6  0DD1               	rlf	___ftadd@f2+1,f
  5881  09C7  0DD2               	rlf	___ftadd@f2+2,f
  5882  09C8  3EFF               	addlw	-1
  5883  09C9  1D03               	skipz
  5884  09CA  29C4               	goto	u5305
  5885  09CB  3001               	movlw	1
  5886  09CC  02D8               	subwf	___ftadd@exp2,f
  5887  09CD                     l3612:
  5888  09CD  0858               	movf	___ftadd@exp2,w
  5889  09CE  0659               	xorwf	___ftadd@exp1,w
  5890  09CF  1903               	skipnz
  5891  09D0  29D2               	goto	u5311
  5892  09D1  29D3               	goto	u5310
  5893  09D2                     u5311:
  5894  09D2  29E8               	goto	l3618
  5895  09D3                     u5310:
  5896  09D3                     l3614:
  5897  09D3  3001               	movlw	1
  5898  09D4  02D7               	subwf	___ftadd@sign,f
  5899  09D5  0857               	movf	___ftadd@sign,w
  5900  09D6  3907               	andlw	7
  5901  09D7  1D03               	btfss	3,2
  5902  09D8  29DA               	goto	u5321
  5903  09D9  29DB               	goto	u5320
  5904  09DA                     u5321:
  5905  09DA  29C3               	goto	l3610
  5906  09DB                     u5320:
  5907  09DB  29E8               	goto	l3618
  5908  09DC                     l3616:
  5909  09DC  3001               	movlw	1
  5910  09DD                     u5335:
  5911  09DD  1003               	clrc
  5912  09DE  0CCF               	rrf	___ftadd@f1+2,f
  5913  09DF  0CCE               	rrf	___ftadd@f1+1,f
  5914  09E0  0CCD               	rrf	___ftadd@f1,f
  5915  09E1  3EFF               	addlw	-1
  5916  09E2  1D03               	skipz
  5917  09E3  29DD               	goto	u5335
  5918  09E4  3001               	movlw	1
  5919  09E5  00D3               	movwf	??___ftadd
  5920  09E6  0853               	movf	??___ftadd,w
  5921  09E7  07D9               	addwf	___ftadd@exp1,f
  5922  09E8                     l3618:
  5923  09E8  0859               	movf	___ftadd@exp1,w
  5924  09E9  0658               	xorwf	___ftadd@exp2,w
  5925  09EA  1D03               	skipz
  5926  09EB  29ED               	goto	u5341
  5927  09EC  29EE               	goto	u5340
  5928  09ED                     u5341:
  5929  09ED  29DC               	goto	l3616
  5930  09EE                     u5340:
  5931  09EE  2A20               	goto	l708
  5932  09EF                     l3620:
  5933  09EF  0859               	movf	___ftadd@exp1,w
  5934  09F0  0258               	subwf	___ftadd@exp2,w
  5935  09F1  1803               	skipnc
  5936  09F2  29F4               	goto	u5351
  5937  09F3  29F5               	goto	u5350
  5938  09F4                     u5351:
  5939  09F4  2A20               	goto	l708
  5940  09F5                     u5350:
  5941  09F5                     l3622:
  5942  09F5  3001               	movlw	1
  5943  09F6                     u5365:
  5944  09F6  1003               	clrc
  5945  09F7  0DCD               	rlf	___ftadd@f1,f
  5946  09F8  0DCE               	rlf	___ftadd@f1+1,f
  5947  09F9  0DCF               	rlf	___ftadd@f1+2,f
  5948  09FA  3EFF               	addlw	-1
  5949  09FB  1D03               	skipz
  5950  09FC  29F6               	goto	u5365
  5951  09FD  3001               	movlw	1
  5952  09FE  02D9               	subwf	___ftadd@exp1,f
  5953  09FF                     l3624:
  5954  09FF  0858               	movf	___ftadd@exp2,w
  5955  0A00  0659               	xorwf	___ftadd@exp1,w
  5956  0A01  1903               	skipnz
  5957  0A02  2A04               	goto	u5371
  5958  0A03  2A05               	goto	u5370
  5959  0A04                     u5371:
  5960  0A04  2A1A               	goto	l3630
  5961  0A05                     u5370:
  5962  0A05                     l3626:
  5963  0A05  3001               	movlw	1
  5964  0A06  02D7               	subwf	___ftadd@sign,f
  5965  0A07  0857               	movf	___ftadd@sign,w
  5966  0A08  3907               	andlw	7
  5967  0A09  1D03               	btfss	3,2
  5968  0A0A  2A0C               	goto	u5381
  5969  0A0B  2A0D               	goto	u5380
  5970  0A0C                     u5381:
  5971  0A0C  29F5               	goto	l3622
  5972  0A0D                     u5380:
  5973  0A0D  2A1A               	goto	l3630
  5974  0A0E                     l3628:
  5975  0A0E  3001               	movlw	1
  5976  0A0F                     u5395:
  5977  0A0F  1003               	clrc
  5978  0A10  0CD2               	rrf	___ftadd@f2+2,f
  5979  0A11  0CD1               	rrf	___ftadd@f2+1,f
  5980  0A12  0CD0               	rrf	___ftadd@f2,f
  5981  0A13  3EFF               	addlw	-1
  5982  0A14  1D03               	skipz
  5983  0A15  2A0F               	goto	u5395
  5984  0A16  3001               	movlw	1
  5985  0A17  00D3               	movwf	??___ftadd
  5986  0A18  0853               	movf	??___ftadd,w
  5987  0A19  07D8               	addwf	___ftadd@exp2,f
  5988  0A1A                     l3630:
  5989  0A1A  0859               	movf	___ftadd@exp1,w
  5990  0A1B  0658               	xorwf	___ftadd@exp2,w
  5991  0A1C  1D03               	skipz
  5992  0A1D  2A1F               	goto	u5401
  5993  0A1E  2A20               	goto	u5400
  5994  0A1F                     u5401:
  5995  0A1F  2A0E               	goto	l3628
  5996  0A20                     u5400:
  5997  0A20                     l708:
  5998  0A20  1FD7               	btfss	___ftadd@sign,7
  5999  0A21  2A23               	goto	u5411
  6000  0A22  2A24               	goto	u5410
  6001  0A23                     u5411:
  6002  0A23  2A34               	goto	l3634
  6003  0A24                     u5410:
  6004  0A24                     l3632:
  6005  0A24  30FF               	movlw	255
  6006  0A25  06CD               	xorwf	___ftadd@f1,f
  6007  0A26  30FF               	movlw	255
  6008  0A27  06CE               	xorwf	___ftadd@f1+1,f
  6009  0A28  30FF               	movlw	255
  6010  0A29  06CF               	xorwf	___ftadd@f1+2,f
  6011  0A2A  3001               	movlw	1
  6012  0A2B  07CD               	addwf	___ftadd@f1,f
  6013  0A2C  3000               	movlw	0
  6014  0A2D  1803               	skipnc
  6015  0A2E  3001               	movlw	1
  6016  0A2F  07CE               	addwf	___ftadd@f1+1,f
  6017  0A30  3000               	movlw	0
  6018  0A31  1803               	skipnc
  6019  0A32  3001               	movlw	1
  6020  0A33  07CF               	addwf	___ftadd@f1+2,f
  6021  0A34                     l3634:
  6022  0A34  1F57               	btfss	___ftadd@sign,6
  6023  0A35  2A37               	goto	u5421
  6024  0A36  2A38               	goto	u5420
  6025  0A37                     u5421:
  6026  0A37  2A48               	goto	l3638
  6027  0A38                     u5420:
  6028  0A38                     l3636:
  6029  0A38  30FF               	movlw	255
  6030  0A39  06D0               	xorwf	___ftadd@f2,f
  6031  0A3A  30FF               	movlw	255
  6032  0A3B  06D1               	xorwf	___ftadd@f2+1,f
  6033  0A3C  30FF               	movlw	255
  6034  0A3D  06D2               	xorwf	___ftadd@f2+2,f
  6035  0A3E  3001               	movlw	1
  6036  0A3F  07D0               	addwf	___ftadd@f2,f
  6037  0A40  3000               	movlw	0
  6038  0A41  1803               	skipnc
  6039  0A42  3001               	movlw	1
  6040  0A43  07D1               	addwf	___ftadd@f2+1,f
  6041  0A44  3000               	movlw	0
  6042  0A45  1803               	skipnc
  6043  0A46  3001               	movlw	1
  6044  0A47  07D2               	addwf	___ftadd@f2+2,f
  6045  0A48                     l3638:
  6046  0A48  01D7               	clrf	___ftadd@sign
  6047  0A49                     l3640:
  6048  0A49  084D               	movf	___ftadd@f1,w
  6049  0A4A  07D0               	addwf	___ftadd@f2,f
  6050  0A4B  084E               	movf	___ftadd@f1+1,w
  6051  0A4C  1103               	clrz
  6052  0A4D  1803               	skipnc
  6053  0A4E  0A4E               	incf	___ftadd@f1+1,w
  6054  0A4F  1903               	skipnz
  6055  0A50  2A52               	goto	u5431
  6056  0A51  07D1               	addwf	___ftadd@f2+1,f
  6057  0A52                     u5431:
  6058  0A52  084F               	movf	___ftadd@f1+2,w
  6059  0A53  1103               	clrz
  6060  0A54  1803               	skipnc
  6061  0A55  0A4F               	incf	___ftadd@f1+2,w
  6062  0A56  1903               	skipnz
  6063  0A57  2A59               	goto	u5432
  6064  0A58  07D2               	addwf	___ftadd@f2+2,f
  6065  0A59                     u5432:
  6066  0A59                     l3642:
  6067  0A59  1FD2               	btfss	___ftadd@f2+2,7
  6068  0A5A  2A5C               	goto	u5441
  6069  0A5B  2A5D               	goto	u5440
  6070  0A5C                     u5441:
  6071  0A5C  2A6F               	goto	l3648
  6072  0A5D                     u5440:
  6073  0A5D                     l3644:
  6074  0A5D  30FF               	movlw	255
  6075  0A5E  06D0               	xorwf	___ftadd@f2,f
  6076  0A5F  30FF               	movlw	255
  6077  0A60  06D1               	xorwf	___ftadd@f2+1,f
  6078  0A61  30FF               	movlw	255
  6079  0A62  06D2               	xorwf	___ftadd@f2+2,f
  6080  0A63  3001               	movlw	1
  6081  0A64  07D0               	addwf	___ftadd@f2,f
  6082  0A65  3000               	movlw	0
  6083  0A66  1803               	skipnc
  6084  0A67  3001               	movlw	1
  6085  0A68  07D1               	addwf	___ftadd@f2+1,f
  6086  0A69  3000               	movlw	0
  6087  0A6A  1803               	skipnc
  6088  0A6B  3001               	movlw	1
  6089  0A6C  07D2               	addwf	___ftadd@f2+2,f
  6090  0A6D                     l3646:
  6091  0A6D  01D7               	clrf	___ftadd@sign
  6092  0A6E  0AD7               	incf	___ftadd@sign,f
  6093  0A6F                     l3648:
  6094  0A6F  0850               	movf	___ftadd@f2,w
  6095  0A70  00F3               	movwf	___ftpack@arg
  6096  0A71  0851               	movf	___ftadd@f2+1,w
  6097  0A72  00F4               	movwf	___ftpack@arg+1
  6098  0A73  0852               	movf	___ftadd@f2+2,w
  6099  0A74  00F5               	movwf	___ftpack@arg+2
  6100  0A75  0859               	movf	___ftadd@exp1,w
  6101  0A76  00D3               	movwf	??___ftadd
  6102  0A77  0853               	movf	??___ftadd,w
  6103  0A78  00F6               	movwf	___ftpack@exp
  6104  0A79  0857               	movf	___ftadd@sign,w
  6105  0A7A  00D4               	movwf	??___ftadd+1
  6106  0A7B  0854               	movf	??___ftadd+1,w
  6107  0A7C  00F7               	movwf	___ftpack@sign
  6108  0A7D  160A  118A  21E0  120A  158A  	fcall	___ftpack
  6109  0A82  0873               	movf	?___ftpack,w
  6110  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  6111  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  6112  0A85  00CD               	movwf	?___ftadd
  6113  0A86  0874               	movf	?___ftpack+1,w
  6114  0A87  00CE               	movwf	?___ftadd+1
  6115  0A88  0875               	movf	?___ftpack+2,w
  6116  0A89  00CF               	movwf	?___ftadd+2
  6117  0A8A                     l694:
  6118  0A8A  0008               	return
  6119  0A8B                     __end_of___ftadd:
  6120                           
  6121                           	psect	text19
  6122  10BF                     __ptext19:	
  6123 ;; *************** function ___ftneg *****************
  6124 ;; Defined at:
  6125 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  f1              3    3[COMMON] float 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  3    3[COMMON] float 
  6132 ;; Registers used:
  6133 ;;		wreg
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6139 ;;      Params:         3       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0
  6141 ;;      Temps:          0       0       0       0       0
  6142 ;;      Totals:         3       0       0       0       0
  6143 ;;Total ram usage:        3 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    2
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_sprintf
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function ___ftneg
  6155  10BF                     ___ftneg:
  6156  10BF                     l2854:	
  6157                           ;incstack = 0
  6158                           ; Regs used in ___ftneg: [wreg]
  6159                           
  6160  10BF  0875               	movf	___ftneg@f1+2,w
  6161  10C0  0474               	iorwf	___ftneg@f1+1,w
  6162  10C1  0473               	iorwf	___ftneg@f1,w
  6163  10C2  1903               	skipnz
  6164  10C3  28C5               	goto	u3981
  6165  10C4  28C6               	goto	u3980
  6166  10C5                     u3981:
  6167  10C5  28C8               	goto	l2858
  6168  10C6                     u3980:
  6169  10C6                     l2856:
  6170  10C6  3080               	movlw	128
  6171  10C7  06F5               	xorwf	___ftneg@f1+2,f
  6172  10C8                     l2858:
  6173  10C8                     l768:
  6174  10C8  0008               	return
  6175  10C9                     __end_of___ftneg:
  6176                           
  6177                           	psect	text20
  6178  1E5D                     __ptext20:	
  6179 ;; *************** function ___ftge *****************
  6180 ;; Defined at:
  6181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  ff1             3    3[COMMON] float 
  6184 ;;  ff2             3    6[COMMON] float 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;		None               void
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         6       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0
  6199 ;;      Totals:         6       0       0       0       0
  6200 ;;Total ram usage:        6 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    2
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_sprintf
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function ___ftge
  6212  1E5D                     ___ftge:
  6213  1E5D                     l2834:	
  6214                           ;incstack = 0
  6215                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6216                           
  6217  1E5D  1FF5               	btfss	___ftge@ff1+2,7
  6218  1E5E  2E60               	goto	u3951
  6219  1E5F  2E61               	goto	u3950
  6220  1E60                     u3951:
  6221  1E60  2E6E               	goto	l2838
  6222  1E61                     u3950:
  6223  1E61                     l2836:
  6224  1E61  0873               	movf	___ftge@ff1,w
  6225  1E62  3C00               	sublw	0
  6226  1E63  00F3               	movwf	___ftge@ff1
  6227  1E64  0874               	movf	___ftge@ff1+1,w
  6228  1E65  1C03               	skipc
  6229  1E66  0F74               	incfsz	___ftge@ff1+1,w
  6230  1E67  3C00               	sublw	0
  6231  1E68  00F4               	movwf	___ftge@ff1+1
  6232  1E69  0875               	movf	___ftge@ff1+2,w
  6233  1E6A  1C03               	skipc
  6234  1E6B  0F75               	incfsz	___ftge@ff1+2,w
  6235  1E6C  3C80               	sublw	128
  6236  1E6D  00F5               	movwf	___ftge@ff1+2
  6237  1E6E                     l2838:
  6238  1E6E  1FF8               	btfss	___ftge@ff2+2,7
  6239  1E6F  2E71               	goto	u3961
  6240  1E70  2E72               	goto	u3960
  6241  1E71                     u3961:
  6242  1E71  2E7F               	goto	l2842
  6243  1E72                     u3960:
  6244  1E72                     l2840:
  6245  1E72  0876               	movf	___ftge@ff2,w
  6246  1E73  3C00               	sublw	0
  6247  1E74  00F6               	movwf	___ftge@ff2
  6248  1E75  0877               	movf	___ftge@ff2+1,w
  6249  1E76  1C03               	skipc
  6250  1E77  0F77               	incfsz	___ftge@ff2+1,w
  6251  1E78  3C00               	sublw	0
  6252  1E79  00F7               	movwf	___ftge@ff2+1
  6253  1E7A  0878               	movf	___ftge@ff2+2,w
  6254  1E7B  1C03               	skipc
  6255  1E7C  0F78               	incfsz	___ftge@ff2+2,w
  6256  1E7D  3C80               	sublw	128
  6257  1E7E  00F8               	movwf	___ftge@ff2+2
  6258  1E7F                     l2842:
  6259  1E7F  3080               	movlw	128
  6260  1E80  06F5               	xorwf	___ftge@ff1+2,f
  6261  1E81                     l2844:
  6262  1E81  3080               	movlw	128
  6263  1E82  06F8               	xorwf	___ftge@ff2+2,f
  6264  1E83                     l2846:
  6265  1E83  0878               	movf	___ftge@ff2+2,w
  6266  1E84  0275               	subwf	___ftge@ff1+2,w
  6267  1E85  1D03               	skipz
  6268  1E86  2E8D               	goto	u3975
  6269  1E87  0877               	movf	___ftge@ff2+1,w
  6270  1E88  0274               	subwf	___ftge@ff1+1,w
  6271  1E89  1D03               	skipz
  6272  1E8A  2E8D               	goto	u3975
  6273  1E8B  0876               	movf	___ftge@ff2,w
  6274  1E8C  0273               	subwf	___ftge@ff1,w
  6275  1E8D                     u3975:
  6276  1E8D  1803               	skipnc
  6277  1E8E  2E90               	goto	u3971
  6278  1E8F  2E91               	goto	u3970
  6279  1E90                     u3971:
  6280  1E90  2E93               	goto	l2850
  6281  1E91                     u3970:
  6282  1E91                     l2848:
  6283  1E91  1003               	clrc
  6284  1E92  2E94               	goto	l751
  6285  1E93                     l2850:
  6286  1E93  1403               	setc
  6287  1E94                     l751:
  6288  1E94  0008               	return
  6289  1E95                     __end_of___ftge:
  6290                           
  6291                           	psect	text21
  6292  1DA6                     __ptext21:	
  6293 ;; *************** function _conversion *****************
  6294 ;; Defined at:
  6295 ;;		line 90 in file "LAB3.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  b               1    wreg     unsigned char 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  b               1   34[BANK0 ] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  3   29[BANK0 ] float 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         0       3       0       0       0
  6310 ;;      Locals:         0       1       0       0       0
  6311 ;;      Temps:          0       2       0       0       0
  6312 ;;      Totals:         0       6       0       0       0
  6313 ;;Total ram usage:        6 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    4
  6316 ;; This function calls:
  6317 ;;		___awtoft
  6318 ;;		___ftmul
  6319 ;; This function is called by:
  6320 ;;		_main
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _conversion
  6326  1DA6                     _conversion:
  6327                           
  6328                           ;incstack = 0
  6329                           ; Regs used in _conversion: [wreg+status,2+status,0+pclath+cstack]
  6330                           ;conversion@b stored from wreg
  6331  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  6332  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  6333  1DA8  00C2               	movwf	conversion@b
  6334  1DA9                     l3906:
  6335                           
  6336                           ;LAB3.c: 91:     return b*0.0196;
  6337  1DA9  3090               	movlw	144
  6338  1DAA  00AD               	movwf	___ftmul@f1
  6339  1DAB  30A0               	movlw	160
  6340  1DAC  00AE               	movwf	___ftmul@f1+1
  6341  1DAD  303C               	movlw	60
  6342  1DAE  00AF               	movwf	___ftmul@f1+2
  6343  1DAF  0842               	movf	conversion@b,w
  6344  1DB0  00C0               	movwf	??_conversion
  6345  1DB1  01C1               	clrf	??_conversion+1
  6346  1DB2  0840               	movf	??_conversion,w
  6347  1DB3  00A3               	movwf	___awtoft@c
  6348  1DB4  0841               	movf	??_conversion+1,w
  6349  1DB5  00A4               	movwf	___awtoft@c+1
  6350  1DB6  120A  158A  2000  160A  158A  	fcall	___awtoft
  6351  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  6352  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  6353  1DBD  0823               	movf	?___awtoft,w
  6354  1DBE  00B0               	movwf	___ftmul@f2
  6355  1DBF  0824               	movf	?___awtoft+1,w
  6356  1DC0  00B1               	movwf	___ftmul@f2+1
  6357  1DC1  0825               	movf	?___awtoft+2,w
  6358  1DC2  00B2               	movwf	___ftmul@f2+2
  6359  1DC3  160A  118A  2525  160A  158A  	fcall	___ftmul
  6360  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  6361  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  6362  1DCA  082D               	movf	?___ftmul,w
  6363  1DCB  00BD               	movwf	?_conversion
  6364  1DCC  082E               	movf	?___ftmul+1,w
  6365  1DCD  00BE               	movwf	?_conversion+1
  6366  1DCE  082F               	movf	?___ftmul+2,w
  6367  1DCF  00BF               	movwf	?_conversion+2
  6368  1DD0                     l68:
  6369  1DD0  0008               	return
  6370  1DD1                     __end_of_conversion:
  6371                           
  6372                           	psect	text22
  6373  1525                     __ptext22:	
  6374 ;; *************** function ___ftmul *****************
  6375 ;; Defined at:
  6376 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  f1              3   13[BANK0 ] float 
  6379 ;;  f2              3   16[BANK0 ] float 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  6382 ;;  sign            1   28[BANK0 ] unsigned char 
  6383 ;;  cntr            1   27[BANK0 ] unsigned char 
  6384 ;;  exp             1   23[BANK0 ] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  3   13[BANK0 ] float 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0, pclath, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6394 ;;      Params:         0       6       0       0       0
  6395 ;;      Locals:         0       6       0       0       0
  6396 ;;      Temps:          0       4       0       0       0
  6397 ;;      Totals:         0      16       0       0       0
  6398 ;;Total ram usage:       16 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    3
  6401 ;; This function calls:
  6402 ;;		___ftpack
  6403 ;; This function is called by:
  6404 ;;		_conversion
  6405 ;;		_fround
  6406 ;;		_scale
  6407 ;;		_sprintf
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function ___ftmul
  6413  1525                     ___ftmul:
  6414  1525                     l3652:	
  6415                           ;incstack = 0
  6416                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6417                           
  6418  1525  1283               	bcf	3,5	;RP0=0, select bank0
  6419  1526  1303               	bcf	3,6	;RP1=0, select bank0
  6420  1527  082D               	movf	___ftmul@f1,w
  6421  1528  00B3               	movwf	??___ftmul
  6422  1529  082E               	movf	___ftmul@f1+1,w
  6423  152A  00B4               	movwf	??___ftmul+1
  6424  152B  082F               	movf	___ftmul@f1+2,w
  6425  152C  00B5               	movwf	??___ftmul+2
  6426  152D  1003               	clrc
  6427  152E  0D34               	rlf	??___ftmul+1,w
  6428  152F  0D35               	rlf	??___ftmul+2,w
  6429  1530  00B6               	movwf	??___ftmul+3
  6430  1531  0836               	movf	??___ftmul+3,w
  6431  1532  00B7               	movwf	___ftmul@exp
  6432  1533  0837               	movf	___ftmul@exp,w
  6433  1534  1D03               	btfss	3,2
  6434  1535  2D37               	goto	u5451
  6435  1536  2D38               	goto	u5450
  6436  1537                     u5451:
  6437  1537  2D3F               	goto	l3658
  6438  1538                     u5450:
  6439  1538                     l3654:
  6440  1538  3000               	movlw	0
  6441  1539  00AD               	movwf	?___ftmul
  6442  153A  3000               	movlw	0
  6443  153B  00AE               	movwf	?___ftmul+1
  6444  153C  3000               	movlw	0
  6445  153D  00AF               	movwf	?___ftmul+2
  6446  153E  2E09               	goto	l757
  6447  153F                     l3658:
  6448  153F  0830               	movf	___ftmul@f2,w
  6449  1540  00B3               	movwf	??___ftmul
  6450  1541  0831               	movf	___ftmul@f2+1,w
  6451  1542  00B4               	movwf	??___ftmul+1
  6452  1543  0832               	movf	___ftmul@f2+2,w
  6453  1544  00B5               	movwf	??___ftmul+2
  6454  1545  1003               	clrc
  6455  1546  0D34               	rlf	??___ftmul+1,w
  6456  1547  0D35               	rlf	??___ftmul+2,w
  6457  1548  00B6               	movwf	??___ftmul+3
  6458  1549  0836               	movf	??___ftmul+3,w
  6459  154A  00BC               	movwf	___ftmul@sign
  6460  154B  083C               	movf	___ftmul@sign,w
  6461  154C  1D03               	btfss	3,2
  6462  154D  2D4F               	goto	u5461
  6463  154E  2D50               	goto	u5460
  6464  154F                     u5461:
  6465  154F  2D57               	goto	l3664
  6466  1550                     u5460:
  6467  1550                     l3660:
  6468  1550  3000               	movlw	0
  6469  1551  00AD               	movwf	?___ftmul
  6470  1552  3000               	movlw	0
  6471  1553  00AE               	movwf	?___ftmul+1
  6472  1554  3000               	movlw	0
  6473  1555  00AF               	movwf	?___ftmul+2
  6474  1556  2E09               	goto	l757
  6475  1557                     l3664:
  6476  1557  083C               	movf	___ftmul@sign,w
  6477  1558  3E7B               	addlw	123
  6478  1559  00B3               	movwf	??___ftmul
  6479  155A  0833               	movf	??___ftmul,w
  6480  155B  07B7               	addwf	___ftmul@exp,f
  6481  155C  082D               	movf	___ftmul@f1,w
  6482  155D  00B3               	movwf	??___ftmul
  6483  155E  082E               	movf	___ftmul@f1+1,w
  6484  155F  00B4               	movwf	??___ftmul+1
  6485  1560  082F               	movf	___ftmul@f1+2,w
  6486  1561  00B5               	movwf	??___ftmul+2
  6487  1562  3010               	movlw	16
  6488  1563                     u5475:
  6489  1563  1003               	clrc
  6490  1564  0CB5               	rrf	??___ftmul+2,f
  6491  1565  0CB4               	rrf	??___ftmul+1,f
  6492  1566  0CB3               	rrf	??___ftmul,f
  6493  1567                     u5470:
  6494  1567  3EFF               	addlw	-1
  6495  1568  1D03               	skipz
  6496  1569  2D63               	goto	u5475
  6497  156A  0833               	movf	??___ftmul,w
  6498  156B  00B6               	movwf	??___ftmul+3
  6499  156C  0836               	movf	??___ftmul+3,w
  6500  156D  00BC               	movwf	___ftmul@sign
  6501  156E  0830               	movf	___ftmul@f2,w
  6502  156F  00B3               	movwf	??___ftmul
  6503  1570  0831               	movf	___ftmul@f2+1,w
  6504  1571  00B4               	movwf	??___ftmul+1
  6505  1572  0832               	movf	___ftmul@f2+2,w
  6506  1573  00B5               	movwf	??___ftmul+2
  6507  1574  3010               	movlw	16
  6508  1575                     u5485:
  6509  1575  1003               	clrc
  6510  1576  0CB5               	rrf	??___ftmul+2,f
  6511  1577  0CB4               	rrf	??___ftmul+1,f
  6512  1578  0CB3               	rrf	??___ftmul,f
  6513  1579                     u5480:
  6514  1579  3EFF               	addlw	-1
  6515  157A  1D03               	skipz
  6516  157B  2D75               	goto	u5485
  6517  157C  0833               	movf	??___ftmul,w
  6518  157D  00B6               	movwf	??___ftmul+3
  6519  157E  0836               	movf	??___ftmul+3,w
  6520  157F  06BC               	xorwf	___ftmul@sign,f
  6521  1580  3080               	movlw	128
  6522  1581  00B3               	movwf	??___ftmul
  6523  1582  0833               	movf	??___ftmul,w
  6524  1583  05BC               	andwf	___ftmul@sign,f
  6525  1584                     l3666:
  6526  1584  17AE               	bsf	___ftmul@f1+1,7
  6527  1585                     l3668:
  6528  1585  17B1               	bsf	___ftmul@f2+1,7
  6529  1586                     l3670:
  6530  1586  30FF               	movlw	255
  6531  1587  05B0               	andwf	___ftmul@f2,f
  6532  1588  30FF               	movlw	255
  6533  1589  05B1               	andwf	___ftmul@f2+1,f
  6534  158A  3000               	movlw	0
  6535  158B  05B2               	andwf	___ftmul@f2+2,f
  6536  158C                     l3672:
  6537  158C  3000               	movlw	0
  6538  158D  00B8               	movwf	___ftmul@f3_as_product
  6539  158E  3000               	movlw	0
  6540  158F  00B9               	movwf	___ftmul@f3_as_product+1
  6541  1590  3000               	movlw	0
  6542  1591  00BA               	movwf	___ftmul@f3_as_product+2
  6543  1592                     l3674:
  6544  1592  3007               	movlw	7
  6545  1593  00B3               	movwf	??___ftmul
  6546  1594  0833               	movf	??___ftmul,w
  6547  1595  00BB               	movwf	___ftmul@cntr
  6548  1596                     l3676:
  6549  1596  1C2D               	btfss	___ftmul@f1,0
  6550  1597  2D99               	goto	u5491
  6551  1598  2D9A               	goto	u5490
  6552  1599                     u5491:
  6553  1599  2DAA               	goto	l3680
  6554  159A                     u5490:
  6555  159A                     l3678:
  6556  159A  0830               	movf	___ftmul@f2,w
  6557  159B  07B8               	addwf	___ftmul@f3_as_product,f
  6558  159C  0831               	movf	___ftmul@f2+1,w
  6559  159D  1103               	clrz
  6560  159E  1803               	skipnc
  6561  159F  0A31               	incf	___ftmul@f2+1,w
  6562  15A0  1903               	skipnz
  6563  15A1  2DA3               	goto	u5501
  6564  15A2  07B9               	addwf	___ftmul@f3_as_product+1,f
  6565  15A3                     u5501:
  6566  15A3  0832               	movf	___ftmul@f2+2,w
  6567  15A4  1103               	clrz
  6568  15A5  1803               	skipnc
  6569  15A6  0A32               	incf	___ftmul@f2+2,w
  6570  15A7  1903               	skipnz
  6571  15A8  2DAA               	goto	u5502
  6572  15A9  07BA               	addwf	___ftmul@f3_as_product+2,f
  6573  15AA                     u5502:
  6574  15AA                     l3680:
  6575  15AA  3001               	movlw	1
  6576  15AB                     u5515:
  6577  15AB  1003               	clrc
  6578  15AC  0CAF               	rrf	___ftmul@f1+2,f
  6579  15AD  0CAE               	rrf	___ftmul@f1+1,f
  6580  15AE  0CAD               	rrf	___ftmul@f1,f
  6581  15AF  3EFF               	addlw	-1
  6582  15B0  1D03               	skipz
  6583  15B1  2DAB               	goto	u5515
  6584  15B2                     l3682:
  6585  15B2  3001               	movlw	1
  6586  15B3                     u5525:
  6587  15B3  1003               	clrc
  6588  15B4  0DB0               	rlf	___ftmul@f2,f
  6589  15B5  0DB1               	rlf	___ftmul@f2+1,f
  6590  15B6  0DB2               	rlf	___ftmul@f2+2,f
  6591  15B7  3EFF               	addlw	-1
  6592  15B8  1D03               	skipz
  6593  15B9  2DB3               	goto	u5525
  6594  15BA                     l3684:
  6595  15BA  3001               	movlw	1
  6596  15BB  02BB               	subwf	___ftmul@cntr,f
  6597  15BC  1D03               	btfss	3,2
  6598  15BD  2DBF               	goto	u5531
  6599  15BE  2DC0               	goto	u5530
  6600  15BF                     u5531:
  6601  15BF  2D96               	goto	l3676
  6602  15C0                     u5530:
  6603  15C0                     l3686:
  6604  15C0  3009               	movlw	9
  6605  15C1  00B3               	movwf	??___ftmul
  6606  15C2  0833               	movf	??___ftmul,w
  6607  15C3  00BB               	movwf	___ftmul@cntr
  6608  15C4                     l3688:
  6609  15C4  1C2D               	btfss	___ftmul@f1,0
  6610  15C5  2DC7               	goto	u5541
  6611  15C6  2DC8               	goto	u5540
  6612  15C7                     u5541:
  6613  15C7  2DD8               	goto	l3692
  6614  15C8                     u5540:
  6615  15C8                     l3690:
  6616  15C8  0830               	movf	___ftmul@f2,w
  6617  15C9  07B8               	addwf	___ftmul@f3_as_product,f
  6618  15CA  0831               	movf	___ftmul@f2+1,w
  6619  15CB  1103               	clrz
  6620  15CC  1803               	skipnc
  6621  15CD  0A31               	incf	___ftmul@f2+1,w
  6622  15CE  1903               	skipnz
  6623  15CF  2DD1               	goto	u5551
  6624  15D0  07B9               	addwf	___ftmul@f3_as_product+1,f
  6625  15D1                     u5551:
  6626  15D1  0832               	movf	___ftmul@f2+2,w
  6627  15D2  1103               	clrz
  6628  15D3  1803               	skipnc
  6629  15D4  0A32               	incf	___ftmul@f2+2,w
  6630  15D5  1903               	skipnz
  6631  15D6  2DD8               	goto	u5552
  6632  15D7  07BA               	addwf	___ftmul@f3_as_product+2,f
  6633  15D8                     u5552:
  6634  15D8                     l3692:
  6635  15D8  3001               	movlw	1
  6636  15D9                     u5565:
  6637  15D9  1003               	clrc
  6638  15DA  0CAF               	rrf	___ftmul@f1+2,f
  6639  15DB  0CAE               	rrf	___ftmul@f1+1,f
  6640  15DC  0CAD               	rrf	___ftmul@f1,f
  6641  15DD  3EFF               	addlw	-1
  6642  15DE  1D03               	skipz
  6643  15DF  2DD9               	goto	u5565
  6644  15E0                     l3694:
  6645  15E0  3001               	movlw	1
  6646  15E1                     u5575:
  6647  15E1  1003               	clrc
  6648  15E2  0CBA               	rrf	___ftmul@f3_as_product+2,f
  6649  15E3  0CB9               	rrf	___ftmul@f3_as_product+1,f
  6650  15E4  0CB8               	rrf	___ftmul@f3_as_product,f
  6651  15E5  3EFF               	addlw	-1
  6652  15E6  1D03               	skipz
  6653  15E7  2DE1               	goto	u5575
  6654  15E8                     l3696:
  6655  15E8  3001               	movlw	1
  6656  15E9  02BB               	subwf	___ftmul@cntr,f
  6657  15EA  1D03               	btfss	3,2
  6658  15EB  2DED               	goto	u5581
  6659  15EC  2DEE               	goto	u5580
  6660  15ED                     u5581:
  6661  15ED  2DC4               	goto	l3688
  6662  15EE                     u5580:
  6663  15EE                     l3698:
  6664  15EE  0838               	movf	___ftmul@f3_as_product,w
  6665  15EF  00F3               	movwf	___ftpack@arg
  6666  15F0  0839               	movf	___ftmul@f3_as_product+1,w
  6667  15F1  00F4               	movwf	___ftpack@arg+1
  6668  15F2  083A               	movf	___ftmul@f3_as_product+2,w
  6669  15F3  00F5               	movwf	___ftpack@arg+2
  6670  15F4  0837               	movf	___ftmul@exp,w
  6671  15F5  00B3               	movwf	??___ftmul
  6672  15F6  0833               	movf	??___ftmul,w
  6673  15F7  00F6               	movwf	___ftpack@exp
  6674  15F8  083C               	movf	___ftmul@sign,w
  6675  15F9  00B4               	movwf	??___ftmul+1
  6676  15FA  0834               	movf	??___ftmul+1,w
  6677  15FB  00F7               	movwf	___ftpack@sign
  6678  15FC  160A  118A  21E0  160A  118A  	fcall	___ftpack
  6679  1601  0873               	movf	?___ftpack,w
  6680  1602  1283               	bcf	3,5	;RP0=0, select bank0
  6681  1603  1303               	bcf	3,6	;RP1=0, select bank0
  6682  1604  00AD               	movwf	?___ftmul
  6683  1605  0874               	movf	?___ftpack+1,w
  6684  1606  00AE               	movwf	?___ftmul+1
  6685  1607  0875               	movf	?___ftpack+2,w
  6686  1608  00AF               	movwf	?___ftmul+2
  6687  1609                     l757:
  6688  1609  0008               	return
  6689  160A                     __end_of___ftmul:
  6690                           
  6691                           	psect	text23
  6692  0800                     __ptext23:	
  6693 ;; *************** function ___awtoft *****************
  6694 ;; Defined at:
  6695 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  c               2    3[BANK0 ] int 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  sign            1    6[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  3    3[BANK0 ] float 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       3       0       0       0
  6710 ;;      Locals:         0       1       0       0       0
  6711 ;;      Temps:          2       0       0       0       0
  6712 ;;      Totals:         2       4       0       0       0
  6713 ;;Total ram usage:        6 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    3
  6716 ;; This function calls:
  6717 ;;		___ftpack
  6718 ;; This function is called by:
  6719 ;;		_conversion
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function ___awtoft
  6725  0800                     ___awtoft:
  6726  0800                     l3856:	
  6727                           ;incstack = 0
  6728                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6729                           
  6730  0800  1283               	bcf	3,5	;RP0=0, select bank0
  6731  0801  1303               	bcf	3,6	;RP1=0, select bank0
  6732  0802  01A6               	clrf	___awtoft@sign
  6733  0803                     l3858:
  6734  0803  1FA4               	btfss	___awtoft@c+1,7
  6735  0804  2806               	goto	u5831
  6736  0805  2807               	goto	u5830
  6737  0806                     u5831:
  6738  0806  280E               	goto	l3864
  6739  0807                     u5830:
  6740  0807                     l3860:
  6741  0807  09A3               	comf	___awtoft@c,f
  6742  0808  09A4               	comf	___awtoft@c+1,f
  6743  0809  0AA3               	incf	___awtoft@c,f
  6744  080A  1903               	skipnz
  6745  080B  0AA4               	incf	___awtoft@c+1,f
  6746  080C                     l3862:
  6747  080C  01A6               	clrf	___awtoft@sign
  6748  080D  0AA6               	incf	___awtoft@sign,f
  6749  080E                     l3864:
  6750  080E  0823               	movf	___awtoft@c,w
  6751  080F  00F3               	movwf	___ftpack@arg
  6752  0810  0824               	movf	___awtoft@c+1,w
  6753  0811  00F4               	movwf	___ftpack@arg+1
  6754  0812  01F5               	clrf	___ftpack@arg+2
  6755  0813  308E               	movlw	142
  6756  0814  00F8               	movwf	??___awtoft
  6757  0815  0878               	movf	??___awtoft,w
  6758  0816  00F6               	movwf	___ftpack@exp
  6759  0817  0826               	movf	___awtoft@sign,w
  6760  0818  00F9               	movwf	??___awtoft+1
  6761  0819  0879               	movf	??___awtoft+1,w
  6762  081A  00F7               	movwf	___ftpack@sign
  6763  081B  160A  118A  21E0  120A  158A  	fcall	___ftpack
  6764  0820  0873               	movf	?___ftpack,w
  6765  0821  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0822  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0823  00A3               	movwf	?___awtoft
  6768  0824  0874               	movf	?___ftpack+1,w
  6769  0825  00A4               	movwf	?___awtoft+1
  6770  0826  0875               	movf	?___ftpack+2,w
  6771  0827  00A5               	movwf	?___awtoft+2
  6772  0828                     l650:
  6773  0828  0008               	return
  6774  0829                     __end_of___awtoft:
  6775                           
  6776                           	psect	text24
  6777  11E0                     __ptext24:	
  6778 ;; *************** function ___ftpack *****************
  6779 ;; Defined at:
  6780 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  arg             3    3[COMMON] unsigned um
  6783 ;;  exp             1    6[COMMON] unsigned char 
  6784 ;;  sign            1    7[COMMON] unsigned char 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  3    3[COMMON] float 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         5       0       0       0       0
  6797 ;;      Locals:         0       0       0       0       0
  6798 ;;      Temps:          0       3       0       0       0
  6799 ;;      Totals:         5       3       0       0       0
  6800 ;;Total ram usage:        8 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    2
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		___awtoft
  6807 ;;		___ftadd
  6808 ;;		___ftmul
  6809 ;;		___lltoft
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           
  6814                           ;psect for function ___ftpack
  6815  11E0                     ___ftpack:
  6816  11E0                     l3488:	
  6817                           ;incstack = 0
  6818                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6819                           
  6820  11E0  0876               	movf	___ftpack@exp,w
  6821  11E1  1903               	btfsc	3,2
  6822  11E2  29E4               	goto	u4911
  6823  11E3  29E5               	goto	u4910
  6824  11E4                     u4911:
  6825  11E4  29EC               	goto	l3492
  6826  11E5                     u4910:
  6827  11E5                     l3490:
  6828  11E5  0875               	movf	___ftpack@arg+2,w
  6829  11E6  0474               	iorwf	___ftpack@arg+1,w
  6830  11E7  0473               	iorwf	___ftpack@arg,w
  6831  11E8  1D03               	skipz
  6832  11E9  29EB               	goto	u4921
  6833  11EA  29EC               	goto	u4920
  6834  11EB                     u4921:
  6835  11EB  2A01               	goto	l3498
  6836  11EC                     u4920:
  6837  11EC                     l3492:
  6838  11EC  3000               	movlw	0
  6839  11ED  00F3               	movwf	?___ftpack
  6840  11EE  3000               	movlw	0
  6841  11EF  00F4               	movwf	?___ftpack+1
  6842  11F0  3000               	movlw	0
  6843  11F1  00F5               	movwf	?___ftpack+2
  6844  11F2  2A61               	goto	l673
  6845  11F3                     l3496:
  6846  11F3  3001               	movlw	1
  6847  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  6848  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  6849  11F6  00A0               	movwf	??___ftpack
  6850  11F7  0820               	movf	??___ftpack,w
  6851  11F8  07F6               	addwf	___ftpack@exp,f
  6852  11F9  3001               	movlw	1
  6853  11FA                     u4935:
  6854  11FA  1003               	clrc
  6855  11FB  0CF5               	rrf	___ftpack@arg+2,f
  6856  11FC  0CF4               	rrf	___ftpack@arg+1,f
  6857  11FD  0CF3               	rrf	___ftpack@arg,f
  6858  11FE  3EFF               	addlw	-1
  6859  11FF  1D03               	skipz
  6860  1200  29FA               	goto	u4935
  6861  1201                     l3498:
  6862  1201  30FE               	movlw	254
  6863  1202  0575               	andwf	___ftpack@arg+2,w
  6864  1203  1D03               	btfss	3,2
  6865  1204  2A06               	goto	u4941
  6866  1205  2A07               	goto	u4940
  6867  1206                     u4941:
  6868  1206  29F3               	goto	l3496
  6869  1207                     u4940:
  6870  1207  2A20               	goto	l677
  6871  1208                     l3500:
  6872  1208  3001               	movlw	1
  6873  1209  1283               	bcf	3,5	;RP0=0, select bank0
  6874  120A  1303               	bcf	3,6	;RP1=0, select bank0
  6875  120B  00A0               	movwf	??___ftpack
  6876  120C  0820               	movf	??___ftpack,w
  6877  120D  07F6               	addwf	___ftpack@exp,f
  6878  120E                     l3502:
  6879  120E  3001               	movlw	1
  6880  120F  07F3               	addwf	___ftpack@arg,f
  6881  1210  3000               	movlw	0
  6882  1211  1803               	skipnc
  6883  1212  3001               	movlw	1
  6884  1213  07F4               	addwf	___ftpack@arg+1,f
  6885  1214  3000               	movlw	0
  6886  1215  1803               	skipnc
  6887  1216  3001               	movlw	1
  6888  1217  07F5               	addwf	___ftpack@arg+2,f
  6889  1218                     l3504:
  6890  1218  3001               	movlw	1
  6891  1219                     u4955:
  6892  1219  1003               	clrc
  6893  121A  0CF5               	rrf	___ftpack@arg+2,f
  6894  121B  0CF4               	rrf	___ftpack@arg+1,f
  6895  121C  0CF3               	rrf	___ftpack@arg,f
  6896  121D  3EFF               	addlw	-1
  6897  121E  1D03               	skipz
  6898  121F  2A19               	goto	u4955
  6899  1220                     l677:
  6900  1220  30FF               	movlw	255
  6901  1221  0575               	andwf	___ftpack@arg+2,w
  6902  1222  1D03               	btfss	3,2
  6903  1223  2A25               	goto	u4961
  6904  1224  2A26               	goto	u4960
  6905  1225                     u4961:
  6906  1225  2A08               	goto	l3500
  6907  1226                     u4960:
  6908  1226  2A31               	goto	l3508
  6909  1227                     l3506:
  6910  1227  3001               	movlw	1
  6911  1228  02F6               	subwf	___ftpack@exp,f
  6912  1229  3001               	movlw	1
  6913  122A                     u4975:
  6914  122A  1003               	clrc
  6915  122B  0DF3               	rlf	___ftpack@arg,f
  6916  122C  0DF4               	rlf	___ftpack@arg+1,f
  6917  122D  0DF5               	rlf	___ftpack@arg+2,f
  6918  122E  3EFF               	addlw	-1
  6919  122F  1D03               	skipz
  6920  1230  2A2A               	goto	u4975
  6921  1231                     l3508:
  6922  1231  1BF4               	btfsc	___ftpack@arg+1,7
  6923  1232  2A34               	goto	u4981
  6924  1233  2A35               	goto	u4980
  6925  1234                     u4981:
  6926  1234  2A3B               	goto	l684
  6927  1235                     u4980:
  6928  1235                     l3510:
  6929  1235  3002               	movlw	2
  6930  1236  0276               	subwf	___ftpack@exp,w
  6931  1237  1803               	skipnc
  6932  1238  2A3A               	goto	u4991
  6933  1239  2A3B               	goto	u4990
  6934  123A                     u4991:
  6935  123A  2A27               	goto	l3506
  6936  123B                     u4990:
  6937  123B                     l684:
  6938  123B  1876               	btfsc	___ftpack@exp,0
  6939  123C  2A3E               	goto	u5001
  6940  123D  2A3F               	goto	u5000
  6941  123E                     u5001:
  6942  123E  2A45               	goto	l685
  6943  123F                     u5000:
  6944  123F                     l3512:
  6945  123F  30FF               	movlw	255
  6946  1240  05F3               	andwf	___ftpack@arg,f
  6947  1241  307F               	movlw	127
  6948  1242  05F4               	andwf	___ftpack@arg+1,f
  6949  1243  30FF               	movlw	255
  6950  1244  05F5               	andwf	___ftpack@arg+2,f
  6951  1245                     l685:
  6952  1245  1003               	clrc
  6953  1246  0CF6               	rrf	___ftpack@exp,f
  6954  1247                     l3514:
  6955  1247  0876               	movf	___ftpack@exp,w
  6956  1248  1283               	bcf	3,5	;RP0=0, select bank0
  6957  1249  1303               	bcf	3,6	;RP1=0, select bank0
  6958  124A  00A0               	movwf	??___ftpack
  6959  124B  01A1               	clrf	??___ftpack+1
  6960  124C  01A2               	clrf	??___ftpack+2
  6961  124D  3010               	movlw	16
  6962  124E                     u5015:
  6963  124E  1003               	clrc
  6964  124F  0DA0               	rlf	??___ftpack,f
  6965  1250  0DA1               	rlf	??___ftpack+1,f
  6966  1251  0DA2               	rlf	??___ftpack+2,f
  6967  1252                     u5010:
  6968  1252  3EFF               	addlw	-1
  6969  1253  1D03               	skipz
  6970  1254  2A4E               	goto	u5015
  6971  1255  0820               	movf	??___ftpack,w
  6972  1256  04F3               	iorwf	___ftpack@arg,f
  6973  1257  0821               	movf	??___ftpack+1,w
  6974  1258  04F4               	iorwf	___ftpack@arg+1,f
  6975  1259  0822               	movf	??___ftpack+2,w
  6976  125A  04F5               	iorwf	___ftpack@arg+2,f
  6977  125B                     l3516:
  6978  125B  0877               	movf	___ftpack@sign,w
  6979  125C  1903               	btfsc	3,2
  6980  125D  2A5F               	goto	u5021
  6981  125E  2A60               	goto	u5020
  6982  125F                     u5021:
  6983  125F  2A61               	goto	l686
  6984  1260                     u5020:
  6985  1260                     l3518:
  6986  1260  17F5               	bsf	___ftpack@arg+2,7
  6987  1261                     l686:
  6988  1261                     l673:
  6989  1261  0008               	return
  6990  1262                     __end_of___ftpack:
  6991                           
  6992                           	psect	text25
  6993  1C89                     __ptext25:	
  6994 ;; *************** function _config_ADC *****************
  6995 ;; Defined at:
  6996 ;;		line 15 in file "ADC.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7010 ;;      Params:         0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0
  7013 ;;      Totals:         0       0       0       0       0
  7014 ;;Total ram usage:        0 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    2
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_main
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           
  7025                           ;psect for function _config_ADC
  7026  1C89                     _config_ADC:
  7027  1C89                     l2962:	
  7028                           ;incstack = 0
  7029                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  7030                           
  7031                           
  7032                           ;ADC.c: 16:     ADCON0bits.ADCS = 1;
  7033  1C89  1283               	bcf	3,5	;RP0=0, select bank0
  7034  1C8A  1303               	bcf	3,6	;RP1=0, select bank0
  7035  1C8B  081F               	movf	31,w	;volatile
  7036  1C8C  393F               	andlw	-193
  7037  1C8D  3840               	iorlw	64
  7038  1C8E  009F               	movwf	31	;volatile
  7039  1C8F                     l2964:
  7040                           
  7041                           ;ADC.c: 17:     ADCON1 = 0;
  7042  1C8F  1683               	bsf	3,5	;RP0=1, select bank1
  7043  1C90  1303               	bcf	3,6	;RP1=0, select bank1
  7044  1C91  019F               	clrf	31	;volatile
  7045  1C92                     l106:
  7046  1C92  0008               	return
  7047  1C93                     __end_of_config_ADC:
  7048                           
  7049                           	psect	text26
  7050  1D7B                     __ptext26:	
  7051 ;; *************** function _Write_USART_String *****************
  7052 ;; Defined at:
  7053 ;;		line 34 in file "USART.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  a               2    4[COMMON] PTR unsigned char 
  7056 ;;		 -> data(20), STR_1(21), 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  i               1    7[COMMON] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7068 ;;      Params:         2       0       0       0       0
  7069 ;;      Locals:         1       0       0       0       0
  7070 ;;      Temps:          1       0       0       0       0
  7071 ;;      Totals:         4       0       0       0       0
  7072 ;;Total ram usage:        4 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    3
  7075 ;; This function calls:
  7076 ;;		_Write_USART
  7077 ;; This function is called by:
  7078 ;;		_main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _Write_USART_String
  7084  1D7B                     _Write_USART_String:
  7085  1D7B                     l3064:	
  7086                           ;incstack = 0
  7087                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7088                           
  7089                           
  7090                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  7091  1D7B  01F7               	clrf	Write_USART_String@i
  7092  1D7C  2D92               	goto	l3070
  7093  1D7D                     l3066:
  7094                           
  7095                           ;USART.c: 37:         Write_USART(a[i]);
  7096  1D7D  0877               	movf	Write_USART_String@i,w
  7097  1D7E  0774               	addwf	Write_USART_String@a,w
  7098  1D7F  0084               	movwf	4
  7099  1D80  0875               	movf	Write_USART_String@a+1,w
  7100  1D81  1803               	skipnc
  7101  1D82  0A75               	incf	Write_USART_String@a+1,w
  7102  1D83  00FF               	movwf	btemp+1
  7103  1D84  160A  118A  2000  160A  158A  	fcall	stringtab
  7104  1D89  160A  158A  2493  160A  158A  	fcall	_Write_USART
  7105  1D8E                     l3068:
  7106                           
  7107                           ;USART.c: 38:     }
  7108  1D8E  3001               	movlw	1
  7109  1D8F  00F6               	movwf	??_Write_USART_String
  7110  1D90  0876               	movf	??_Write_USART_String,w
  7111  1D91  07F7               	addwf	Write_USART_String@i,f
  7112  1D92                     l3070:
  7113  1D92  0877               	movf	Write_USART_String@i,w
  7114  1D93  0774               	addwf	Write_USART_String@a,w
  7115  1D94  0084               	movwf	4
  7116  1D95  0875               	movf	Write_USART_String@a+1,w
  7117  1D96  1803               	skipnc
  7118  1D97  0A75               	incf	Write_USART_String@a+1,w
  7119  1D98  1283               	bcf	3,5	;RP0=0, select bank0
  7120  1D99  1303               	bcf	3,6	;RP1=0, select bank0
  7121  1D9A  00FF               	movwf	btemp+1
  7122  1D9B  160A  118A  2000  160A  158A  	fcall	stringtab
  7123  1DA0  3A00               	xorlw	0
  7124  1DA1  1D03               	skipz
  7125  1DA2  2DA4               	goto	u4281
  7126  1DA3  2DA5               	goto	u4280
  7127  1DA4                     u4281:
  7128  1DA4  2D7D               	goto	l3066
  7129  1DA5                     u4280:
  7130  1DA5                     l237:
  7131  1DA5  0008               	return
  7132  1DA6                     __end_of_Write_USART_String:
  7133                           
  7134                           	psect	text27
  7135  1C93                     __ptext27:	
  7136 ;; *************** function _Write_USART *****************
  7137 ;; Defined at:
  7138 ;;		line 30 in file "USART.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  a               1    wreg     unsigned char 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  a               1    3[COMMON] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7152 ;;      Params:         0       0       0       0       0
  7153 ;;      Locals:         1       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0
  7155 ;;      Totals:         1       0       0       0       0
  7156 ;;Total ram usage:        1 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    2
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_main
  7163 ;;		_Write_USART_String
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           
  7168                           ;psect for function _Write_USART
  7169  1C93                     _Write_USART:
  7170                           
  7171                           ;incstack = 0
  7172                           ; Regs used in _Write_USART: [wreg]
  7173                           ;Write_USART@a stored from wreg
  7174  1C93  00F3               	movwf	Write_USART@a
  7175  1C94                     l2534:
  7176  1C94                     l228:	
  7177                           ;USART.c: 31:     while(!TRMT);
  7178                           
  7179  1C94  1683               	bsf	3,5	;RP0=1, select bank1
  7180  1C95  1303               	bcf	3,6	;RP1=0, select bank1
  7181  1C96  1C98               	btfss	24,1	;volatile
  7182  1C97  2C99               	goto	u3381
  7183  1C98  2C9A               	goto	u3380
  7184  1C99                     u3381:
  7185  1C99  2C94               	goto	l228
  7186  1C9A                     u3380:
  7187  1C9A                     l2536:
  7188                           
  7189                           ;USART.c: 32:     TXREG=a;
  7190  1C9A  0873               	movf	Write_USART@a,w
  7191  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
  7192  1C9C  1303               	bcf	3,6	;RP1=0, select bank0
  7193  1C9D  0099               	movwf	25	;volatile
  7194  1C9E                     l231:
  7195  1C9E  0008               	return
  7196  1C9F                     __end_of_Write_USART:
  7197                           
  7198                           	psect	text28
  7199  1704                     __ptext28:	
  7200 ;; *************** function _ValorADC *****************
  7201 ;; Defined at:
  7202 ;;		line 20 in file "ADC.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  x               1    wreg     unsigned char 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  x               1    5[COMMON] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      unsigned char 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0       0       0       0       0
  7217 ;;      Locals:         1       0       0       0       0
  7218 ;;      Temps:          2       0       0       0       0
  7219 ;;      Totals:         3       0       0       0       0
  7220 ;;Total ram usage:        3 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    2
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_main
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           
  7231                           ;psect for function _ValorADC
  7232  1704                     _ValorADC:
  7233                           
  7234                           ;incstack = 0
  7235                           ; Regs used in _ValorADC: [wreg-fsr0h+status,2+status,0]
  7236                           ;ValorADC@x stored from wreg
  7237  1704  00F5               	movwf	ValorADC@x
  7238  1705                     l3008:
  7239                           
  7240                           ;ADC.c: 21:     switch (x){
  7241  1705  2FBC               	goto	l3044
  7242  1706                     l110:	
  7243                           ;ADC.c: 22:         case 0: TRISAbits.TRISA0 = 1; ANSELbits.ANS0 = 1; ADCON0bits.CHS = 0
      +                          ; break;
  7244                           
  7245  1706  1683               	bsf	3,5	;RP0=1, select bank1
  7246  1707  1303               	bcf	3,6	;RP1=0, select bank1
  7247  1708  1405               	bsf	5,0	;volatile
  7248  1709  1683               	bsf	3,5	;RP0=1, select bank3
  7249  170A  1703               	bsf	3,6	;RP1=1, select bank3
  7250  170B  1408               	bsf	8,0	;volatile
  7251  170C                     l3010:
  7252  170C  30C3               	movlw	-61
  7253  170D  1283               	bcf	3,5	;RP0=0, select bank0
  7254  170E  1303               	bcf	3,6	;RP1=0, select bank0
  7255  170F  059F               	andwf	31,f	;volatile
  7256  1710  2FF0               	goto	l111
  7257  1711                     l112:	
  7258                           ;ADC.c: 23:         case 1: TRISAbits.TRISA1 = 1; ANSELbits.ANS1 = 1; ADCON0bits.CHS = 1
      +                          ; break;
  7259                           
  7260  1711  1683               	bsf	3,5	;RP0=1, select bank1
  7261  1712  1303               	bcf	3,6	;RP1=0, select bank1
  7262  1713  1485               	bsf	5,1	;volatile
  7263  1714  1683               	bsf	3,5	;RP0=1, select bank3
  7264  1715  1703               	bsf	3,6	;RP1=1, select bank3
  7265  1716  1488               	bsf	8,1	;volatile
  7266  1717                     l3012:
  7267  1717  1283               	bcf	3,5	;RP0=0, select bank0
  7268  1718  1303               	bcf	3,6	;RP1=0, select bank0
  7269  1719  081F               	movf	31,w	;volatile
  7270  171A  39C3               	andlw	-61
  7271  171B  3804               	iorlw	4
  7272  171C  009F               	movwf	31	;volatile
  7273  171D  2FF0               	goto	l111
  7274  171E                     l113:	
  7275                           ;ADC.c: 24:         case 2: TRISAbits.TRISA2 = 1; ANSELbits.ANS2 = 1; ADCON0bits.CHS = 2
      +                          ; break;
  7276                           
  7277  171E  1683               	bsf	3,5	;RP0=1, select bank1
  7278  171F  1303               	bcf	3,6	;RP1=0, select bank1
  7279  1720  1505               	bsf	5,2	;volatile
  7280  1721  1683               	bsf	3,5	;RP0=1, select bank3
  7281  1722  1703               	bsf	3,6	;RP1=1, select bank3
  7282  1723  1508               	bsf	8,2	;volatile
  7283  1724                     l3014:
  7284  1724  1283               	bcf	3,5	;RP0=0, select bank0
  7285  1725  1303               	bcf	3,6	;RP1=0, select bank0
  7286  1726  081F               	movf	31,w	;volatile
  7287  1727  39C3               	andlw	-61
  7288  1728  3808               	iorlw	8
  7289  1729  009F               	movwf	31	;volatile
  7290  172A  2FF0               	goto	l111
  7291  172B                     l114:	
  7292                           ;ADC.c: 25:         case 3: TRISAbits.TRISA3 = 1; ANSELbits.ANS3 = 1; ADCON0bits.CHS = 3
      +                          ; break;
  7293                           
  7294  172B  1683               	bsf	3,5	;RP0=1, select bank1
  7295  172C  1303               	bcf	3,6	;RP1=0, select bank1
  7296  172D  1585               	bsf	5,3	;volatile
  7297  172E  1683               	bsf	3,5	;RP0=1, select bank3
  7298  172F  1703               	bsf	3,6	;RP1=1, select bank3
  7299  1730  1588               	bsf	8,3	;volatile
  7300  1731                     l3016:
  7301  1731  1283               	bcf	3,5	;RP0=0, select bank0
  7302  1732  1303               	bcf	3,6	;RP1=0, select bank0
  7303  1733  081F               	movf	31,w	;volatile
  7304  1734  39C3               	andlw	-61
  7305  1735  380C               	iorlw	12
  7306  1736  009F               	movwf	31	;volatile
  7307  1737  2FF0               	goto	l111
  7308  1738                     l115:	
  7309                           ;ADC.c: 26:         case 4: TRISAbits.TRISA5 = 1; ANSELbits.ANS4 = 1; ADCON0bits.CHS = 4
      +                          ; break;
  7310                           
  7311  1738  1683               	bsf	3,5	;RP0=1, select bank1
  7312  1739  1303               	bcf	3,6	;RP1=0, select bank1
  7313  173A  1685               	bsf	5,5	;volatile
  7314  173B  1683               	bsf	3,5	;RP0=1, select bank3
  7315  173C  1703               	bsf	3,6	;RP1=1, select bank3
  7316  173D  1608               	bsf	8,4	;volatile
  7317  173E                     l3018:
  7318  173E  1283               	bcf	3,5	;RP0=0, select bank0
  7319  173F  1303               	bcf	3,6	;RP1=0, select bank0
  7320  1740  081F               	movf	31,w	;volatile
  7321  1741  39C3               	andlw	-61
  7322  1742  3810               	iorlw	16
  7323  1743  009F               	movwf	31	;volatile
  7324  1744  2FF0               	goto	l111
  7325  1745                     l116:	
  7326                           ;ADC.c: 27:         case 5: TRISEbits.TRISE0 = 1; ANSELbits.ANS5 = 1; ADCON0bits.CHS = 5
      +                          ; break;
  7327                           
  7328  1745  1683               	bsf	3,5	;RP0=1, select bank1
  7329  1746  1303               	bcf	3,6	;RP1=0, select bank1
  7330  1747  1409               	bsf	9,0	;volatile
  7331  1748  1683               	bsf	3,5	;RP0=1, select bank3
  7332  1749  1703               	bsf	3,6	;RP1=1, select bank3
  7333  174A  1688               	bsf	8,5	;volatile
  7334  174B                     l3020:
  7335  174B  1283               	bcf	3,5	;RP0=0, select bank0
  7336  174C  1303               	bcf	3,6	;RP1=0, select bank0
  7337  174D  081F               	movf	31,w	;volatile
  7338  174E  39C3               	andlw	-61
  7339  174F  3814               	iorlw	20
  7340  1750  009F               	movwf	31	;volatile
  7341  1751  2FF0               	goto	l111
  7342  1752                     l117:	
  7343                           ;ADC.c: 28:         case 6: TRISEbits.TRISE2 = 1; ANSELbits.ANS6 = 1; ADCON0bits.CHS = 6
      +                          ; break;
  7344                           
  7345  1752  1683               	bsf	3,5	;RP0=1, select bank1
  7346  1753  1303               	bcf	3,6	;RP1=0, select bank1
  7347  1754  1509               	bsf	9,2	;volatile
  7348  1755  1683               	bsf	3,5	;RP0=1, select bank3
  7349  1756  1703               	bsf	3,6	;RP1=1, select bank3
  7350  1757  1708               	bsf	8,6	;volatile
  7351  1758                     l3022:
  7352  1758  1283               	bcf	3,5	;RP0=0, select bank0
  7353  1759  1303               	bcf	3,6	;RP1=0, select bank0
  7354  175A  081F               	movf	31,w	;volatile
  7355  175B  39C3               	andlw	-61
  7356  175C  3818               	iorlw	24
  7357  175D  009F               	movwf	31	;volatile
  7358  175E  2FF0               	goto	l111
  7359  175F                     l118:	
  7360                           ;ADC.c: 29:         case 7: TRISEbits.TRISE3 = 1; ANSELbits.ANS7 = 1; ADCON0bits.CHS = 7
      +                          ; break;
  7361                           
  7362  175F  1683               	bsf	3,5	;RP0=1, select bank1
  7363  1760  1303               	bcf	3,6	;RP1=0, select bank1
  7364  1761  1589               	bsf	9,3	;volatile
  7365  1762  1683               	bsf	3,5	;RP0=1, select bank3
  7366  1763  1703               	bsf	3,6	;RP1=1, select bank3
  7367  1764  1788               	bsf	8,7	;volatile
  7368  1765                     l3024:
  7369  1765  1283               	bcf	3,5	;RP0=0, select bank0
  7370  1766  1303               	bcf	3,6	;RP1=0, select bank0
  7371  1767  081F               	movf	31,w	;volatile
  7372  1768  39C3               	andlw	-61
  7373  1769  381C               	iorlw	28
  7374  176A  009F               	movwf	31	;volatile
  7375  176B  2FF0               	goto	l111
  7376  176C                     l119:	
  7377                           ;ADC.c: 30:         case 8: TRISBbits.TRISB2 = 1; ANSELHbits.ANS8 = 1; ADCON0bits.CHS = 
      +                          8; break;
  7378                           
  7379  176C  1683               	bsf	3,5	;RP0=1, select bank1
  7380  176D  1303               	bcf	3,6	;RP1=0, select bank1
  7381  176E  1506               	bsf	6,2	;volatile
  7382  176F  1683               	bsf	3,5	;RP0=1, select bank3
  7383  1770  1703               	bsf	3,6	;RP1=1, select bank3
  7384  1771  1409               	bsf	9,0	;volatile
  7385  1772                     l3026:
  7386  1772  1283               	bcf	3,5	;RP0=0, select bank0
  7387  1773  1303               	bcf	3,6	;RP1=0, select bank0
  7388  1774  081F               	movf	31,w	;volatile
  7389  1775  39C3               	andlw	-61
  7390  1776  3820               	iorlw	32
  7391  1777  009F               	movwf	31	;volatile
  7392  1778  2FF0               	goto	l111
  7393  1779                     l120:	
  7394                           ;ADC.c: 31:         case 9: TRISBbits.TRISB3 = 1; ANSELHbits.ANS9 = 1; ADCON0bits.CHS = 
      +                          9; break;
  7395                           
  7396  1779  1683               	bsf	3,5	;RP0=1, select bank1
  7397  177A  1303               	bcf	3,6	;RP1=0, select bank1
  7398  177B  1586               	bsf	6,3	;volatile
  7399  177C  1683               	bsf	3,5	;RP0=1, select bank3
  7400  177D  1703               	bsf	3,6	;RP1=1, select bank3
  7401  177E  1489               	bsf	9,1	;volatile
  7402  177F                     l3028:
  7403  177F  1283               	bcf	3,5	;RP0=0, select bank0
  7404  1780  1303               	bcf	3,6	;RP1=0, select bank0
  7405  1781  081F               	movf	31,w	;volatile
  7406  1782  39C3               	andlw	-61
  7407  1783  3824               	iorlw	36
  7408  1784  009F               	movwf	31	;volatile
  7409  1785  2FF0               	goto	l111
  7410  1786                     l121:	
  7411                           ;ADC.c: 32:         case 10: TRISBbits.TRISB1 = 1; ANSELHbits.ANS10 = 1; ADCON0bits.CHS 
      +                          = 10; break;
  7412                           
  7413  1786  1683               	bsf	3,5	;RP0=1, select bank1
  7414  1787  1303               	bcf	3,6	;RP1=0, select bank1
  7415  1788  1486               	bsf	6,1	;volatile
  7416  1789  1683               	bsf	3,5	;RP0=1, select bank3
  7417  178A  1703               	bsf	3,6	;RP1=1, select bank3
  7418  178B  1509               	bsf	9,2	;volatile
  7419  178C                     l3030:
  7420  178C  1283               	bcf	3,5	;RP0=0, select bank0
  7421  178D  1303               	bcf	3,6	;RP1=0, select bank0
  7422  178E  081F               	movf	31,w	;volatile
  7423  178F  39C3               	andlw	-61
  7424  1790  3828               	iorlw	40
  7425  1791  009F               	movwf	31	;volatile
  7426  1792  2FF0               	goto	l111
  7427  1793                     l122:	
  7428                           ;ADC.c: 33:         case 11: TRISBbits.TRISB4 = 1; ANSELHbits.ANS11= 1; ADCON0bits.CHS =
      +                           11; break;
  7429                           
  7430  1793  1683               	bsf	3,5	;RP0=1, select bank1
  7431  1794  1303               	bcf	3,6	;RP1=0, select bank1
  7432  1795  1606               	bsf	6,4	;volatile
  7433  1796  1683               	bsf	3,5	;RP0=1, select bank3
  7434  1797  1703               	bsf	3,6	;RP1=1, select bank3
  7435  1798  1589               	bsf	9,3	;volatile
  7436  1799                     l3032:
  7437  1799  1283               	bcf	3,5	;RP0=0, select bank0
  7438  179A  1303               	bcf	3,6	;RP1=0, select bank0
  7439  179B  081F               	movf	31,w	;volatile
  7440  179C  39C3               	andlw	-61
  7441  179D  382C               	iorlw	44
  7442  179E  009F               	movwf	31	;volatile
  7443  179F  2FF0               	goto	l111
  7444  17A0                     l123:	
  7445                           ;ADC.c: 34:         case 12: TRISBbits.TRISB0 = 1; ANSELHbits.ANS12 = 1; ADCON0bits.CHS 
      +                          = 12; break;
  7446                           
  7447  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  7448  17A1  1303               	bcf	3,6	;RP1=0, select bank1
  7449  17A2  1406               	bsf	6,0	;volatile
  7450  17A3  1683               	bsf	3,5	;RP0=1, select bank3
  7451  17A4  1703               	bsf	3,6	;RP1=1, select bank3
  7452  17A5  1609               	bsf	9,4	;volatile
  7453  17A6                     l3034:
  7454  17A6  1283               	bcf	3,5	;RP0=0, select bank0
  7455  17A7  1303               	bcf	3,6	;RP1=0, select bank0
  7456  17A8  081F               	movf	31,w	;volatile
  7457  17A9  39C3               	andlw	-61
  7458  17AA  3830               	iorlw	48
  7459  17AB  009F               	movwf	31	;volatile
  7460  17AC  2FF0               	goto	l111
  7461  17AD                     l124:	
  7462                           ;ADC.c: 35:         case 13: TRISBbits.TRISB5 = 1; ANSELHbits.ANS13 = 1; ADCON0bits.CHS 
      +                          = 13; break;
  7463                           
  7464  17AD  1683               	bsf	3,5	;RP0=1, select bank1
  7465  17AE  1303               	bcf	3,6	;RP1=0, select bank1
  7466  17AF  1686               	bsf	6,5	;volatile
  7467  17B0  1683               	bsf	3,5	;RP0=1, select bank3
  7468  17B1  1703               	bsf	3,6	;RP1=1, select bank3
  7469  17B2  1689               	bsf	9,5	;volatile
  7470  17B3                     l3036:
  7471  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7472  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7473  17B5  081F               	movf	31,w	;volatile
  7474  17B6  39C3               	andlw	-61
  7475  17B7  3834               	iorlw	52
  7476  17B8  009F               	movwf	31	;volatile
  7477  17B9  2FF0               	goto	l111
  7478  17BA                     l3038:
  7479  17BA  3000               	movlw	0
  7480  17BB  2FFF               	goto	l126
  7481  17BC                     l3044:
  7482  17BC  0875               	movf	ValorADC@x,w
  7483  17BD  00F3               	movwf	??_ValorADC
  7484  17BE  01F4               	clrf	??_ValorADC+1
  7485                           
  7486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7487                           ; Switch size 1, requested type "simple"
  7488                           ; Number of cases is 1, Range of values is 0 to 0
  7489                           ; switch strategies available:
  7490                           ; Name         Instructions Cycles
  7491                           ; simple_byte            4     3 (average)
  7492                           ; direct_byte           11     8 (fixed)
  7493                           ; jumptable            260     6 (fixed)
  7494                           ;	Chosen strategy is simple_byte
  7495  17BF  0874               	movf	??_ValorADC+1,w
  7496  17C0  3A00               	xorlw	0	; case 0
  7497  17C1  1903               	skipnz
  7498  17C2  2FC4               	goto	l4356
  7499  17C3  2FBA               	goto	l3038
  7500  17C4                     l4356:
  7501                           
  7502                           ; Switch size 1, requested type "simple"
  7503                           ; Number of cases is 14, Range of values is 0 to 13
  7504                           ; switch strategies available:
  7505                           ; Name         Instructions Cycles
  7506                           ; simple_byte           43    22 (average)
  7507                           ; direct_byte           50     8 (fixed)
  7508                           ; jumptable            260     6 (fixed)
  7509                           ;	Chosen strategy is simple_byte
  7510  17C4  0873               	movf	??_ValorADC,w
  7511  17C5  3A00               	xorlw	0	; case 0
  7512  17C6  1903               	skipnz
  7513  17C7  2F06               	goto	l110
  7514  17C8  3A01               	xorlw	1	; case 1
  7515  17C9  1903               	skipnz
  7516  17CA  2F11               	goto	l112
  7517  17CB  3A03               	xorlw	3	; case 2
  7518  17CC  1903               	skipnz
  7519  17CD  2F1E               	goto	l113
  7520  17CE  3A01               	xorlw	1	; case 3
  7521  17CF  1903               	skipnz
  7522  17D0  2F2B               	goto	l114
  7523  17D1  3A07               	xorlw	7	; case 4
  7524  17D2  1903               	skipnz
  7525  17D3  2F38               	goto	l115
  7526  17D4  3A01               	xorlw	1	; case 5
  7527  17D5  1903               	skipnz
  7528  17D6  2F45               	goto	l116
  7529  17D7  3A03               	xorlw	3	; case 6
  7530  17D8  1903               	skipnz
  7531  17D9  2F52               	goto	l117
  7532  17DA  3A01               	xorlw	1	; case 7
  7533  17DB  1903               	skipnz
  7534  17DC  2F5F               	goto	l118
  7535  17DD  3A0F               	xorlw	15	; case 8
  7536  17DE  1903               	skipnz
  7537  17DF  2F6C               	goto	l119
  7538  17E0  3A01               	xorlw	1	; case 9
  7539  17E1  1903               	skipnz
  7540  17E2  2F79               	goto	l120
  7541  17E3  3A03               	xorlw	3	; case 10
  7542  17E4  1903               	skipnz
  7543  17E5  2F86               	goto	l121
  7544  17E6  3A01               	xorlw	1	; case 11
  7545  17E7  1903               	skipnz
  7546  17E8  2F93               	goto	l122
  7547  17E9  3A07               	xorlw	7	; case 12
  7548  17EA  1903               	skipnz
  7549  17EB  2FA0               	goto	l123
  7550  17EC  3A01               	xorlw	1	; case 13
  7551  17ED  1903               	skipnz
  7552  17EE  2FAD               	goto	l124
  7553  17EF  2FBA               	goto	l3038
  7554  17F0                     l111:
  7555                           
  7556                           ;ADC.c: 38:     ADCON0bits.ADON = 1;
  7557  17F0  141F               	bsf	31,0	;volatile
  7558  17F1                     l3046:
  7559                           
  7560                           ;ADC.c: 39:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  7561  17F1  300D               	movlw	13
  7562  17F2  00F3               	movwf	??_ValorADC
  7563  17F3                     u6617:
  7564  17F3  0BF3               	decfsz	??_ValorADC,f
  7565  17F4  2FF3               	goto	u6617
  7566  17F5                     l3048:
  7567                           
  7568                           ;ADC.c: 40:     ADCON0bits.GO = 1;
  7569  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  7570  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  7571  17F7  149F               	bsf	31,1	;volatile
  7572  17F8                     l3050:
  7573                           
  7574                           ;ADC.c: 42:     if (ADCON0bits.GO_DONE ==1){goto resultado;}
  7575  17F8  1C9F               	btfss	31,1	;volatile
  7576  17F9  2FFB               	goto	u4271
  7577  17FA  2FFC               	goto	u4270
  7578  17FB                     u4271:
  7579  17FB  2FFD               	goto	l128
  7580  17FC                     u4270:
  7581  17FC  2FF8               	goto	l3050
  7582  17FD                     l128:	
  7583                           ;ADC.c: 43:     else {ADCON0bits.ADON=0; return ADRESH;}
  7584                           
  7585  17FD  101F               	bcf	31,0	;volatile
  7586  17FE                     l3056:
  7587  17FE  081E               	movf	30,w	;volatile
  7588  17FF                     l126:
  7589  17FF  0008               	return
  7590  1800                     __end_of_ValorADC:
  7591                           
  7592                           	psect	text29
  7593  1448                     __ptext29:	
  7594 ;; *************** function _USART_Init *****************
  7595 ;; Defined at:
  7596 ;;		line 9 in file "USART.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  baudrate        4    8[BANK0 ] const long 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  x               2   24[BANK0 ] unsigned int 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      unsigned char 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0, pclath, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7610 ;;      Params:         0       4       0       0       0
  7611 ;;      Locals:         0       2       0       0       0
  7612 ;;      Temps:          0      12       0       0       0
  7613 ;;      Totals:         0      18       0       0       0
  7614 ;;Total ram usage:       18 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    3
  7617 ;; This function calls:
  7618 ;;		___aldiv
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function _USART_Init
  7626  1448                     _USART_Init:
  7627  1448                     l3910:	
  7628                           ;incstack = 0
  7629                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  7630                           
  7631                           
  7632                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  7633  1448  1283               	bcf	3,5	;RP0=0, select bank0
  7634  1449  1303               	bcf	3,6	;RP1=0, select bank0
  7635  144A  0828               	movf	USART_Init@baudrate,w
  7636  144B  00AC               	movwf	??_USART_Init
  7637  144C  0829               	movf	USART_Init@baudrate+1,w
  7638  144D  00AD               	movwf	??_USART_Init+1
  7639  144E  082A               	movf	USART_Init@baudrate+2,w
  7640  144F  00AE               	movwf	??_USART_Init+2
  7641  1450  082B               	movf	USART_Init@baudrate+3,w
  7642  1451  00AF               	movwf	??_USART_Init+3
  7643  1452  3006               	movlw	6
  7644  1453                     u5935:
  7645  1453  1003               	clrc
  7646  1454  0DAC               	rlf	??_USART_Init,f
  7647  1455  0DAD               	rlf	??_USART_Init+1,f
  7648  1456  0DAE               	rlf	??_USART_Init+2,f
  7649  1457  0DAF               	rlf	??_USART_Init+3,f
  7650  1458                     u5930:
  7651  1458  3EFF               	addlw	-1
  7652  1459  1D03               	skipz
  7653  145A  2C53               	goto	u5935
  7654  145B  082F               	movf	??_USART_Init+3,w
  7655  145C  00A3               	movwf	___aldiv@divisor+3
  7656  145D  082E               	movf	??_USART_Init+2,w
  7657  145E  00A2               	movwf	___aldiv@divisor+2
  7658  145F  082D               	movf	??_USART_Init+1,w
  7659  1460  00A1               	movwf	___aldiv@divisor+1
  7660  1461  082C               	movf	??_USART_Init,w
  7661  1462  00A0               	movwf	___aldiv@divisor
  7662  1463  0828               	movf	USART_Init@baudrate,w
  7663  1464  00B0               	movwf	??_USART_Init+4
  7664  1465  0829               	movf	USART_Init@baudrate+1,w
  7665  1466  00B1               	movwf	??_USART_Init+5
  7666  1467  082A               	movf	USART_Init@baudrate+2,w
  7667  1468  00B2               	movwf	??_USART_Init+6
  7668  1469  082B               	movf	USART_Init@baudrate+3,w
  7669  146A  00B3               	movwf	??_USART_Init+7
  7670  146B  3006               	movlw	6
  7671  146C                     u5945:
  7672  146C  1003               	clrc
  7673  146D  0DB0               	rlf	??_USART_Init+4,f
  7674  146E  0DB1               	rlf	??_USART_Init+5,f
  7675  146F  0DB2               	rlf	??_USART_Init+6,f
  7676  1470  0DB3               	rlf	??_USART_Init+7,f
  7677  1471                     u5940:
  7678  1471  3EFF               	addlw	-1
  7679  1472  1D03               	skipz
  7680  1473  2C6C               	goto	u5945
  7681  1474  3000               	movlw	0
  7682  1475  00B4               	movwf	??_USART_Init+8
  7683  1476  3012               	movlw	18
  7684  1477  00B5               	movwf	??_USART_Init+9
  7685  1478  307A               	movlw	122
  7686  1479  00B6               	movwf	??_USART_Init+10
  7687  147A  3000               	movlw	0
  7688  147B  00B7               	movwf	??_USART_Init+11
  7689  147C  0830               	movf	??_USART_Init+4,w
  7690  147D  02B4               	subwf	??_USART_Init+8,f
  7691  147E  0831               	movf	??_USART_Init+5,w
  7692  147F  1C03               	skipc
  7693  1480  0F31               	incfsz	??_USART_Init+5,w
  7694  1481  2C83               	goto	u5951
  7695  1482  2C84               	goto	u5952
  7696  1483                     u5951:
  7697  1483  02B5               	subwf	??_USART_Init+9,f
  7698  1484                     u5952:
  7699  1484  0832               	movf	??_USART_Init+6,w
  7700  1485  1C03               	skipc
  7701  1486  0F32               	incfsz	??_USART_Init+6,w
  7702  1487  2C89               	goto	u5953
  7703  1488  2C8A               	goto	u5954
  7704  1489                     u5953:
  7705  1489  02B6               	subwf	??_USART_Init+10,f
  7706  148A                     u5954:
  7707  148A  0833               	movf	??_USART_Init+7,w
  7708  148B  1C03               	skipc
  7709  148C  0F33               	incfsz	??_USART_Init+7,w
  7710  148D  2C8F               	goto	u5955
  7711  148E  2C90               	goto	u5956
  7712  148F                     u5955:
  7713  148F  02B7               	subwf	??_USART_Init+11,f
  7714  1490                     u5956:
  7715  1490  0837               	movf	??_USART_Init+11,w
  7716  1491  00A7               	movwf	___aldiv@dividend+3
  7717  1492  0836               	movf	??_USART_Init+10,w
  7718  1493  00A6               	movwf	___aldiv@dividend+2
  7719  1494  0835               	movf	??_USART_Init+9,w
  7720  1495  00A5               	movwf	___aldiv@dividend+1
  7721  1496  0834               	movf	??_USART_Init+8,w
  7722  1497  00A4               	movwf	___aldiv@dividend
  7723  1498  160A  118A  22EE  160A  118A  	fcall	___aldiv
  7724  149D  1283               	bcf	3,5	;RP0=0, select bank0
  7725  149E  1303               	bcf	3,6	;RP1=0, select bank0
  7726  149F  0821               	movf	?___aldiv+1,w
  7727  14A0  00B9               	movwf	USART_Init@x+1
  7728  14A1  0820               	movf	?___aldiv,w
  7729  14A2  00B8               	movwf	USART_Init@x
  7730  14A3                     l3912:
  7731                           
  7732                           ;USART.c: 12:   if(x>255)
  7733  14A3  3001               	movlw	1
  7734  14A4  0239               	subwf	USART_Init@x+1,w
  7735  14A5  3000               	movlw	0
  7736  14A6  1903               	skipnz
  7737  14A7  0238               	subwf	USART_Init@x,w
  7738  14A8  1C03               	skipc
  7739  14A9  2CAB               	goto	u5961
  7740  14AA  2CAC               	goto	u5960
  7741  14AB                     u5961:
  7742  14AB  2D08               	goto	l3918
  7743  14AC                     u5960:
  7744  14AC                     l3914:
  7745                           
  7746                           ;USART.c: 13:   {;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  7747  14AC  0828               	movf	USART_Init@baudrate,w
  7748  14AD  00AC               	movwf	??_USART_Init
  7749  14AE  0829               	movf	USART_Init@baudrate+1,w
  7750  14AF  00AD               	movwf	??_USART_Init+1
  7751  14B0  082A               	movf	USART_Init@baudrate+2,w
  7752  14B1  00AE               	movwf	??_USART_Init+2
  7753  14B2  082B               	movf	USART_Init@baudrate+3,w
  7754  14B3  00AF               	movwf	??_USART_Init+3
  7755  14B4  3004               	movlw	4
  7756  14B5                     u5975:
  7757  14B5  1003               	clrc
  7758  14B6  0DAC               	rlf	??_USART_Init,f
  7759  14B7  0DAD               	rlf	??_USART_Init+1,f
  7760  14B8  0DAE               	rlf	??_USART_Init+2,f
  7761  14B9  0DAF               	rlf	??_USART_Init+3,f
  7762  14BA                     u5970:
  7763  14BA  3EFF               	addlw	-1
  7764  14BB  1D03               	skipz
  7765  14BC  2CB5               	goto	u5975
  7766  14BD  082F               	movf	??_USART_Init+3,w
  7767  14BE  00A3               	movwf	___aldiv@divisor+3
  7768  14BF  082E               	movf	??_USART_Init+2,w
  7769  14C0  00A2               	movwf	___aldiv@divisor+2
  7770  14C1  082D               	movf	??_USART_Init+1,w
  7771  14C2  00A1               	movwf	___aldiv@divisor+1
  7772  14C3  082C               	movf	??_USART_Init,w
  7773  14C4  00A0               	movwf	___aldiv@divisor
  7774  14C5  0828               	movf	USART_Init@baudrate,w
  7775  14C6  00B0               	movwf	??_USART_Init+4
  7776  14C7  0829               	movf	USART_Init@baudrate+1,w
  7777  14C8  00B1               	movwf	??_USART_Init+5
  7778  14C9  082A               	movf	USART_Init@baudrate+2,w
  7779  14CA  00B2               	movwf	??_USART_Init+6
  7780  14CB  082B               	movf	USART_Init@baudrate+3,w
  7781  14CC  00B3               	movwf	??_USART_Init+7
  7782  14CD  3004               	movlw	4
  7783  14CE                     u5985:
  7784  14CE  1003               	clrc
  7785  14CF  0DB0               	rlf	??_USART_Init+4,f
  7786  14D0  0DB1               	rlf	??_USART_Init+5,f
  7787  14D1  0DB2               	rlf	??_USART_Init+6,f
  7788  14D2  0DB3               	rlf	??_USART_Init+7,f
  7789  14D3                     u5980:
  7790  14D3  3EFF               	addlw	-1
  7791  14D4  1D03               	skipz
  7792  14D5  2CCE               	goto	u5985
  7793  14D6  3000               	movlw	0
  7794  14D7  00B4               	movwf	??_USART_Init+8
  7795  14D8  3012               	movlw	18
  7796  14D9  00B5               	movwf	??_USART_Init+9
  7797  14DA  307A               	movlw	122
  7798  14DB  00B6               	movwf	??_USART_Init+10
  7799  14DC  3000               	movlw	0
  7800  14DD  00B7               	movwf	??_USART_Init+11
  7801  14DE  0830               	movf	??_USART_Init+4,w
  7802  14DF  02B4               	subwf	??_USART_Init+8,f
  7803  14E0  0831               	movf	??_USART_Init+5,w
  7804  14E1  1C03               	skipc
  7805  14E2  0F31               	incfsz	??_USART_Init+5,w
  7806  14E3  2CE5               	goto	u5991
  7807  14E4  2CE6               	goto	u5992
  7808  14E5                     u5991:
  7809  14E5  02B5               	subwf	??_USART_Init+9,f
  7810  14E6                     u5992:
  7811  14E6  0832               	movf	??_USART_Init+6,w
  7812  14E7  1C03               	skipc
  7813  14E8  0F32               	incfsz	??_USART_Init+6,w
  7814  14E9  2CEB               	goto	u5993
  7815  14EA  2CEC               	goto	u5994
  7816  14EB                     u5993:
  7817  14EB  02B6               	subwf	??_USART_Init+10,f
  7818  14EC                     u5994:
  7819  14EC  0833               	movf	??_USART_Init+7,w
  7820  14ED  1C03               	skipc
  7821  14EE  0F33               	incfsz	??_USART_Init+7,w
  7822  14EF  2CF1               	goto	u5995
  7823  14F0  2CF2               	goto	u5996
  7824  14F1                     u5995:
  7825  14F1  02B7               	subwf	??_USART_Init+11,f
  7826  14F2                     u5996:
  7827  14F2  0837               	movf	??_USART_Init+11,w
  7828  14F3  00A7               	movwf	___aldiv@dividend+3
  7829  14F4  0836               	movf	??_USART_Init+10,w
  7830  14F5  00A6               	movwf	___aldiv@dividend+2
  7831  14F6  0835               	movf	??_USART_Init+9,w
  7832  14F7  00A5               	movwf	___aldiv@dividend+1
  7833  14F8  0834               	movf	??_USART_Init+8,w
  7834  14F9  00A4               	movwf	___aldiv@dividend
  7835  14FA  160A  118A  22EE  160A  118A  	fcall	___aldiv
  7836  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  7837  1500  1303               	bcf	3,6	;RP1=0, select bank0
  7838  1501  0821               	movf	?___aldiv+1,w
  7839  1502  00B9               	movwf	USART_Init@x+1
  7840  1503  0820               	movf	?___aldiv,w
  7841  1504  00B8               	movwf	USART_Init@x
  7842  1505                     l3916:
  7843                           
  7844                           ;USART.c: 15:     BRGH = 1;
  7845  1505  1683               	bsf	3,5	;RP0=1, select bank1
  7846  1506  1303               	bcf	3,6	;RP1=0, select bank1
  7847  1507  1518               	bsf	24,2	;volatile
  7848  1508                     l3918:
  7849                           
  7850                           ;USART.c: 17:   if(x<256)
  7851  1508  3001               	movlw	1
  7852  1509  1283               	bcf	3,5	;RP0=0, select bank0
  7853  150A  0239               	subwf	USART_Init@x+1,w
  7854  150B  3000               	movlw	0
  7855  150C  1903               	skipnz
  7856  150D  0238               	subwf	USART_Init@x,w
  7857  150E  1803               	skipnc
  7858  150F  2D11               	goto	u6001
  7859  1510  2D12               	goto	u6000
  7860  1511                     u6001:
  7861  1511  2D24               	goto	l225
  7862  1512                     u6000:
  7863  1512                     l3920:
  7864                           
  7865                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  7866  1512  0838               	movf	USART_Init@x,w
  7867  1513  1683               	bsf	3,5	;RP0=1, select bank1
  7868  1514  1303               	bcf	3,6	;RP1=0, select bank1
  7869  1515  0099               	movwf	25	;volatile
  7870  1516                     l3922:
  7871                           
  7872                           ;USART.c: 20:     SYNC = 0;
  7873  1516  1218               	bcf	24,4	;volatile
  7874  1517                     l3924:
  7875                           
  7876                           ;USART.c: 21:     SPEN = 1;
  7877  1517  1283               	bcf	3,5	;RP0=0, select bank0
  7878  1518  1303               	bcf	3,6	;RP1=0, select bank0
  7879  1519  1798               	bsf	24,7	;volatile
  7880  151A                     l3926:
  7881                           
  7882                           ;USART.c: 22:     TRISC7 = 1;
  7883  151A  1683               	bsf	3,5	;RP0=1, select bank1
  7884  151B  1303               	bcf	3,6	;RP1=0, select bank1
  7885  151C  1787               	bsf	7,7	;volatile
  7886  151D                     l3928:
  7887                           
  7888                           ;USART.c: 23:     TRISC6 = 0;
  7889  151D  1307               	bcf	7,6	;volatile
  7890  151E                     l3930:
  7891                           
  7892                           ;USART.c: 24:     CREN = 1;
  7893  151E  1283               	bcf	3,5	;RP0=0, select bank0
  7894  151F  1303               	bcf	3,6	;RP1=0, select bank0
  7895  1520  1618               	bsf	24,4	;volatile
  7896  1521                     l3932:
  7897                           
  7898                           ;USART.c: 25:     TXEN = 1;
  7899  1521  1683               	bsf	3,5	;RP0=1, select bank1
  7900  1522  1303               	bcf	3,6	;RP1=0, select bank1
  7901  1523  1698               	bsf	24,5	;volatile
  7902  1524                     l225:
  7903  1524  0008               	return
  7904  1525                     __end_of_USART_Init:
  7905                           
  7906                           	psect	text30
  7907  12EE                     __ptext30:	
  7908 ;; *************** function ___aldiv *****************
  7909 ;; Defined at:
  7910 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  divisor         4    0[BANK0 ] long 
  7913 ;;  dividend        4    4[BANK0 ] long 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  quotient        4    6[COMMON] long 
  7916 ;;  sign            1    5[COMMON] unsigned char 
  7917 ;;  counter         1    4[COMMON] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  4    0[BANK0 ] long 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7927 ;;      Params:         0       8       0       0       0
  7928 ;;      Locals:         6       0       0       0       0
  7929 ;;      Temps:          1       0       0       0       0
  7930 ;;      Totals:         7       8       0       0       0
  7931 ;;Total ram usage:       15 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    2
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_USART_Init
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function ___aldiv
  7943  12EE                     ___aldiv:
  7944  12EE                     l3816:	
  7945                           ;incstack = 0
  7946                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7947                           
  7948  12EE  01F5               	clrf	___aldiv@sign
  7949  12EF                     l3818:
  7950  12EF  1283               	bcf	3,5	;RP0=0, select bank0
  7951  12F0  1303               	bcf	3,6	;RP1=0, select bank0
  7952  12F1  1FA3               	btfss	___aldiv@divisor+3,7
  7953  12F2  2AF4               	goto	u5731
  7954  12F3  2AF5               	goto	u5730
  7955  12F4                     u5731:
  7956  12F4  2B02               	goto	l519
  7957  12F5                     u5730:
  7958  12F5                     l3820:
  7959  12F5  09A0               	comf	___aldiv@divisor,f
  7960  12F6  09A1               	comf	___aldiv@divisor+1,f
  7961  12F7  09A2               	comf	___aldiv@divisor+2,f
  7962  12F8  09A3               	comf	___aldiv@divisor+3,f
  7963  12F9  0AA0               	incf	___aldiv@divisor,f
  7964  12FA  1903               	skipnz
  7965  12FB  0AA1               	incf	___aldiv@divisor+1,f
  7966  12FC  1903               	skipnz
  7967  12FD  0AA2               	incf	___aldiv@divisor+2,f
  7968  12FE  1903               	skipnz
  7969  12FF  0AA3               	incf	___aldiv@divisor+3,f
  7970  1300  01F5               	clrf	___aldiv@sign
  7971  1301  0AF5               	incf	___aldiv@sign,f
  7972  1302                     l519:
  7973  1302  1FA7               	btfss	___aldiv@dividend+3,7
  7974  1303  2B05               	goto	u5741
  7975  1304  2B06               	goto	u5740
  7976  1305                     u5741:
  7977  1305  2B15               	goto	l3826
  7978  1306                     u5740:
  7979  1306                     l3822:
  7980  1306  09A4               	comf	___aldiv@dividend,f
  7981  1307  09A5               	comf	___aldiv@dividend+1,f
  7982  1308  09A6               	comf	___aldiv@dividend+2,f
  7983  1309  09A7               	comf	___aldiv@dividend+3,f
  7984  130A  0AA4               	incf	___aldiv@dividend,f
  7985  130B  1903               	skipnz
  7986  130C  0AA5               	incf	___aldiv@dividend+1,f
  7987  130D  1903               	skipnz
  7988  130E  0AA6               	incf	___aldiv@dividend+2,f
  7989  130F  1903               	skipnz
  7990  1310  0AA7               	incf	___aldiv@dividend+3,f
  7991  1311                     l3824:
  7992  1311  3001               	movlw	1
  7993  1312  00F3               	movwf	??___aldiv
  7994  1313  0873               	movf	??___aldiv,w
  7995  1314  06F5               	xorwf	___aldiv@sign,f
  7996  1315                     l3826:
  7997  1315  3000               	movlw	0
  7998  1316  00F9               	movwf	___aldiv@quotient+3
  7999  1317  3000               	movlw	0
  8000  1318  00F8               	movwf	___aldiv@quotient+2
  8001  1319  3000               	movlw	0
  8002  131A  00F7               	movwf	___aldiv@quotient+1
  8003  131B  3000               	movlw	0
  8004  131C  00F6               	movwf	___aldiv@quotient
  8005  131D                     l3828:
  8006  131D  0823               	movf	___aldiv@divisor+3,w
  8007  131E  0422               	iorwf	___aldiv@divisor+2,w
  8008  131F  0421               	iorwf	___aldiv@divisor+1,w
  8009  1320  0420               	iorwf	___aldiv@divisor,w
  8010  1321  1903               	skipnz
  8011  1322  2B24               	goto	u5751
  8012  1323  2B25               	goto	u5750
  8013  1324                     u5751:
  8014  1324  2B72               	goto	l3848
  8015  1325                     u5750:
  8016  1325                     l3830:
  8017  1325  01F4               	clrf	___aldiv@counter
  8018  1326  0AF4               	incf	___aldiv@counter,f
  8019  1327  2B35               	goto	l3834
  8020  1328                     l3832:
  8021  1328  3001               	movlw	1
  8022  1329  00F3               	movwf	??___aldiv
  8023  132A                     u5765:
  8024  132A  1003               	clrc
  8025  132B  0DA0               	rlf	___aldiv@divisor,f
  8026  132C  0DA1               	rlf	___aldiv@divisor+1,f
  8027  132D  0DA2               	rlf	___aldiv@divisor+2,f
  8028  132E  0DA3               	rlf	___aldiv@divisor+3,f
  8029  132F  0BF3               	decfsz	??___aldiv,f
  8030  1330  2B2A               	goto	u5765
  8031  1331  3001               	movlw	1
  8032  1332  00F3               	movwf	??___aldiv
  8033  1333  0873               	movf	??___aldiv,w
  8034  1334  07F4               	addwf	___aldiv@counter,f
  8035  1335                     l3834:
  8036  1335  1FA3               	btfss	___aldiv@divisor+3,7
  8037  1336  2B38               	goto	u5771
  8038  1337  2B39               	goto	u5770
  8039  1338                     u5771:
  8040  1338  2B28               	goto	l3832
  8041  1339                     u5770:
  8042  1339                     l3836:
  8043  1339  3001               	movlw	1
  8044  133A  00F3               	movwf	??___aldiv
  8045  133B                     u5785:
  8046  133B  1003               	clrc
  8047  133C  0DF6               	rlf	___aldiv@quotient,f
  8048  133D  0DF7               	rlf	___aldiv@quotient+1,f
  8049  133E  0DF8               	rlf	___aldiv@quotient+2,f
  8050  133F  0DF9               	rlf	___aldiv@quotient+3,f
  8051  1340  0BF3               	decfsz	??___aldiv,f
  8052  1341  2B3B               	goto	u5785
  8053  1342                     l3838:
  8054  1342  0823               	movf	___aldiv@divisor+3,w
  8055  1343  0227               	subwf	___aldiv@dividend+3,w
  8056  1344  1D03               	skipz
  8057  1345  2B50               	goto	u5795
  8058  1346  0822               	movf	___aldiv@divisor+2,w
  8059  1347  0226               	subwf	___aldiv@dividend+2,w
  8060  1348  1D03               	skipz
  8061  1349  2B50               	goto	u5795
  8062  134A  0821               	movf	___aldiv@divisor+1,w
  8063  134B  0225               	subwf	___aldiv@dividend+1,w
  8064  134C  1D03               	skipz
  8065  134D  2B50               	goto	u5795
  8066  134E  0820               	movf	___aldiv@divisor,w
  8067  134F  0224               	subwf	___aldiv@dividend,w
  8068  1350                     u5795:
  8069  1350  1C03               	skipc
  8070  1351  2B53               	goto	u5791
  8071  1352  2B54               	goto	u5790
  8072  1353                     u5791:
  8073  1353  2B63               	goto	l3844
  8074  1354                     u5790:
  8075  1354                     l3840:
  8076  1354  0820               	movf	___aldiv@divisor,w
  8077  1355  02A4               	subwf	___aldiv@dividend,f
  8078  1356  0821               	movf	___aldiv@divisor+1,w
  8079  1357  1C03               	skipc
  8080  1358  0F21               	incfsz	___aldiv@divisor+1,w
  8081  1359  02A5               	subwf	___aldiv@dividend+1,f
  8082  135A  0822               	movf	___aldiv@divisor+2,w
  8083  135B  1C03               	skipc
  8084  135C  0F22               	incfsz	___aldiv@divisor+2,w
  8085  135D  02A6               	subwf	___aldiv@dividend+2,f
  8086  135E  0823               	movf	___aldiv@divisor+3,w
  8087  135F  1C03               	skipc
  8088  1360  0F23               	incfsz	___aldiv@divisor+3,w
  8089  1361  02A7               	subwf	___aldiv@dividend+3,f
  8090  1362                     l3842:
  8091  1362  1476               	bsf	___aldiv@quotient,0
  8092  1363                     l3844:
  8093  1363  3001               	movlw	1
  8094  1364                     u5805:
  8095  1364  1003               	clrc
  8096  1365  0CA3               	rrf	___aldiv@divisor+3,f
  8097  1366  0CA2               	rrf	___aldiv@divisor+2,f
  8098  1367  0CA1               	rrf	___aldiv@divisor+1,f
  8099  1368  0CA0               	rrf	___aldiv@divisor,f
  8100  1369  3EFF               	addlw	-1
  8101  136A  1D03               	skipz
  8102  136B  2B64               	goto	u5805
  8103  136C                     l3846:
  8104  136C  3001               	movlw	1
  8105  136D  02F4               	subwf	___aldiv@counter,f
  8106  136E  1D03               	btfss	3,2
  8107  136F  2B71               	goto	u5811
  8108  1370  2B72               	goto	u5810
  8109  1371                     u5811:
  8110  1371  2B39               	goto	l3836
  8111  1372                     u5810:
  8112  1372                     l3848:
  8113  1372  0875               	movf	___aldiv@sign,w
  8114  1373  1903               	btfsc	3,2
  8115  1374  2B76               	goto	u5821
  8116  1375  2B77               	goto	u5820
  8117  1376                     u5821:
  8118  1376  2B82               	goto	l3852
  8119  1377                     u5820:
  8120  1377                     l3850:
  8121  1377  09F6               	comf	___aldiv@quotient,f
  8122  1378  09F7               	comf	___aldiv@quotient+1,f
  8123  1379  09F8               	comf	___aldiv@quotient+2,f
  8124  137A  09F9               	comf	___aldiv@quotient+3,f
  8125  137B  0AF6               	incf	___aldiv@quotient,f
  8126  137C  1903               	skipnz
  8127  137D  0AF7               	incf	___aldiv@quotient+1,f
  8128  137E  1903               	skipnz
  8129  137F  0AF8               	incf	___aldiv@quotient+2,f
  8130  1380  1903               	skipnz
  8131  1381  0AF9               	incf	___aldiv@quotient+3,f
  8132  1382                     l3852:
  8133  1382  0879               	movf	___aldiv@quotient+3,w
  8134  1383  00A3               	movwf	?___aldiv+3
  8135  1384  0878               	movf	___aldiv@quotient+2,w
  8136  1385  00A2               	movwf	?___aldiv+2
  8137  1386  0877               	movf	___aldiv@quotient+1,w
  8138  1387  00A1               	movwf	?___aldiv+1
  8139  1388  0876               	movf	___aldiv@quotient,w
  8140  1389  00A0               	movwf	?___aldiv
  8141  138A                     l529:
  8142  138A  0008               	return
  8143  138B                     __end_of___aldiv:
  8144                           
  8145                           	psect	text31
  8146  07E1                     __ptext31:	
  8147 ;; *************** function _Setup *****************
  8148 ;; Defined at:
  8149 ;;		line 64 in file "LAB3.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		status,2
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8163 ;;      Params:         0       0       0       0       0
  8164 ;;      Locals:         0       0       0       0       0
  8165 ;;      Temps:          0       0       0       0       0
  8166 ;;      Totals:         0       0       0       0       0
  8167 ;;Total ram usage:        0 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    2
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_main
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           
  8178                           ;psect for function _Setup
  8179  07E1                     _Setup:
  8180  07E1                     l2942:	
  8181                           ;incstack = 0
  8182                           ; Regs used in _Setup: [status,2]
  8183                           
  8184                           
  8185                           ;LAB3.c: 66:     ANSELH = 0;
  8186  07E1  1683               	bsf	3,5	;RP0=1, select bank3
  8187  07E2  1703               	bsf	3,6	;RP1=1, select bank3
  8188  07E3  0189               	clrf	9	;volatile
  8189                           
  8190                           ;LAB3.c: 67:     ANSEL = 0;
  8191  07E4  0188               	clrf	8	;volatile
  8192                           
  8193                           ;LAB3.c: 70:     TRISA = 0;
  8194  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  8195  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  8196  07E7  0185               	clrf	5	;volatile
  8197                           
  8198                           ;LAB3.c: 71:     PORTA = 0;
  8199  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  8200  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  8201  07EA  0185               	clrf	5	;volatile
  8202                           
  8203                           ;LAB3.c: 73:     TRISB = 0;
  8204  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  8205  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  8206  07ED  0186               	clrf	6	;volatile
  8207                           
  8208                           ;LAB3.c: 74:     PORTB = 0;
  8209  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  8210  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  8211  07F0  0186               	clrf	6	;volatile
  8212                           
  8213                           ;LAB3.c: 76:     TRISE = 0;
  8214  07F1  1683               	bsf	3,5	;RP0=1, select bank1
  8215  07F2  1303               	bcf	3,6	;RP1=0, select bank1
  8216  07F3  0189               	clrf	9	;volatile
  8217                           
  8218                           ;LAB3.c: 77:     PORTE = 0;
  8219  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  8220  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  8221  07F6  0189               	clrf	9	;volatile
  8222  07F7                     l2944:
  8223                           
  8224                           ;LAB3.c: 80:     INTCONbits.PEIE = 1;
  8225  07F7  170B               	bsf	11,6	;volatile
  8226  07F8                     l2946:
  8227                           
  8228                           ;LAB3.c: 81:     PIE1bits.RCIE = 1;
  8229  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  8230  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  8231  07FA  168C               	bsf	12,5	;volatile
  8232  07FB                     l2948:
  8233                           
  8234                           ;LAB3.c: 82:     PIR1bits.RCIF = 0;
  8235  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  8236  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  8237  07FD  128C               	bcf	12,5	;volatile
  8238  07FE                     l2950:
  8239                           
  8240                           ;LAB3.c: 83:     INTCONbits.GIE = 1;
  8241  07FE  178B               	bsf	11,7	;volatile
  8242  07FF                     l65:
  8243  07FF  0008               	return
  8244  0800                     __end_of_Setup:
  8245                           
  8246                           	psect	text32
  8247  1F0D                     __ptext32:	
  8248 ;; *************** function _LCD_Print *****************
  8249 ;; Defined at:
  8250 ;;		line 75 in file "LCD.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  a               2    6[COMMON] PTR unsigned char 
  8253 ;;		 -> STR_3(16), data(20), 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  i               2    8[COMMON] int 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         2       0       0       0       0
  8266 ;;      Locals:         2       0       0       0       0
  8267 ;;      Temps:          0       3       0       0       0
  8268 ;;      Totals:         4       3       0       0       0
  8269 ;;Total ram usage:        7 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    4
  8272 ;; This function calls:
  8273 ;;		_char_LCD
  8274 ;; This function is called by:
  8275 ;;		_main
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _LCD_Print
  8281  1F0D                     _LCD_Print:
  8282  1F0D                     l4256:	
  8283                           ;incstack = 0
  8284                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8285                           
  8286                           
  8287                           ;LCD.c: 76:     int i;;LCD.c: 77:     for (i=0; a[i] != '\0'; i++)
  8288  1F0D  01F8               	clrf	LCD_Print@i
  8289  1F0E  01F9               	clrf	LCD_Print@i+1
  8290  1F0F  2F32               	goto	l4262
  8291  1F10                     l4258:
  8292                           
  8293                           ;LCD.c: 78:         char_LCD(a[i]);
  8294  1F10  0878               	movf	LCD_Print@i,w
  8295  1F11  0776               	addwf	LCD_Print@a,w
  8296  1F12  00A1               	movwf	??_LCD_Print+1
  8297  1F13  0877               	movf	LCD_Print@a+1,w
  8298  1F14  00A0               	movwf	??_LCD_Print
  8299  1F15  1803               	skipnc
  8300  1F16  0AA0               	incf	??_LCD_Print,f
  8301  1F17  1FF8               	btfss	LCD_Print@i,7
  8302  1F18  2F1A               	goto	u6570
  8303  1F19  03A0               	decf	??_LCD_Print,f
  8304  1F1A                     u6570:
  8305  1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  8306  1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  8307  1F1C  0820               	movf	??_LCD_Print,w
  8308  1F1D  00A2               	movwf	??_LCD_Print+2
  8309  1F1E  0822               	movf	??_LCD_Print+2,w
  8310  1F1F  00FF               	movwf	btemp+1
  8311  1F20  0821               	movf	??_LCD_Print+1,w
  8312  1F21  0084               	movwf	4
  8313  1F22  160A  118A  2000  160A  158A  	fcall	stringtab
  8314  1F27  160A  158A  24F0  160A  158A  	fcall	_char_LCD
  8315  1F2C                     l4260:
  8316  1F2C  3001               	movlw	1
  8317  1F2D  07F8               	addwf	LCD_Print@i,f
  8318  1F2E  1803               	skipnc
  8319  1F2F  0AF9               	incf	LCD_Print@i+1,f
  8320  1F30  3000               	movlw	0
  8321  1F31  07F9               	addwf	LCD_Print@i+1,f
  8322  1F32                     l4262:
  8323  1F32  0878               	movf	LCD_Print@i,w
  8324  1F33  0776               	addwf	LCD_Print@a,w
  8325  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  8326  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  8327  1F36  00A1               	movwf	??_LCD_Print+1
  8328  1F37  0877               	movf	LCD_Print@a+1,w
  8329  1F38  00A0               	movwf	??_LCD_Print
  8330  1F39  1803               	skipnc
  8331  1F3A  0AA0               	incf	??_LCD_Print,f
  8332  1F3B  1FF8               	btfss	LCD_Print@i,7
  8333  1F3C  2F3E               	goto	u6580
  8334  1F3D  03A0               	decf	??_LCD_Print,f
  8335  1F3E                     u6580:
  8336  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
  8337  1F3F  1303               	bcf	3,6	;RP1=0, select bank0
  8338  1F40  0820               	movf	??_LCD_Print,w
  8339  1F41  00A2               	movwf	??_LCD_Print+2
  8340  1F42  0822               	movf	??_LCD_Print+2,w
  8341  1F43  00FF               	movwf	btemp+1
  8342  1F44  0821               	movf	??_LCD_Print+1,w
  8343  1F45  0084               	movwf	4
  8344  1F46  160A  118A  2000  160A  158A  	fcall	stringtab
  8345  1F4B  3A00               	xorlw	0
  8346  1F4C  1D03               	skipz
  8347  1F4D  2F4F               	goto	u6591
  8348  1F4E  2F50               	goto	u6590
  8349  1F4F                     u6591:
  8350  1F4F  2F10               	goto	l4258
  8351  1F50                     u6590:
  8352  1F50                     l196:
  8353  1F50  0008               	return
  8354  1F51                     __end_of_LCD_Print:
  8355                           
  8356                           	psect	text33
  8357  1CF0                     __ptext33:	
  8358 ;; *************** function _char_LCD *****************
  8359 ;; Defined at:
  8360 ;;		line 15 in file "LCD.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  caracter        1    wreg     unsigned char 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  caracter        1    5[COMMON] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8374 ;;      Params:         0       0       0       0       0
  8375 ;;      Locals:         1       0       0       0       0
  8376 ;;      Temps:          1       0       0       0       0
  8377 ;;      Totals:         2       0       0       0       0
  8378 ;;Total ram usage:        2 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:    3
  8381 ;; This function calls:
  8382 ;;		_PUERTO
  8383 ;; This function is called by:
  8384 ;;		_LCD_Print
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           
  8389                           ;psect for function _char_LCD
  8390  1CF0                     _char_LCD:
  8391                           
  8392                           ;incstack = 0
  8393                           ; Regs used in _char_LCD: [wreg+status,2+status,0+pclath+cstack]
  8394                           ;char_LCD@caracter stored from wreg
  8395  1CF0  00F5               	movwf	char_LCD@caracter
  8396  1CF1                     l3702:
  8397                           
  8398                           ;LCD.c: 16:     RE0 = 1;
  8399  1CF1  1283               	bcf	3,5	;RP0=0, select bank0
  8400  1CF2  1303               	bcf	3,6	;RP1=0, select bank0
  8401  1CF3  1409               	bsf	9,0	;volatile
  8402  1CF4                     l3704:
  8403                           
  8404                           ;LCD.c: 17:     PUERTO(caracter);
  8405  1CF4  0875               	movf	char_LCD@caracter,w
  8406  1CF5  160A  158A  26CF  160A  158A  	fcall	_PUERTO
  8407  1CFA                     l3706:
  8408                           
  8409                           ;LCD.c: 18:     RE1 = 1;
  8410  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  8411  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  8412  1CFC  1489               	bsf	9,1	;volatile
  8413  1CFD                     l3708:
  8414                           
  8415                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8416  1CFD  3003               	movlw	3
  8417  1CFE  00F4               	movwf	??_char_LCD
  8418  1CFF                     u6627:
  8419  1CFF  0BF4               	decfsz	??_char_LCD,f
  8420  1D00  2CFF               	goto	u6627
  8421  1D01                     l3710:
  8422                           
  8423                           ;LCD.c: 20:     RE1 = 0;
  8424  1D01  1283               	bcf	3,5	;RP0=0, select bank0
  8425  1D02  1303               	bcf	3,6	;RP1=0, select bank0
  8426  1D03  1089               	bcf	9,1	;volatile
  8427  1D04                     l3712:
  8428                           
  8429                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8430  1D04  3003               	movlw	3
  8431  1D05  00F4               	movwf	??_char_LCD
  8432  1D06                     u6637:
  8433  1D06  0BF4               	decfsz	??_char_LCD,f
  8434  1D07  2D06               	goto	u6637
  8435  1D08                     l3714:
  8436                           
  8437                           ;LCD.c: 22:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  8438  1D08  3021               	movlw	33
  8439  1D09  00F4               	movwf	??_char_LCD
  8440  1D0A                     u6647:
  8441  1D0A  0BF4               	decfsz	??_char_LCD,f
  8442  1D0B  2D0A               	goto	u6647
  8443  1D0C                     l156:
  8444  1D0C  0008               	return
  8445  1D0D                     __end_of_char_LCD:
  8446                           
  8447                           	psect	text34
  8448  1DD1                     __ptext34:	
  8449 ;; *************** function _LCD_ON *****************
  8450 ;; Defined at:
  8451 ;;		line 51 in file "LCD.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, pclath, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8465 ;;      Params:         0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0
  8467 ;;      Temps:          2       0       0       0       0
  8468 ;;      Totals:         2       0       0       0       0
  8469 ;;Total ram usage:        2 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    4
  8472 ;; This function calls:
  8473 ;;		_PUERTO
  8474 ;;		_comandosLCD
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           
  8481                           ;psect for function _LCD_ON
  8482  1DD1                     _LCD_ON:
  8483  1DD1                     l3936:	
  8484                           ;incstack = 0
  8485                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  8486                           
  8487                           
  8488                           ;LCD.c: 52:     RE0= 0;
  8489  1DD1  1283               	bcf	3,5	;RP0=0, select bank0
  8490  1DD2  1303               	bcf	3,6	;RP1=0, select bank0
  8491  1DD3  1009               	bcf	9,0	;volatile
  8492                           
  8493                           ;LCD.c: 53:     RE1= 0;
  8494  1DD4  1089               	bcf	9,1	;volatile
  8495  1DD5                     l3938:
  8496                           
  8497                           ;LCD.c: 54:     PUERTO(0x00);
  8498  1DD5  3000               	movlw	0
  8499  1DD6  160A  158A  26CF  160A  158A  	fcall	_PUERTO
  8500  1DDB                     l3940:
  8501                           
  8502                           ;LCD.c: 55:     _delay((unsigned long)((50)*(8000000/4000.0)));
  8503  1DDB  3082               	movlw	130
  8504  1DDC  00F7               	movwf	??_LCD_ON+1
  8505  1DDD  30DD               	movlw	221
  8506  1DDE  00F6               	movwf	??_LCD_ON
  8507  1DDF                     u6657:
  8508  1DDF  0BF6               	decfsz	??_LCD_ON,f
  8509  1DE0  2DDF               	goto	u6657
  8510  1DE1  0BF7               	decfsz	??_LCD_ON+1,f
  8511  1DE2  2DDF               	goto	u6657
  8512  1DE3  2DE4               	nop2
  8513  1DE4                     l3942:
  8514                           
  8515                           ;LCD.c: 56:     comandosLCD(0x02);
  8516  1DE4  3002               	movlw	2
  8517  1DE5  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8518  1DEA                     l3944:
  8519                           
  8520                           ;LCD.c: 57:     comandosLCD(0x38);
  8521  1DEA  3038               	movlw	56
  8522  1DEB  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8523  1DF0                     l3946:
  8524                           
  8525                           ;LCD.c: 58:     comandosLCD(0x0C);
  8526  1DF0  300C               	movlw	12
  8527  1DF1  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8528  1DF6                     l3948:
  8529                           
  8530                           ;LCD.c: 59:     comandosLCD(0x06);
  8531  1DF6  3006               	movlw	6
  8532  1DF7  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8533  1DFC                     l184:
  8534  1DFC  0008               	return
  8535  1DFD                     __end_of_LCD_ON:
  8536                           
  8537                           	psect	text35
  8538  1D0D                     __ptext35:	
  8539 ;; *************** function _LCD_Cursor *****************
  8540 ;; Defined at:
  8541 ;;		line 62 in file "LCD.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  x               1    wreg     unsigned char 
  8544 ;;  y               1    6[COMMON] unsigned char 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  x               1    8[COMMON] unsigned char 
  8547 ;;  a               1    9[COMMON] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0, pclath, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8557 ;;      Params:         1       0       0       0       0
  8558 ;;      Locals:         2       0       0       0       0
  8559 ;;      Temps:          1       0       0       0       0
  8560 ;;      Totals:         4       0       0       0       0
  8561 ;;Total ram usage:        4 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    4
  8564 ;; This function calls:
  8565 ;;		_comandosLCD
  8566 ;; This function is called by:
  8567 ;;		_main
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _LCD_Cursor
  8573  1D0D                     _LCD_Cursor:
  8574                           
  8575                           ;incstack = 0
  8576                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8577                           ;LCD_Cursor@x stored from wreg
  8578  1D0D  00F8               	movwf	LCD_Cursor@x
  8579  1D0E                     l4244:
  8580                           
  8581                           ;LCD.c: 63:     uint8_t a;;LCD.c: 64:     if (x == 1){
  8582  1D0E  0378               	decf	LCD_Cursor@x,w
  8583  1D0F  1D03               	btfss	3,2
  8584  1D10  2D12               	goto	u6551
  8585  1D11  2D13               	goto	u6550
  8586  1D12                     u6551:
  8587  1D12  2D1F               	goto	l4250
  8588  1D13                     u6550:
  8589  1D13                     l4246:
  8590                           
  8591                           ;LCD.c: 65:         a = 0x80 + y;
  8592  1D13  0876               	movf	LCD_Cursor@y,w
  8593  1D14  3E80               	addlw	128
  8594  1D15  00F7               	movwf	??_LCD_Cursor
  8595  1D16  0877               	movf	??_LCD_Cursor,w
  8596  1D17  00F9               	movwf	LCD_Cursor@a
  8597  1D18                     l4248:
  8598                           
  8599                           ;LCD.c: 66:         comandosLCD(a);
  8600  1D18  0879               	movf	LCD_Cursor@a,w
  8601  1D19  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8602                           
  8603                           ;LCD.c: 67:     }
  8604  1D1E  2D30               	goto	l190
  8605  1D1F                     l4250:
  8606  1D1F  3002               	movlw	2
  8607  1D20  0678               	xorwf	LCD_Cursor@x,w
  8608  1D21  1D03               	btfss	3,2
  8609  1D22  2D24               	goto	u6561
  8610  1D23  2D25               	goto	u6560
  8611  1D24                     u6561:
  8612  1D24  2D30               	goto	l190
  8613  1D25                     u6560:
  8614  1D25                     l4252:
  8615                           
  8616                           ;LCD.c: 69:         a = 0xC0 + y;
  8617  1D25  0876               	movf	LCD_Cursor@y,w
  8618  1D26  3EC0               	addlw	192
  8619  1D27  00F7               	movwf	??_LCD_Cursor
  8620  1D28  0877               	movf	??_LCD_Cursor,w
  8621  1D29  00F9               	movwf	LCD_Cursor@a
  8622  1D2A                     l4254:
  8623                           
  8624                           ;LCD.c: 70:         comandosLCD(a);
  8625  1D2A  0879               	movf	LCD_Cursor@a,w
  8626  1D2B  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8627  1D30                     l190:
  8628  1D30  0008               	return
  8629  1D31                     __end_of_LCD_Cursor:
  8630                           
  8631                           	psect	text36
  8632  1C9F                     __ptext36:	
  8633 ;; *************** function _LCD_Clear *****************
  8634 ;; Defined at:
  8635 ;;		line 46 in file "LCD.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8649 ;;      Params:         0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0
  8652 ;;      Totals:         0       0       0       0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    4
  8656 ;; This function calls:
  8657 ;;		_comandosLCD
  8658 ;; This function is called by:
  8659 ;;		_main
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function _LCD_Clear
  8665  1C9F                     _LCD_Clear:
  8666  1C9F                     l3950:	
  8667                           ;incstack = 0
  8668                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8669                           
  8670                           
  8671                           ;LCD.c: 47:     comandosLCD(0);
  8672  1C9F  3000               	movlw	0
  8673  1CA0  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8674                           
  8675                           ;LCD.c: 48:     comandosLCD(1);
  8676  1CA5  3001               	movlw	1
  8677  1CA6  160A  158A  24D5  160A  158A  	fcall	_comandosLCD
  8678  1CAB                     l181:
  8679  1CAB  0008               	return
  8680  1CAC                     __end_of_LCD_Clear:
  8681                           
  8682                           	psect	text37
  8683  1CD5                     __ptext37:	
  8684 ;; *************** function _comandosLCD *****************
  8685 ;; Defined at:
  8686 ;;		line 36 in file "LCD.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  x               1    wreg     unsigned char 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  x               1    5[COMMON] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8700 ;;      Params:         0       0       0       0       0
  8701 ;;      Locals:         1       0       0       0       0
  8702 ;;      Temps:          1       0       0       0       0
  8703 ;;      Totals:         2       0       0       0       0
  8704 ;;Total ram usage:        2 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    3
  8707 ;; This function calls:
  8708 ;;		_PUERTO
  8709 ;; This function is called by:
  8710 ;;		_LCD_Clear
  8711 ;;		_LCD_ON
  8712 ;;		_LCD_Cursor
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _comandosLCD
  8718  1CD5                     _comandosLCD:
  8719                           
  8720                           ;incstack = 0
  8721                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
  8722                           ;comandosLCD@x stored from wreg
  8723  1CD5  00F5               	movwf	comandosLCD@x
  8724  1CD6                     l3716:
  8725                           
  8726                           ;LCD.c: 37:     RE0=0;
  8727  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  8728  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  8729  1CD8  1009               	bcf	9,0	;volatile
  8730  1CD9                     l3718:
  8731                           
  8732                           ;LCD.c: 38:     PUERTO(x);
  8733  1CD9  0875               	movf	comandosLCD@x,w
  8734  1CDA  160A  158A  26CF  160A  158A  	fcall	_PUERTO
  8735  1CDF                     l3720:
  8736                           
  8737                           ;LCD.c: 39:     RE1= 1;
  8738  1CDF  1283               	bcf	3,5	;RP0=0, select bank0
  8739  1CE0  1303               	bcf	3,6	;RP1=0, select bank0
  8740  1CE1  1489               	bsf	9,1	;volatile
  8741  1CE2                     l3722:
  8742                           
  8743                           ;LCD.c: 40:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8744  1CE2  3003               	movlw	3
  8745  1CE3  00F4               	movwf	??_comandosLCD
  8746  1CE4                     u6667:
  8747  1CE4  0BF4               	decfsz	??_comandosLCD,f
  8748  1CE5  2CE4               	goto	u6667
  8749  1CE6                     l3724:
  8750                           
  8751                           ;LCD.c: 41:     RE1=0;
  8752  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  8753  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  8754  1CE8  1089               	bcf	9,1	;volatile
  8755  1CE9                     l3726:
  8756                           
  8757                           ;LCD.c: 42:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8758  1CE9  3003               	movlw	3
  8759  1CEA  00F4               	movwf	??_comandosLCD
  8760  1CEB                     u6677:
  8761  1CEB  0BF4               	decfsz	??_comandosLCD,f
  8762  1CEC  2CEB               	goto	u6677
  8763  1CED                     l3728:
  8764                           
  8765                           ;LCD.c: 43:     _delay((unsigned long)((2)*(8000000/4000000.0)));
  8766  1CED  2CEE               	nop2	;2 cycle nop
  8767  1CEE  2CEF               	nop2	;2 cycle nop
  8768  1CEF                     l178:
  8769  1CEF  0008               	return
  8770  1CF0                     __end_of_comandosLCD:
  8771                           
  8772                           	psect	text38
  8773  1ECF                     __ptext38:	
  8774 ;; *************** function _PUERTO *****************
  8775 ;; Defined at:
  8776 ;;		line 25 in file "LCD.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  x               1    wreg     unsigned char 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  x               1    3[COMMON] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         0       0       0       0       0
  8791 ;;      Locals:         1       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0
  8793 ;;      Totals:         1       0       0       0       0
  8794 ;;Total ram usage:        1 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    2
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_char_LCD
  8801 ;;		_comandosLCD
  8802 ;;		_LCD_ON
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _PUERTO
  8808  1ECF                     _PUERTO:
  8809                           
  8810                           ;incstack = 0
  8811                           ; Regs used in _PUERTO: [wreg]
  8812                           ;PUERTO@x stored from wreg
  8813  1ECF  00F3               	movwf	PUERTO@x
  8814  1ED0                     l3520:
  8815                           
  8816                           ;LCD.c: 26:     if (x & 1){RB0 = 1;}else{RB0 = 0;}
  8817  1ED0  1C73               	btfss	PUERTO@x,0
  8818  1ED1  2ED3               	goto	u5031
  8819  1ED2  2ED4               	goto	u5030
  8820  1ED3                     u5031:
  8821  1ED3  2ED8               	goto	l159
  8822  1ED4                     u5030:
  8823  1ED4                     l3522:
  8824  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  8825  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  8826  1ED6  1406               	bsf	6,0	;volatile
  8827  1ED7  2EDB               	goto	l160
  8828  1ED8                     l159:
  8829  1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  8830  1ED9  1303               	bcf	3,6	;RP1=0, select bank0
  8831  1EDA  1006               	bcf	6,0	;volatile
  8832  1EDB                     l160:
  8833                           
  8834                           ;LCD.c: 27:     if (x & 2){RB1 = 1;}else{RB1 = 0;}
  8835  1EDB  1CF3               	btfss	PUERTO@x,1
  8836  1EDC  2EDE               	goto	u5041
  8837  1EDD  2EDF               	goto	u5040
  8838  1EDE                     u5041:
  8839  1EDE  2EE1               	goto	l161
  8840  1EDF                     u5040:
  8841  1EDF                     l3524:
  8842  1EDF  1486               	bsf	6,1	;volatile
  8843  1EE0  2EE2               	goto	l162
  8844  1EE1                     l161:
  8845  1EE1  1086               	bcf	6,1	;volatile
  8846  1EE2                     l162:
  8847                           
  8848                           ;LCD.c: 28:     if (x & 4){RB2 = 1;}else{RB2 = 0;}
  8849  1EE2  1D73               	btfss	PUERTO@x,2
  8850  1EE3  2EE5               	goto	u5051
  8851  1EE4  2EE6               	goto	u5050
  8852  1EE5                     u5051:
  8853  1EE5  2EE8               	goto	l163
  8854  1EE6                     u5050:
  8855  1EE6                     l3526:
  8856  1EE6  1506               	bsf	6,2	;volatile
  8857  1EE7  2EE9               	goto	l164
  8858  1EE8                     l163:
  8859  1EE8  1106               	bcf	6,2	;volatile
  8860  1EE9                     l164:
  8861                           
  8862                           ;LCD.c: 29:     if (x & 8){RB3 = 1;}else{RB3 = 0;}
  8863  1EE9  1DF3               	btfss	PUERTO@x,3
  8864  1EEA  2EEC               	goto	u5061
  8865  1EEB  2EED               	goto	u5060
  8866  1EEC                     u5061:
  8867  1EEC  2EEF               	goto	l165
  8868  1EED                     u5060:
  8869  1EED                     l3528:
  8870  1EED  1586               	bsf	6,3	;volatile
  8871  1EEE  2EF0               	goto	l166
  8872  1EEF                     l165:
  8873  1EEF  1186               	bcf	6,3	;volatile
  8874  1EF0                     l166:
  8875                           
  8876                           ;LCD.c: 30:     if (x & 16){RB4 = 1;}else{RB4 = 0;}
  8877  1EF0  1E73               	btfss	PUERTO@x,4
  8878  1EF1  2EF3               	goto	u5071
  8879  1EF2  2EF4               	goto	u5070
  8880  1EF3                     u5071:
  8881  1EF3  2EF6               	goto	l167
  8882  1EF4                     u5070:
  8883  1EF4                     l3530:
  8884  1EF4  1606               	bsf	6,4	;volatile
  8885  1EF5  2EF7               	goto	l168
  8886  1EF6                     l167:
  8887  1EF6  1206               	bcf	6,4	;volatile
  8888  1EF7                     l168:
  8889                           
  8890                           ;LCD.c: 31:     if (x & 32){RB5 = 1;}else{RB5 = 0;}
  8891  1EF7  1EF3               	btfss	PUERTO@x,5
  8892  1EF8  2EFA               	goto	u5081
  8893  1EF9  2EFB               	goto	u5080
  8894  1EFA                     u5081:
  8895  1EFA  2EFD               	goto	l169
  8896  1EFB                     u5080:
  8897  1EFB                     l3532:
  8898  1EFB  1686               	bsf	6,5	;volatile
  8899  1EFC  2EFE               	goto	l170
  8900  1EFD                     l169:
  8901  1EFD  1286               	bcf	6,5	;volatile
  8902  1EFE                     l170:
  8903                           
  8904                           ;LCD.c: 32:     if (x & 64){RB6 = 1;}else{RB6 = 0;}
  8905  1EFE  1F73               	btfss	PUERTO@x,6
  8906  1EFF  2F01               	goto	u5091
  8907  1F00  2F02               	goto	u5090
  8908  1F01                     u5091:
  8909  1F01  2F04               	goto	l171
  8910  1F02                     u5090:
  8911  1F02                     l3534:
  8912  1F02  1706               	bsf	6,6	;volatile
  8913  1F03  2F05               	goto	l172
  8914  1F04                     l171:
  8915  1F04  1306               	bcf	6,6	;volatile
  8916  1F05                     l172:
  8917                           
  8918                           ;LCD.c: 33:     if (x & 128){RB7 = 1;}else{RB7 = 0;}
  8919  1F05  1FF3               	btfss	PUERTO@x,7
  8920  1F06  2F08               	goto	u5101
  8921  1F07  2F09               	goto	u5100
  8922  1F08                     u5101:
  8923  1F08  2F0B               	goto	l173
  8924  1F09                     u5100:
  8925  1F09                     l3536:
  8926  1F09  1786               	bsf	6,7	;volatile
  8927  1F0A  2F0C               	goto	l175
  8928  1F0B                     l173:
  8929  1F0B  1386               	bcf	6,7	;volatile
  8930  1F0C                     l175:
  8931  1F0C  0008               	return
  8932  1F0D                     __end_of_PUERTO:
  8933                           
  8934                           	psect	text39
  8935  1DFD                     __ptext39:	
  8936 ;; *************** function _ISR *****************
  8937 ;; Defined at:
  8938 ;;		line 97 in file "LAB3.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2, status,0, pclath, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8952 ;;      Params:         0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0
  8954 ;;      Temps:          3       0       0       0       0
  8955 ;;      Totals:         3       0       0       0       0
  8956 ;;Total ram usage:        3 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; Hardware stack levels required when called:    1
  8959 ;; This function calls:
  8960 ;;		_Read_USART
  8961 ;; This function is called by:
  8962 ;;		Interrupt level 1
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           
  8967                           ;psect for function _ISR
  8968  1DFD                     _ISR:
  8969  1DFD                     i1l3384:
  8970                           
  8971                           ;LAB3.c: 98:     if (RCIF == 1){
  8972  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  8973  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  8974  1DFF  1E8C               	btfss	12,5	;volatile
  8975  1E00  2E02               	goto	u488_21
  8976  1E01  2E03               	goto	u488_20
  8977  1E02                     u488_21:
  8978  1E02  2E23               	goto	i1l77
  8979  1E03                     u488_20:
  8980  1E03                     i1l3386:
  8981                           
  8982                           ;LAB3.c: 99:         RCIF = 0;
  8983  1E03  128C               	bcf	12,5	;volatile
  8984  1E04                     i1l3388:
  8985                           
  8986                           ;LAB3.c: 100:         RUSART= Read_USART();
  8987  1E04  160A  158A  2479  160A  158A  	fcall	_Read_USART
  8988  1E09  00F0               	movwf	??_ISR
  8989  1E0A  0870               	movf	??_ISR,w
  8990  1E0B  00FA               	movwf	_RUSART
  8991  1E0C                     i1l3390:
  8992                           
  8993                           ;LAB3.c: 101:         if (RUSART == '+'){contador++;}
  8994  1E0C  302B               	movlw	43
  8995  1E0D  067A               	xorwf	_RUSART,w
  8996  1E0E  1D03               	btfss	3,2
  8997  1E0F  2E11               	goto	u489_21
  8998  1E10  2E12               	goto	u489_20
  8999  1E11                     u489_21:
  9000  1E11  2E19               	goto	i1l3394
  9001  1E12                     u489_20:
  9002  1E12                     i1l3392:
  9003  1E12  3001               	movlw	1
  9004  1E13  00F0               	movwf	??_ISR
  9005  1E14  0870               	movf	??_ISR,w
  9006  1E15  1283               	bcf	3,5	;RP0=0, select bank0
  9007  1E16  1303               	bcf	3,6	;RP1=0, select bank0
  9008  1E17  07ED               	addwf	_contador,f
  9009  1E18  2E23               	goto	i1l77
  9010  1E19                     i1l3394:
  9011  1E19  302D               	movlw	45
  9012  1E1A  067A               	xorwf	_RUSART,w
  9013  1E1B  1D03               	btfss	3,2
  9014  1E1C  2E1E               	goto	u490_21
  9015  1E1D  2E1F               	goto	u490_20
  9016  1E1E                     u490_21:
  9017  1E1E  2E23               	goto	i1l77
  9018  1E1F                     u490_20:
  9019  1E1F                     i1l3396:
  9020  1E1F  3001               	movlw	1
  9021  1E20  1283               	bcf	3,5	;RP0=0, select bank0
  9022  1E21  1303               	bcf	3,6	;RP1=0, select bank0
  9023  1E22  02ED               	subwf	_contador,f
  9024  1E23                     i1l77:
  9025  1E23  0872               	movf	??_ISR+2,w
  9026  1E24  008A               	movwf	10
  9027  1E25  0E71               	swapf	??_ISR+1,w
  9028  1E26  0083               	movwf	3
  9029  1E27  0EFE               	swapf	btemp,f
  9030  1E28  0E7E               	swapf	btemp,w
  9031  1E29  0009               	retfie
  9032  1E2A                     __end_of_ISR:
  9033                           
  9034                           	psect	intentry
  9035  0004                     __pintentry:	
  9036                           ;incstack = 0
  9037                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9038                           
  9039  0004                     interrupt_function:
  9040  007E                     saved_w	set	btemp
  9041  0004  00FE               	movwf	btemp
  9042  0005  0E03               	swapf	3,w
  9043  0006  00F1               	movwf	??_ISR+1
  9044  0007  080A               	movf	10,w
  9045  0008  00F2               	movwf	??_ISR+2
  9046  0009  160A  158A  2DFD   	ljmp	_ISR
  9047                           
  9048                           	psect	text40
  9049  1C79                     __ptext40:	
  9050 ;; *************** function _Read_USART *****************
  9051 ;; Defined at:
  9052 ;;		line 40 in file "USART.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      unsigned char 
  9059 ;; Registers used:
  9060 ;;		wreg
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9066 ;;      Params:         0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_ISR
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           
  9080                           ;psect for function _Read_USART
  9081  1C79                     _Read_USART:
  9082  1C79                     i1l2956:	
  9083                           ;incstack = 0
  9084                           ; Regs used in _Read_USART: [wreg]
  9085                           
  9086  1C79                     i1l240:	
  9087                           ;USART.c: 41:   while(!RCIF);
  9088                           
  9089  1C79  1283               	bcf	3,5	;RP0=0, select bank0
  9090  1C7A  1303               	bcf	3,6	;RP1=0, select bank0
  9091  1C7B  1E8C               	btfss	12,5	;volatile
  9092  1C7C  2C7E               	goto	u418_21
  9093  1C7D  2C7F               	goto	u418_20
  9094  1C7E                     u418_21:
  9095  1C7E  2C79               	goto	i1l240
  9096  1C7F                     u418_20:
  9097  1C7F                     i1l2958:
  9098                           
  9099                           ;USART.c: 42:   return RCREG;
  9100  1C7F  081A               	movf	26,w	;volatile
  9101  1C80                     i1l243:
  9102  1C80  0008               	return
  9103  1C81                     __end_of_Read_USART:
  9104  007E                     btemp	set	126	;btemp
  9105  007E                     wtemp0	set	126
  9106                           
  9107                           	psect	config
  9108                           
  9109                           ;Config register CONFIG1 @ 0x2007
  9110                           ;	Oscillator Selection bits
  9111                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  9112                           ;	Watchdog Timer Enable bit
  9113                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9114                           ;	Power-up Timer Enable bit
  9115                           ;	PWRTE = OFF, PWRT disabled
  9116                           ;	RE3/MCLR pin function select bit
  9117                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9118                           ;	Code Protection bit
  9119                           ;	CP = OFF, Program memory code protection is disabled
  9120                           ;	Data Code Protection bit
  9121                           ;	CPD = OFF, Data memory code protection is disabled
  9122                           ;	Brown Out Reset Selection bits
  9123                           ;	BOREN = OFF, BOR disabled
  9124                           ;	Internal External Switchover bit
  9125                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9126                           ;	Fail-Safe Clock Monitor Enabled bit
  9127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9128                           ;	Low Voltage Programming Enable bit
  9129                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9130                           ;	In-Circuit Debugger Mode bit
  9131                           ;	DEBUG = 0x1, unprogrammed default
  9132  2007                     	org	8199
  9133  2007  20D1               	dw	8401
  9134                           
  9135                           ;Config register CONFIG2 @ 0x2008
  9136                           ;	Brown-out Reset Selection bit
  9137                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9138                           ;	Flash Program Memory Self Write Enable bits
  9139                           ;	WRT = OFF, Write protection off
  9140  2008                     	org	8200
  9141  2008  3FFF               	dw	16383
  9142                           
  9143                           	psect	text1_split_1
  9144  0021                     u6150:
  9145  0021                     l4048:
  9146  0021  1683               	bsf	3,5	;RP0=1, select bank1
  9147  0022  1303               	bcf	3,6	;RP1=0, select bank1
  9148  0023  083A               	movf	(sprintf@fval+2)^(0+128),w
  9149  0024  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  9150  0025  0438               	iorwf	sprintf@fval^(0+128),w
  9151  0026  1903               	skipnz
  9152  0027  2829               	goto	u6161
  9153  0028  282A               	goto	u6160
  9154  0029                     u6161:
  9155  0029  28BA               	goto	l4068
  9156  002A                     u6160:
  9157  002A                     l4050:
  9158  002A  0838               	movf	sprintf@fval^(0+128),w
  9159  002B  1283               	bcf	3,5	;RP0=0, select bank0
  9160  002C  1303               	bcf	3,6	;RP1=0, select bank0
  9161  002D  00C6               	movwf	___fttol@f1
  9162  002E  1683               	bsf	3,5	;RP0=1, select bank1
  9163  002F  1303               	bcf	3,6	;RP1=0, select bank1
  9164  0030  0839               	movf	(sprintf@fval+1)^(0+128),w
  9165  0031  1283               	bcf	3,5	;RP0=0, select bank0
  9166  0032  1303               	bcf	3,6	;RP1=0, select bank0
  9167  0033  00C7               	movwf	___fttol@f1+1
  9168  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9169  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9170  0036  083A               	movf	(sprintf@fval+2)^(0+128),w
  9171  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9172  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9173  0039  00C8               	movwf	___fttol@f1+2
  9174  003A  160A  118A  2262  120A  118A  	fcall	___fttol
  9175  003F  1283               	bcf	3,5	;RP0=0, select bank0
  9176  0040  1303               	bcf	3,6	;RP1=0, select bank0
  9177  0041  0849               	movf	?___fttol+3,w
  9178  0042  0448               	iorwf	?___fttol+2,w
  9179  0043  0447               	iorwf	?___fttol+1,w
  9180  0044  0446               	iorwf	?___fttol,w
  9181  0045  1D03               	skipz
  9182  0046  2848               	goto	u6171
  9183  0047  2849               	goto	u6170
  9184  0048                     u6171:
  9185  0048  28BA               	goto	l4068
  9186  0049                     u6170:
  9187  0049                     l4052:
  9188  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9189  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9190  004B  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9191  004C  3A80               	xorlw	128
  9192  004D  00FF               	movwf	btemp+1
  9193  004E  3080               	movlw	128
  9194  004F  027F               	subwf	btemp+1,w
  9195  0050  1D03               	skipz
  9196  0051  2854               	goto	u6185
  9197  0052  3002               	movlw	2
  9198  0053  0236               	subwf	sprintf@eexp^(0+128),w
  9199  0054                     u6185:
  9200  0054  1C03               	skipc
  9201  0055  2857               	goto	u6181
  9202  0056  2858               	goto	u6180
  9203  0057                     u6181:
  9204  0057  28BA               	goto	l4068
  9205  0058                     u6180:
  9206  0058                     l4054:
  9207                           
  9208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9209  0058  1683               	bsf	3,5	;RP0=1, select bank1
  9210  0059  1303               	bcf	3,6	;RP1=0, select bank1
  9211  005A  082E               	movf	sprintf@tmpval^(0+128),w
  9212  005B  00F3               	movwf	___ftge@ff1
  9213  005C  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9214  005D  00F4               	movwf	___ftge@ff1+1
  9215  005E  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9216  005F  00F5               	movwf	___ftge@ff1+2
  9217  0060  3070               	movlw	112
  9218  0061  00F6               	movwf	___ftge@ff2
  9219  0062  3089               	movlw	137
  9220  0063  00F7               	movwf	___ftge@ff2+1
  9221  0064  3040               	movlw	64
  9222  0065  00F8               	movwf	___ftge@ff2+2
  9223  0066  160A  158A  265D  120A  118A  	fcall	___ftge
  9224  006B  1803               	btfsc	3,0
  9225  006C  286E               	goto	u6191
  9226  006D  286F               	goto	u6190
  9227  006E                     u6191:
  9228  006E  2878               	goto	l4058
  9229  006F                     u6190:
  9230  006F                     l4056:
  9231                           
  9232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9233  006F  30F7               	movlw	247
  9234  0070  1683               	bsf	3,5	;RP0=1, select bank1
  9235  0071  1303               	bcf	3,6	;RP1=0, select bank1
  9236  0072  07B6               	addwf	sprintf@eexp^(0+128),f
  9237  0073  1803               	skipnc
  9238  0074  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9239  0075  30FF               	movlw	255
  9240  0076  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9241                           
  9242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9243  0077  2880               	goto	l4060
  9244  0078                     l4058:
  9245                           
  9246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9247  0078  30F8               	movlw	248
  9248  0079  1683               	bsf	3,5	;RP0=1, select bank1
  9249  007A  1303               	bcf	3,6	;RP1=0, select bank1
  9250  007B  07B6               	addwf	sprintf@eexp^(0+128),f
  9251  007C  1803               	skipnc
  9252  007D  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9253  007E  30FF               	movlw	255
  9254  007F  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9255  0080                     l4060:
  9256                           
  9257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  9258  0080  0836               	movf	sprintf@eexp^(0+128),w
  9259  0081  120A  158A  2545  120A  118A  	fcall	_scale
  9260  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9261  0087  1303               	bcf	3,6	;RP1=0, select bank0
  9262  0088  083D               	movf	?_scale,w
  9263  0089  1683               	bsf	3,5	;RP0=1, select bank1
  9264  008A  1303               	bcf	3,6	;RP1=0, select bank1
  9265  008B  00AE               	movwf	sprintf@tmpval^(0+128)
  9266  008C  1283               	bcf	3,5	;RP0=0, select bank0
  9267  008D  1303               	bcf	3,6	;RP1=0, select bank0
  9268  008E  083E               	movf	?_scale+1,w
  9269  008F  1683               	bsf	3,5	;RP0=1, select bank1
  9270  0090  1303               	bcf	3,6	;RP1=0, select bank1
  9271  0091  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9272  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9273  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9274  0094  083F               	movf	?_scale+2,w
  9275  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9276  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9277  0097  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9278  0098                     l4064:	
  9279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9280                           
  9281  0098  0838               	movf	sprintf@fval^(0+128),w
  9282  0099  00F3               	movwf	__tdiv_to_l_@f1
  9283  009A  0839               	movf	(sprintf@fval+1)^(0+128),w
  9284  009B  00F4               	movwf	__tdiv_to_l_@f1+1
  9285  009C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9286  009D  00F5               	movwf	__tdiv_to_l_@f1+2
  9287  009E  082E               	movf	sprintf@tmpval^(0+128),w
  9288  009F  00F6               	movwf	__tdiv_to_l_@f2
  9289  00A0  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9290  00A1  00F7               	movwf	__tdiv_to_l_@f2+1
  9291  00A2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9292  00A3  00F8               	movwf	__tdiv_to_l_@f2+2
  9293  00A4  160A  118A  238B  120A  118A  	fcall	__tdiv_to_l_
  9294  00A9  0876               	movf	?__tdiv_to_l_+3,w
  9295  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  9296  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  9297  00AC  00B5               	movwf	(sprintf@val+3)^(0+128)
  9298  00AD  0875               	movf	?__tdiv_to_l_+2,w
  9299  00AE  00B4               	movwf	(sprintf@val+2)^(0+128)
  9300  00AF  0874               	movf	?__tdiv_to_l_+1,w
  9301  00B0  00B3               	movwf	(sprintf@val+1)^(0+128)
  9302  00B1  0873               	movf	?__tdiv_to_l_,w
  9303  00B2  00B2               	movwf	sprintf@val^(0+128)
  9304  00B3                     l4066:
  9305                           
  9306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9307  00B3  3000               	movlw	0
  9308  00B4  00B8               	movwf	sprintf@fval^(0+128)
  9309  00B5  3000               	movlw	0
  9310  00B6  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9311  00B7  3000               	movlw	0
  9312  00B8  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9313                           
  9314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9315  00B9  2937               	goto	l4072
  9316  00BA                     l4068:
  9317                           
  9318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9319  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9320  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9321  00BC  0838               	movf	sprintf@fval^(0+128),w
  9322  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9323  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9324  00BF  00C6               	movwf	___fttol@f1
  9325  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9326  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9327  00C2  0839               	movf	(sprintf@fval+1)^(0+128),w
  9328  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9329  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9330  00C5  00C7               	movwf	___fttol@f1+1
  9331  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9332  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9333  00C8  083A               	movf	(sprintf@fval+2)^(0+128),w
  9334  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9335  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9336  00CB  00C8               	movwf	___fttol@f1+2
  9337  00CC  160A  118A  2262  120A  118A  	fcall	___fttol
  9338  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9339  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9340  00D3  0849               	movf	?___fttol+3,w
  9341  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  9342  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  9343  00D6  00B5               	movwf	(sprintf@val+3)^(0+128)
  9344  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9345  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9346  00D9  0848               	movf	?___fttol+2,w
  9347  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9348  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9349  00DC  00B4               	movwf	(sprintf@val+2)^(0+128)
  9350  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9351  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9352  00DF  0847               	movf	?___fttol+1,w
  9353  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9354  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9355  00E2  00B3               	movwf	(sprintf@val+1)^(0+128)
  9356  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9357  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9358  00E5  0846               	movf	?___fttol,w
  9359  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9360  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9361  00E8  00B2               	movwf	sprintf@val^(0+128)
  9362                           
  9363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9364  00E9  0835               	movf	(sprintf@val+3)^(0+128),w
  9365  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  9366  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  9367  00EC  00A6               	movwf	___lltoft@c+3
  9368  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  9369  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  9370  00EF  0834               	movf	(sprintf@val+2)^(0+128),w
  9371  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  9372  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  9373  00F2  00A5               	movwf	___lltoft@c+2
  9374  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  9375  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  9376  00F5  0833               	movf	(sprintf@val+1)^(0+128),w
  9377  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  9378  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  9379  00F8  00A4               	movwf	___lltoft@c+1
  9380  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  9381  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  9382  00FB  0832               	movf	sprintf@val^(0+128),w
  9383  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  9384  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  9385  00FE  00A3               	movwf	___lltoft@c
  9386  00FF  160A  158A  262A  120A  118A  	fcall	___lltoft
  9387  0104  1283               	bcf	3,5	;RP0=0, select bank0
  9388  0105  1303               	bcf	3,6	;RP1=0, select bank0
  9389  0106  0823               	movf	?___lltoft,w
  9390  0107  00DA               	movwf	___ftsub@f2
  9391  0108  0824               	movf	?___lltoft+1,w
  9392  0109  00DB               	movwf	___ftsub@f2+1
  9393  010A  0825               	movf	?___lltoft+2,w
  9394  010B  00DC               	movwf	___ftsub@f2+2
  9395  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9396  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9397  010E  0838               	movf	sprintf@fval^(0+128),w
  9398  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9399  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9400  0111  00DD               	movwf	___ftsub@f1
  9401  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9402  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9403  0114  0839               	movf	(sprintf@fval+1)^(0+128),w
  9404  0115  1283               	bcf	3,5	;RP0=0, select bank0
  9405  0116  1303               	bcf	3,6	;RP1=0, select bank0
  9406  0117  00DE               	movwf	___ftsub@f1+1
  9407  0118  1683               	bsf	3,5	;RP0=1, select bank1
  9408  0119  1303               	bcf	3,6	;RP1=0, select bank1
  9409  011A  083A               	movf	(sprintf@fval+2)^(0+128),w
  9410  011B  1283               	bcf	3,5	;RP0=0, select bank0
  9411  011C  1303               	bcf	3,6	;RP1=0, select bank0
  9412  011D  00DF               	movwf	___ftsub@f1+2
  9413  011E  160A  158A  2531  120A  118A  	fcall	___ftsub
  9414  0123  1283               	bcf	3,5	;RP0=0, select bank0
  9415  0124  1303               	bcf	3,6	;RP1=0, select bank0
  9416  0125  085A               	movf	?___ftsub,w
  9417  0126  1683               	bsf	3,5	;RP0=1, select bank1
  9418  0127  1303               	bcf	3,6	;RP1=0, select bank1
  9419  0128  00B8               	movwf	sprintf@fval^(0+128)
  9420  0129  1283               	bcf	3,5	;RP0=0, select bank0
  9421  012A  1303               	bcf	3,6	;RP1=0, select bank0
  9422  012B  085B               	movf	?___ftsub+1,w
  9423  012C  1683               	bsf	3,5	;RP0=1, select bank1
  9424  012D  1303               	bcf	3,6	;RP1=0, select bank1
  9425  012E  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9426  012F  1283               	bcf	3,5	;RP0=0, select bank0
  9427  0130  1303               	bcf	3,6	;RP1=0, select bank0
  9428  0131  085C               	movf	?___ftsub+2,w
  9429  0132  1683               	bsf	3,5	;RP0=1, select bank1
  9430  0133  1303               	bcf	3,6	;RP1=0, select bank1
  9431  0134  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9432  0135                     l4070:
  9433                           
  9434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9435  0135  01B6               	clrf	sprintf@eexp^(0+128)
  9436  0136  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9437  0137                     l4072:
  9438                           
  9439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9440  0137  01BE               	clrf	sprintf@c^(0+128)
  9441  0138  0ABE               	incf	sprintf@c^(0+128),f
  9442  0139                     l4078:
  9443                           
  9444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9445  0139  083E               	movf	sprintf@c^(0+128),w
  9446  013A  00A0               	movwf	??_sprintf^(0+128)
  9447  013B  3001               	movlw	1
  9448  013C                     u6205:
  9449  013C  1003               	clrc
  9450  013D  0DA0               	rlf	??_sprintf^(0+128),f
  9451  013E  3EFF               	addlw	-1
  9452  013F  1D03               	skipz
  9453  0140  293C               	goto	u6205
  9454  0141  1003               	clrc
  9455  0142  0D20               	rlf	??_sprintf^(0+128),w
  9456  0143  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9457  0144  0084               	movwf	4
  9458  0145  160A  118A  200A  120A  118A  	fcall	stringdir
  9459  014A  00A1               	movwf	(??_sprintf+1)^(0+128)
  9460  014B  160A  118A  200A  120A  118A  	fcall	stringdir
  9461  0150  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9462  0151  160A  118A  200A  120A  118A  	fcall	stringdir
  9463  0156  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9464  0157  160A  118A  200A  120A  118A  	fcall	stringdir
  9465  015C  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9466  015D  0824               	movf	(??_sprintf+4)^(0+128),w
  9467  015E  0235               	subwf	(sprintf@val+3)^(0+128),w
  9468  015F  1D03               	skipz
  9469  0160  296B               	goto	u6215
  9470  0161  0823               	movf	(??_sprintf+3)^(0+128),w
  9471  0162  0234               	subwf	(sprintf@val+2)^(0+128),w
  9472  0163  1D03               	skipz
  9473  0164  296B               	goto	u6215
  9474  0165  0822               	movf	(??_sprintf+2)^(0+128),w
  9475  0166  0233               	subwf	(sprintf@val+1)^(0+128),w
  9476  0167  1D03               	skipz
  9477  0168  296B               	goto	u6215
  9478  0169  0821               	movf	(??_sprintf+1)^(0+128),w
  9479  016A  0232               	subwf	sprintf@val^(0+128),w
  9480  016B                     u6215:
  9481  016B  1803               	skipnc
  9482  016C  296E               	goto	u6211
  9483  016D  296F               	goto	u6210
  9484  016E                     u6211:
  9485  016E  2970               	goto	l4082
  9486  016F                     u6210:
  9487  016F  297A               	goto	l4084
  9488  0170                     l4082:
  9489  0170  3001               	movlw	1
  9490  0171  00A0               	movwf	??_sprintf^(0+128)
  9491  0172  0820               	movf	??_sprintf^(0+128),w
  9492  0173  07BE               	addwf	sprintf@c^(0+128),f
  9493  0174  300A               	movlw	10
  9494  0175  063E               	xorwf	sprintf@c^(0+128),w
  9495  0176  1D03               	btfss	3,2
  9496  0177  2979               	goto	u6221
  9497  0178  297A               	goto	u6220
  9498  0179                     u6221:
  9499  0179  2939               	goto	l4078
  9500  017A                     u6220:
  9501  017A                     l4084:
  9502                           
  9503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9504  017A  083E               	movf	sprintf@c^(0+128),w
  9505  017B  073C               	addwf	sprintf@prec^(0+128),w
  9506  017C  00A0               	movwf	??_sprintf^(0+128)
  9507  017D  083D               	movf	(sprintf@prec+1)^(0+128),w
  9508  017E  1803               	skipnc
  9509  017F  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9510  0180  00A1               	movwf	(??_sprintf^(0+128)+1)
  9511  0181  0836               	movf	sprintf@eexp^(0+128),w
  9512  0182  0720               	addwf	??_sprintf^(0+128),w
  9513  0183  00A2               	movwf	(??_sprintf+2)^(0+128)
  9514  0184  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9515  0185  1803               	skipnc
  9516  0186  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9517  0187  0721               	addwf	(??_sprintf+1)^(0+128),w
  9518  0188  00A3               	movwf	(??_sprintf+3)^(0+128)
  9519  0189  0822               	movf	(??_sprintf+2)^(0+128),w
  9520  018A  02AC               	subwf	sprintf@width^(0+128),f
  9521  018B  0823               	movf	(??_sprintf+3)^(0+128),w
  9522  018C  1C03               	skipc
  9523  018D  03AD               	decf	(sprintf@width+1)^(0+128),f
  9524  018E  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9525                           
  9526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9527  018F  083C               	movf	sprintf@prec^(0+128),w
  9528  0190  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9529  0191  1903               	btfsc	3,2
  9530  0192  2994               	goto	u6231
  9531  0193  2995               	goto	u6230
  9532  0194                     u6231:
  9533  0194  299B               	goto	l4088
  9534  0195                     u6230:
  9535  0195                     l4086:
  9536                           
  9537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9538  0195  30FF               	movlw	255
  9539  0196  07AC               	addwf	sprintf@width^(0+128),f
  9540  0197  1803               	skipnc
  9541  0198  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9542  0199  30FF               	movlw	255
  9543  019A  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9544  019B                     l4088:
  9545                           
  9546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9547  019B  3003               	movlw	3
  9548  019C  052A               	andwf	sprintf@flag^(0+128),w
  9549  019D  00A0               	movwf	??_sprintf^(0+128)
  9550  019E  3000               	movlw	0
  9551  019F  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9552  01A0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9553  01A1  0820               	movf	??_sprintf^(0+128),w
  9554  01A2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9555  01A3  1903               	btfsc	3,2
  9556  01A4  29A6               	goto	u6241
  9557  01A5  29A7               	goto	u6240
  9558  01A6                     u6241:
  9559  01A6  29BC               	goto	l4098
  9560  01A7                     u6240:
  9561  01A7                     l4090:
  9562                           
  9563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9564  01A7  30FF               	movlw	255
  9565  01A8  07AC               	addwf	sprintf@width^(0+128),f
  9566  01A9  1803               	skipnc
  9567  01AA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9568  01AB  30FF               	movlw	255
  9569  01AC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9570  01AD  29BC               	goto	l4098
  9571  01AE                     l4092:
  9572                           
  9573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9574  01AE  3020               	movlw	32
  9575  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  9576  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  9577  01B1  00A0               	movwf	??_sprintf^(0+128)
  9578  01B2  083B               	movf	sprintf@sp^(0+128),w
  9579  01B3  0084               	movwf	4
  9580  01B4  0820               	movf	??_sprintf^(0+128),w
  9581  01B5  1383               	bcf	3,7	;select IRP bank0
  9582  01B6  0080               	movwf	0
  9583  01B7                     l4094:
  9584  01B7  3001               	movlw	1
  9585  01B8  00A0               	movwf	??_sprintf^(0+128)
  9586  01B9  0820               	movf	??_sprintf^(0+128),w
  9587  01BA  07BB               	addwf	sprintf@sp^(0+128),f
  9588  01BB  29A7               	goto	l4090
  9589  01BC                     l4098:
  9590                           
  9591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9592  01BC  082D               	movf	(sprintf@width+1)^(0+128),w
  9593  01BD  3A80               	xorlw	128
  9594  01BE  00FF               	movwf	btemp+1
  9595  01BF  3080               	movlw	128
  9596  01C0  027F               	subwf	btemp+1,w
  9597  01C1  1D03               	skipz
  9598  01C2  29C5               	goto	u6255
  9599  01C3  3001               	movlw	1
  9600  01C4  022C               	subwf	sprintf@width^(0+128),w
  9601  01C5                     u6255:
  9602  01C5  1803               	skipnc
  9603  01C6  29C8               	goto	u6251
  9604  01C7  29C9               	goto	u6250
  9605  01C8                     u6251:
  9606  01C8  29AE               	goto	l4092
  9607  01C9                     u6250:
  9608  01C9                     l4100:
  9609                           
  9610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9611  01C9  3003               	movlw	3
  9612  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  9613  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  9614  01CC  052A               	andwf	sprintf@flag^(0+128),w
  9615  01CD  00A0               	movwf	??_sprintf^(0+128)
  9616  01CE  3000               	movlw	0
  9617  01CF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9618  01D0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9619  01D1  0820               	movf	??_sprintf^(0+128),w
  9620  01D2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9621  01D3  1903               	btfsc	3,2
  9622  01D4  29D6               	goto	u6261
  9623  01D5  29D7               	goto	u6260
  9624  01D6                     u6261:
  9625  01D6  2A89               	goto	l407
  9626  01D7                     u6260:
  9627  01D7                     l4102:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9630  01D7  302D               	movlw	45
  9631  01D8  00A0               	movwf	??_sprintf^(0+128)
  9632  01D9  083B               	movf	sprintf@sp^(0+128),w
  9633  01DA  0084               	movwf	4
  9634  01DB  0820               	movf	??_sprintf^(0+128),w
  9635  01DC  1383               	bcf	3,7	;select IRP bank0
  9636  01DD  0080               	movwf	0
  9637  01DE                     l4104:
  9638  01DE  3001               	movlw	1
  9639  01DF  00A0               	movwf	??_sprintf^(0+128)
  9640  01E0  0820               	movf	??_sprintf^(0+128),w
  9641  01E1  07BB               	addwf	sprintf@sp^(0+128),f
  9642  01E2  2A89               	goto	l407
  9643  01E3                     l4106:
  9644                           
  9645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9646  01E3  083E               	movf	sprintf@c^(0+128),w
  9647  01E4  00A0               	movwf	??_sprintf^(0+128)
  9648  01E5  3001               	movlw	1
  9649  01E6                     u6275:
  9650  01E6  1003               	clrc
  9651  01E7  0DA0               	rlf	??_sprintf^(0+128),f
  9652  01E8  3EFF               	addlw	-1
  9653  01E9  1D03               	skipz
  9654  01EA  29E6               	goto	u6275
  9655  01EB  1003               	clrc
  9656  01EC  0D20               	rlf	??_sprintf^(0+128),w
  9657  01ED  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9658  01EE  0084               	movwf	4
  9659  01EF  160A  118A  200A  120A  118A  	fcall	stringdir
  9660  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  9661  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  9662  01F6  00A0               	movwf	___lldiv@divisor
  9663  01F7  160A  118A  200A  120A  118A  	fcall	stringdir
  9664  01FC  00A1               	movwf	___lldiv@divisor+1
  9665  01FD  160A  118A  200A  120A  118A  	fcall	stringdir
  9666  0202  00A2               	movwf	___lldiv@divisor+2
  9667  0203  160A  118A  200A  120A  118A  	fcall	stringdir
  9668  0208  00A3               	movwf	___lldiv@divisor+3
  9669  0209  1683               	bsf	3,5	;RP0=1, select bank1
  9670  020A  1303               	bcf	3,6	;RP1=0, select bank1
  9671  020B  0835               	movf	(sprintf@val+3)^(0+128),w
  9672  020C  1283               	bcf	3,5	;RP0=0, select bank0
  9673  020D  1303               	bcf	3,6	;RP1=0, select bank0
  9674  020E  00A7               	movwf	___lldiv@dividend+3
  9675  020F  1683               	bsf	3,5	;RP0=1, select bank1
  9676  0210  1303               	bcf	3,6	;RP1=0, select bank1
  9677  0211  0834               	movf	(sprintf@val+2)^(0+128),w
  9678  0212  1283               	bcf	3,5	;RP0=0, select bank0
  9679  0213  1303               	bcf	3,6	;RP1=0, select bank0
  9680  0214  00A6               	movwf	___lldiv@dividend+2
  9681  0215  1683               	bsf	3,5	;RP0=1, select bank1
  9682  0216  1303               	bcf	3,6	;RP1=0, select bank1
  9683  0217  0833               	movf	(sprintf@val+1)^(0+128),w
  9684  0218  1283               	bcf	3,5	;RP0=0, select bank0
  9685  0219  1303               	bcf	3,6	;RP1=0, select bank0
  9686  021A  00A5               	movwf	___lldiv@dividend+1
  9687  021B  1683               	bsf	3,5	;RP0=1, select bank1
  9688  021C  1303               	bcf	3,6	;RP1=0, select bank1
  9689  021D  0832               	movf	sprintf@val^(0+128),w
  9690  021E  1283               	bcf	3,5	;RP0=0, select bank0
  9691  021F  1303               	bcf	3,6	;RP1=0, select bank0
  9692  0220  00A4               	movwf	___lldiv@dividend
  9693  0221  160A  118A  210F  120A  118A  	fcall	___lldiv
  9694  0226  1283               	bcf	3,5	;RP0=0, select bank0
  9695  0227  1303               	bcf	3,6	;RP1=0, select bank0
  9696  0228  0823               	movf	?___lldiv+3,w
  9697  0229  1683               	bsf	3,5	;RP0=1, select bank1
  9698  022A  1303               	bcf	3,6	;RP1=0, select bank1
  9699  022B  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9700  022C  1283               	bcf	3,5	;RP0=0, select bank0
  9701  022D  1303               	bcf	3,6	;RP1=0, select bank0
  9702  022E  0822               	movf	?___lldiv+2,w
  9703  022F  1683               	bsf	3,5	;RP0=1, select bank1
  9704  0230  1303               	bcf	3,6	;RP1=0, select bank1
  9705  0231  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9706  0232  1283               	bcf	3,5	;RP0=0, select bank0
  9707  0233  1303               	bcf	3,6	;RP1=0, select bank0
  9708  0234  0821               	movf	?___lldiv+1,w
  9709  0235  1683               	bsf	3,5	;RP0=1, select bank1
  9710  0236  1303               	bcf	3,6	;RP1=0, select bank1
  9711  0237  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9712  0238  1283               	bcf	3,5	;RP0=0, select bank0
  9713  0239  1303               	bcf	3,6	;RP1=0, select bank0
  9714  023A  0820               	movf	?___lldiv,w
  9715  023B  1683               	bsf	3,5	;RP0=1, select bank1
  9716  023C  1303               	bcf	3,6	;RP1=0, select bank1
  9717  023D  00AE               	movwf	sprintf@tmpval^(0+128)
  9718  023E                     l4108:
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9721  023E  3000               	movlw	0
  9722  023F  1283               	bcf	3,5	;RP0=0, select bank0
  9723  0240  1303               	bcf	3,6	;RP1=0, select bank0
  9724  0241  00AB               	movwf	___llmod@divisor+3
  9725  0242  3000               	movlw	0
  9726  0243  00AA               	movwf	___llmod@divisor+2
  9727  0244  3000               	movlw	0
  9728  0245  00A9               	movwf	___llmod@divisor+1
  9729  0246  300A               	movlw	10
  9730  0247  00A8               	movwf	___llmod@divisor
  9731  0248  1683               	bsf	3,5	;RP0=1, select bank1
  9732  0249  1303               	bcf	3,6	;RP1=0, select bank1
  9733  024A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9734  024B  1283               	bcf	3,5	;RP0=0, select bank0
  9735  024C  1303               	bcf	3,6	;RP1=0, select bank0
  9736  024D  00AF               	movwf	___llmod@dividend+3
  9737  024E  1683               	bsf	3,5	;RP0=1, select bank1
  9738  024F  1303               	bcf	3,6	;RP1=0, select bank1
  9739  0250  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9740  0251  1283               	bcf	3,5	;RP0=0, select bank0
  9741  0252  1303               	bcf	3,6	;RP1=0, select bank0
  9742  0253  00AE               	movwf	___llmod@dividend+2
  9743  0254  1683               	bsf	3,5	;RP0=1, select bank1
  9744  0255  1303               	bcf	3,6	;RP1=0, select bank1
  9745  0256  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9746  0257  1283               	bcf	3,5	;RP0=0, select bank0
  9747  0258  1303               	bcf	3,6	;RP1=0, select bank0
  9748  0259  00AD               	movwf	___llmod@dividend+1
  9749  025A  1683               	bsf	3,5	;RP0=1, select bank1
  9750  025B  1303               	bcf	3,6	;RP1=0, select bank1
  9751  025C  082E               	movf	sprintf@tmpval^(0+128),w
  9752  025D  1283               	bcf	3,5	;RP0=0, select bank0
  9753  025E  1303               	bcf	3,6	;RP1=0, select bank0
  9754  025F  00AC               	movwf	___llmod@dividend
  9755  0260  160A  158A  2751  120A  118A  	fcall	___llmod
  9756  0265  1283               	bcf	3,5	;RP0=0, select bank0
  9757  0266  1303               	bcf	3,6	;RP1=0, select bank0
  9758  0267  082B               	movf	?___llmod+3,w
  9759  0268  1683               	bsf	3,5	;RP0=1, select bank1
  9760  0269  1303               	bcf	3,6	;RP1=0, select bank1
  9761  026A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9762  026B  1283               	bcf	3,5	;RP0=0, select bank0
  9763  026C  1303               	bcf	3,6	;RP1=0, select bank0
  9764  026D  082A               	movf	?___llmod+2,w
  9765  026E  1683               	bsf	3,5	;RP0=1, select bank1
  9766  026F  1303               	bcf	3,6	;RP1=0, select bank1
  9767  0270  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9768  0271  1283               	bcf	3,5	;RP0=0, select bank0
  9769  0272  1303               	bcf	3,6	;RP1=0, select bank0
  9770  0273  0829               	movf	?___llmod+1,w
  9771  0274  1683               	bsf	3,5	;RP0=1, select bank1
  9772  0275  1303               	bcf	3,6	;RP1=0, select bank1
  9773  0276  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9774  0277  1283               	bcf	3,5	;RP0=0, select bank0
  9775  0278  1303               	bcf	3,6	;RP1=0, select bank0
  9776  0279  0828               	movf	?___llmod,w
  9777  027A  1683               	bsf	3,5	;RP0=1, select bank1
  9778  027B  1303               	bcf	3,6	;RP1=0, select bank1
  9779  027C  00AE               	movwf	sprintf@tmpval^(0+128)
  9780  027D                     l4110:
  9781                           
  9782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9783  027D  082E               	movf	sprintf@tmpval^(0+128),w
  9784  027E  3E30               	addlw	48
  9785  027F  00A0               	movwf	??_sprintf^(0+128)
  9786  0280  083B               	movf	sprintf@sp^(0+128),w
  9787  0281  0084               	movwf	4
  9788  0282  0820               	movf	??_sprintf^(0+128),w
  9789  0283  1383               	bcf	3,7	;select IRP bank0
  9790  0284  0080               	movwf	0
  9791  0285  3001               	movlw	1
  9792  0286  00A0               	movwf	??_sprintf^(0+128)
  9793  0287  0820               	movf	??_sprintf^(0+128),w
  9794  0288  07BB               	addwf	sprintf@sp^(0+128),f
  9795  0289                     l407:	
  9796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  9797                           
  9798                           
  9799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9800  0289  3001               	movlw	1
  9801  028A  02BE               	subwf	sprintf@c^(0+128),f
  9802  028B  0A3E               	incf	sprintf@c^(0+128),w
  9803  028C  1D03               	btfss	3,2
  9804  028D  2A8F               	goto	u6281
  9805  028E  2A90               	goto	u6280
  9806  028F                     u6281:
  9807  028F  29E3               	goto	l4106
  9808  0290                     u6280:
  9809  0290  2AA4               	goto	l4118
  9810  0291                     l4112:
  9811                           
  9812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9813  0291  3030               	movlw	48
  9814  0292  1683               	bsf	3,5	;RP0=1, select bank1
  9815  0293  1303               	bcf	3,6	;RP1=0, select bank1
  9816  0294  00A0               	movwf	??_sprintf^(0+128)
  9817  0295  083B               	movf	sprintf@sp^(0+128),w
  9818  0296  0084               	movwf	4
  9819  0297  0820               	movf	??_sprintf^(0+128),w
  9820  0298  1383               	bcf	3,7	;select IRP bank0
  9821  0299  0080               	movwf	0
  9822  029A                     l4114:
  9823  029A  3001               	movlw	1
  9824  029B  00A0               	movwf	??_sprintf^(0+128)
  9825  029C  0820               	movf	??_sprintf^(0+128),w
  9826  029D  07BB               	addwf	sprintf@sp^(0+128),f
  9827  029E                     l4116:
  9828                           
  9829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9830  029E  30FF               	movlw	255
  9831  029F  07B6               	addwf	sprintf@eexp^(0+128),f
  9832  02A0  1803               	skipnc
  9833  02A1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9834  02A2  30FF               	movlw	255
  9835  02A3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9836  02A4                     l4118:
  9837                           
  9838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9839  02A4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9840  02A5  3A80               	xorlw	128
  9841  02A6  00FF               	movwf	btemp+1
  9842  02A7  3080               	movlw	128
  9843  02A8  027F               	subwf	btemp+1,w
  9844  02A9  1D03               	skipz
  9845  02AA  2AAD               	goto	u6295
  9846  02AB  3001               	movlw	1
  9847  02AC  0236               	subwf	sprintf@eexp^(0+128),w
  9848  02AD                     u6295:
  9849  02AD  1803               	skipnc
  9850  02AE  2AB0               	goto	u6291
  9851  02AF  2AB1               	goto	u6290
  9852  02B0                     u6291:
  9853  02B0  2A91               	goto	l4112
  9854  02B1                     u6290:
  9855  02B1                     l4120:
  9856                           
  9857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9858  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  9859  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  9860  02B3  083D               	movf	(sprintf@prec+1)^(0+128),w
  9861  02B4  3A80               	xorlw	128
  9862  02B5  00FF               	movwf	btemp+1
  9863  02B6  3080               	movlw	128
  9864  02B7  027F               	subwf	btemp+1,w
  9865  02B8  1D03               	skipz
  9866  02B9  2ABC               	goto	u6305
  9867  02BA  3009               	movlw	9
  9868  02BB  023C               	subwf	sprintf@prec^(0+128),w
  9869  02BC                     u6305:
  9870  02BC  1C03               	skipc
  9871  02BD  2ABF               	goto	u6301
  9872  02BE  2AC0               	goto	u6300
  9873  02BF                     u6301:
  9874  02BF  2AC7               	goto	l4124
  9875  02C0                     u6300:
  9876  02C0                     l4122:
  9877                           
  9878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9879  02C0  3008               	movlw	8
  9880  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  9881  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  9882  02C3  00A0               	movwf	??_sprintf^(0+128)
  9883  02C4  0820               	movf	??_sprintf^(0+128),w
  9884  02C5  00BE               	movwf	sprintf@c^(0+128)
  9885  02C6  2ACD               	goto	l414
  9886  02C7                     l4124:
  9887                           
  9888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9889  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  9890  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  9891  02C9  083C               	movf	sprintf@prec^(0+128),w
  9892  02CA  00A0               	movwf	??_sprintf^(0+128)
  9893  02CB  0820               	movf	??_sprintf^(0+128),w
  9894  02CC  00BE               	movwf	sprintf@c^(0+128)
  9895  02CD                     l414:
  9896                           
  9897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9898  02CD  083E               	movf	sprintf@c^(0+128),w
  9899  02CE  00A0               	movwf	??_sprintf^(0+128)
  9900  02CF  01A1               	clrf	(??_sprintf^(0+128)+1)
  9901  02D0  0820               	movf	??_sprintf^(0+128),w
  9902  02D1  02BC               	subwf	sprintf@prec^(0+128),f
  9903  02D2  0821               	movf	(??_sprintf+1)^(0+128),w
  9904  02D3  1C03               	skipc
  9905  02D4  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9906  02D5  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9907  02D6                     l4126:
  9908                           
  9909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9910  02D6  083E               	movf	sprintf@c^(0+128),w
  9911  02D7  1903               	btfsc	3,2
  9912  02D8  2ADA               	goto	u6311
  9913  02D9  2ADB               	goto	u6310
  9914  02DA                     u6311:
  9915  02DA  2AE6               	goto	l4132
  9916  02DB                     u6310:
  9917  02DB                     l4128:
  9918                           
  9919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9920  02DB  302E               	movlw	46
  9921  02DC  00A0               	movwf	??_sprintf^(0+128)
  9922  02DD  083B               	movf	sprintf@sp^(0+128),w
  9923  02DE  0084               	movwf	4
  9924  02DF  0820               	movf	??_sprintf^(0+128),w
  9925  02E0  1383               	bcf	3,7	;select IRP bank0
  9926  02E1  0080               	movwf	0
  9927  02E2                     l4130:
  9928  02E2  3001               	movlw	1
  9929  02E3  00A0               	movwf	??_sprintf^(0+128)
  9930  02E4  0820               	movf	??_sprintf^(0+128),w
  9931  02E5  07BB               	addwf	sprintf@sp^(0+128),f
  9932  02E6                     l4132:
  9933                           
  9934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9935  02E6  083E               	movf	sprintf@c^(0+128),w
  9936  02E7  120A  158A  2545  120A  118A  	fcall	_scale
  9937  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  9938  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  9939  02EE  083D               	movf	?_scale,w
  9940  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  9941  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  9942  02F1  00A6               	movwf	_sprintf$1068^(0+128)
  9943  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  9944  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  9945  02F4  083E               	movf	?_scale+1,w
  9946  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  9947  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  9948  02F7  00A7               	movwf	(_sprintf$1068+1)^(0+128)
  9949  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  9950  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  9951  02FA  083F               	movf	?_scale+2,w
  9952  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  9953  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  9954  02FD  00A8               	movwf	(_sprintf$1068+2)^(0+128)
  9955  02FE                     l4134:
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9958  02FE  0826               	movf	_sprintf$1068^(0+128),w
  9959  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  9960  0300  1303               	bcf	3,6	;RP1=0, select bank0
  9961  0301  00B0               	movwf	___ftmul@f2
  9962  0302  1683               	bsf	3,5	;RP0=1, select bank1
  9963  0303  1303               	bcf	3,6	;RP1=0, select bank1
  9964  0304  0827               	movf	(_sprintf$1068+1)^(0+128),w
  9965  0305  1283               	bcf	3,5	;RP0=0, select bank0
  9966  0306  1303               	bcf	3,6	;RP1=0, select bank0
  9967  0307  00B1               	movwf	___ftmul@f2+1
  9968  0308  1683               	bsf	3,5	;RP0=1, select bank1
  9969  0309  1303               	bcf	3,6	;RP1=0, select bank1
  9970  030A  0828               	movf	(_sprintf$1068+2)^(0+128),w
  9971  030B  1283               	bcf	3,5	;RP0=0, select bank0
  9972  030C  1303               	bcf	3,6	;RP1=0, select bank0
  9973  030D  00B2               	movwf	___ftmul@f2+2
  9974  030E  1683               	bsf	3,5	;RP0=1, select bank1
  9975  030F  1303               	bcf	3,6	;RP1=0, select bank1
  9976  0310  0838               	movf	sprintf@fval^(0+128),w
  9977  0311  1283               	bcf	3,5	;RP0=0, select bank0
  9978  0312  1303               	bcf	3,6	;RP1=0, select bank0
  9979  0313  00AD               	movwf	___ftmul@f1
  9980  0314  1683               	bsf	3,5	;RP0=1, select bank1
  9981  0315  1303               	bcf	3,6	;RP1=0, select bank1
  9982  0316  0839               	movf	(sprintf@fval+1)^(0+128),w
  9983  0317  1283               	bcf	3,5	;RP0=0, select bank0
  9984  0318  1303               	bcf	3,6	;RP1=0, select bank0
  9985  0319  00AE               	movwf	___ftmul@f1+1
  9986  031A  1683               	bsf	3,5	;RP0=1, select bank1
  9987  031B  1303               	bcf	3,6	;RP1=0, select bank1
  9988  031C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9989  031D  1283               	bcf	3,5	;RP0=0, select bank0
  9990  031E  1303               	bcf	3,6	;RP1=0, select bank0
  9991  031F  00AF               	movwf	___ftmul@f1+2
  9992  0320  160A  118A  2525  120A  118A  	fcall	___ftmul
  9993  0325  1283               	bcf	3,5	;RP0=0, select bank0
  9994  0326  1303               	bcf	3,6	;RP1=0, select bank0
  9995  0327  082D               	movf	?___ftmul,w
  9996  0328  00C6               	movwf	___fttol@f1
  9997  0329  082E               	movf	?___ftmul+1,w
  9998  032A  00C7               	movwf	___fttol@f1+1
  9999  032B  082F               	movf	?___ftmul+2,w
 10000  032C  00C8               	movwf	___fttol@f1+2
 10001  032D  160A  118A  2262  120A  118A  	fcall	___fttol
 10002  0332  1283               	bcf	3,5	;RP0=0, select bank0
 10003  0333  1303               	bcf	3,6	;RP1=0, select bank0
 10004  0334  0849               	movf	?___fttol+3,w
 10005  0335  1683               	bsf	3,5	;RP0=1, select bank1
 10006  0336  1303               	bcf	3,6	;RP1=0, select bank1
 10007  0337  00B5               	movwf	(sprintf@val+3)^(0+128)
 10008  0338  1283               	bcf	3,5	;RP0=0, select bank0
 10009  0339  1303               	bcf	3,6	;RP1=0, select bank0
 10010  033A  0848               	movf	?___fttol+2,w
 10011  033B  1683               	bsf	3,5	;RP0=1, select bank1
 10012  033C  1303               	bcf	3,6	;RP1=0, select bank1
 10013  033D  00B4               	movwf	(sprintf@val+2)^(0+128)
 10014  033E  1283               	bcf	3,5	;RP0=0, select bank0
 10015  033F  1303               	bcf	3,6	;RP1=0, select bank0
 10016  0340  0847               	movf	?___fttol+1,w
 10017  0341  1683               	bsf	3,5	;RP0=1, select bank1
 10018  0342  1303               	bcf	3,6	;RP1=0, select bank1
 10019  0343  00B3               	movwf	(sprintf@val+1)^(0+128)
 10020  0344  1283               	bcf	3,5	;RP0=0, select bank0
 10021  0345  1303               	bcf	3,6	;RP1=0, select bank0
 10022  0346  0846               	movf	?___fttol,w
 10023  0347  1683               	bsf	3,5	;RP0=1, select bank1
 10024  0348  1303               	bcf	3,6	;RP1=0, select bank1
 10025  0349  00B2               	movwf	sprintf@val^(0+128)
 10026                           
 10027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10028  034A  2C4C               	goto	l4144
 10029  034B                     l4136:
 10030                           
 10031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10032  034B  083E               	movf	sprintf@c^(0+128),w
 10033  034C  00A0               	movwf	??_sprintf^(0+128)
 10034  034D  3001               	movlw	1
 10035  034E                     u6325:
 10036  034E  1003               	clrc
 10037  034F  0DA0               	rlf	??_sprintf^(0+128),f
 10038  0350  3EFF               	addlw	-1
 10039  0351  1D03               	skipz
 10040  0352  2B4E               	goto	u6325
 10041  0353  1003               	clrc
 10042  0354  0D20               	rlf	??_sprintf^(0+128),w
 10043  0355  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10044  0356  0084               	movwf	4
 10045  0357  160A  118A  200A  120A  118A  	fcall	stringdir
 10046  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10047  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10048  035E  00A0               	movwf	___lldiv@divisor
 10049  035F  160A  118A  200A  120A  118A  	fcall	stringdir
 10050  0364  00A1               	movwf	___lldiv@divisor+1
 10051  0365  160A  118A  200A  120A  118A  	fcall	stringdir
 10052  036A  00A2               	movwf	___lldiv@divisor+2
 10053  036B  160A  118A  200A  120A  118A  	fcall	stringdir
 10054  0370  00A3               	movwf	___lldiv@divisor+3
 10055  0371  1683               	bsf	3,5	;RP0=1, select bank1
 10056  0372  1303               	bcf	3,6	;RP1=0, select bank1
 10057  0373  0835               	movf	(sprintf@val+3)^(0+128),w
 10058  0374  1283               	bcf	3,5	;RP0=0, select bank0
 10059  0375  1303               	bcf	3,6	;RP1=0, select bank0
 10060  0376  00A7               	movwf	___lldiv@dividend+3
 10061  0377  1683               	bsf	3,5	;RP0=1, select bank1
 10062  0378  1303               	bcf	3,6	;RP1=0, select bank1
 10063  0379  0834               	movf	(sprintf@val+2)^(0+128),w
 10064  037A  1283               	bcf	3,5	;RP0=0, select bank0
 10065  037B  1303               	bcf	3,6	;RP1=0, select bank0
 10066  037C  00A6               	movwf	___lldiv@dividend+2
 10067  037D  1683               	bsf	3,5	;RP0=1, select bank1
 10068  037E  1303               	bcf	3,6	;RP1=0, select bank1
 10069  037F  0833               	movf	(sprintf@val+1)^(0+128),w
 10070  0380  1283               	bcf	3,5	;RP0=0, select bank0
 10071  0381  1303               	bcf	3,6	;RP1=0, select bank0
 10072  0382  00A5               	movwf	___lldiv@dividend+1
 10073  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10074  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10075  0385  0832               	movf	sprintf@val^(0+128),w
 10076  0386  1283               	bcf	3,5	;RP0=0, select bank0
 10077  0387  1303               	bcf	3,6	;RP1=0, select bank0
 10078  0388  00A4               	movwf	___lldiv@dividend
 10079  0389  160A  118A  210F  120A  118A  	fcall	___lldiv
 10080  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10081  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10082  0390  0823               	movf	?___lldiv+3,w
 10083  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10084  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10085  0393  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10086  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10087  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10088  0396  0822               	movf	?___lldiv+2,w
 10089  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10090  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10091  0399  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10092  039A  1283               	bcf	3,5	;RP0=0, select bank0
 10093  039B  1303               	bcf	3,6	;RP1=0, select bank0
 10094  039C  0821               	movf	?___lldiv+1,w
 10095  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10096  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10097  039F  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10098  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 10099  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 10100  03A2  0820               	movf	?___lldiv,w
 10101  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10102  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10103  03A5  00AE               	movwf	sprintf@tmpval^(0+128)
 10104  03A6                     l4138:
 10105                           
 10106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10107  03A6  3000               	movlw	0
 10108  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10109  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10110  03A9  00AB               	movwf	___llmod@divisor+3
 10111  03AA  3000               	movlw	0
 10112  03AB  00AA               	movwf	___llmod@divisor+2
 10113  03AC  3000               	movlw	0
 10114  03AD  00A9               	movwf	___llmod@divisor+1
 10115  03AE  300A               	movlw	10
 10116  03AF  00A8               	movwf	___llmod@divisor
 10117  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10118  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10119  03B2  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10120  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10121  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10122  03B5  00AF               	movwf	___llmod@dividend+3
 10123  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10124  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10125  03B8  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10126  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10127  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10128  03BB  00AE               	movwf	___llmod@dividend+2
 10129  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10130  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10131  03BE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10132  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10133  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10134  03C1  00AD               	movwf	___llmod@dividend+1
 10135  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10136  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10137  03C4  082E               	movf	sprintf@tmpval^(0+128),w
 10138  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10139  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10140  03C7  00AC               	movwf	___llmod@dividend
 10141  03C8  160A  158A  2751  120A  118A  	fcall	___llmod
 10142  03CD  1283               	bcf	3,5	;RP0=0, select bank0
 10143  03CE  1303               	bcf	3,6	;RP1=0, select bank0
 10144  03CF  082B               	movf	?___llmod+3,w
 10145  03D0  1683               	bsf	3,5	;RP0=1, select bank1
 10146  03D1  1303               	bcf	3,6	;RP1=0, select bank1
 10147  03D2  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10148  03D3  1283               	bcf	3,5	;RP0=0, select bank0
 10149  03D4  1303               	bcf	3,6	;RP1=0, select bank0
 10150  03D5  082A               	movf	?___llmod+2,w
 10151  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10152  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10153  03D8  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10154  03D9  1283               	bcf	3,5	;RP0=0, select bank0
 10155  03DA  1303               	bcf	3,6	;RP1=0, select bank0
 10156  03DB  0829               	movf	?___llmod+1,w
 10157  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 10158  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 10159  03DE  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10160  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10161  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10162  03E1  0828               	movf	?___llmod,w
 10163  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10164  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10165  03E4  00AE               	movwf	sprintf@tmpval^(0+128)
 10166  03E5                     l4140:
 10167                           
 10168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10169  03E5  082E               	movf	sprintf@tmpval^(0+128),w
 10170  03E6  3E30               	addlw	48
 10171  03E7  00A0               	movwf	??_sprintf^(0+128)
 10172  03E8  083B               	movf	sprintf@sp^(0+128),w
 10173  03E9  0084               	movwf	4
 10174  03EA  0820               	movf	??_sprintf^(0+128),w
 10175  03EB  1383               	bcf	3,7	;select IRP bank0
 10176  03EC  0080               	movwf	0
 10177  03ED  3001               	movlw	1
 10178  03EE  00A0               	movwf	??_sprintf^(0+128)
 10179  03EF  0820               	movf	??_sprintf^(0+128),w
 10180  03F0  07BB               	addwf	sprintf@sp^(0+128),f
 10181  03F1                     l4142:
 10182                           
 10183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10184  03F1  083E               	movf	sprintf@c^(0+128),w
 10185  03F2  00A0               	movwf	??_sprintf^(0+128)
 10186  03F3  3001               	movlw	1
 10187  03F4                     u6335:
 10188  03F4  1003               	clrc
 10189  03F5  0DA0               	rlf	??_sprintf^(0+128),f
 10190  03F6  3EFF               	addlw	-1
 10191  03F7  1D03               	skipz
 10192  03F8  2BF4               	goto	u6335
 10193  03F9  1003               	clrc
 10194  03FA  0D20               	rlf	??_sprintf^(0+128),w
 10195  03FB  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10196  03FC  0084               	movwf	4
 10197  03FD  160A  118A  200A  120A  118A  	fcall	stringdir
 10198  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10199  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10200  0404  00A8               	movwf	___llmod@divisor
 10201  0405  160A  118A  200A  120A  118A  	fcall	stringdir
 10202  040A  00A9               	movwf	___llmod@divisor+1
 10203  040B  160A  118A  200A  120A  118A  	fcall	stringdir
 10204  0410  00AA               	movwf	___llmod@divisor+2
 10205  0411  160A  118A  200A  120A  118A  	fcall	stringdir
 10206  0416  00AB               	movwf	___llmod@divisor+3
 10207  0417  1683               	bsf	3,5	;RP0=1, select bank1
 10208  0418  1303               	bcf	3,6	;RP1=0, select bank1
 10209  0419  0835               	movf	(sprintf@val+3)^(0+128),w
 10210  041A  1283               	bcf	3,5	;RP0=0, select bank0
 10211  041B  1303               	bcf	3,6	;RP1=0, select bank0
 10212  041C  00AF               	movwf	___llmod@dividend+3
 10213  041D  1683               	bsf	3,5	;RP0=1, select bank1
 10214  041E  1303               	bcf	3,6	;RP1=0, select bank1
 10215  041F  0834               	movf	(sprintf@val+2)^(0+128),w
 10216  0420  1283               	bcf	3,5	;RP0=0, select bank0
 10217  0421  1303               	bcf	3,6	;RP1=0, select bank0
 10218  0422  00AE               	movwf	___llmod@dividend+2
 10219  0423  1683               	bsf	3,5	;RP0=1, select bank1
 10220  0424  1303               	bcf	3,6	;RP1=0, select bank1
 10221  0425  0833               	movf	(sprintf@val+1)^(0+128),w
 10222  0426  1283               	bcf	3,5	;RP0=0, select bank0
 10223  0427  1303               	bcf	3,6	;RP1=0, select bank0
 10224  0428  00AD               	movwf	___llmod@dividend+1
 10225  0429  1683               	bsf	3,5	;RP0=1, select bank1
 10226  042A  1303               	bcf	3,6	;RP1=0, select bank1
 10227  042B  0832               	movf	sprintf@val^(0+128),w
 10228  042C  1283               	bcf	3,5	;RP0=0, select bank0
 10229  042D  1303               	bcf	3,6	;RP1=0, select bank0
 10230  042E  00AC               	movwf	___llmod@dividend
 10231  042F  160A  158A  2751  120A  118A  	fcall	___llmod
 10232  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10233  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10234  0436  082B               	movf	?___llmod+3,w
 10235  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10236  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10237  0439  00B5               	movwf	(sprintf@val+3)^(0+128)
 10238  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10239  043B  1303               	bcf	3,6	;RP1=0, select bank0
 10240  043C  082A               	movf	?___llmod+2,w
 10241  043D  1683               	bsf	3,5	;RP0=1, select bank1
 10242  043E  1303               	bcf	3,6	;RP1=0, select bank1
 10243  043F  00B4               	movwf	(sprintf@val+2)^(0+128)
 10244  0440  1283               	bcf	3,5	;RP0=0, select bank0
 10245  0441  1303               	bcf	3,6	;RP1=0, select bank0
 10246  0442  0829               	movf	?___llmod+1,w
 10247  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10248  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10249  0445  00B3               	movwf	(sprintf@val+1)^(0+128)
 10250  0446  1283               	bcf	3,5	;RP0=0, select bank0
 10251  0447  1303               	bcf	3,6	;RP1=0, select bank0
 10252  0448  0828               	movf	?___llmod,w
 10253  0449  1683               	bsf	3,5	;RP0=1, select bank1
 10254  044A  1303               	bcf	3,6	;RP1=0, select bank1
 10255  044B  00B2               	movwf	sprintf@val^(0+128)
 10256  044C                     l4144:
 10257                           
 10258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10259  044C  3001               	movlw	1
 10260  044D  02BE               	subwf	sprintf@c^(0+128),f
 10261  044E  0A3E               	incf	sprintf@c^(0+128),w
 10262  044F  1D03               	btfss	3,2
 10263  0450  2C52               	goto	u6341
 10264  0451  2C53               	goto	u6340
 10265  0452                     u6341:
 10266  0452  2B4B               	goto	l4136
 10267  0453                     u6340:
 10268  0453  2C65               	goto	l4152
 10269  0454                     l4146:
 10270                           
 10271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10272  0454  3030               	movlw	48
 10273  0455  00A0               	movwf	??_sprintf^(0+128)
 10274  0456  083B               	movf	sprintf@sp^(0+128),w
 10275  0457  0084               	movwf	4
 10276  0458  0820               	movf	??_sprintf^(0+128),w
 10277  0459  1383               	bcf	3,7	;select IRP bank0
 10278  045A  0080               	movwf	0
 10279  045B                     l4148:
 10280  045B  3001               	movlw	1
 10281  045C  00A0               	movwf	??_sprintf^(0+128)
 10282  045D  0820               	movf	??_sprintf^(0+128),w
 10283  045E  07BB               	addwf	sprintf@sp^(0+128),f
 10284  045F                     l4150:
 10285                           
 10286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10287  045F  30FF               	movlw	255
 10288  0460  07BC               	addwf	sprintf@prec^(0+128),f
 10289  0461  1803               	skipnc
 10290  0462  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10291  0463  30FF               	movlw	255
 10292  0464  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10293  0465                     l4152:
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10296  0465  083C               	movf	sprintf@prec^(0+128),w
 10297  0466  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10298  0467  1D03               	btfss	3,2
 10299  0468  2C6A               	goto	u6351
 10300  0469  2C6B               	goto	u6350
 10301  046A                     u6351:
 10302  046A  2C54               	goto	l4146
 10303  046B                     u6350:
 10304  046B  2E1B               	goto	l4232
 10305  046C                     l4154:
 10306                           
 10307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10308  046C  0829               	movf	sprintf@ap^(0+128),w
 10309  046D  0084               	movwf	4
 10310  046E  1383               	bcf	3,7	;select IRP bank0
 10311  046F  0800               	movf	0,w
 10312  0470  00A0               	movwf	??_sprintf^(0+128)
 10313  0471  0A84               	incf	4,f
 10314  0472  0800               	movf	0,w
 10315  0473  00A1               	movwf	(??_sprintf^(0+128)+1)
 10316  0474  0820               	movf	??_sprintf^(0+128),w
 10317  0475  00B2               	movwf	sprintf@val^(0+128)
 10318  0476  0821               	movf	(??_sprintf+1)^(0+128),w
 10319  0477  00B3               	movwf	(sprintf@val+1)^(0+128)
 10320  0478  3000               	movlw	0
 10321  0479  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10322  047A  30FF               	movlw	255
 10323  047B  00B4               	movwf	(sprintf@val+2)^(0+128)
 10324  047C  00B5               	movwf	(sprintf@val+3)^(0+128)
 10325  047D                     l4156:
 10326  047D  3002               	movlw	2
 10327  047E  00A0               	movwf	??_sprintf^(0+128)
 10328  047F  0820               	movf	??_sprintf^(0+128),w
 10329  0480  07A9               	addwf	sprintf@ap^(0+128),f
 10330  0481                     l4158:
 10331                           
 10332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10333  0481  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10334  0482  2C84               	goto	u6361
 10335  0483  2C85               	goto	u6360
 10336  0484                     u6361:
 10337  0484  2C94               	goto	l4164
 10338  0485                     u6360:
 10339  0485                     l4160:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10342  0485  3003               	movlw	3
 10343  0486  04AA               	iorwf	sprintf@flag^(0+128),f
 10344  0487  3000               	movlw	0
 10345  0488  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10346  0489                     l4162:
 10347                           
 10348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10349  0489  09B2               	comf	sprintf@val^(0+128),f
 10350  048A  09B3               	comf	(sprintf@val+1)^(0+128),f
 10351  048B  09B4               	comf	(sprintf@val+2)^(0+128),f
 10352  048C  09B5               	comf	(sprintf@val+3)^(0+128),f
 10353  048D  0AB2               	incf	sprintf@val^(0+128),f
 10354  048E  1903               	skipnz
 10355  048F  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10356  0490  1903               	skipnz
 10357  0491  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10358  0492  1903               	skipnz
 10359  0493  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10360  0494                     l4164:
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10363  0494  083C               	movf	sprintf@prec^(0+128),w
 10364  0495  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10365  0496  1D03               	btfss	3,2
 10366  0497  2C99               	goto	u6371
 10367  0498  2C9A               	goto	u6370
 10368  0499                     u6371:
 10369  0499  2CA8               	goto	l4170
 10370  049A                     u6370:
 10371  049A                     l4166:
 10372  049A  0835               	movf	(sprintf@val+3)^(0+128),w
 10373  049B  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10374  049C  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10375  049D  0432               	iorwf	sprintf@val^(0+128),w
 10376  049E  1D03               	skipz
 10377  049F  2CA1               	goto	u6381
 10378  04A0  2CA2               	goto	u6380
 10379  04A1                     u6381:
 10380  04A1  2CA8               	goto	l4170
 10381  04A2                     u6380:
 10382  04A2                     l4168:
 10383                           
 10384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10385  04A2  3001               	movlw	1
 10386  04A3  07BC               	addwf	sprintf@prec^(0+128),f
 10387  04A4  1803               	skipnc
 10388  04A5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10389  04A6  3000               	movlw	0
 10390  04A7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10391  04A8                     l4170:
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10394  04A8  01BE               	clrf	sprintf@c^(0+128)
 10395  04A9  0ABE               	incf	sprintf@c^(0+128),f
 10396  04AA                     l4176:
 10397                           
 10398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10399  04AA  083E               	movf	sprintf@c^(0+128),w
 10400  04AB  00A0               	movwf	??_sprintf^(0+128)
 10401  04AC  3001               	movlw	1
 10402  04AD                     u6395:
 10403  04AD  1003               	clrc
 10404  04AE  0DA0               	rlf	??_sprintf^(0+128),f
 10405  04AF  3EFF               	addlw	-1
 10406  04B0  1D03               	skipz
 10407  04B1  2CAD               	goto	u6395
 10408  04B2  1003               	clrc
 10409  04B3  0D20               	rlf	??_sprintf^(0+128),w
 10410  04B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10411  04B5  0084               	movwf	4
 10412  04B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10413  04BB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10414  04BC  160A  118A  200A  120A  118A  	fcall	stringdir
 10415  04C1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10416  04C2  160A  118A  200A  120A  118A  	fcall	stringdir
 10417  04C7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10418  04C8  160A  118A  200A  120A  118A  	fcall	stringdir
 10419  04CD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10420  04CE  0824               	movf	(??_sprintf+4)^(0+128),w
 10421  04CF  0235               	subwf	(sprintf@val+3)^(0+128),w
 10422  04D0  1D03               	skipz
 10423  04D1  2CDC               	goto	u6405
 10424  04D2  0823               	movf	(??_sprintf+3)^(0+128),w
 10425  04D3  0234               	subwf	(sprintf@val+2)^(0+128),w
 10426  04D4  1D03               	skipz
 10427  04D5  2CDC               	goto	u6405
 10428  04D6  0822               	movf	(??_sprintf+2)^(0+128),w
 10429  04D7  0233               	subwf	(sprintf@val+1)^(0+128),w
 10430  04D8  1D03               	skipz
 10431  04D9  2CDC               	goto	u6405
 10432  04DA  0821               	movf	(??_sprintf+1)^(0+128),w
 10433  04DB  0232               	subwf	sprintf@val^(0+128),w
 10434  04DC                     u6405:
 10435  04DC  1803               	skipnc
 10436  04DD  2CDF               	goto	u6401
 10437  04DE  2CE0               	goto	u6400
 10438  04DF                     u6401:
 10439  04DF  2CE1               	goto	l4180
 10440  04E0                     u6400:
 10441  04E0  2CEB               	goto	l4182
 10442  04E1                     l4180:
 10443  04E1  3001               	movlw	1
 10444  04E2  00A0               	movwf	??_sprintf^(0+128)
 10445  04E3  0820               	movf	??_sprintf^(0+128),w
 10446  04E4  07BE               	addwf	sprintf@c^(0+128),f
 10447  04E5  300A               	movlw	10
 10448  04E6  063E               	xorwf	sprintf@c^(0+128),w
 10449  04E7  1D03               	btfss	3,2
 10450  04E8  2CEA               	goto	u6411
 10451  04E9  2CEB               	goto	u6410
 10452  04EA                     u6411:
 10453  04EA  2CAA               	goto	l4176
 10454  04EB                     u6410:
 10455  04EB                     l4182:
 10456                           
 10457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10458  04EB  083D               	movf	(sprintf@prec+1)^(0+128),w
 10459  04EC  3A80               	xorlw	128
 10460  04ED  3C80               	sublw	128
 10461  04EE  1D03               	skipz
 10462  04EF  2CF2               	goto	u6425
 10463  04F0  083C               	movf	sprintf@prec^(0+128),w
 10464  04F1  023E               	subwf	sprintf@c^(0+128),w
 10465  04F2                     u6425:
 10466  04F2  1803               	skipnc
 10467  04F3  2CF5               	goto	u6421
 10468  04F4  2CF6               	goto	u6420
 10469  04F5                     u6421:
 10470  04F5  2CFD               	goto	l4186
 10471  04F6                     u6420:
 10472  04F6                     l4184:
 10473                           
 10474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10475  04F6  1683               	bsf	3,5	;RP0=1, select bank1
 10476  04F7  1303               	bcf	3,6	;RP1=0, select bank1
 10477  04F8  083C               	movf	sprintf@prec^(0+128),w
 10478  04F9  00A0               	movwf	??_sprintf^(0+128)
 10479  04FA  0820               	movf	??_sprintf^(0+128),w
 10480  04FB  00BE               	movwf	sprintf@c^(0+128)
 10481  04FC  2D15               	goto	l4190
 10482  04FD                     l4186:
 10483  04FD  1683               	bsf	3,5	;RP0=1, select bank1
 10484  04FE  1303               	bcf	3,6	;RP1=0, select bank1
 10485  04FF  083D               	movf	(sprintf@prec+1)^(0+128),w
 10486  0500  3A80               	xorlw	128
 10487  0501  00A0               	movwf	??_sprintf^(0+128)
 10488  0502  3080               	movlw	128
 10489  0503  0220               	subwf	??_sprintf^(0+128),w
 10490  0504  1D03               	skipz
 10491  0505  2D08               	goto	u6435
 10492  0506  083E               	movf	sprintf@c^(0+128),w
 10493  0507  023C               	subwf	sprintf@prec^(0+128),w
 10494  0508                     u6435:
 10495  0508  1803               	skipnc
 10496  0509  2D0B               	goto	u6431
 10497  050A  2D0C               	goto	u6430
 10498  050B                     u6431:
 10499  050B  2D15               	goto	l4190
 10500  050C                     u6430:
 10501  050C                     l4188:
 10502                           
 10503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10504  050C  1683               	bsf	3,5	;RP0=1, select bank1
 10505  050D  1303               	bcf	3,6	;RP1=0, select bank1
 10506  050E  083E               	movf	sprintf@c^(0+128),w
 10507  050F  00A0               	movwf	??_sprintf^(0+128)
 10508  0510  01A1               	clrf	(??_sprintf^(0+128)+1)
 10509  0511  0820               	movf	??_sprintf^(0+128),w
 10510  0512  00BC               	movwf	sprintf@prec^(0+128)
 10511  0513  0821               	movf	(??_sprintf+1)^(0+128),w
 10512  0514  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10513  0515                     l4190:
 10514                           
 10515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10516  0515  1683               	bsf	3,5	;RP0=1, select bank1
 10517  0516  1303               	bcf	3,6	;RP1=0, select bank1
 10518  0517  082C               	movf	sprintf@width^(0+128),w
 10519  0518  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10520  0519  1903               	btfsc	3,2
 10521  051A  2D1C               	goto	u6441
 10522  051B  2D1D               	goto	u6440
 10523  051C                     u6441:
 10524  051C  2D2F               	goto	l4196
 10525  051D                     u6440:
 10526  051D                     l4192:
 10527  051D  3003               	movlw	3
 10528  051E  052A               	andwf	sprintf@flag^(0+128),w
 10529  051F  00A0               	movwf	??_sprintf^(0+128)
 10530  0520  3000               	movlw	0
 10531  0521  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10532  0522  00A1               	movwf	(??_sprintf+1)^(0+128)
 10533  0523  0820               	movf	??_sprintf^(0+128),w
 10534  0524  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10535  0525  1903               	btfsc	3,2
 10536  0526  2D28               	goto	u6451
 10537  0527  2D29               	goto	u6450
 10538  0528                     u6451:
 10539  0528  2D2F               	goto	l4196
 10540  0529                     u6450:
 10541  0529                     l4194:
 10542                           
 10543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10544  0529  30FF               	movlw	255
 10545  052A  07AC               	addwf	sprintf@width^(0+128),f
 10546  052B  1803               	skipnc
 10547  052C  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10548  052D  30FF               	movlw	255
 10549  052E  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10550  052F                     l4196:
 10551                           
 10552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10553  052F  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10554  0530  2D32               	goto	u6461
 10555  0531  2D33               	goto	u6460
 10556  0532                     u6461:
 10557  0532  2D4E               	goto	l4204
 10558  0533                     u6460:
 10559  0533                     l4198:
 10560                           
 10561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10562  0533  083D               	movf	(sprintf@prec+1)^(0+128),w
 10563  0534  3A80               	xorlw	128
 10564  0535  00A0               	movwf	??_sprintf^(0+128)
 10565  0536  082D               	movf	(sprintf@width+1)^(0+128),w
 10566  0537  3A80               	xorlw	128
 10567  0538  0220               	subwf	??_sprintf^(0+128),w
 10568  0539  1D03               	skipz
 10569  053A  2D3D               	goto	u6475
 10570  053B  082C               	movf	sprintf@width^(0+128),w
 10571  053C  023C               	subwf	sprintf@prec^(0+128),w
 10572  053D                     u6475:
 10573  053D  1803               	skipnc
 10574  053E  2D40               	goto	u6471
 10575  053F  2D41               	goto	u6470
 10576  0540                     u6471:
 10577  0540  2D4A               	goto	l4202
 10578  0541                     u6470:
 10579  0541                     l4200:
 10580                           
 10581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10582  0541  1683               	bsf	3,5	;RP0=1, select bank1
 10583  0542  1303               	bcf	3,6	;RP1=0, select bank1
 10584  0543  083C               	movf	sprintf@prec^(0+128),w
 10585  0544  02AC               	subwf	sprintf@width^(0+128),f
 10586  0545  083D               	movf	(sprintf@prec+1)^(0+128),w
 10587  0546  1C03               	skipc
 10588  0547  03AD               	decf	(sprintf@width+1)^(0+128),f
 10589  0548  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10590  0549  2D4E               	goto	l4204
 10591  054A                     l4202:
 10592                           
 10593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10594  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10595  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10596  054C  01AC               	clrf	sprintf@width^(0+128)
 10597  054D  01AD               	clrf	(sprintf@width+1)^(0+128)
 10598  054E                     l4204:
 10599                           
 10600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10601  054E  082D               	movf	(sprintf@width+1)^(0+128),w
 10602  054F  3A80               	xorlw	128
 10603  0550  3C80               	sublw	128
 10604  0551  1D03               	skipz
 10605  0552  2D55               	goto	u6485
 10606  0553  082C               	movf	sprintf@width^(0+128),w
 10607  0554  023E               	subwf	sprintf@c^(0+128),w
 10608  0555                     u6485:
 10609  0555  1803               	skipnc
 10610  0556  2D58               	goto	u6481
 10611  0557  2D59               	goto	u6480
 10612  0558                     u6481:
 10613  0558  2D65               	goto	l4208
 10614  0559                     u6480:
 10615  0559                     l4206:
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10618  0559  1683               	bsf	3,5	;RP0=1, select bank1
 10619  055A  1303               	bcf	3,6	;RP1=0, select bank1
 10620  055B  083E               	movf	sprintf@c^(0+128),w
 10621  055C  00A0               	movwf	??_sprintf^(0+128)
 10622  055D  01A1               	clrf	(??_sprintf^(0+128)+1)
 10623  055E  0820               	movf	??_sprintf^(0+128),w
 10624  055F  02AC               	subwf	sprintf@width^(0+128),f
 10625  0560  0821               	movf	(??_sprintf+1)^(0+128),w
 10626  0561  1C03               	skipc
 10627  0562  03AD               	decf	(sprintf@width+1)^(0+128),f
 10628  0563  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10629  0564  2D69               	goto	l4210
 10630  0565                     l4208:
 10631                           
 10632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10633  0565  1683               	bsf	3,5	;RP0=1, select bank1
 10634  0566  1303               	bcf	3,6	;RP1=0, select bank1
 10635  0567  01AC               	clrf	sprintf@width^(0+128)
 10636  0568  01AD               	clrf	(sprintf@width+1)^(0+128)
 10637  0569                     l4210:
 10638                           
 10639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10640  0569  082C               	movf	sprintf@width^(0+128),w
 10641  056A  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10642  056B  1903               	btfsc	3,2
 10643  056C  2D6E               	goto	u6491
 10644  056D  2D6F               	goto	u6490
 10645  056E                     u6491:
 10646  056E  2D86               	goto	l4218
 10647  056F                     u6490:
 10648  056F                     l4212:
 10649                           
 10650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10651  056F  3020               	movlw	32
 10652  0570  00A0               	movwf	??_sprintf^(0+128)
 10653  0571  083B               	movf	sprintf@sp^(0+128),w
 10654  0572  0084               	movwf	4
 10655  0573  0820               	movf	??_sprintf^(0+128),w
 10656  0574  1383               	bcf	3,7	;select IRP bank0
 10657  0575  0080               	movwf	0
 10658  0576                     l4214:
 10659  0576  3001               	movlw	1
 10660  0577  00A0               	movwf	??_sprintf^(0+128)
 10661  0578  0820               	movf	??_sprintf^(0+128),w
 10662  0579  07BB               	addwf	sprintf@sp^(0+128),f
 10663  057A                     l4216:
 10664  057A  30FF               	movlw	255
 10665  057B  07AC               	addwf	sprintf@width^(0+128),f
 10666  057C  1803               	skipnc
 10667  057D  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10668  057E  30FF               	movlw	255
 10669  057F  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10670  0580  082C               	movf	sprintf@width^(0+128),w
 10671  0581  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10672  0582  1D03               	btfss	3,2
 10673  0583  2D85               	goto	u6501
 10674  0584  2D86               	goto	u6500
 10675  0585                     u6501:
 10676  0585  2D6F               	goto	l4212
 10677  0586                     u6500:
 10678  0586                     l4218:
 10679                           
 10680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10681  0586  3003               	movlw	3
 10682  0587  052A               	andwf	sprintf@flag^(0+128),w
 10683  0588  00A0               	movwf	??_sprintf^(0+128)
 10684  0589  3000               	movlw	0
 10685  058A  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10686  058B  00A1               	movwf	(??_sprintf+1)^(0+128)
 10687  058C  0820               	movf	??_sprintf^(0+128),w
 10688  058D  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10689  058E  1903               	btfsc	3,2
 10690  058F  2D91               	goto	u6511
 10691  0590  2D92               	goto	u6510
 10692  0591                     u6511:
 10693  0591  2E0D               	goto	l4230
 10694  0592                     u6510:
 10695  0592                     l4220:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10698  0592  302D               	movlw	45
 10699  0593  00A0               	movwf	??_sprintf^(0+128)
 10700  0594  083B               	movf	sprintf@sp^(0+128),w
 10701  0595  0084               	movwf	4
 10702  0596  0820               	movf	??_sprintf^(0+128),w
 10703  0597  1383               	bcf	3,7	;select IRP bank0
 10704  0598  0080               	movwf	0
 10705  0599                     l4222:
 10706  0599  3001               	movlw	1
 10707  059A  00A0               	movwf	??_sprintf^(0+128)
 10708  059B  0820               	movf	??_sprintf^(0+128),w
 10709  059C  07BB               	addwf	sprintf@sp^(0+128),f
 10710  059D  2E0D               	goto	l4230
 10711  059E                     l4224:
 10712                           
 10713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 10714  059E  3000               	movlw	0
 10715  059F  1283               	bcf	3,5	;RP0=0, select bank0
 10716  05A0  1303               	bcf	3,6	;RP1=0, select bank0
 10717  05A1  00AB               	movwf	___llmod@divisor+3
 10718  05A2  3000               	movlw	0
 10719  05A3  00AA               	movwf	___llmod@divisor+2
 10720  05A4  3000               	movlw	0
 10721  05A5  00A9               	movwf	___llmod@divisor+1
 10722  05A6  300A               	movlw	10
 10723  05A7  00A8               	movwf	___llmod@divisor
 10724  05A8  1683               	bsf	3,5	;RP0=1, select bank1
 10725  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 10726  05AA  083C               	movf	sprintf@prec^(0+128),w
 10727  05AB  00A0               	movwf	??_sprintf^(0+128)
 10728  05AC  3001               	movlw	1
 10729  05AD                     u6525:
 10730  05AD  1003               	clrc
 10731  05AE  0DA0               	rlf	??_sprintf^(0+128),f
 10732  05AF  3EFF               	addlw	-1
 10733  05B0  1D03               	skipz
 10734  05B1  2DAD               	goto	u6525
 10735  05B2  1003               	clrc
 10736  05B3  0D20               	rlf	??_sprintf^(0+128),w
 10737  05B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10738  05B5  0084               	movwf	4
 10739  05B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10740  05BB  1283               	bcf	3,5	;RP0=0, select bank0
 10741  05BC  1303               	bcf	3,6	;RP1=0, select bank0
 10742  05BD  00A0               	movwf	___lldiv@divisor
 10743  05BE  160A  118A  200A  120A  118A  	fcall	stringdir
 10744  05C3  00A1               	movwf	___lldiv@divisor+1
 10745  05C4  160A  118A  200A  120A  118A  	fcall	stringdir
 10746  05C9  00A2               	movwf	___lldiv@divisor+2
 10747  05CA  160A  118A  200A  120A  118A  	fcall	stringdir
 10748  05CF  00A3               	movwf	___lldiv@divisor+3
 10749  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 10750  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 10751  05D2  0835               	movf	(sprintf@val+3)^(0+128),w
 10752  05D3  1283               	bcf	3,5	;RP0=0, select bank0
 10753  05D4  1303               	bcf	3,6	;RP1=0, select bank0
 10754  05D5  00A7               	movwf	___lldiv@dividend+3
 10755  05D6  1683               	bsf	3,5	;RP0=1, select bank1
 10756  05D7  1303               	bcf	3,6	;RP1=0, select bank1
 10757  05D8  0834               	movf	(sprintf@val+2)^(0+128),w
 10758  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 10759  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 10760  05DB  00A6               	movwf	___lldiv@dividend+2
 10761  05DC  1683               	bsf	3,5	;RP0=1, select bank1
 10762  05DD  1303               	bcf	3,6	;RP1=0, select bank1
 10763  05DE  0833               	movf	(sprintf@val+1)^(0+128),w
 10764  05DF  1283               	bcf	3,5	;RP0=0, select bank0
 10765  05E0  1303               	bcf	3,6	;RP1=0, select bank0
 10766  05E1  00A5               	movwf	___lldiv@dividend+1
 10767  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 10768  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 10769  05E4  0832               	movf	sprintf@val^(0+128),w
 10770  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10771  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10772  05E7  00A4               	movwf	___lldiv@dividend
 10773  05E8  160A  118A  210F  120A  118A  	fcall	___lldiv
 10774  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 10775  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 10776  05EF  0823               	movf	?___lldiv+3,w
 10777  05F0  00AF               	movwf	___llmod@dividend+3
 10778  05F1  0822               	movf	?___lldiv+2,w
 10779  05F2  00AE               	movwf	___llmod@dividend+2
 10780  05F3  0821               	movf	?___lldiv+1,w
 10781  05F4  00AD               	movwf	___llmod@dividend+1
 10782  05F5  0820               	movf	?___lldiv,w
 10783  05F6  00AC               	movwf	___llmod@dividend
 10784  05F7  160A  158A  2751  120A  118A  	fcall	___llmod
 10785  05FC  1283               	bcf	3,5	;RP0=0, select bank0
 10786  05FD  1303               	bcf	3,6	;RP1=0, select bank0
 10787  05FE  0828               	movf	?___llmod,w
 10788  05FF  3E30               	addlw	48
 10789  0600  1683               	bsf	3,5	;RP0=1, select bank1
 10790  0601  1303               	bcf	3,6	;RP1=0, select bank1
 10791  0602  00A1               	movwf	(??_sprintf+1)^(0+128)
 10792  0603  0821               	movf	(??_sprintf+1)^(0+128),w
 10793  0604  00BE               	movwf	sprintf@c^(0+128)
 10794  0605                     l4226:
 10795                           
 10796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 10797  0605  083E               	movf	sprintf@c^(0+128),w
 10798  0606  00A0               	movwf	??_sprintf^(0+128)
 10799  0607  083B               	movf	sprintf@sp^(0+128),w
 10800  0608  0084               	movwf	4
 10801  0609  0820               	movf	??_sprintf^(0+128),w
 10802  060A  1383               	bcf	3,7	;select IRP bank0
 10803  060B  0080               	movwf	0
 10804  060C  2D99               	goto	l4222
 10805  060D                     l4230:
 10806                           
 10807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 10808  060D  30FF               	movlw	255
 10809  060E  07BC               	addwf	sprintf@prec^(0+128),f
 10810  060F  1803               	skipnc
 10811  0610  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10812  0611  30FF               	movlw	255
 10813  0612  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10814  0613  0A3C               	incf	sprintf@prec^(0+128),w
 10815  0614  1D03               	skipz
 10816  0615  2E1A               	goto	u6531
 10817  0616  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 10818  0617  1D03               	btfss	3,2
 10819  0618  2E1A               	goto	u6531
 10820  0619  2E1B               	goto	u6530
 10821  061A                     u6531:
 10822  061A  2D9E               	goto	l4224
 10823  061B                     u6530:
 10824  061B                     l4232:
 10825                           
 10826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10827  061B  3001               	movlw	1
 10828  061C  1283               	bcf	3,5	;RP0=0, select bank0
 10829  061D  1303               	bcf	3,6	;RP1=0, select bank0
 10830  061E  07E0               	addwf	sprintf@f,f
 10831  061F  30FF               	movlw	-1
 10832  0620  0760               	addwf	sprintf@f,w
 10833  0621  0084               	movwf	4
 10834  0622  160A  118A  200A  120A  118A  	fcall	stringdir
 10835  0627  1683               	bsf	3,5	;RP0=1, select bank1
 10836  0628  1303               	bcf	3,6	;RP1=0, select bank1
 10837  0629  00A0               	movwf	??_sprintf^(0+128)
 10838  062A  0820               	movf	??_sprintf^(0+128),w
 10839  062B  00BE               	movwf	sprintf@c^(0+128)
 10840  062C  083E               	movf	sprintf@c^(0+128),w
 10841  062D  1D03               	btfss	3,2
 10842  062E  2E30               	goto	u6541
 10843  062F  2E33               	goto	u6540
 10844  0630                     u6541:
 10845  0630  120A  158A  2A95   	goto	l3954
 10846  0633                     u6540:
 10847  0633                     l4234:
 10848                           
 10849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10850  0633  083B               	movf	sprintf@sp^(0+128),w
 10851  0634  0084               	movwf	4
 10852  0635  1383               	bcf	3,7	;select IRP bank0
 10853  0636  0180               	clrf	0
 10854  0637                     l444:
 10855  0637  0008               	return
 10856  0638                     __end_of_sprintf:

Data Sizes:
    Strings     56
    Constant    118
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      78
    BANK1            80     31      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> data(BANK1[20]), STR_1(CODE[21]), 

    LCD_Print@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), data(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_Cursor
    _main->_LCD_Print
    _sprintf->___llmod
    _sprintf->___lltoft
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___awmod
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _conversion->___awtoft
    ___ftmul->___awmod
    ___ftmul->___awtoft
    ___ftmul->___lwdiv
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _LCD_Print->_char_LCD
    _char_LCD->_PUERTO
    _LCD_ON->_comandosLCD
    _LCD_Cursor->_comandosLCD
    _LCD_Clear->_comandosLCD
    _comandosLCD->_PUERTO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _conversion->___ftmul
    ___ftmul->___bmul
    ___awtoft->___ftpack
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   50827
                                             73 BANK0      3     3      0
                          _LCD_Clear
                         _LCD_Cursor
                             _LCD_ON
                          _LCD_Print
                              _Setup
                         _USART_Init
                           _ValorADC
                        _Write_USART
                 _Write_USART_String
                         _config_ADC
                         _conversion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   40283
                                             64 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8252
                                             29 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    6643
                                             29 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              9 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              3 COMMON     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              3 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             38 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             58 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             45 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              3 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _conversion                                           6     3      3    7343
                                             29 BANK0      6     3      3
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4776
                                             13 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2536
                                              8 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ValorADC                                             3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            7     5      2     539
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                           _char_LCD
 ---------------------------------------------------------------------------------
 (2) _char_LCD                                             2     2      0     279
                                              4 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _LCD_ON                                               2     2      0     527
                                              6 COMMON     2     2      0
                             _PUERTO
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           4     3      1     601
                                              6 COMMON     4     3      1
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     279
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          2     2      0     279
                                              4 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _comandosLCD
       _PUERTO
   _LCD_Cursor
     _comandosLCD
       _PUERTO
   _LCD_ON
     _PUERTO
     _comandosLCD
       _PUERTO
   _LCD_Print
     _char_LCD
       _PUERTO
   _Setup
   _USART_Init
     ___aldiv
   _ValorADC
   _Write_USART
   _Write_USART_String
     _Write_USART
   _config_ADC
   _conversion
     ___awtoft
       ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      93       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      93      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 22:03:04 2021

                          pc 0002                  ?_LCD_Cursor 0076               ___bmul@product 002B  
                         l65 07FF                           l68 1DD0                           _V1 00C2  
                         _V2 00BF                 ___awdiv@sign 0026                           fsr 0004  
        ___wmul@multiplicand 0075                 ___ftadd@exp1 0059                 ___ftadd@exp2 0058  
       __size_of_Write_USART 000C                 ___ftadd@sign 0057                          l110 1706  
                        l111 17F0                          l120 1779                          l112 1711  
                        l121 1786                          l113 171E                          l122 1793  
                        l114 172B                          l106 1C92                          l123 17A0  
                        l115 1738                          l124 17AD                          l116 1745  
                        l117 1752                          l126 17FF                          l118 175F  
                        l119 176C                          l231 1C9E                          l160 1EDB  
                        l128 17FD                          l161 1EE1                          l225 1524  
                        l170 1EFE                          l162 1EE2                          l171 1F04  
                        l163 1EE8                          l172 1F05                          l164 1EE9  
                        l156 1D0C                          l228 1C94                          l173 1F0B  
                        l165 1EEF                          l181 1CAB                          l237 1DA5  
                        l166 1EF0                          l190 1D30                          l414 02CD  
                        l175 1F0C                          l167 1EF6                          l159 1ED8  
                        l407 0289                          l168 1EF7                          l184 1DFC  
                        l352 0FFF                          l169 1EFD                          l345 07E0  
                        l178 1CEF                          l450 1D7A                 comandosLCD@x 0075  
                        l196 1F50                          l444 0637                          l374 0B69  
                        l519 1302                          l631 11DF                          l448 1D62  
                        l529 138A                          l650 0828                          l474 1CD4  
                        l708 0A20                          l484 1176                          l900 1ECE  
                        l644 1FFF                          l733 1447                          l654 0954  
                        l734 13B9                          l910 1CBD                          l751 1E94  
                        l744 143A                          l673 1261                          l665 0947  
                        l657 0904                          l737 140A                          l658 0917  
                        l819 1FA6                          l827 1E5C                          l684 123B  
                        l685 1245                          l677 1220                          l757 1609  
                        l686 1261                          l694 0A8A                          l774 1D55  
                        l768 10C8                          l697 09A0                          l785 12D0  
                        l698 09AA                          l778 12ED                          l890 110E  
                        l699 09AF                          _RB0 0030                          _RB1 0031  
                        _RB2 0032                          _RB3 0033                          _RB4 0034  
                        _RB5 0035                          _RE0 0048                          _RB6 0036  
                        _RE1 0049                          _RB7 0037                          _ISR 1DFD  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0079  
__size_of_Write_USART_String 002B                         ?_ISR 0070                         l3010 170C  
                       l3020 174B                         l3012 1717                         l3030 178C  
                       l3022 1758                         l3014 1724                         l3032 1799  
                       l3024 1765                         l3016 1731                         l3008 1705  
                       l4000 0B9D                         l3050 17F8                         l3034 17A6  
                       l3026 1772                         l3018 173E                         l2330 1FA8  
                       l4010 0BC9                         l4002 0BA1                         l3036 17B3  
                       l3028 177F                         l3044 17BC                         l2500 10F6  
                       l2340 1FBC                         l2332 1FAC                         l4100 01C9  
                       l4020 0C12                         l4012 0BDE                         l4004 0BA5  
                       l3046 17F1                         l3038 17BA                         l3070 1D92  
                       l2270 1CC1                         l2502 10FC                         l2350 1FD4  
                       l2342 1FC2                         l2334 1FB1                         l4110 027D  
                       l4102 01D7                         l4030 0C58                         l4022 0C18  
                       l4014 0BE2                         l4006 0BB0                         l3056 17FE  
                       l3048 17F5                         l3064 1D7B                         l2280 1CD3  
                       l2272 1CC2                         l2504 10FD                         l2520 1EA9  
                       l2512 1E95                         l2360 1FF6                         l2352 1FDE  
                       l2344 1FC5                         l2336 1FB3                         l2328 1FA7  
                       l4200 0541                         l4120 02B1                         l4112 0291  
                       l4104 01DE                         l4040 0CDF                         l4032 0C71  
                       l4024 0C2B                         l4016 0BE6                         l4008 0BB4  
                       l3066 1D7D                         l2274 1CC6                         l2506 1104  
                       l2522 1EAD                         l2514 1E9B                         l2530 1ECA  
                       l2362 1FFB                         l2354 1FE4                         l2346 1FCC  
                       l2338 1FB7                         l4210 0569                         l4202 054A  
                       l4130 02E2                         l4122 02C0                         l4114 029A  
                       l4106 01E3                         l4050 002A                         l4034 0CAA  
                       l4026 0C4E                         l4018 0BED                         l4042 0CE7  
                       l3068 1D8E                         l3500 1208                         l2276 1CCA  
                       l2508 110A                         l2524 1EB7                         l2516 1E9E  
                       l2356 1FEB                         l2348 1FD0                         l4220 0592  
                       l4212 056F                         l4204 054E                         l4140 03E5  
                       l4132 02E6                         l4124 02C7                         l4116 029E  
                       l4108 023E                         l4060 0080                         l4052 0049  
                       l4044 0CF6                         l4036 0CBF                         l4028 0C52  
                       l4300 16E9                         l2534 1C94                         l3510 1235  
                       l3502 120E                         l2710 08A3                         l2278 1CCC  
                       l2526 1EBD                         l2518 1EA5                         l2630 1CAE  
                       l2358 1FF1                         l4222 0599                         l4230 060D  
                       l4214 0576                         l4206 0559                         l4150 045F  
                       l4142 03F1                         l4134 02FE                         l4126 02D6  
                       l4118 02A4                         l4070 0135                         l4054 0058  
                       l4046 0D2F                         l4038 0CC8                         l4302 16F2  
                       l3520 1ED0                         l2536 1C9A                         l3512 123F  
                       l3504 1218                         l3600 09A5                         l2720 0903  
                       l2712 08A8                         l2704 0865                         l2640 138B  
                       l2528 1EC4                         l2632 1CB4                         l4224 059E  
                       l4216 057A                         l4208 0565                         l4160 0485  
                       l4152 0465                         l4136 034B                         l4144 044C  
                       l4128 02DB                         l4072 0137                         l4064 0098  
                       l4056 006F                         l4048 0021                         l4232 061B  
                       l3530 1EF4                         l3522 1ED4                         l4250 1D1F  
                       l3514 1247                         l3506 1227                         l3610 09C3  
                       l3602 09A9                         l2730 0923                         l2722 0911  
                       l2714 08AC                         l2706 0899                         l2642 139E  
                       l2490 10D3                         l2634 1CBA                         l4226 0605  
                       l4218 0586                         l4170 04A8                         l4162 0489  
                       l4146 0454                         l4138 03A6                         l4090 01A7  
                       l4082 0170                         l4066 00B3                         l4058 0078  
                       l4154 046C                         l4234 0633                         l3532 1EFB  
                       l3524 1EDF                         l4252 1D25                         l4244 1D0E  
                       l4260 1F2C                         l3516 125B                         l3508 1231  
                       l3612 09CD                         l3620 09EF                         l3604 09AE  
                       l2740 094C                         l2724 091B                         l2732 0935  
                       l2716 08B5                         l2708 08A1                         l2660 13DA  
                       l2652 13BA                         l2492 10D6                         l2636 1CBC  
                       l2628 1CAD                         l3540 117A                         l4180 04E1  
                       l4164 0494                         l4156 047D                         l4148 045B  
                       l4092 01AE                         l4084 017A                         l4068 00BA  
                       l3534 1F02                         l3526 1EE6                         l4254 1D2A  
                       l4246 1D13                         l3710 1D01                         l3702 1CF1  
                       l4262 1F32                         l3518 1260                         l3630 0A1A  
                       l3622 09F5                         l3614 09D3                         l3606 09B0  
                       l2902 12C5                         l2750 1D69                         l2718 08E1  
                       l2670 1404                         l2662 13E3                         l2654 13C0  
                       l2646 13A7                         l2494 10DD                         l2486 10C9  
                       l3550 118E                         l3542 117E                         l4190 0515  
                       l4182 04EB                         l4166 049A                         l4158 0481  
                       l4094 01B7                         l4086 0195                         l4078 0139  
                       l4270 1623                         l3536 1F09                         l3528 1EED  
                       l3720 1CDF                         l4248 1D18                         l3712 1D04  
                       l3704 1CF4                         l4256 1F0D                         l2840 1E72  
                       l3640 0A49                         l3632 0A24                         l3624 09FF  
                       l3616 09DC                         l3608 09B6                         l2904 12D5  
                       l3800 1135                         l2752 1D70                         l2744 1D56  
                       l2672 140E                         l2680 1428                         l2664 13F1  
                       l2656 13CF                         l2496 10E1                         l2488 10CD  
                       l3560 11A4                         l3552 1192                         l3544 1183  
                       l4192 051D                         l4184 04F6                         l4176 04AA  
                       l4168 04A2                         l4088 019B                         l4280 165F  
                       l4272 1628                         l4264 160A                         l3722 1CE2  
                       l3714 1D08                         l3706 1CFA                         l4258 1F10  
                       l3490 11E5                         l2850 1E93                         l2842 1E7F  
                       l2834 1E5D                         l3642 0A59                         l3634 0A34  
                       l3626 0A05                         l3618 09E8                         l2906 12DA  
                       l3810 1168                         l3802 113E                         l2754 1D76  
                       l2746 1D58                         l2738 093C                         l2666 13FB  
                       l2658 13D1                         l2498 10E5                         l3730 063B  
                       l3570 11C4                         l3562 11A8                         l3554 1194  
                       l3546 1185                         l3538 1177                         l4194 0529  
                       l4186 04FD                         l4098 01BC                         l4354 0B81  
                       l4290 16C6                         l4282 1677                         l4274 162D  
                       l4266 160F                         l3724 1CE6                         l3716 1CD6  
                       l3708 1CFD                         l3820 12F5                         l4356 17C4  
                       l3492 11EC                         l3660 1550                         l3652 1525  
                       l2844 1E81                         l2836 1E61                         l3644 0A5D  
                       l3636 0A38                         l3628 0A0E                         l2908 12E5  
                       l3804 1150                         l3812 116E                         l3900 1E3C  
                       l2748 1D5C                         l2692 0829                         l2668 13FC  
                       l3732 0641                         l3740 071E                         l3572 11CB  
                       l3564 11AC                         l3556 119A                         l3548 1189  
                       l4196 052F                         l4188 050C                         l4292 16CC  
                       l4284 1680                         l4276 1638                         l4268 1614  
                       l3726 1CE9                         l3718 1CD9                         l2950 07FE  
                       l2942 07E1                         l3830 1325                         l3822 1306  
                       l3910 1448                         l3670 1586                         l3654 1538  
                       l2846 1E83                         l2838 1E6E                         l2854 10BF  
                       l3646 0A6D                         l3638 0A48                         l3582 0955  
                       l2870 1262                         l3806 115E                         l3902 1E44  
                       l2694 0843                         l2686 142F                         l2678 1416  
                       l3742 0724                         l3734 0704                         l3566 11BD  
                       l3558 119D                         l3574 11D1                         l4198 0533  
                       l4294 16D1                         l4286 16B7                         l4278 1645  
                       l3728 1CED                         l2944 07F7                         l3840 1354  
                       l3832 1328                         l3824 1311                         l3816 12EE  
                       l3920 1512                         l3912 14A3                         l3496 11F3  
                       l3488 11E0                         l3680 15AA                         l3672 158C  
                       l3664 1557                         l2848 1E91                         l2856 10C6  
                       l3648 0A6F                         l3592 098B                         l3584 0974  
                       l2880 1291                         l2872 1275                         l3808 115F  
                       l2688 143F                         l3744 0793                         l3576 11D6  
                       l3568 11C3                         l3752 0D48                         l4296 16D9  
                       l4288 16C0                         l2946 07F8                         l3850 1377  
                       l3842 1362                         l3834 1335                         l3826 1315  
                       l3818 12EF                         l3930 151E                         l3922 1516  
                       l3914 14AC                         l2962 1C89                         l3498 1201  
                       l3690 15C8                         l3682 15B2                         l3674 1592  
                       l3666 1584                         l3658 153F                         l3906 1DA9  
                       l2858 10C8                         l3594 0990                         l3586 097A  
                       l2882 1297                         l2698 084C                         l3578 11DB  
                       l3770 0E86                         l3754 0D4C                         l4298 16E2  
                       l3940 1DDB                         l2948 07FB                         l3852 1382  
                       l3844 1363                         l3836 1339                         l3828 131D  
                       l3932 1521                         l3924 1517                         l3916 1505  
                       l2964 1C8F                         l3860 0807                         l3692 15D8  
                       l3684 15BA                         l3676 1596                         l3668 1585  
                       l3596 0996                         l3588 0984                         l2884 129E  
                       l2876 127E                         l3748 07AD                         l3764 0E13  
                       l3756 0D4E                         l3950 1C9F                         l3942 1DE4  
                       l3846 136C                         l3838 1342                         l3926 151A  
                       l3918 1508                         l3862 080C                         l3694 15E0  
                       l3686 15C0                         l3678 159A                         l3598 09A1  
                       l3870 1D3A                         l2894 12AC                         l2886 12A0  
                       l2878 1290                         l3782 0F6C                         l3766 0E1A  
                       l3758 0D55                         l3774 0EA7                         l3944 1DEA  
                       l3936 1DD1                         l3848 1372                         l3928 151D  
                       l3864 080E                         l3856 0800                         l3696 15E8  
                       l3688 15C4                         l3872 1D3C                         l2888 12A4  
                       l2896 12BE                         l3792 110F                         l3880 1F5E  
                       l3784 0F73                         l3776 0EAE                         l3960 0AA7  
                       l3952 0A8E                         l3946 1DF0                         l3938 1DD5  
                       l3858 0803                         l3698 15EE                         l3794 1121  
                       l3890 1F98                         l3882 1F6B                         l3970 0AED  
                       l3962 0AAB                         l3954 0A95                         l3948 1DF6  
                       l3868 1D31                         l3796 1124                         l3884 1F6F  
                       l3892 1F9E                         l3876 1F51                         l3788 0FDF  
                       l3980 0B1A                         l3972 0AF3                         l3964 0ABD  
                       l3956 0A9B                         l3798 1131                         l3886 1F81  
                       l3878 1F5B                         l3982 0B1F                         l3990 0B63  
                       l3966 0AC1                         l3974 0B03                         l3958 0AA2  
                       l3888 1F8F                         l3896 1E2A                         l3992 0B67  
                       l3984 0B34                         l3976 0B11                         l3968 0AD6  
                       l3898 1E2F                         l3986 0B4B                         l3978 0B14  
                       l3996 0B6B                         l3988 0B51                         l3998 0B8F  
                       STR_1 1086                         STR_2 109B                         STR_3 10AE  
                       _BRGH 04C2                         _CREN 00C4                         u4000 1275  
                       u4001 1274                         u4010 1289                         u4020 12A4  
                       u4021 12A3                         u4030 12AB                         u3310 110A  
                       u4031 12AA                         u4015 1285                         u3311 1109  
                       u5000 123F                         u3320 1E9B                         u5001 123E  
                       u3305 10FE                         u3321 1E9A                         u5010 1252  
                       u4050 12BD                         u3250 10D3                         u4051 12BC  
                       u3251 10D2                         u5100 1F09                         u5020 1260  
                       u4060 12C4                         u3340 1EAD                         u5101 1F08  
                       u5021 125F                         u4061 12C3                         u4045 12AD  
                       u3341 1EAC                         u5030 1ED4                         u3510 13F1  
                       u3270 10E5                         u3350 1EB7                         u5110 117E  
                       u5031 1ED3                         u5015 124E                         u3511 13F0  
                       u3271 10E4                         u3351 1EB6                         u3335 1E9F  
                       u5111 117D                         u5040 1EDF                         u6000 1512  
                       u4080 12D5                         u3600 143F                         u5200 11D6  
                       u5120 1189                         u2800 1FC2                         u5041 1EDE  
                       u6001 1511                         u4081 12D4                         u3601 143E  
                       u3505 13DC                         u3265 10D7                         u5201 11D5  
                       u5121 1188                         u2801 1FC1                         u5050 1EE6  
                       u5210 0974                         u4090 12DA                         u3610 0843  
                       u3530 140A                         u3290 10F6                         u3370 1ECA  
                       u5130 119A                         u6010 0A9B                         u5051 1EE5  
                       u5211 0973                         u4091 12D9                         u4075 12C7  
                       u3611 0842                         u3531 1409                         u3515 13ED  
                       u3291 10F5                         u3371 1EC9                         u3355 1EB3  
                       u5131 1199                         u6011 0A9A                         u5060 1EED  
                       u3380 1C9A                         u5220 097A                         u3700 093B  
                       u3620 0864                         u3540 140E                         u2660 1CC6  
                       u3460 1CB4                         u2820 1FD4                         u6100 0C01  
                       u6020 0ABD                         u5061 1EEC                         u3381 1C99  
                       u5221 0979                         u3701 093A                         u3621 0863  
                       u3541 140D                         u3525 13FD                         u2661 1CC5  
                       u3285 10E6                         u3365 1EBE                         u3461 1CB3  
                       u2821 1FD3                         u6021 0ABC                         u5070 1EF4  
                       u4270 17FC                         u5310 09D3                         u5230 0984  
                       u3550 1415                         u2670 1CD3                         u3470 1CBA  
                       u5150 11AC                         u2830 1FDE                         u6110 0C52  
                       u6030 0B03                         u5071 1EF3                         u4271 17FB  
                       u5311 09D2                         u5231 0983                         u3551 1414  
                       u2671 1CD2                         u3295 10F2                         u3471 1CB9  
                       u5151 11AB                         u2831 1FDD                         u2815 1FC6  
                       u6111 0C51                         u6031 0B02                         u5080 1EFB  
                       u4280 1DA5                         u5400 0A20                         u5320 09DB  
                       u5240 0990                         u3720 094C                         u3640 08E1  
                       u3480 139E                         u6120 0CBF                         u6040 0B11  
                       u5081 1EFA                         u4281 1DA4                         u5401 0A1F  
                       u5321 09DA                         u5305 09C4                         u5241 098F  
                       u3721 094B                         u3641 08E0                         u3481 139D  
                       u5145 119E                         u6121 0CBE                         u6105 0BFC  
                       u6041 0B10                         u5090 1F02                         u5410 0A24  
                       u5250 0996                         u3730 1D5C                         u3650 0917  
                       u3570 1427                         u3490 13B8                         u5170 11BD  
                       u2850 1FF1                         u6210 016F                         u6130 0CDF  
                       u6050 0B62                         u5091 1F01                         u5411 0A23  
                       u5251 0995                         u3731 1D5B                         u3715 093E  
                       u3651 0916                         u3635 08AE                         u3571 1426  
                       u3491 13B7                         u5171 11BC                         u2851 1FF0  
                       u2835 1FDA                         u6211 016E                         u6131 0CDE  
                       u6051 0B61                         u5420 0A38                         u5340 09EE  
                       u5260 09A0                         u3660 091B                         u3580 142E  
                       u2860 1FF6                         u2780 1FAC                         u6300 02C0  
                       u6220 017A                         u6140 0CF6                         u6060 0B9D  
                       u5501 15A3                         u5421 0A37                         u5341 09ED  
                       u5261 099F                         u3661 091A                         u3645 08DD  
                       u3581 142D                         u3565 1417                         u5165 11AD  
                       u2861 1FF5                         u2845 1FE5                         u2781 1FAB  
                       u6301 02BF                         u6221 0179                         u6205 013C  
                       u6141 0CF5                         u6061 0B9A                         u5502 15AA  
                       u5350 09F5                         u5270 09A9                         u3670 0922  
                       u5190 11D1                         u2790 1FB7                         u6310 02DB  
                       u6230 0195                         u6150 0021                         u6070 0BA1  
                       u5431 0A52                         u5351 09F4                         u5335 09DD  
                       u5271 09A8                         u3671 0921                         u5191 11D0  
                       u5175 11B9                         u2791 1FB6                         u6311 02DA  
                       u6231 0194                         u6215 016B                         u6151 0D3F  
                       u6071 0BA0                         u5440 0A5D                         u5432 0A59  
                       u5280 09AE                         u3760 1D76                         u5600 0724  
                       u6400 04E0                         u6240 01A7                         u6160 002A  
                       u6080 0BC9                         u5441 0A5C                         u5281 09AD  
                       u3761 1D75                         u3745 1D63                         u5601 0723  
                       u5185 11C5                         u6401 04DF                         u6305 02BC  
                       u6241 01A6                         u6161 0029                         u6145 0CF2  
                       u6081 0BC8                         u5530 15C0                         u5450 1538  
                       u5370 0A05                         u5290 09C3                         u3690 0934  
                       u5610 0D4C                         u6410 04EB                         u6250 01C9  
                       u6170 0049                         u6090 0BED                         u5531 15BF  
                       u5515 15AB                         u5451 1537                         u5371 0A04  
                       u5291 09C2                         u3755 1D6A                         u3691 0933  
                       u3595 1431                         u5611 0D4B                         u6411 04EA  
                       u6251 01C8                         u6171 0048                         u6155 0D3A  
                       u6091 0BEC                         u5540 15C8                         u5460 1550  
                       u5380 0A0D                         u5700 1150                         u5620 0D55  
                       u6500 0586                         u6420 04F6                         u6340 0453  
                       u6260 01D7                         u6180 0058                         _RCIF 0065  
                       u5541 15C7                         u5525 15B3                         u5461 154F  
                       u5381 0A0C                         u5365 09F6                         u5701 114F  
                       u3685 0924                         u5621 0D54                         u6501 0585  
                       u6421 04F5                         u6405 04DC                         u6341 0452  
                       u6325 034E                         u6261 01D6                         u6181 0057  
                       u4910 11E5                         u5470 1567                         u3950 1E61  
                       u5630 0E1A                         u6510 0592                         u6430 050C  
                       u6350 046B                         u6190 006F                         u4911 11E4  
                       u5551 15D1                         u3951 1E60                         u5631 0E19  
                       u6511 0591                         u6431 050B                         u6351 046A  
                       u6335 03F4                         u6255 01C5                         u6191 006E  
                       u4920 11EC                         u5552 15D8                         u5480 1579  
                       u3960 1E72                         u5720 116E                         u5640 0EAE  
                       u6440 051D                         u6360 0485                         u6280 0290  
                       u4921 11EB                         u3961 1E71                         u5721 116D  
                       u5705 114C                         u5641 0EAD                         u6441 051C  
                       u6425 04F2                         u6361 0484                         u6281 028F  
                       u6185 0054                         u5810 1372                         u5730 12F5  
                       u5490 159A                         u3970 1E91                         u5650 0F73  
                       u6530 061B                         u6450 0529                         u6370 049A  
                       u6290 02B1                         u5811 1371                         u5731 12F4  
                       u5491 1599                         u5475 1563                         u3971 1E90  
                       u5395 0A0F                         u5715 1160                         u5651 0F72  
                       u6531 061A                         u6451 0528                         u6435 0508  
                       u6371 0499                         u6291 02B0                         u6275 01E6  
                       u5820 1377                         u5740 1306                         u4940 1207  
                       u5580 15EE                         u3980 10C6                         u5660 1121  
                       u5900 1F9E                         u6540 0633                         u6460 0533  
                       u6380 04A2                         i1l77 1E23                         u5821 1376  
                       u5805 1364                         u5741 1305                         u4941 1206  
                       u5581 15ED                         u5565 15D9                         u5485 1575  
                       u3981 10C5                         u5661 1120                         u5901 1F9D  
                       u6541 0630                         u6525 05AD                         u6461 0532  
                       u6381 04A1                         u6550 1D13                         u5750 1325  
                       u5830 0807                         u5590 0641                         u6470 0541  
                       u6551 1D12                         u5751 1324                         u4935 11FA  
                       u5831 0806                         u5575 15E1                         u3975 1E8D  
                       u5591 0640                         u6471 0540                         u6295 02AD  
                       u6607 16FA                         u6560 1D25                         u4960 1226  
                       u5840 1D3A                         u5680 1135                         u5920 1E44  
                       u6480 0559                         u6561 1D24                         u6617 17F3  
                       u4961 1225                         u5841 1D39                         u5681 1134  
                       u5921 1E43                         u6481 0558                         u6570 1F1A  
                       u5770 1339                         u5930 1458                         u5850 1F5B  
                       u6490 056F                         u6627 1CFF                         u5771 1338  
                       u4955 1219                         u5675 1126                         u5851 1F5A  
                       u5915 1E30                         u6491 056E                         u6475 053D  
                       u6395 04AD                         u6580 1F3E                         u5940 1471  
                       u4980 1235                         u6637 1D06                         u5765 132A  
                       u4981 1234                         u6485 0555                         u6590 1F50  
                       u5790 1354                         u4990 123B                         u5870 1F6F  
                       u6647 1D0A                         u6591 1F4F                         u5791 1353  
                       u5951 1483                         u5935 1453                         u4991 123A  
                       u4975 122A                         u5695 1137                         u5871 1F6E  
                       u5960 14AC                         u5952 1484                         u5880 1F81  
                       u6657 1DDF                         u5785 133B                         u5961 14AB  
                       u5953 1489                         u5945 146C                         u5881 1F80  
                       u5865 1F60                         u5970 14BA                         u5954 148A  
                       u6667 1CE4                         u5795 1350                         u5955 148F  
                       u5980 14D3                         u5956 1490                         u6677 1CEB  
                       u5885 1F7D                         u5991 14E5                         u5975 14B5  
                       u5895 1F90                         u5992 14E6                         u5993 14EB  
                       u5985 14CE                         u5994 14EC                         u5995 14F1  
                       u5996 14F2                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4                         _data 00C6  
                       _main 160A                 ___ftpack@arg 0073           __size_of_LCD_Clear 000D  
               ___ftpack@exp 0076                         btemp 007E           __size_of_LCD_Print 0044  
                       start 000C                 _sprintf$1068 00A6            ___bmul@multiplier 002C  
               ___ftmul@cntr 003B                 ___ftmul@sign 003C                  LCD_Cursor@a 0079  
                LCD_Cursor@x 0078                  LCD_Cursor@y 0076                        ??_ISR 0070  
               ___fttol@exp1 0053                 ___fttol@lval 004F              __end_of___aldiv 138B  
                      ?_main 0070              __end_of___awdiv 11E0              __end_of___ftadd 0A8B  
            __end_of___awmod 2000              __end_of___ftneg 10C9                        _ANSEL 0188  
            __end_of___lldiv 1177              __end_of___ftmul 160A              ___awdiv@divisor 0020  
            __end_of___llmod 1FA7              __end_of___ftsub 1D56              __end_of___fttol 12EE  
            __end_of___lwdiv 110F                        i1l240 1C79                        i1l243 1C80  
            __end_of___lwmod 1ECF              ___awdiv@counter 0025                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISE 0089                        _TXREG 0019                 ___lltoft@exp 0079  
                      _vADC1 006C                        _vADC2 00C5                        _Setup 07E1  
              ___awtoft@sign 0026              __end_of_dpowers 1086                        _scale 0D45  
            __end_of_isdigit 1CBE                ___ftpack@sign 0077                  conversion@b 0042  
        __size_of_LCD_Cursor 0024                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0638                  ?_USART_Init 0028  
            __initialization 000F                   _Read_USART 1C79                 __end_of_main 1704  
                     ??_main 0069                ___fttol@sign1 004E            __end_of_LCD_Clear 1CAC  
           __end_of_ValorADC 1800         __size_of__tdiv_to_l_ 00BD            __end_of_LCD_Print 1F51  
                     ?_Setup 0070                       _ADCON1 009F             ___llmod@dividend 002C  
                     ?_scale 003D                       _ADRESH 001E             ___awdiv@dividend 0022  
           __end_of___awtoft 0829             __end_of___ftpack 1262                       _ANSELH 0189  
           __end_of___lltoft 1E5D                       _LCD_ON 1DD1                       i1l3390 1E0C  
                     i1l3392 1E12                       i1l3384 1DFD                       i1l3394 1E19  
                     i1l3386 1E03                       i1l3396 1E1F                       i1l3388 1E04  
                     i1l2956 1C79                       i1l2958 1C7F                       u418_20 1C7F  
                     u418_21 1C7E                       u490_20 1E1F                       u490_21 1E1E  
                     u488_20 1E03                       u488_21 1E02                       u489_20 1E12  
                     u489_21 1E11                       _PUERTO 1ECF             __end_of_char_LCD 1D0D  
                     _TRISC6 043E                       _TRISC7 043F                       _RUSART 007A  
       __size_of_comandosLCD 001B             __end_of__powers_ 1037                       ___bmul 1CBE  
                     ___ftge 1E5D                    ??___aldiv 0073                       ___wmul 1D56  
                  ??___awdiv 0024                    ??___ftadd 0053                    ??___awmod 0077  
                  ??___ftneg 0076                    ??___lldiv 0073                    ??___ftmul 0033  
                  ??___llmod 0079                    ??___ftsub 007A                    ??___fttol 004A  
                  ??___lwdiv 0079                    ??___lwmod 0077                       _fround 0638  
           ___awdiv@quotient 0027              ___awmod@divisor 0073              ___awmod@counter 0078  
      ___ftmul@f3_as_product 0038                    ??_isdigit 0073                       saved_w 007E  
        __size_of_USART_Init 00DD                    ??_sprintf 00A0      __end_of__initialization 001D  
                 ___ftadd@f1 004D                   ___ftadd@f2 0050                   ___ftge@ff1 0073  
                 ___ftge@ff2 0076                   ___ftneg@f1 0073                   ___awtoft@c 0023  
        ___bmul@multiplicand 0029                   ___ftmul@f1 002D                   ___ftmul@f2 0030  
                ?_Read_USART 0070                   ___ftsub@f1 005D                   ___ftsub@f2 005A  
                 ___fttol@f1 0046               __pcstackCOMMON 0070                __end_of_Setup 0800  
               ??_LCD_Cursor 0077                   ___lltoft@c 0023                __end_of_scale 1000  
                 __div_to_l_ 0829                      ??_Setup 0073              __div_to_l_@exp1 002D  
            __div_to_l_@cntr 002C                      ??_scale 0040              __div_to_l_@quot 0028  
               sprintf@width 00AC                 Write_USART@a 0073                   __pbssBANK0 006C  
                 __pbssBANK1 00BF                      ?_LCD_ON 0070           __end_of_LCD_Cursor 1D31  
                    ?_PUERTO 0070                __div_to_l_@f1 0073                __div_to_l_@f2 0076  
                  ?_ValorADC 0070                   __pmaintext 160A                      ?___bmul 0029  
                    ?___ftge 0073                      ?___wmul 0073                      PUERTO@x 0073  
              ??_Write_USART 0073                   __pintentry 0004                      ?_fround 003D  
                  ?___awtoft 0023                    ?___ftpack 0073                    ?___lltoft 0023  
                  ?_char_LCD 0070   __end_of_Write_USART_String 1DA6                   _config_ADC 1C89  
        __size_of_Read_USART 0008                   __stringtab 1000              __size_of_LCD_ON 002C  
                 _conversion 1DA6              __size_of_PUERTO 003E                 ??_USART_Init 002C  
          __end_of__npowers_ 105E                   _scale$1067 0042                   ??_ValorADC 0073  
                    ___aldiv 12EE              __size_of___bmul 0017              __size_of___ftge 0038  
                    ___awdiv 1177                      ___ftadd 0955                      ___awmod 1FA7  
                    ___ftneg 10BF                      ___lldiv 110F              __size_of___wmul 0025  
                    ___ftmul 1525                      ___llmod 1F51                      ___ftsub 1D31  
                    ___fttol 1262                      ___lwdiv 10C9                      ___lwmod 1E95  
                 ??___awtoft 0078                   ??___ftpack 0020                    _ANSELbits 0188  
            __size_of_fround 01A9                   ??___lltoft 0078                      __ptext1 0A8B  
                    __ptext2 0D45                      __ptext3 1FA7                      __ptext4 1177  
                    __ptext5 1CAC                      __ptext6 0638                      __ptext7 1E95  
                    __ptext8 10C9                      __ptext9 1CBE                 __size_of_ISR 002D  
                ?__div_to_l_ 0073                      _dpowers 105E                   ??_char_LCD 0074  
        __end_of_Write_USART 1C9F                      _isdigit 1CAC             ___awmod@dividend 0075  
           ___aldiv@dividend 0024                    _LCD_Clear 1C9F           __end_of_USART_Init 1525  
                  _LCD_Print 1F0D                      _sprintf 0A8B                      clrloop0 1C82  
       end_of_initialization 001D              ___lldiv@divisor 0020              ___lldiv@counter 0078  
           ___aldiv@quotient 0076                      psplit$0 C0036               __tdiv_to_l_@f1 0073  
             __tdiv_to_l_@f2 0076                ??__tdiv_to_l_ 0020                  ?_config_ADC 0070  
                  _TRISAbits 0085                    _TRISBbits 0086                    _TRISEbits 0089  
                 ?_LCD_Clear 0070                   ?_LCD_Print 0076                  ?_conversion 003D  
              ??_comandosLCD 0074               __end_of_LCD_ON 1DFD               __end_of_PUERTO 1F0D  
        __size_of__div_to_l_ 012C                 ??_Read_USART 0070                  ___ftmul@exp 0037  
                 LCD_Print@a 0076                   LCD_Print@i 0078               __end_of___bmul 1CD5  
             __end_of___ftge 1E95                  _Write_USART 1C93               __end_of___wmul 1D7B  
          pnum$text1_split_1 0036                  USART_Init@x 0038               __end_of_fround 07E1  
        start_initialization 000F                  __end_of_ISR 1E2A          __end_of__tdiv_to_l_ 1448  
         __end_of_Read_USART 1C81                     ??_LCD_ON 0076                    ValorADC@x 0075  
                   ??_PUERTO 0073              ___llmod@divisor 0028              ___llmod@counter 0030  
        __size_of_config_ADC 000A                     ??___bmul 002A                     ??___ftge 0079  
        __end_of_comandosLCD 1CF0                     ??___wmul 0077            __size_of_ValorADC 00FC  
                   ??_fround 0040                sprintf@tmpval 00AE          __size_of_conversion 002B  
                 fround@prec 004C            __size_of___awtoft 0029            __size_of___ftpack 0082  
          __size_of___lltoft 0033                  __pbssCOMMON 007A                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0                  ??_LCD_Clear 0076  
          __size_of_char_LCD 001D                  ??_LCD_Print 0020                  sprintf@flag 00AA  
                sprintf@eexp 00B6                  sprintf@fval 00B8           _Write_USART_String 1D7B  
                sprintf@prec 00BC             ___lwdiv@dividend 0022          ?_Write_USART_String 0074  
                   ?___aldiv 0020                     ?___awdiv 0020                     ?___ftadd 004D  
                   ?___awmod 0073                     ?___ftneg 0073                     ?___lldiv 0020  
                   ?___ftmul 002D                     ?___llmod 0028                     ?___ftsub 005A  
                  __npowers_ 1037                     ?___fttol 0046                     ?___lwdiv 0020  
                   ?___lwmod 0073                    __pstrings 1000                  __tdiv_to_l_ 138B  
               ??__div_to_l_ 0020                     ?_isdigit 0070         ??_Write_USART_String 0076  
             __size_of_Setup 001F             ___lwdiv@quotient 0024                     ?_sprintf 0060  
             __size_of_scale 02BB             char_LCD@caracter 0075              ___aldiv@divisor 0020  
          interrupt_function 0004              ___aldiv@counter 0074               ___wmul@product 0077  
                _comandosLCD 1CD5                    clear_ram0 1C81                     _PIE1bits 008C  
                   _PIR1bits 000C           __end_of__div_to_l_ 0955                   _ADCON0bits 001F  
                __stringbase 100F            ___wmul@multiplier 0073           USART_Init@baudrate 0028  
               ??_config_ADC 0073                 ??_conversion 0040                     _ValorADC 1704  
         __end_of_config_ADC 1C93                 ?_Write_USART 0070             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftneg 000A             __size_of___lldiv 0068             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0046             __size_of___lwmod 003A                     ___awtoft 0800  
                   ___ftpack 11E0                  _fround$1065 0049                  _fround$1066 0046  
         __end_of__stringtab 1010                     ___lltoft 1E2A                  _isdigit$873 0073  
                 _ANSELHbits 0189                     _char_LCD 1CF0                   sprintf@val 00B2  
         __end_of_conversion 1DD1             __size_of_isdigit 0012              ___lwdiv@divisor 0020  
            ___lwdiv@counter 0026                     __ptext10 138B                     __ptext11 0829  
                   __ptext20 1E5D                     __ptext12 1D56                     __ptext21 1DA6  
                   __ptext13 1E2A                     __ptext30 12EE                     __ptext22 1525  
                   __ptext14 1F51                     __ptext31 07E1                     __ptext23 0800  
                   __ptext15 110F                     __ptext40 1C79                     __ptext32 1F0D  
                   __ptext24 11E0                     __ptext16 1262                     __ptext33 1CF0  
                   __ptext25 1C89                     __ptext17 1D31                     __ptext34 1DD1  
                   __ptext26 1D7B                     __ptext18 0955                     __ptext35 1D0D  
                   __ptext27 1C93                     __ptext19 10BF                     __ptext36 1C9F  
                   __ptext28 1704                     __ptext37 1CD5                     __ptext29 1448  
                   __ptext38 1ECF                     __ptext39 1DFD                     __powers_ 1010  
                   _contador 006D             __size_of_sprintf FBAD                __size_of_main 00FA  
                  pnum$text1 000C                   _LCD_Cursor 1D0D                   _INTCONbits 000B  
        Write_USART_String@a 0074          Write_USART_String@i 0077                     isdigit@c 0074  
                   scale@scl 0045                     intlevel1 0000                    sprintf@ap 00A9  
           __tdiv_to_l_@exp1 0029             __tdiv_to_l_@cntr 0028                    sprintf@sp 00BB  
           __tdiv_to_l_@quot 0024             ___lwmod@dividend 0075             ___lldiv@dividend 0024  
                  stringcode 100A                 ?__tdiv_to_l_ 0073                     sprintf@c 00BE  
                   sprintf@f 0060             ___lldiv@quotient 0074              ___lwmod@divisor 0073  
            ___lwmod@counter 0078                     stringdir 100A                     stringtab 1000  
               ___aldiv@sign 0075                 ?_comandosLCD 0070                   _USART_Init 1448  
