

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 03:22:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	strings
   482  0000'                    __pstrings:
   483  0000'                    stringtab:
   484  0000'                    __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0000' 1BFF               	btfsc	btemp+1,7
   488  0001' 2800'              	ljmp	stringcode
   489  0002' 1383               	bcf	3,7
   490  0003' 187F               	btfsc	btemp+1,0
   491  0004' 1783               	bsf	3,7
   492  0005' 0800               	movf	0,w
   493  0006' 0A84               	incf	4,f
   494  0007' 1903               	skipnz
   495  0008' 0AFF               	incf	btemp+1,f
   496  0009' 0008               	return
   497  000A'                    stringcode:
   498  000A'                    stringdir:
   499  000A' 3000'              	movlw	high stringdir
   500  000B' 008A               	movwf	10
   501  000C' 0804               	movf	4,w
   502  000D' 0A84               	incf	4,f
   503  000E' 0782               	addwf	2,f
   504  000F'                    __stringbase:
   505  000F' 3400               	retlw	0
   506  0010'                    __end_of__stringtab:
   507  0010'                    __powers_:
   508  0010' 3400               	retlw	0
   509  0011' 3400               	retlw	0
   510  0012' 3480               	retlw	128
   511  0013' 343F               	retlw	63
   512  0014' 3400               	retlw	0
   513  0015' 3400               	retlw	0
   514  0016' 3420               	retlw	32
   515  0017' 3441               	retlw	65
   516  0018' 3400               	retlw	0
   517  0019' 3400               	retlw	0
   518  001A' 34C8               	retlw	200
   519  001B' 3442               	retlw	66
   520  001C' 3400               	retlw	0
   521  001D' 3400               	retlw	0
   522  001E' 347A               	retlw	122
   523  001F' 3444               	retlw	68
   524  0020' 3400               	retlw	0
   525  0021' 3440               	retlw	64
   526  0022' 341C               	retlw	28
   527  0023' 3446               	retlw	70
   528  0024' 3400               	retlw	0
   529  0025' 3450               	retlw	80
   530  0026' 34C3               	retlw	195
   531  0027' 3447               	retlw	71
   532  0028' 3400               	retlw	0
   533  0029' 3424               	retlw	36
   534  002A' 3474               	retlw	116
   535  002B' 3449               	retlw	73
   536  002C' 3480               	retlw	128
   537  002D' 3496               	retlw	150
   538  002E' 3418               	retlw	24
   539  002F' 344B               	retlw	75
   540  0030' 3420               	retlw	32
   541  0031' 34BC               	retlw	188
   542  0032' 34BE               	retlw	190
   543  0033' 344C               	retlw	76
   544  0034' 3428               	retlw	40
   545  0035' 346B               	retlw	107
   546  0036' 346E               	retlw	110
   547  0037' 344E               	retlw	78
   548  0038' 34F9               	retlw	249
   549  0039' 3402               	retlw	2
   550  003A' 3415               	retlw	21
   551  003B' 3450               	retlw	80
   552  003C' 34EC               	retlw	236
   553  003D' 3478               	retlw	120
   554  003E' 34AD               	retlw	173
   555  003F' 3460               	retlw	96
   556  0040' 34CA               	retlw	202
   557  0041' 34F2               	retlw	242
   558  0042' 3449               	retlw	73
   559  0043' 3471               	retlw	113
   560  0044'                    __end_of__powers_:
   561  0044'                    __npowers_:
   562  0044' 3400               	retlw	0
   563  0045' 3400               	retlw	0
   564  0046' 3480               	retlw	128
   565  0047' 343F               	retlw	63
   566  0048' 34CD               	retlw	205
   567  0049' 34CC               	retlw	204
   568  004A' 34CC               	retlw	204
   569  004B' 343D               	retlw	61
   570  004C' 340A               	retlw	10
   571  004D' 34D7               	retlw	215
   572  004E' 3423               	retlw	35
   573  004F' 343C               	retlw	60
   574  0050' 346F               	retlw	111
   575  0051' 3412               	retlw	18
   576  0052' 3483               	retlw	131
   577  0053' 343A               	retlw	58
   578  0054' 3417               	retlw	23
   579  0055' 34B7               	retlw	183
   580  0056' 34D1               	retlw	209
   581  0057' 3438               	retlw	56
   582  0058' 34AC               	retlw	172
   583  0059' 34C5               	retlw	197
   584  005A' 3427               	retlw	39
   585  005B' 3437               	retlw	55
   586  005C' 34BD               	retlw	189
   587  005D' 3437               	retlw	55
   588  005E' 3486               	retlw	134
   589  005F' 3435               	retlw	53
   590  0060' 3495               	retlw	149
   591  0061' 34BF               	retlw	191
   592  0062' 34D6               	retlw	214
   593  0063' 3433               	retlw	51
   594  0064' 3477               	retlw	119
   595  0065' 34CC               	retlw	204
   596  0066' 342B               	retlw	43
   597  0067' 3432               	retlw	50
   598  0068' 345F               	retlw	95
   599  0069' 3470               	retlw	112
   600  006A' 3489               	retlw	137
   601  006B' 3430               	retlw	48
   602  006C' 34FF               	retlw	255
   603  006D' 34E6               	retlw	230
   604  006E' 34DB               	retlw	219
   605  006F' 342E               	retlw	46
   606  0070' 3408               	retlw	8
   607  0071' 34E5               	retlw	229
   608  0072' 343C               	retlw	60
   609  0073' 341E               	retlw	30
   610  0074' 3460               	retlw	96
   611  0075' 3442               	retlw	66
   612  0076' 34A2               	retlw	162
   613  0077' 340D               	retlw	13
   614  0078'                    __end_of__npowers_:
   615  0078'                    _dpowers:
   616  0078' 3401               	retlw	1
   617  0079' 3400               	retlw	0
   618  007A' 3400               	retlw	0
   619  007B' 3400               	retlw	0
   620  007C' 340A               	retlw	10
   621  007D' 3400               	retlw	0
   622  007E' 3400               	retlw	0
   623  007F' 3400               	retlw	0
   624  0080' 3464               	retlw	100
   625  0081' 3400               	retlw	0
   626  0082' 3400               	retlw	0
   627  0083' 3400               	retlw	0
   628  0084' 34E8               	retlw	232
   629  0085' 3403               	retlw	3
   630  0086' 3400               	retlw	0
   631  0087' 3400               	retlw	0
   632  0088' 3410               	retlw	16
   633  0089' 3427               	retlw	39
   634  008A' 3400               	retlw	0
   635  008B' 3400               	retlw	0
   636  008C' 34A0               	retlw	160
   637  008D' 3486               	retlw	134
   638  008E' 3401               	retlw	1
   639  008F' 3400               	retlw	0
   640  0090' 3440               	retlw	64
   641  0091' 3442               	retlw	66
   642  0092' 340F               	retlw	15
   643  0093' 3400               	retlw	0
   644  0094' 3480               	retlw	128
   645  0095' 3496               	retlw	150
   646  0096' 3498               	retlw	152
   647  0097' 3400               	retlw	0
   648  0098' 3400               	retlw	0
   649  0099' 34E1               	retlw	225
   650  009A' 34F5               	retlw	245
   651  009B' 3405               	retlw	5
   652  009C' 3400               	retlw	0
   653  009D' 34CA               	retlw	202
   654  009E' 349A               	retlw	154
   655  009F' 343B               	retlw	59
   656  00A0'                    __end_of_dpowers:
   657  001A                     _RCREG	set	26
   658  0019                     _TXREG	set	25
   659  001E                     _ADRESH	set	30
   660  001F                     _ADCON0bits	set	31
   661  000C                     _PIR1bits	set	12
   662  000B                     _INTCONbits	set	11
   663  0009                     _PORTE	set	9
   664  0006                     _PORTB	set	6
   665  0005                     _PORTA	set	5
   666  00C4                     _CREN	set	196
   667  00C7                     _SPEN	set	199
   668  0037                     _RB7	set	55
   669  0036                     _RB6	set	54
   670  0035                     _RB5	set	53
   671  0034                     _RB4	set	52
   672  0033                     _RB3	set	51
   673  0032                     _RB2	set	50
   674  0031                     _RB1	set	49
   675  0030                     _RB0	set	48
   676  0049                     _RE1	set	73
   677  0048                     _RE0	set	72
   678  0065                     _RCIF	set	101
   679  0099                     _SPBRG	set	153
   680  0086                     _TRISBbits	set	134
   681  0089                     _TRISEbits	set	137
   682  0085                     _TRISAbits	set	133
   683  009F                     _ADCON1	set	159
   684  008C                     _PIE1bits	set	140
   685  0089                     _TRISE	set	137
   686  0086                     _TRISB	set	134
   687  0085                     _TRISA	set	133
   688  04C1                     _TRMT	set	1217
   689  04C5                     _TXEN	set	1221
   690  043E                     _TRISC6	set	1086
   691  043F                     _TRISC7	set	1087
   692  04C4                     _SYNC	set	1220
   693  04C2                     _BRGH	set	1218
   694  0189                     _ANSELHbits	set	393
   695  0188                     _ANSELbits	set	392
   696  0188                     _ANSEL	set	392
   697  0189                     _ANSELH	set	393
   698  00A0'                    STR_1:
   699  00A0' 3456               	retlw	86	;'V'
   700  00A1' 3431               	retlw	49	;'1'
   701  00A2' 3420               	retlw	32	;' '
   702  00A3' 3420               	retlw	32	;' '
   703  00A4' 3420               	retlw	32	;' '
   704  00A5' 3420               	retlw	32	;' '
   705  00A6' 3456               	retlw	86	;'V'
   706  00A7' 3432               	retlw	50	;'2'
   707  00A8' 3420               	retlw	32	;' '
   708  00A9' 3420               	retlw	32	;' '
   709  00AA' 3420               	retlw	32	;' '
   710  00AB' 3463               	retlw	99	;'c'
   711  00AC' 346F               	retlw	111	;'o'
   712  00AD' 346E               	retlw	110	;'n'
   713  00AE' 3474               	retlw	116	;'t'
   714  00AF' 3461               	retlw	97	;'a'
   715  00B0' 3464               	retlw	100	;'d'
   716  00B1' 346F               	retlw	111	;'o'
   717  00B2' 3472               	retlw	114	;'r'
   718  00B3' 3420               	retlw	32	;' '
   719  00B4' 340A               	retlw	10
   720  00B5' 3400               	retlw	0
   721  00B6'                    STR_3:
   722  00B6' 3456               	retlw	86	;'V'
   723  00B7' 3431               	retlw	49	;'1'
   724  00B8' 3420               	retlw	32	;' '
   725  00B9' 3420               	retlw	32	;' '
   726  00BA' 3420               	retlw	32	;' '
   727  00BB' 3420               	retlw	32	;' '
   728  00BC' 3456               	retlw	86	;'V'
   729  00BD' 3432               	retlw	50	;'2'
   730  00BE' 3420               	retlw	32	;' '
   731  00BF' 3420               	retlw	32	;' '
   732  00C0' 3420               	retlw	32	;' '
   733  00C1' 3420               	retlw	32	;' '
   734  00C2' 3443               	retlw	67	;'C'
   735  00C3' 346F               	retlw	111	;'o'
   736  00C4' 346E               	retlw	110	;'n'
   737  00C5' 3474               	retlw	116	;'t'
   738  00C6' 3461               	retlw	97	;'a'
   739  00C7' 3400               	retlw	0
   740  00C8'                    STR_2:
   741  00C8' 3425               	retlw	37	;'%'
   742  00C9' 3432               	retlw	50	;'2'
   743  00CA' 342E               	retlw	46	;'.'
   744  00CB' 3431               	retlw	49	;'1'
   745  00CC' 3466               	retlw	102	;'f'
   746  00CD' 3420               	retlw	32	;' '
   747  00CE' 3420               	retlw	32	;' '
   748  00CF' 3420               	retlw	32	;' '
   749  00D0' 3425               	retlw	37	;'%'
   750  00D1' 3432               	retlw	50	;'2'
   751  00D2' 342E               	retlw	46	;'.'
   752  00D3' 3431               	retlw	49	;'1'
   753  00D4' 3466               	retlw	102	;'f'
   754  00D5' 3420               	retlw	32	;' '
   755  00D6' 3420               	retlw	32	;' '
   756  00D7' 3425               	retlw	37	;'%'
   757  00D8' 3464               	retlw	100	;'d'
   758  00D9' 3400               	retlw	0
   759                           
   760                           	psect	cinit
   761  0000'                    start_initialization:	
   762                           ; #config settings
   763                           
   764  0000'                    __initialization:
   765                           
   766                           ; Clear objects allocated to COMMON
   767  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   768                           
   769                           ; Clear objects allocated to BANK1
   770  0001' 1383               	bcf	3,7	;select IRP bank0
   771  0002' 3000'              	movlw	low __pbssBANK1
   772  0003' 0084               	movwf	4
   773  0004' 3000'              	movlw	low (__pbssBANK1+31)
   774  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   775  000A'                    end_of_initialization:	
   776                           ;End of C runtime variable initialization code
   777                           
   778  000A'                    __end_of__initialization:
   779  000A' 0183               	clrf	3
   780  000B' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   781                           
   782                           	psect	bssCOMMON
   783  0000'                    __pbssCOMMON:
   784  0000'                    _RUSART:
   785  0000'                    	ds	1
   786                           
   787                           	psect	bssBANK1
   788  0000'                    __pbssBANK1:
   789  0000'                    _V2:
   790  0000'                    	ds	4
   791  0004'                    _V1:
   792  0004'                    	ds	4
   793  0008'                    _vADC2:
   794  0008'                    	ds	1
   795  0009'                    _vADC1:
   796  0009'                    	ds	1
   797  000A'                    _contador:
   798  000A'                    	ds	1
   799  000B'                    _data:
   800  000B'                    	ds	20
   801                           
   802                           	psect	clrtext
   803  0000'                    clear_ram0:	
   804                           ;	Called with FSR containing the base address, and
   805                           ;	W with the last address+1
   806                           
   807  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   808  0001'                    clrloop0:
   809  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   810  0002' 0A84               	incf	4,f	;increment pointer
   811  0003' 0604               	xorwf	4,w	;XOR with final address
   812  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   813  0005' 3400               	retlw	0	;all done for this memory range, return
   814  0006' 0604               	xorwf	4,w	;XOR again to restore value
   815  0007' 2800'              	goto	clrloop0	;do the next byte
   816                           
   817                           	psect	cstackBANK3
   818  0000'                    __pcstackBANK3:
   819  0000'                    _sprintf$1127:
   820                           
   821                           ; 4 bytes @ 0x0
   822  0000'                    	ds	4
   823  0004'                    sprintf@ap:
   824                           
   825                           ; 1 bytes @ 0x4
   826  0004'                    	ds	1
   827  0005'                    sprintf@flag:
   828                           
   829                           ; 2 bytes @ 0x5
   830  0005'                    	ds	2
   831  0007'                    sprintf@width:
   832                           
   833                           ; 2 bytes @ 0x7
   834  0007'                    	ds	2
   835  0009'                    sprintf@tmpval:
   836                           
   837                           ; 4 bytes @ 0x9
   838  0009'                    	ds	4
   839  000D'                    sprintf@val:
   840                           
   841                           ; 4 bytes @ 0xD
   842  000D'                    	ds	4
   843  0011'                    sprintf@eexp:
   844                           
   845                           ; 2 bytes @ 0x11
   846  0011'                    	ds	2
   847  0013'                    sprintf@fval:
   848                           
   849                           ; 4 bytes @ 0x13
   850  0013'                    	ds	4
   851  0017'                    sprintf@sp:
   852                           
   853                           ; 1 bytes @ 0x17
   854  0017'                    	ds	1
   855  0018'                    sprintf@prec:
   856                           
   857                           ; 2 bytes @ 0x18
   858  0018'                    	ds	2
   859  001A'                    sprintf@c:
   860                           
   861                           ; 1 bytes @ 0x1A
   862  001A'                    	ds	1
   863                           
   864                           	psect	cstackBANK1
   865  0000'                    __pcstackBANK1:
   866  0000'                    ?___flsub:
   867  0000'                    ___flsub@a:	
   868                           ; 4 bytes @ 0x0
   869                           
   870                           
   871                           ; 4 bytes @ 0x0
   872  0000'                    	ds	4
   873  0004'                    ___flsub@b:
   874                           
   875                           ; 4 bytes @ 0x4
   876  0004'                    	ds	4
   877  0008'                    ?_sprintf:
   878  0008'                    sprintf@f:	
   879                           ; 2 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883  0008'                    	ds	11
   884  0013'                    ??_sprintf:
   885                           
   886                           ; 1 bytes @ 0x13
   887  0013'                    	ds	5
   888                           
   889                           	psect	cstackCOMMON
   890  0000'                    __pcstackCOMMON:
   891  0000'                    ?_isdigit:
   892  0000'                    ?_Read_USART:	
   893                           ; 1 bit 
   894                           
   895  0000'                    ??_Read_USART:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0000'                    ?_config_ADC:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0000'                    ?_LCD_ON:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0000'                    ?_LCD_Clear:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0000'                    ?_ValorADC:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0000'                    ?_Write_USART:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0000'                    ?_LCD_Print:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0000'                    ??_LCD_Print:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0000'                    ?_PUERTO:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0000'                    ?_Setup:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0000'                    ?_ISR:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0000'                    ??_ISR:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0000'                    ?_main:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0000'                    ?_comandosLCD:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0000'                    _LCD_Print$0:	
   938                           ; 1 bytes @ 0x0
   939                           
   940                           
   941                           ; 2 bytes @ 0x0
   942  0000'                    	ds	3
   943  0003'                    ??_config_ADC:
   944  0003'                    ??_ValorADC:	
   945                           ; 1 bytes @ 0x3
   946                           
   947  0003'                    ??_Write_USART:	
   948                           ; 1 bytes @ 0x3
   949                           
   950  0003'                    ??_PUERTO:	
   951                           ; 1 bytes @ 0x3
   952                           
   953  0003'                    ??_isdigit:	
   954                           ; 1 bytes @ 0x3
   955                           
   956  0003'                    ??__tdiv_to_l_:	
   957                           ; 1 bytes @ 0x3
   958                           
   959  0003'                    ??__div_to_l_:	
   960                           ; 1 bytes @ 0x3
   961                           
   962  0003'                    ??_Setup:	
   963                           ; 1 bytes @ 0x3
   964                           
   965  0003'                    ??___lldiv:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0003'                    ??___aldiv:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0003'                    ??___fleq:	
   972                           ; 1 bytes @ 0x3
   973                           
   974  0003'                    ??___flge:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0003'                    ?__Umul8_16:	
   978                           ; 1 bytes @ 0x3
   979                           
   980  0003'                    ?___wmul:	
   981                           ; 2 bytes @ 0x3
   982                           
   983  0003'                    ?___awmod:	
   984                           ; 2 bytes @ 0x3
   985                           
   986  0003'                    ?___lwmod:	
   987                           ; 2 bytes @ 0x3
   988                           
   989  0003'                    ?___flneg:	
   990                           ; 2 bytes @ 0x3
   991                           
   992  0003'                    ?___xxtofl:	
   993                           ; 4 bytes @ 0x3
   994                           
   995  0003'                    PUERTO@x:	
   996                           ; 4 bytes @ 0x3
   997                           
   998  0003'                    Write_USART@a:	
   999                           ; 1 bytes @ 0x3
  1000                           
  1001  0003'                    __Umul8_16@multiplicand:	
  1002                           ; 1 bytes @ 0x3
  1003                           
  1004  0003'                    _isdigit$944:	
  1005                           ; 1 bytes @ 0x3
  1006                           
  1007  0003'                    ___wmul@multiplier:	
  1008                           ; 1 bytes @ 0x3
  1009                           
  1010  0003'                    ___awmod@divisor:	
  1011                           ; 2 bytes @ 0x3
  1012                           
  1013  0003'                    ___lwmod@divisor:	
  1014                           ; 2 bytes @ 0x3
  1015                           
  1016  0003'                    ___flneg@f1:	
  1017                           ; 2 bytes @ 0x3
  1018                           
  1019  0003'                    ___xxtofl@val:	
  1020                           ; 4 bytes @ 0x3
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x3
  1024  0003'                    	ds	1
  1025  0004'                    ?_Write_USART_String:
  1026  0004'                    ??_comandosLCD:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029  0004'                    ___aldiv@counter:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0004'                    isdigit@c:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035  0004'                    Write_USART_String@a:	
  1036                           ; 1 bytes @ 0x4
  1037                           
  1038  0004'                    ___lldiv@quotient:	
  1039                           ; 2 bytes @ 0x4
  1040                           
  1041  0004'                    __div_to_l_@quot:	
  1042                           ; 4 bytes @ 0x4
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x4
  1046  0004'                    	ds	1
  1047  0005'                    ??__Umul8_16:
  1048  0005'                    ValorADC@x:	
  1049                           ; 1 bytes @ 0x5
  1050                           
  1051  0005'                    comandosLCD@x:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054  0005'                    ___aldiv@sign:	
  1055                           ; 1 bytes @ 0x5
  1056                           
  1057  0005'                    ___wmul@multiplicand:	
  1058                           ; 1 bytes @ 0x5
  1059                           
  1060  0005'                    ___awmod@dividend:	
  1061                           ; 2 bytes @ 0x5
  1062                           
  1063  0005'                    ___lwmod@dividend:	
  1064                           ; 2 bytes @ 0x5
  1065                           
  1066                           
  1067                           ; 2 bytes @ 0x5
  1068  0005'                    	ds	1
  1069  0006'                    ??_LCD_ON:
  1070  0006'                    ??_LCD_Clear:	
  1071                           ; 1 bytes @ 0x6
  1072                           
  1073  0006'                    ??_Write_USART_String:	
  1074                           ; 1 bytes @ 0x6
  1075                           
  1076  0006'                    ?_LCD_Cursor:	
  1077                           ; 1 bytes @ 0x6
  1078                           
  1079  0006'                    LCD_Cursor@y:	
  1080                           ; 1 bytes @ 0x6
  1081                           
  1082  0006'                    ___aldiv@quotient:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x6
  1087  0006'                    	ds	1
  1088  0007'                    ??_LCD_Cursor:
  1089  0007'                    ??___wmul:	
  1090                           ; 1 bytes @ 0x7
  1091                           
  1092  0007'                    ??___awmod:	
  1093                           ; 1 bytes @ 0x7
  1094                           
  1095  0007'                    ??___flneg:	
  1096                           ; 1 bytes @ 0x7
  1097                           
  1098  0007'                    ??___lwmod:	
  1099                           ; 1 bytes @ 0x7
  1100                           
  1101  0007'                    Write_USART_String@i:	
  1102                           ; 1 bytes @ 0x7
  1103                           
  1104  0007'                    ___wmul@product:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x7
  1109  0007'                    	ds	1
  1110  0008'                    LCD_Cursor@x:
  1111  0008'                    ___lldiv@counter:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114  0008'                    ___awmod@counter:	
  1115                           ; 1 bytes @ 0x8
  1116                           
  1117  0008'                    __div_to_l_@cntr:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120  0008'                    ___lwmod@counter:	
  1121                           ; 1 bytes @ 0x8
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x8
  1125  0008'                    	ds	1
  1126  0009'                    ??___llmod:
  1127  0009'                    ??___lwdiv:	
  1128                           ; 1 bytes @ 0x9
  1129                           
  1130  0009'                    LCD_Cursor@a:	
  1131                           ; 1 bytes @ 0x9
  1132                           
  1133  0009'                    ___awmod@sign:	
  1134                           ; 1 bytes @ 0x9
  1135                           
  1136  0009'                    __div_to_l_@exp1:	
  1137                           ; 1 bytes @ 0x9
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x9
  1141  0009'                    	ds	1
  1142  000A'                    ??___flsub:
  1143                           
  1144                           	psect	cstackBANK0
  1145  0000'                    __pcstackBANK0:	
  1146                           ; 1 bytes @ 0xA
  1147                           
  1148  0000'                    ?___fleq:
  1149  0000'                    ?___flge:	
  1150                           ; 1 bit 
  1151                           
  1152  0000'                    ??___xxtofl:	
  1153                           ; 1 bit 
  1154                           
  1155  0000'                    ?___awdiv:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0000'                    ?___lwdiv:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  0000'                    ?__tdiv_to_l_:	
  1162                           ; 2 bytes @ 0x0
  1163                           
  1164  0000'                    ?__div_to_l_:	
  1165                           ; 4 bytes @ 0x0
  1166                           
  1167  0000'                    ?___lldiv:	
  1168                           ; 4 bytes @ 0x0
  1169                           
  1170  0000'                    ?___aldiv:	
  1171                           ; 4 bytes @ 0x0
  1172                           
  1173  0000'                    ___awdiv@divisor:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176  0000'                    ___lwdiv@divisor:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179  0000'                    __Umul8_16@product:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182  0000'                    ___lldiv@divisor:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0000'                    ___aldiv@divisor:	
  1186                           ; 4 bytes @ 0x0
  1187                           
  1188  0000'                    __div_to_l_@f1:	
  1189                           ; 4 bytes @ 0x0
  1190                           
  1191  0000'                    ___fleq@ff1:	
  1192                           ; 4 bytes @ 0x0
  1193                           
  1194  0000'                    ___flge@ff1:	
  1195                           ; 4 bytes @ 0x0
  1196                           
  1197  0000'                    __tdiv_to_l_@f1:	
  1198                           ; 4 bytes @ 0x0
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x0
  1202  0000'                    	ds	2
  1203  0002'                    ___awdiv@dividend:
  1204  0002'                    ___lwdiv@dividend:	
  1205                           ; 2 bytes @ 0x2
  1206                           
  1207  0002'                    __Umul8_16@word_mpld:	
  1208                           ; 2 bytes @ 0x2
  1209                           
  1210                           
  1211                           ; 2 bytes @ 0x2
  1212  0002'                    	ds	2
  1213  0004'                    ??___awdiv:
  1214  0004'                    ___lwdiv@counter:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217  0004'                    __Umul8_16@multiplier:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220  0004'                    ___xxtofl@sign:	
  1221                           ; 1 bytes @ 0x4
  1222                           
  1223  0004'                    ___lldiv@dividend:	
  1224                           ; 1 bytes @ 0x4
  1225                           
  1226  0004'                    ___aldiv@dividend:	
  1227                           ; 4 bytes @ 0x4
  1228                           
  1229  0004'                    __div_to_l_@f2:	
  1230                           ; 4 bytes @ 0x4
  1231                           
  1232  0004'                    ___fleq@ff2:	
  1233                           ; 4 bytes @ 0x4
  1234                           
  1235  0004'                    ___flge@ff2:	
  1236                           ; 4 bytes @ 0x4
  1237                           
  1238  0004'                    __tdiv_to_l_@f2:	
  1239                           ; 4 bytes @ 0x4
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x4
  1243  0004'                    	ds	1
  1244  0005'                    ___awdiv@counter:
  1245  0005'                    ___xxtofl@exp:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248  0005'                    ___lwdiv@quotient:	
  1249                           ; 1 bytes @ 0x5
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x5
  1253  0005'                    	ds	1
  1254  0006'                    ___awdiv@sign:
  1255  0006'                    ___xxtofl@arg:	
  1256                           ; 1 bytes @ 0x6
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x6
  1260  0006'                    	ds	1
  1261  0007'                    ___awdiv@quotient:
  1262                           
  1263                           ; 2 bytes @ 0x7
  1264  0007'                    	ds	1
  1265  0008'                    ?_USART_Init:
  1266  0008'                    ?___llmod:	
  1267                           ; 1 bytes @ 0x8
  1268                           
  1269  0008'                    USART_Init@baudrate:	
  1270                           ; 4 bytes @ 0x8
  1271                           
  1272  0008'                    __tdiv_to_l_@quot:	
  1273                           ; 4 bytes @ 0x8
  1274                           
  1275  0008'                    ___llmod@divisor:	
  1276                           ; 4 bytes @ 0x8
  1277                           
  1278                           
  1279                           ; 4 bytes @ 0x8
  1280  0008'                    	ds	2
  1281  000A'                    ?___flmul:
  1282  000A'                    ___flmul@b:	
  1283                           ; 4 bytes @ 0xA
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0xA
  1287  000A'                    	ds	2
  1288  000C'                    ??_USART_Init:
  1289  000C'                    __tdiv_to_l_@cntr:	
  1290                           ; 1 bytes @ 0xC
  1291                           
  1292  000C'                    ___llmod@dividend:	
  1293                           ; 1 bytes @ 0xC
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0xC
  1297  000C'                    	ds	1
  1298  000D'                    __tdiv_to_l_@exp1:
  1299                           
  1300                           ; 1 bytes @ 0xD
  1301  000D'                    	ds	1
  1302  000E'                    ___flmul@a:
  1303                           
  1304                           ; 4 bytes @ 0xE
  1305  000E'                    	ds	2
  1306  0010'                    ___llmod@counter:
  1307                           
  1308                           ; 1 bytes @ 0x10
  1309  0010'                    	ds	2
  1310  0012'                    ??___flmul:
  1311                           
  1312                           ; 1 bytes @ 0x12
  1313  0012'                    	ds	5
  1314  0017'                    ___flmul@sign:
  1315                           
  1316                           ; 1 bytes @ 0x17
  1317  0017'                    	ds	1
  1318  0018'                    ___flmul@aexp:
  1319  0018'                    USART_Init@x:	
  1320                           ; 1 bytes @ 0x18
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x18
  1324  0018'                    	ds	1
  1325  0019'                    ___flmul@grs:
  1326                           
  1327                           ; 4 bytes @ 0x19
  1328  0019'                    	ds	4
  1329  001D'                    ___flmul@bexp:
  1330                           
  1331                           ; 1 bytes @ 0x1D
  1332  001D'                    	ds	1
  1333  001E'                    ___flmul@prod:
  1334                           
  1335                           ; 4 bytes @ 0x1E
  1336  001E'                    	ds	4
  1337  0022'                    ___flmul@temp:
  1338                           
  1339                           ; 2 bytes @ 0x22
  1340  0022'                    	ds	2
  1341  0024'                    ?_conversion:
  1342  0024'                    ?_fround:	
  1343                           ; 4 bytes @ 0x24
  1344                           
  1345  0024'                    ?_scale:	
  1346                           ; 4 bytes @ 0x24
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x24
  1350  0024'                    	ds	4
  1351  0028'                    ??_conversion:
  1352  0028'                    ??_fround:	
  1353                           ; 1 bytes @ 0x28
  1354                           
  1355  0028'                    ??_scale:	
  1356                           ; 1 bytes @ 0x28
  1357                           
  1358                           
  1359                           ; 1 bytes @ 0x28
  1360  0028'                    	ds	4
  1361  002C'                    conversion@b:
  1362                           
  1363                           ; 1 bytes @ 0x2C
  1364  002C'                    	ds	3
  1365  002F'                    _fround$1125:
  1366                           
  1367                           ; 4 bytes @ 0x2F
  1368  002F'                    	ds	3
  1369  0032'                    _scale$1126:
  1370                           
  1371                           ; 4 bytes @ 0x32
  1372  0032'                    	ds	1
  1373  0033'                    _fround$1124:
  1374                           
  1375                           ; 4 bytes @ 0x33
  1376  0033'                    	ds	3
  1377  0036'                    scale@scl:
  1378                           
  1379                           ; 1 bytes @ 0x36
  1380  0036'                    	ds	1
  1381  0037'                    ?___fltol:
  1382  0037'                    fround@prec:	
  1383                           ; 4 bytes @ 0x37
  1384                           
  1385  0037'                    ___fltol@f1:	
  1386                           ; 1 bytes @ 0x37
  1387                           
  1388                           
  1389                           ; 4 bytes @ 0x37
  1390  0037'                    	ds	1
  1391  0038'                    ?___fladd:
  1392  0038'                    ___fladd@b:	
  1393                           ; 4 bytes @ 0x38
  1394                           
  1395                           
  1396                           ; 4 bytes @ 0x38
  1397  0038'                    	ds	3
  1398  003B'                    ??___fltol:
  1399                           
  1400                           ; 1 bytes @ 0x3B
  1401  003B'                    	ds	1
  1402  003C'                    ___fladd@a:
  1403                           
  1404                           ; 4 bytes @ 0x3C
  1405  003C'                    	ds	4
  1406  0040'                    ??___fladd:
  1407  0040'                    ___fltol@sign1:	
  1408                           ; 1 bytes @ 0x40
  1409                           
  1410                           
  1411                           ; 1 bytes @ 0x40
  1412  0040'                    	ds	1
  1413  0041'                    ___fltol@exp1:
  1414                           
  1415                           ; 1 bytes @ 0x41
  1416  0041'                    	ds	7
  1417  0048'                    ___fladd@signs:
  1418                           
  1419                           ; 1 bytes @ 0x48
  1420  0048'                    	ds	1
  1421  0049'                    ___fladd@aexp:
  1422                           
  1423                           ; 1 bytes @ 0x49
  1424  0049'                    	ds	1
  1425  004A'                    ___fladd@bexp:
  1426                           
  1427                           ; 1 bytes @ 0x4A
  1428  004A'                    	ds	1
  1429  004B'                    ___fladd@grs:
  1430                           
  1431                           ; 1 bytes @ 0x4B
  1432  004B'                    	ds	1
  1433  004C'                    ??_main:
  1434                           
  1435                           ; 1 bytes @ 0x4C
  1436  004C'                    	ds	3
  1437                           
  1438                           	psect	maintext
  1439  0000'                    __pmaintext:	
  1440 ;;
  1441 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1442 ;;
  1443 ;; *************** function _main *****************
  1444 ;; Defined at:
  1445 ;;		line 107 in file "LAB3.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : B00/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       3       0       0       0
  1462 ;;      Totals:         0       3       0       0       0
  1463 ;;Total ram usage:        3 bytes
  1464 ;; Hardware stack levels required when called:    6
  1465 ;; This function calls:
  1466 ;;		_LCD_Clear
  1467 ;;		_LCD_Cursor
  1468 ;;		_LCD_ON
  1469 ;;		_LCD_Print
  1470 ;;		_Setup
  1471 ;;		_USART_Init
  1472 ;;		_ValorADC
  1473 ;;		_Write_USART
  1474 ;;		_Write_USART_String
  1475 ;;		_config_ADC
  1476 ;;		_conversion
  1477 ;;		_sprintf
  1478 ;; This function is called by:
  1479 ;;		Startup code after reset
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _main
  1485  0000'                    _main:
  1486  0000'                    l5189:	
  1487                           ;incstack = 0
  1488                           ; Regs used in _main: [allreg]
  1489                           
  1490                           
  1491                           ;LAB3.c: 108:     Setup();
  1492  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_Setup
  1493  0005'                    l5191:
  1494                           
  1495                           ;LAB3.c: 109:     config_ADC();
  1496  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_config_ADC
  1497  000A'                    l5193:
  1498                           
  1499                           ;LAB3.c: 110:     USART_Init(9600);
  1500  000A' 3000               	movlw	0
  1501  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  1502  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  1503  000D' 008B'              	movwf	USART_Init@baudrate+3
  1504  000E' 3000               	movlw	0
  1505  000F' 008A'              	movwf	USART_Init@baudrate+2
  1506  0010' 3025               	movlw	37
  1507  0011' 0089'              	movwf	USART_Init@baudrate+1
  1508  0012' 3080               	movlw	128
  1509  0013' 0088'              	movwf	USART_Init@baudrate
  1510  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_Init
  1511  0019'                    l5195:
  1512                           
  1513                           ;LAB3.c: 111:     LCD_ON();
  1514  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_ON
  1515  001E'                    l5197:
  1516                           
  1517                           ;LAB3.c: 112:     LCD_Clear();
  1518  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Clear
  1519  0023'                    l5199:
  1520                           
  1521                           ;LAB3.c: 114:       vADC1 = ValorADC(0);
  1522  0023' 3000               	movlw	0
  1523  0024' 120A' 118A' 2000' 120A' 118A' 	fcall	_ValorADC
  1524  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  1525  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  1526  002B' 00CC'              	movwf	??_main
  1527  002C' 084C'              	movf	??_main,w
  1528  002D' 1683               	bsf	3,5	;RP0=1, select bank1
  1529  002E' 1303               	bcf	3,6	;RP1=0, select bank1
  1530  002F' 0080'              	movwf	_vADC1^(0+128)
  1531  0030'                    l5201:
  1532                           
  1533                           ;LAB3.c: 115:       vADC2 = ValorADC(1);
  1534  0030' 3001               	movlw	1
  1535  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_ValorADC
  1536  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  1537  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  1538  0038' 00CC'              	movwf	??_main
  1539  0039' 084C'              	movf	??_main,w
  1540  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  1541  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  1542  003C' 0080'              	movwf	_vADC2^(0+128)
  1543  003D'                    l5203:
  1544                           
  1545                           ;LAB3.c: 116:       V1 = conversion(vADC1);
  1546  003D' 0800'              	movf	_vADC1^(0+128),w
  1547  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_conversion
  1548  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  1549  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  1550  0045' 0827'              	movf	?_conversion+3,w
  1551  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  1552  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  1553  0048' 0080'              	movwf	(_V1+3)^(0+128)
  1554  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  1555  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  1556  004B' 0826'              	movf	?_conversion+2,w
  1557  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  1558  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  1559  004E' 0080'              	movwf	(_V1+2)^(0+128)
  1560  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  1561  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  1562  0051' 0825'              	movf	?_conversion+1,w
  1563  0052' 1683               	bsf	3,5	;RP0=1, select bank1
  1564  0053' 1303               	bcf	3,6	;RP1=0, select bank1
  1565  0054' 0080'              	movwf	(_V1+1)^(0+128)
  1566  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  1567  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  1568  0057' 0824'              	movf	?_conversion,w
  1569  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  1570  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  1571  005A' 0080'              	movwf	_V1^(0+128)
  1572  005B'                    l5205:
  1573                           
  1574                           ;LAB3.c: 117:       V2 = conversion(vADC2);
  1575  005B' 0800'              	movf	_vADC2^(0+128),w
  1576  005C' 120A' 118A' 2000' 120A' 118A' 	fcall	_conversion
  1577  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  1578  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  1579  0063' 0827'              	movf	?_conversion+3,w
  1580  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1581  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1582  0066' 0080'              	movwf	(_V2+3)^(0+128)
  1583  0067' 1283               	bcf	3,5	;RP0=0, select bank0
  1584  0068' 1303               	bcf	3,6	;RP1=0, select bank0
  1585  0069' 0826'              	movf	?_conversion+2,w
  1586  006A' 1683               	bsf	3,5	;RP0=1, select bank1
  1587  006B' 1303               	bcf	3,6	;RP1=0, select bank1
  1588  006C' 0080'              	movwf	(_V2+2)^(0+128)
  1589  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  1590  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  1591  006F' 0825'              	movf	?_conversion+1,w
  1592  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  1593  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  1594  0072' 0080'              	movwf	(_V2+1)^(0+128)
  1595  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  1596  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  1597  0075' 0824'              	movf	?_conversion,w
  1598  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  1599  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  1600  0078' 0080'              	movwf	_V2^(0+128)
  1601  0079'                    l5207:
  1602                           
  1603                           ;LAB3.c: 118:       Write_USART_String("V1    V2   contador \n");
  1604  0079' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1605  007A' 0084'              	movwf	Write_USART_String@a
  1606  007B' 3080               	movlw	128
  1607  007C' 0085'              	movwf	Write_USART_String@a+1
  1608  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Write_USART_String
  1609  0082'                    l5209:
  1610                           
  1611                           ;LAB3.c: 119:       sprintf(data, "%2.1f   %2.1f  %d", V1, V2, contador);
  1612  0082' 30B9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1613  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  1614  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  1615  0085' 00CC'              	movwf	??_main
  1616  0086' 084C'              	movf	??_main,w
  1617  0087' 1683               	bsf	3,5	;RP0=1, select bank1
  1618  0088' 1303               	bcf	3,6	;RP1=0, select bank1
  1619  0089' 0080'              	movwf	sprintf@f^(0+128)
  1620  008A' 0800'              	movf	(_V1+3)^(0+128),w
  1621  008B' 0081'              	movwf	((?_sprintf+3)^(0+128)+1)
  1622  008C' 0800'              	movf	(_V1+2)^(0+128),w
  1623  008D' 0081'              	movwf	((?_sprintf+2)^(0+128)+1)
  1624  008E' 0800'              	movf	(_V1+1)^(0+128),w
  1625  008F' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  1626  0090' 0800'              	movf	_V1^(0+128),w
  1627  0091' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1628  0092' 0800'              	movf	(_V2+3)^(0+128),w
  1629  0093' 0085'              	movwf	((?_sprintf+3)^(0+128)+5)
  1630  0094' 0800'              	movf	(_V2+2)^(0+128),w
  1631  0095' 0085'              	movwf	((?_sprintf+2)^(0+128)+5)
  1632  0096' 0800'              	movf	(_V2+1)^(0+128),w
  1633  0097' 0085'              	movwf	((?_sprintf+1)^(0+128)+5)
  1634  0098' 0800'              	movf	_V2^(0+128),w
  1635  0099' 0085'              	movwf	(?_sprintf^(0+128)+5)
  1636  009A' 0800'              	movf	_contador^(0+128),w
  1637  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  1638  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  1639  009D' 00CD'              	movwf	??_main+1
  1640  009E' 01CE'              	clrf	??_main+2
  1641  009F' 084D'              	movf	??_main+1,w
  1642  00A0' 1683               	bsf	3,5	;RP0=1, select bank1
  1643  00A1' 1303               	bcf	3,6	;RP1=0, select bank1
  1644  00A2' 0089'              	movwf	(?_sprintf^(0+128)+9)
  1645  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1646  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1647  00A5' 084E'              	movf	??_main+2,w
  1648  00A6' 1683               	bsf	3,5	;RP0=1, select bank1
  1649  00A7' 1303               	bcf	3,6	;RP1=0, select bank1
  1650  00A8' 0089'              	movwf	((?_sprintf+1)^(0+128)+9)
  1651  00A9' 3000'              	movlw	(low (_data| 0))& (0+255)
  1652  00AA' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1653  00AF'                    l5211:
  1654                           
  1655                           ;LAB3.c: 120:       Write_USART_String(data);
  1656  00AF' 3000'              	movlw	(low (_data| 0))& (0+255)
  1657  00B0' 0084'              	movwf	Write_USART_String@a
  1658  00B1' 3000               	movlw	0
  1659  00B2' 0085'              	movwf	Write_USART_String@a+1
  1660  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	_Write_USART_String
  1661  00B8'                    l5213:
  1662                           
  1663                           ;LAB3.c: 121:       Write_USART(13);
  1664  00B8' 300D               	movlw	13
  1665  00B9' 120A' 118A' 2000' 120A' 118A' 	fcall	_Write_USART
  1666  00BE'                    l5215:
  1667                           
  1668                           ;LAB3.c: 122:       Write_USART(10);
  1669  00BE' 300A               	movlw	10
  1670  00BF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Write_USART
  1671  00C4'                    l5217:
  1672                           
  1673                           ;LAB3.c: 123:       LCD_Clear();
  1674  00C4' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Clear
  1675  00C9'                    l5219:
  1676                           
  1677                           ;LAB3.c: 124:       LCD_Cursor(1,1);
  1678  00C9' 0186'              	clrf	LCD_Cursor@y
  1679  00CA' 0A86'              	incf	LCD_Cursor@y,f
  1680  00CB' 3001               	movlw	1
  1681  00CC' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Cursor
  1682  00D1'                    l5221:
  1683                           
  1684                           ;LAB3.c: 125:       LCD_Print("V1    V2    Conta");
  1685  00D1' 30A7               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1686  00D2' 0080'              	movwf	_LCD_Print$0
  1687  00D3' 3080               	movlw	128
  1688  00D4' 0081'              	movwf	_LCD_Print$0+1
  1689  00D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Print
  1690  00DA'                    l5223:
  1691                           
  1692                           ;LAB3.c: 126:       LCD_Cursor(2,0);
  1693  00DA' 0186'              	clrf	LCD_Cursor@y
  1694  00DB' 3002               	movlw	2
  1695  00DC' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Cursor
  1696  00E1'                    l5225:
  1697                           
  1698                           ;LAB3.c: 127:       LCD_Print(data);
  1699  00E1' 3000'              	movlw	(low (_data| 0))& (0+255)
  1700  00E2' 0080'              	movwf	_LCD_Print$0
  1701  00E3' 3000               	movlw	0
  1702  00E4' 0081'              	movwf	_LCD_Print$0+1
  1703  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Print
  1704  00EA'                    l5227:
  1705                           
  1706                           ;LAB3.c: 128:       _delay((unsigned long)((500)*(8000000/4000.0)));
  1707  00EA' 3006               	movlw	6
  1708  00EB' 1283               	bcf	3,5	;RP0=0, select bank0
  1709  00EC' 1303               	bcf	3,6	;RP1=0, select bank0
  1710  00ED' 00CE'              	movwf	??_main+2
  1711  00EE' 3013               	movlw	19
  1712  00EF' 00CD'              	movwf	??_main+1
  1713  00F0' 30AD               	movlw	173
  1714  00F1' 00CC'              	movwf	??_main
  1715  00F2'                    u9197:
  1716  00F2' 0BCC'              	decfsz	??_main,f
  1717  00F3' 2800'              	goto	u9197
  1718  00F4' 0BCD'              	decfsz	??_main+1,f
  1719  00F5' 2800'              	goto	u9197
  1720  00F6' 0BCE'              	decfsz	??_main+2,f
  1721  00F7' 2800'              	goto	u9197
  1722  00F8' 2800'              	goto	l5199
  1723  00F9' 120A' 118A' 2800'  	ljmp	start
  1724  00FC'                    __end_of_main:
  1725                           
  1726                           	psect	text1
  1727  0000'                    __ptext1:	
  1728 ;; *************** function _sprintf *****************
  1729 ;; Defined at:
  1730 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  sp              1    wreg     PTR unsigned char 
  1733 ;;		 -> data(20), 
  1734 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1735 ;;		 -> STR_2(18), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  sp              1   23[BANK3 ] PTR unsigned char 
  1738 ;;		 -> data(20), 
  1739 ;;  fval            4   19[BANK3 ] PTR unsigned char 
  1740 ;;  val             4   13[BANK3 ] unsigned long 
  1741 ;;  tmpval          4    9[BANK3 ] struct .
  1742 ;;  prec            2   24[BANK3 ] int 
  1743 ;;  eexp            2   17[BANK3 ] int 
  1744 ;;  width           2    7[BANK3 ] int 
  1745 ;;  flag            2    5[BANK3 ] unsigned short 
  1746 ;;  cp              2    0        PTR const unsigned char 
  1747 ;;  len             2    0        unsigned int 
  1748 ;;  c               1   26[BANK3 ] unsigned char 
  1749 ;;  ap              1    4[BANK3 ] PTR void [1]
  1750 ;;		 -> ?_sprintf(2), 
  1751 ;;  d               1    0        unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2    8[BANK1 ] int 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0      11       0       0
  1762 ;;      Locals:         0       0       0      27       0
  1763 ;;      Temps:          0       0       5       0       0
  1764 ;;      Totals:         0       0      16      27       0
  1765 ;;Total ram usage:       43 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    5
  1768 ;; This function calls:
  1769 ;;		___awdiv
  1770 ;;		___fladd
  1771 ;;		___fleq
  1772 ;;		___flge
  1773 ;;		___flmul
  1774 ;;		___flneg
  1775 ;;		___flsub
  1776 ;;		___fltol
  1777 ;;		___lldiv
  1778 ;;		___llmod
  1779 ;;		___wmul
  1780 ;;		___xxtofl
  1781 ;;		__div_to_l_
  1782 ;;		__tdiv_to_l_
  1783 ;;		_fround
  1784 ;;		_isdigit
  1785 ;;		_scale
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _sprintf
  1793  0000'                    _sprintf:
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1797                           ;sprintf@sp stored from wreg
  1798  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  1799  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  1800  0002' 0080'              	movwf	sprintf@sp^(0+384)
  1801  0003'                    l4895:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1804  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1805  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  1806  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  1807  0006' 0080'              	movwf	??_sprintf^(0+128)
  1808  0007' 0800'              	movf	??_sprintf^(0+128),w
  1809  0008' 1683               	bsf	3,5	;RP0=1, select bank3
  1810  0009' 1703               	bsf	3,6	;RP1=1, select bank3
  1811  000A' 0080'              	movwf	sprintf@ap^(0+384)
  1812  000B'                    L1:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1815  000B' 120A' 118A' 2800'  	goto	l5177
  1816  000E'                    l4897:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1819  000E' 3025               	movlw	37
  1820  000F' 0600'              	xorwf	sprintf@c^(0+384),w
  1821  0010' 1903               	btfsc	3,2
  1822  0011' 2800'              	goto	u8661
  1823  0012' 2800'              	goto	u8660
  1824  0013'                    u8661:
  1825  0013' 2800'              	goto	l4903
  1826  0014'                    u8660:
  1827  0014'                    l4899:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1830  0014' 0800'              	movf	sprintf@c^(0+384),w
  1831  0015' 1683               	bsf	3,5	;RP0=1, select bank1
  1832  0016' 1303               	bcf	3,6	;RP1=0, select bank1
  1833  0017' 0080'              	movwf	??_sprintf^(0+128)
  1834  0018' 1683               	bsf	3,5	;RP0=1, select bank3
  1835  0019' 1703               	bsf	3,6	;RP1=1, select bank3
  1836  001A' 0800'              	movf	sprintf@sp^(0+384),w
  1837  001B' 0084               	movwf	4
  1838  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  1839  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  1840  001E' 0800'              	movf	??_sprintf^(0+128),w
  1841  001F' 1383               	bcf	3,7	;select IRP bank0
  1842  0020' 0080               	movwf	0
  1843  0021'                    l4901:
  1844  0021' 3001               	movlw	1
  1845  0022' 0080'              	movwf	??_sprintf^(0+128)
  1846  0023' 0800'              	movf	??_sprintf^(0+128),w
  1847  0024' 1683               	bsf	3,5	;RP0=1, select bank3
  1848  0025' 1703               	bsf	3,6	;RP1=1, select bank3
  1849  0026' 0780'              	addwf	sprintf@sp^(0+384),f
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1852  0027' 2800'              	goto	L1
  1853  0028'                    l4903:
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1856  0028' 0180'              	clrf	sprintf@width^(0+384)
  1857  0029' 0180'              	clrf	(sprintf@width+1)^(0+384)
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1860  002A' 0180'              	clrf	sprintf@flag^(0+384)
  1861  002B' 0180'              	clrf	(sprintf@flag+1)^(0+384)
  1862  002C'                    l4905:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1865  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  1866  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  1867  002E' 0800'              	movf	sprintf@f^(0+128),w
  1868  002F' 0084               	movwf	4
  1869  0030' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1870  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1871  003A' 1C03               	btfss	3,0
  1872  003B' 2800'              	goto	u8671
  1873  003C' 2800'              	goto	u8670
  1874  003D'                    u8671:
  1875  003D' 2800'              	goto	l4917
  1876  003E'                    u8670:
  1877  003E'                    l4907:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1880  003E' 1683               	bsf	3,5	;RP0=1, select bank3
  1881  003F' 1703               	bsf	3,6	;RP1=1, select bank3
  1882  0040' 0180'              	clrf	sprintf@width^(0+384)
  1883  0041' 0180'              	clrf	(sprintf@width+1)^(0+384)
  1884  0042'                    l4909:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1887  0042' 300A               	movlw	10
  1888  0043' 0083'              	movwf	___wmul@multiplier
  1889  0044' 3000               	movlw	0
  1890  0045' 0084'              	movwf	___wmul@multiplier+1
  1891  0046' 1683               	bsf	3,5	;RP0=1, select bank3
  1892  0047' 1703               	bsf	3,6	;RP1=1, select bank3
  1893  0048' 0800'              	movf	(sprintf@width+1)^(0+384),w
  1894  0049' 0086'              	movwf	___wmul@multiplicand+1
  1895  004A' 0800'              	movf	sprintf@width^(0+384),w
  1896  004B' 0085'              	movwf	___wmul@multiplicand
  1897  004C' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1898  0051' 0804'              	movf	?___wmul+1,w
  1899  0052' 1683               	bsf	3,5	;RP0=1, select bank3
  1900  0053' 1703               	bsf	3,6	;RP1=1, select bank3
  1901  0054' 0080'              	movwf	(sprintf@width+1)^(0+384)
  1902  0055' 0803'              	movf	?___wmul,w
  1903  0056' 0080'              	movwf	sprintf@width^(0+384)
  1904  0057'                    l4911:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1907  0057' 1683               	bsf	3,5	;RP0=1, select bank1
  1908  0058' 1303               	bcf	3,6	;RP1=0, select bank1
  1909  0059' 0800'              	movf	sprintf@f^(0+128),w
  1910  005A' 0084               	movwf	4
  1911  005B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1912  0060' 3ED0               	addlw	208
  1913  0061' 0080'              	movwf	??_sprintf^(0+128)
  1914  0062' 30FF               	movlw	255
  1915  0063' 1803               	skipnc
  1916  0064' 3000               	movlw	0
  1917  0065' 0081'              	movwf	(??_sprintf^(0+128)+1)
  1918  0066' 0800'              	movf	??_sprintf^(0+128),w
  1919  0067' 1683               	bsf	3,5	;RP0=1, select bank3
  1920  0068' 1703               	bsf	3,6	;RP1=1, select bank3
  1921  0069' 0780'              	addwf	sprintf@width^(0+384),f
  1922  006A' 1803               	skipnc
  1923  006B' 0A80'              	incf	(sprintf@width+1)^(0+384),f
  1924  006C' 1683               	bsf	3,5	;RP0=1, select bank1
  1925  006D' 1303               	bcf	3,6	;RP1=0, select bank1
  1926  006E' 0800'              	movf	(??_sprintf+1)^(0+128),w
  1927  006F' 1683               	bsf	3,5	;RP0=1, select bank3
  1928  0070' 1703               	bsf	3,6	;RP1=1, select bank3
  1929  0071' 0780'              	addwf	(sprintf@width+1)^(0+384),f
  1930  0072'                    l4913:
  1931  0072' 3001               	movlw	1
  1932  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  1933  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  1934  0075' 0080'              	movwf	??_sprintf^(0+128)
  1935  0076' 0800'              	movf	??_sprintf^(0+128),w
  1936  0077' 0780'              	addwf	sprintf@f^(0+128),f
  1937  0078'                    l4915:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1940  0078' 0800'              	movf	sprintf@f^(0+128),w
  1941  0079' 0084               	movwf	4
  1942  007A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1943  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1944  0084' 1803               	btfsc	3,0
  1945  0085' 2800'              	goto	u8681
  1946  0086' 2800'              	goto	u8680
  1947  0087'                    u8681:
  1948  0087' 2800'              	goto	l4909
  1949  0088'                    u8680:
  1950  0088'                    l4917:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1953  0088' 1683               	bsf	3,5	;RP0=1, select bank1
  1954  0089' 1303               	bcf	3,6	;RP1=0, select bank1
  1955  008A' 0800'              	movf	sprintf@f^(0+128),w
  1956  008B' 0084               	movwf	4
  1957  008C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1958  0091' 3A2E               	xorlw	46
  1959  0092' 1D03               	skipz
  1960  0093' 2800'              	goto	u8691
  1961  0094' 2800'              	goto	u8690
  1962  0095'                    u8691:
  1963  0095' 2800'              	goto	l4933
  1964  0096'                    u8690:
  1965  0096'                    l4919:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1968  0096' 1683               	bsf	3,5	;RP0=1, select bank3
  1969  0097' 1703               	bsf	3,6	;RP1=1, select bank3
  1970  0098' 1701'              	bsf	(sprintf@flag^(0+384)+1),6
  1971  0099'                    l4921:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1974  0099' 3001               	movlw	1
  1975  009A' 1683               	bsf	3,5	;RP0=1, select bank1
  1976  009B' 1303               	bcf	3,6	;RP1=0, select bank1
  1977  009C' 0080'              	movwf	??_sprintf^(0+128)
  1978  009D' 0800'              	movf	??_sprintf^(0+128),w
  1979  009E' 0780'              	addwf	sprintf@f^(0+128),f
  1980  009F'                    l4923:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1983  009F' 1683               	bsf	3,5	;RP0=1, select bank3
  1984  00A0' 1703               	bsf	3,6	;RP1=1, select bank3
  1985  00A1' 0180'              	clrf	sprintf@prec^(0+384)
  1986  00A2' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1989  00A3' 2800'              	goto	l4931
  1990  00A4'                    l4925:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1993  00A4' 300A               	movlw	10
  1994  00A5' 0083'              	movwf	___wmul@multiplier
  1995  00A6' 3000               	movlw	0
  1996  00A7' 0084'              	movwf	___wmul@multiplier+1
  1997  00A8' 1683               	bsf	3,5	;RP0=1, select bank3
  1998  00A9' 1703               	bsf	3,6	;RP1=1, select bank3
  1999  00AA' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  2000  00AB' 0086'              	movwf	___wmul@multiplicand+1
  2001  00AC' 0800'              	movf	sprintf@prec^(0+384),w
  2002  00AD' 0085'              	movwf	___wmul@multiplicand
  2003  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2004  00B3' 0804'              	movf	?___wmul+1,w
  2005  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
  2006  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
  2007  00B6' 0080'              	movwf	(sprintf@prec+1)^(0+384)
  2008  00B7' 0803'              	movf	?___wmul,w
  2009  00B8' 0080'              	movwf	sprintf@prec^(0+384)
  2010  00B9'                    l4927:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2013  00B9' 1683               	bsf	3,5	;RP0=1, select bank1
  2014  00BA' 1303               	bcf	3,6	;RP1=0, select bank1
  2015  00BB' 0800'              	movf	sprintf@f^(0+128),w
  2016  00BC' 0084               	movwf	4
  2017  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2018  00C2' 3ED0               	addlw	208
  2019  00C3' 0080'              	movwf	??_sprintf^(0+128)
  2020  00C4' 30FF               	movlw	255
  2021  00C5' 1803               	skipnc
  2022  00C6' 3000               	movlw	0
  2023  00C7' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2024  00C8' 0800'              	movf	??_sprintf^(0+128),w
  2025  00C9' 1683               	bsf	3,5	;RP0=1, select bank3
  2026  00CA' 1703               	bsf	3,6	;RP1=1, select bank3
  2027  00CB' 0780'              	addwf	sprintf@prec^(0+384),f
  2028  00CC' 1803               	skipnc
  2029  00CD' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
  2030  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  2031  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  2032  00D0' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2033  00D1' 1683               	bsf	3,5	;RP0=1, select bank3
  2034  00D2' 1703               	bsf	3,6	;RP1=1, select bank3
  2035  00D3' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
  2036  00D4'                    l4929:
  2037  00D4' 3001               	movlw	1
  2038  00D5' 1683               	bsf	3,5	;RP0=1, select bank1
  2039  00D6' 1303               	bcf	3,6	;RP1=0, select bank1
  2040  00D7' 0080'              	movwf	??_sprintf^(0+128)
  2041  00D8' 0800'              	movf	??_sprintf^(0+128),w
  2042  00D9' 0780'              	addwf	sprintf@f^(0+128),f
  2043  00DA'                    l4931:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2046  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2047  00DB' 0800'              	movf	sprintf@f^(0+128),w
  2048  00DC' 0084               	movwf	4
  2049  00DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2050  00E2' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2051  00E7' 1803               	btfsc	3,0
  2052  00E8' 2800'              	goto	u8701
  2053  00E9' 2800'              	goto	u8700
  2054  00EA'                    u8701:
  2055  00EA' 2800'              	goto	l4925
  2056  00EB'                    u8700:
  2057  00EB' 2800'              	goto	l4939
  2058  00EC'                    l4933:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2061  00EC' 1683               	bsf	3,5	;RP0=1, select bank3
  2062  00ED' 1703               	bsf	3,6	;RP1=1, select bank3
  2063  00EE' 0180'              	clrf	sprintf@prec^(0+384)
  2064  00EF' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  2065  00F0'                    l4935:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2068  00F0' 1601'              	bsf	(sprintf@flag^(0+384)+1),4
  2069  00F1' 2800'              	goto	l4939
  2070  00F2'                    l374:	
  2071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2072                           
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2075  00F2' 1683               	bsf	3,5	;RP0=1, select bank3
  2076  00F3' 1703               	bsf	3,6	;RP1=1, select bank3
  2077  00F4' 1501'              	bsf	(sprintf@flag^(0+384)+1),2
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2080  00F5' 2800'              	goto	l4941
  2081  00F6'                    l4939:
  2082  00F6' 3001               	movlw	1
  2083  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
  2084  00F8' 1303               	bcf	3,6	;RP1=0, select bank1
  2085  00F9' 0780'              	addwf	sprintf@f^(0+128),f
  2086  00FA' 30FF               	movlw	-1
  2087  00FB' 0700'              	addwf	sprintf@f^(0+128),w
  2088  00FC' 0084               	movwf	4
  2089  00FD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2090  0102' 1683               	bsf	3,5	;RP0=1, select bank3
  2091  0103' 1703               	bsf	3,6	;RP1=1, select bank3
  2092  0104' 0080'              	movwf	sprintf@c^(0+384)
  2093  0105' 1683               	bsf	3,5	;RP0=1, select bank1
  2094  0106' 1303               	bcf	3,6	;RP1=0, select bank1
  2095  0107' 0080'              	movwf	??_sprintf^(0+128)
  2096  0108' 0181'              	clrf	(??_sprintf^(0+128)+1)
  2097                           
  2098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2099                           ; Switch size 1, requested type "simple"
  2100                           ; Number of cases is 1, Range of values is 0 to 0
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte            4     3 (average)
  2104                           ; direct_byte           11     8 (fixed)
  2105                           ; jumptable            260     6 (fixed)
  2106                           ;	Chosen strategy is simple_byte
  2107  0109' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2108  010A' 3A00               	xorlw	0	; case 0
  2109  010B' 1903               	skipnz
  2110  010C' 2800'              	goto	l5279
  2111  010D' 2800'              	goto	L1
  2112  010E'                    l5279:
  2113                           
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 4, Range of values is 0 to 105
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte           13     7 (average)
  2119                           ; jumptable            260     6 (fixed)
  2120                           ;	Chosen strategy is simple_byte
  2121  010E' 0800'              	movf	??_sprintf^(0+128),w
  2122  010F' 3A00               	xorlw	0	; case 0
  2123  0110' 1903               	skipnz
  2124  0111' 2800'              	goto	L3
  2125  0112' 3A64               	xorlw	100	; case 100
  2126  0113' 1903               	skipnz
  2127  0114' 2800'              	goto	l4941
  2128  0115' 3A02               	xorlw	2	; case 102
  2129  0116' 1903               	skipnz
  2130  0117' 2800'              	goto	l374
  2131  0118' 3A0F               	xorlw	15	; case 105
  2132  0119' 1903               	skipnz
  2133  011A' 2800'              	goto	l4941
  2134  011B' 2800'              	goto	L1
  2135  011C'                    l4941:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2138  011C' 3000               	movlw	0
  2139  011D' 1683               	bsf	3,5	;RP0=1, select bank3
  2140  011E' 1703               	bsf	3,6	;RP1=1, select bank3
  2141  011F' 0500'              	andwf	sprintf@flag^(0+384),w
  2142  0120' 1683               	bsf	3,5	;RP0=1, select bank1
  2143  0121' 1303               	bcf	3,6	;RP1=0, select bank1
  2144  0122' 0080'              	movwf	??_sprintf^(0+128)
  2145  0123' 3007               	movlw	7
  2146  0124' 1683               	bsf	3,5	;RP0=1, select bank3
  2147  0125' 1703               	bsf	3,6	;RP1=1, select bank3
  2148  0126' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
  2149  0127' 1683               	bsf	3,5	;RP0=1, select bank1
  2150  0128' 1303               	bcf	3,6	;RP1=0, select bank1
  2151  0129' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2152  012A' 0800'              	movf	??_sprintf^(0+128),w
  2153  012B' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2154  012C' 1903               	btfsc	3,2
  2155  012D' 2800'              	goto	u8711
  2156  012E' 2800'              	goto	u8710
  2157  012F'                    u8711:
  2158  012F' 120A' 118A' 2800'  	goto	l5099
  2159  0132'                    u8710:
  2160  0132'                    l4943:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2163  0132' 1683               	bsf	3,5	;RP0=1, select bank3
  2164  0133' 1703               	bsf	3,6	;RP1=1, select bank3
  2165  0134' 1E00'              	btfss	(sprintf@flag+1)^(0+384),4
  2166  0135' 2800'              	goto	u8721
  2167  0136' 2800'              	goto	u8720
  2168  0137'                    u8721:
  2169  0137' 2800'              	goto	l4947
  2170  0138'                    u8720:
  2171  0138'                    l4945:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2174  0138' 3006               	movlw	6
  2175  0139' 0080'              	movwf	sprintf@prec^(0+384)
  2176  013A' 3000               	movlw	0
  2177  013B' 0081'              	movwf	(sprintf@prec^(0+384)+1)
  2178  013C'                    l4947:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2181  013C' 0800'              	movf	sprintf@ap^(0+384),w
  2182  013D' 0084               	movwf	4
  2183  013E' 1383               	bcf	3,7	;select IRP bank0
  2184  013F' 0800               	movf	0,w
  2185  0140' 0080'              	movwf	sprintf@fval^(0+384)
  2186  0141' 0A84               	incf	4,f
  2187  0142' 0800               	movf	0,w
  2188  0143' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2189  0144' 0A84               	incf	4,f
  2190  0145' 0800               	movf	0,w
  2191  0146' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2192  0147' 0A84               	incf	4,f
  2193  0148' 0800               	movf	0,w
  2194  0149' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2195  014A'                    l4949:
  2196  014A' 3004               	movlw	4
  2197  014B' 1683               	bsf	3,5	;RP0=1, select bank1
  2198  014C' 1303               	bcf	3,6	;RP1=0, select bank1
  2199  014D' 0080'              	movwf	??_sprintf^(0+128)
  2200  014E' 0800'              	movf	??_sprintf^(0+128),w
  2201  014F' 1683               	bsf	3,5	;RP0=1, select bank3
  2202  0150' 1703               	bsf	3,6	;RP1=1, select bank3
  2203  0151' 0780'              	addwf	sprintf@ap^(0+384),f
  2204  0152'                    l4951:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2207  0152' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2208  0153' 1283               	bcf	3,5	;RP0=0, select bank0
  2209  0154' 1303               	bcf	3,6	;RP1=0, select bank0
  2210  0155' 0083'              	movwf	___flge@ff1+3
  2211  0156' 1683               	bsf	3,5	;RP0=1, select bank3
  2212  0157' 1703               	bsf	3,6	;RP1=1, select bank3
  2213  0158' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2214  0159' 1283               	bcf	3,5	;RP0=0, select bank0
  2215  015A' 1303               	bcf	3,6	;RP1=0, select bank0
  2216  015B' 0082'              	movwf	___flge@ff1+2
  2217  015C' 1683               	bsf	3,5	;RP0=1, select bank3
  2218  015D' 1703               	bsf	3,6	;RP1=1, select bank3
  2219  015E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2220  015F' 1283               	bcf	3,5	;RP0=0, select bank0
  2221  0160' 1303               	bcf	3,6	;RP1=0, select bank0
  2222  0161' 0081'              	movwf	___flge@ff1+1
  2223  0162' 1683               	bsf	3,5	;RP0=1, select bank3
  2224  0163' 1703               	bsf	3,6	;RP1=1, select bank3
  2225  0164' 0800'              	movf	sprintf@fval^(0+384),w
  2226  0165' 1283               	bcf	3,5	;RP0=0, select bank0
  2227  0166' 1303               	bcf	3,6	;RP1=0, select bank0
  2228  0167' 0080'              	movwf	___flge@ff1
  2229  0168' 3000               	movlw	0
  2230  0169' 0087'              	movwf	___flge@ff2+3
  2231  016A' 3000               	movlw	0
  2232  016B' 0086'              	movwf	___flge@ff2+2
  2233  016C' 3000               	movlw	0
  2234  016D' 0085'              	movwf	___flge@ff2+1
  2235  016E' 3000               	movlw	0
  2236  016F' 0084'              	movwf	___flge@ff2
  2237  0170' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2238  0175' 1803               	btfsc	3,0
  2239  0176' 2800'              	goto	u8731
  2240  0177' 2800'              	goto	u8730
  2241  0178'                    u8731:
  2242  0178' 2800'              	goto	l4957
  2243  0179'                    u8730:
  2244  0179'                    l4953:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2247  0179' 1683               	bsf	3,5	;RP0=1, select bank3
  2248  017A' 1703               	bsf	3,6	;RP1=1, select bank3
  2249  017B' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2250  017C' 0086'              	movwf	___flneg@f1+3
  2251  017D' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2252  017E' 0085'              	movwf	___flneg@f1+2
  2253  017F' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2254  0180' 0084'              	movwf	___flneg@f1+1
  2255  0181' 0800'              	movf	sprintf@fval^(0+384),w
  2256  0182' 0083'              	movwf	___flneg@f1
  2257  0183' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2258  0188' 0806'              	movf	?___flneg+3,w
  2259  0189' 1683               	bsf	3,5	;RP0=1, select bank3
  2260  018A' 1703               	bsf	3,6	;RP1=1, select bank3
  2261  018B' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2262  018C' 0805'              	movf	?___flneg+2,w
  2263  018D' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2264  018E' 0804'              	movf	?___flneg+1,w
  2265  018F' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2266  0190' 0803'              	movf	?___flneg,w
  2267  0191' 0080'              	movwf	sprintf@fval^(0+384)
  2268  0192'                    l4955:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2271  0192' 3003               	movlw	3
  2272  0193' 0480'              	iorwf	sprintf@flag^(0+384),f
  2273  0194' 3000               	movlw	0
  2274  0195' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
  2275  0196'                    l4957:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2278  0196' 1683               	bsf	3,5	;RP0=1, select bank3
  2279  0197' 1703               	bsf	3,6	;RP1=1, select bank3
  2280  0198' 0180'              	clrf	sprintf@eexp^(0+384)
  2281  0199' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
  2282  019A'                    l4959:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2285  019A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2286  019B' 1283               	bcf	3,5	;RP0=0, select bank0
  2287  019C' 1303               	bcf	3,6	;RP1=0, select bank0
  2288  019D' 0083'              	movwf	___fleq@ff1+3
  2289  019E' 1683               	bsf	3,5	;RP0=1, select bank3
  2290  019F' 1703               	bsf	3,6	;RP1=1, select bank3
  2291  01A0' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2292  01A1' 1283               	bcf	3,5	;RP0=0, select bank0
  2293  01A2' 1303               	bcf	3,6	;RP1=0, select bank0
  2294  01A3' 0082'              	movwf	___fleq@ff1+2
  2295  01A4' 1683               	bsf	3,5	;RP0=1, select bank3
  2296  01A5' 1703               	bsf	3,6	;RP1=1, select bank3
  2297  01A6' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2298  01A7' 1283               	bcf	3,5	;RP0=0, select bank0
  2299  01A8' 1303               	bcf	3,6	;RP1=0, select bank0
  2300  01A9' 0081'              	movwf	___fleq@ff1+1
  2301  01AA' 1683               	bsf	3,5	;RP0=1, select bank3
  2302  01AB' 1703               	bsf	3,6	;RP1=1, select bank3
  2303  01AC' 0800'              	movf	sprintf@fval^(0+384),w
  2304  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  2305  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  2306  01AF' 0080'              	movwf	___fleq@ff1
  2307  01B0' 3000               	movlw	0
  2308  01B1' 0087'              	movwf	___fleq@ff2+3
  2309  01B2' 3000               	movlw	0
  2310  01B3' 0086'              	movwf	___fleq@ff2+2
  2311  01B4' 3000               	movlw	0
  2312  01B5' 0085'              	movwf	___fleq@ff2+1
  2313  01B6' 3000               	movlw	0
  2314  01B7' 0084'              	movwf	___fleq@ff2
  2315  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2316  01BD' 1803               	btfsc	3,0
  2317  01BE' 2800'              	goto	u8741
  2318  01BF' 2800'              	goto	u8740
  2319  01C0'                    u8741:
  2320  01C0' 2800'              	goto	l4985
  2321  01C1'                    u8740:
  2322  01C1'                    l4961:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2325  01C1' 1003               	clrc
  2326  01C2' 1683               	bsf	3,5	;RP0=1, select bank3
  2327  01C3' 1703               	bsf	3,6	;RP1=1, select bank3
  2328  01C4' 0D00'              	rlf	(sprintf@fval+2)^(0+384),w
  2329  01C5' 0D00'              	rlf	(sprintf@fval+3)^(0+384),w
  2330  01C6' 3E82               	addlw	130
  2331  01C7' 0080'              	movwf	sprintf@eexp^(0+384)
  2332  01C8' 30FF               	movlw	255
  2333  01C9' 1803               	skipnc
  2334  01CA' 3000               	movlw	0
  2335  01CB' 0081'              	movwf	(sprintf@eexp^(0+384)+1)
  2336  01CC'                    l4963:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2339  01CC' 30FF               	movlw	255
  2340  01CD' 0780'              	addwf	sprintf@eexp^(0+384),f
  2341  01CE' 1803               	skipnc
  2342  01CF' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2343  01D0' 30FF               	movlw	255
  2344  01D1' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2345  01D2'                    l4965:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2348  01D2' 3003               	movlw	3
  2349  01D3' 0083'              	movwf	___wmul@multiplier
  2350  01D4' 3000               	movlw	0
  2351  01D5' 0084'              	movwf	___wmul@multiplier+1
  2352  01D6' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2353  01D7' 0086'              	movwf	___wmul@multiplicand+1
  2354  01D8' 0800'              	movf	sprintf@eexp^(0+384),w
  2355  01D9' 0085'              	movwf	___wmul@multiplicand
  2356  01DA' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2357  01DF' 0804'              	movf	?___wmul+1,w
  2358  01E0' 1683               	bsf	3,5	;RP0=1, select bank3
  2359  01E1' 1703               	bsf	3,6	;RP1=1, select bank3
  2360  01E2' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  2361  01E3' 0803'              	movf	?___wmul,w
  2362  01E4' 0080'              	movwf	sprintf@eexp^(0+384)
  2363  01E5'                    l4967:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2366  01E5' 300A               	movlw	10
  2367  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2368  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2369  01E8' 0080'              	movwf	___awdiv@divisor
  2370  01E9' 3000               	movlw	0
  2371  01EA' 0081'              	movwf	___awdiv@divisor+1
  2372  01EB' 1683               	bsf	3,5	;RP0=1, select bank3
  2373  01EC' 1703               	bsf	3,6	;RP1=1, select bank3
  2374  01ED' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2375  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  2376  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  2377  01F0' 0083'              	movwf	___awdiv@dividend+1
  2378  01F1' 1683               	bsf	3,5	;RP0=1, select bank3
  2379  01F2' 1703               	bsf	3,6	;RP1=1, select bank3
  2380  01F3' 0800'              	movf	sprintf@eexp^(0+384),w
  2381  01F4' 1283               	bcf	3,5	;RP0=0, select bank0
  2382  01F5' 1303               	bcf	3,6	;RP1=0, select bank0
  2383  01F6' 0082'              	movwf	___awdiv@dividend
  2384  01F7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2385  01FC' 1283               	bcf	3,5	;RP0=0, select bank0
  2386  01FD' 1303               	bcf	3,6	;RP1=0, select bank0
  2387  01FE' 0801'              	movf	?___awdiv+1,w
  2388  01FF' 1683               	bsf	3,5	;RP0=1, select bank3
  2389  0200' 1703               	bsf	3,6	;RP1=1, select bank3
  2390  0201' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  2391  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  2392  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  2393  0204' 0800'              	movf	?___awdiv,w
  2394  0205' 1683               	bsf	3,5	;RP0=1, select bank3
  2395  0206' 1703               	bsf	3,6	;RP1=1, select bank3
  2396  0207' 0080'              	movwf	sprintf@eexp^(0+384)
  2397  0208'                    l4969:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2400  0208' 1F80'              	btfss	(sprintf@eexp+1)^(0+384),7
  2401  0209' 2800'              	goto	u8751
  2402  020A' 2800'              	goto	u8750
  2403  020B'                    u8751:
  2404  020B' 2800'              	goto	l4973
  2405  020C'                    u8750:
  2406  020C'                    l4971:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2409  020C' 30FF               	movlw	255
  2410  020D' 0780'              	addwf	sprintf@eexp^(0+384),f
  2411  020E' 1803               	skipnc
  2412  020F' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2413  0210' 30FF               	movlw	255
  2414  0211' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2415  0212'                    l4973:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2418  0212' 0300'              	decf	sprintf@eexp^(0+384),w
  2419  0213' 3AFF               	xorlw	255
  2420  0214' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2421  0219' 1283               	bcf	3,5	;RP0=0, select bank0
  2422  021A' 1303               	bcf	3,6	;RP1=0, select bank0
  2423  021B' 0827'              	movf	?_scale+3,w
  2424  021C' 1683               	bsf	3,5	;RP0=1, select bank3
  2425  021D' 1703               	bsf	3,6	;RP1=1, select bank3
  2426  021E' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  2427  021F' 1283               	bcf	3,5	;RP0=0, select bank0
  2428  0220' 1303               	bcf	3,6	;RP1=0, select bank0
  2429  0221' 0826'              	movf	?_scale+2,w
  2430  0222' 1683               	bsf	3,5	;RP0=1, select bank3
  2431  0223' 1703               	bsf	3,6	;RP1=1, select bank3
  2432  0224' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  2433  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  2434  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  2435  0227' 0825'              	movf	?_scale+1,w
  2436  0228' 1683               	bsf	3,5	;RP0=1, select bank3
  2437  0229' 1703               	bsf	3,6	;RP1=1, select bank3
  2438  022A' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  2439  022B' 1283               	bcf	3,5	;RP0=0, select bank0
  2440  022C' 1303               	bcf	3,6	;RP1=0, select bank0
  2441  022D' 0824'              	movf	?_scale,w
  2442  022E' 1683               	bsf	3,5	;RP0=1, select bank3
  2443  022F' 1703               	bsf	3,6	;RP1=1, select bank3
  2444  0230' 0080'              	movwf	sprintf@tmpval^(0+384)
  2445  0231'                    l4975:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2448  0231' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2449  0232' 1283               	bcf	3,5	;RP0=0, select bank0
  2450  0233' 1303               	bcf	3,6	;RP1=0, select bank0
  2451  0234' 008D'              	movwf	___flmul@b+3
  2452  0235' 1683               	bsf	3,5	;RP0=1, select bank3
  2453  0236' 1703               	bsf	3,6	;RP1=1, select bank3
  2454  0237' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2455  0238' 1283               	bcf	3,5	;RP0=0, select bank0
  2456  0239' 1303               	bcf	3,6	;RP1=0, select bank0
  2457  023A' 008C'              	movwf	___flmul@b+2
  2458  023B' 1683               	bsf	3,5	;RP0=1, select bank3
  2459  023C' 1703               	bsf	3,6	;RP1=1, select bank3
  2460  023D' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2461  023E' 1283               	bcf	3,5	;RP0=0, select bank0
  2462  023F' 1303               	bcf	3,6	;RP1=0, select bank0
  2463  0240' 008B'              	movwf	___flmul@b+1
  2464  0241' 1683               	bsf	3,5	;RP0=1, select bank3
  2465  0242' 1703               	bsf	3,6	;RP1=1, select bank3
  2466  0243' 0800'              	movf	sprintf@fval^(0+384),w
  2467  0244' 1283               	bcf	3,5	;RP0=0, select bank0
  2468  0245' 1303               	bcf	3,6	;RP1=0, select bank0
  2469  0246' 008A'              	movwf	___flmul@b
  2470  0247' 1683               	bsf	3,5	;RP0=1, select bank3
  2471  0248' 1703               	bsf	3,6	;RP1=1, select bank3
  2472  0249' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2473  024A' 1283               	bcf	3,5	;RP0=0, select bank0
  2474  024B' 1303               	bcf	3,6	;RP1=0, select bank0
  2475  024C' 0091'              	movwf	___flmul@a+3
  2476  024D' 1683               	bsf	3,5	;RP0=1, select bank3
  2477  024E' 1703               	bsf	3,6	;RP1=1, select bank3
  2478  024F' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2479  0250' 1283               	bcf	3,5	;RP0=0, select bank0
  2480  0251' 1303               	bcf	3,6	;RP1=0, select bank0
  2481  0252' 0090'              	movwf	___flmul@a+2
  2482  0253' 1683               	bsf	3,5	;RP0=1, select bank3
  2483  0254' 1703               	bsf	3,6	;RP1=1, select bank3
  2484  0255' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2485  0256' 1283               	bcf	3,5	;RP0=0, select bank0
  2486  0257' 1303               	bcf	3,6	;RP1=0, select bank0
  2487  0258' 008F'              	movwf	___flmul@a+1
  2488  0259' 1683               	bsf	3,5	;RP0=1, select bank3
  2489  025A' 1703               	bsf	3,6	;RP1=1, select bank3
  2490  025B' 0800'              	movf	sprintf@tmpval^(0+384),w
  2491  025C' 1283               	bcf	3,5	;RP0=0, select bank0
  2492  025D' 1303               	bcf	3,6	;RP1=0, select bank0
  2493  025E' 008E'              	movwf	___flmul@a
  2494  025F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2495  0264' 1283               	bcf	3,5	;RP0=0, select bank0
  2496  0265' 1303               	bcf	3,6	;RP1=0, select bank0
  2497  0266' 080D'              	movf	?___flmul+3,w
  2498  0267' 1683               	bsf	3,5	;RP0=1, select bank3
  2499  0268' 1703               	bsf	3,6	;RP1=1, select bank3
  2500  0269' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  2501  026A' 1283               	bcf	3,5	;RP0=0, select bank0
  2502  026B' 1303               	bcf	3,6	;RP1=0, select bank0
  2503  026C' 080C'              	movf	?___flmul+2,w
  2504  026D' 1683               	bsf	3,5	;RP0=1, select bank3
  2505  026E' 1703               	bsf	3,6	;RP1=1, select bank3
  2506  026F' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  2507  0270' 1283               	bcf	3,5	;RP0=0, select bank0
  2508  0271' 1303               	bcf	3,6	;RP1=0, select bank0
  2509  0272' 080B'              	movf	?___flmul+1,w
  2510  0273' 1683               	bsf	3,5	;RP0=1, select bank3
  2511  0274' 1703               	bsf	3,6	;RP1=1, select bank3
  2512  0275' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  2513  0276' 1283               	bcf	3,5	;RP0=0, select bank0
  2514  0277' 1303               	bcf	3,6	;RP1=0, select bank0
  2515  0278' 080A'              	movf	?___flmul,w
  2516  0279' 1683               	bsf	3,5	;RP0=1, select bank3
  2517  027A' 1703               	bsf	3,6	;RP1=1, select bank3
  2518  027B' 0080'              	movwf	sprintf@tmpval^(0+384)
  2519  027C'                    l4977:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2522  027C' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2523  027D' 1283               	bcf	3,5	;RP0=0, select bank0
  2524  027E' 1303               	bcf	3,6	;RP1=0, select bank0
  2525  027F' 0083'              	movwf	___flge@ff1+3
  2526  0280' 1683               	bsf	3,5	;RP0=1, select bank3
  2527  0281' 1703               	bsf	3,6	;RP1=1, select bank3
  2528  0282' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2529  0283' 1283               	bcf	3,5	;RP0=0, select bank0
  2530  0284' 1303               	bcf	3,6	;RP1=0, select bank0
  2531  0285' 0082'              	movwf	___flge@ff1+2
  2532  0286' 1683               	bsf	3,5	;RP0=1, select bank3
  2533  0287' 1703               	bsf	3,6	;RP1=1, select bank3
  2534  0288' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2535  0289' 1283               	bcf	3,5	;RP0=0, select bank0
  2536  028A' 1303               	bcf	3,6	;RP1=0, select bank0
  2537  028B' 0081'              	movwf	___flge@ff1+1
  2538  028C' 1683               	bsf	3,5	;RP0=1, select bank3
  2539  028D' 1703               	bsf	3,6	;RP1=1, select bank3
  2540  028E' 0800'              	movf	sprintf@tmpval^(0+384),w
  2541  028F' 1283               	bcf	3,5	;RP0=0, select bank0
  2542  0290' 1303               	bcf	3,6	;RP1=0, select bank0
  2543  0291' 0080'              	movwf	___flge@ff1
  2544  0292' 303F               	movlw	63
  2545  0293' 0087'              	movwf	___flge@ff2+3
  2546  0294' 3080               	movlw	128
  2547  0295' 0086'              	movwf	___flge@ff2+2
  2548  0296' 3000               	movlw	0
  2549  0297' 0085'              	movwf	___flge@ff2+1
  2550  0298' 3000               	movlw	0
  2551  0299' 0084'              	movwf	___flge@ff2
  2552  029A' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2553  029F' 1803               	btfsc	3,0
  2554  02A0' 2800'              	goto	u8761
  2555  02A1' 2800'              	goto	u8760
  2556  02A2'                    u8761:
  2557  02A2' 2800'              	goto	l4981
  2558  02A3'                    u8760:
  2559  02A3'                    l4979:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2562  02A3' 30FF               	movlw	255
  2563  02A4' 1683               	bsf	3,5	;RP0=1, select bank3
  2564  02A5' 1703               	bsf	3,6	;RP1=1, select bank3
  2565  02A6' 0780'              	addwf	sprintf@eexp^(0+384),f
  2566  02A7' 1803               	skipnc
  2567  02A8' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2568  02A9' 30FF               	movlw	255
  2569  02AA' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2570  02AB' 2800'              	goto	l4985
  2571  02AC'                    l4981:
  2572  02AC' 1683               	bsf	3,5	;RP0=1, select bank3
  2573  02AD' 1703               	bsf	3,6	;RP1=1, select bank3
  2574  02AE' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2575  02AF' 1283               	bcf	3,5	;RP0=0, select bank0
  2576  02B0' 1303               	bcf	3,6	;RP1=0, select bank0
  2577  02B1' 0083'              	movwf	___flge@ff1+3
  2578  02B2' 1683               	bsf	3,5	;RP0=1, select bank3
  2579  02B3' 1703               	bsf	3,6	;RP1=1, select bank3
  2580  02B4' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2581  02B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2582  02B6' 1303               	bcf	3,6	;RP1=0, select bank0
  2583  02B7' 0082'              	movwf	___flge@ff1+2
  2584  02B8' 1683               	bsf	3,5	;RP0=1, select bank3
  2585  02B9' 1703               	bsf	3,6	;RP1=1, select bank3
  2586  02BA' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2587  02BB' 1283               	bcf	3,5	;RP0=0, select bank0
  2588  02BC' 1303               	bcf	3,6	;RP1=0, select bank0
  2589  02BD' 0081'              	movwf	___flge@ff1+1
  2590  02BE' 1683               	bsf	3,5	;RP0=1, select bank3
  2591  02BF' 1703               	bsf	3,6	;RP1=1, select bank3
  2592  02C0' 0800'              	movf	sprintf@tmpval^(0+384),w
  2593  02C1' 1283               	bcf	3,5	;RP0=0, select bank0
  2594  02C2' 1303               	bcf	3,6	;RP1=0, select bank0
  2595  02C3' 0080'              	movwf	___flge@ff1
  2596  02C4' 3041               	movlw	65
  2597  02C5' 0087'              	movwf	___flge@ff2+3
  2598  02C6' 3020               	movlw	32
  2599  02C7' 0086'              	movwf	___flge@ff2+2
  2600  02C8' 3000               	movlw	0
  2601  02C9' 0085'              	movwf	___flge@ff2+1
  2602  02CA' 3000               	movlw	0
  2603  02CB' 0084'              	movwf	___flge@ff2
  2604  02CC' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2605  02D1' 1C03               	btfss	3,0
  2606  02D2' 2800'              	goto	u8771
  2607  02D3' 2800'              	goto	u8770
  2608  02D4'                    u8771:
  2609  02D4' 2800'              	goto	l4985
  2610  02D5'                    u8770:
  2611  02D5'                    l4983:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2614  02D5' 3001               	movlw	1
  2615  02D6' 1683               	bsf	3,5	;RP0=1, select bank3
  2616  02D7' 1703               	bsf	3,6	;RP1=1, select bank3
  2617  02D8' 0780'              	addwf	sprintf@eexp^(0+384),f
  2618  02D9' 1803               	skipnc
  2619  02DA' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2620  02DB' 3000               	movlw	0
  2621  02DC' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2622  02DD'                    l4985:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2625  02DD' 1683               	bsf	3,5	;RP0=1, select bank3
  2626  02DE' 1703               	bsf	3,6	;RP1=1, select bank3
  2627  02DF' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  2628  02E0' 3A80               	xorlw	128
  2629  02E1' 00FF               	movwf	btemp+1
  2630  02E2' 3080               	movlw	128
  2631  02E3' 027F               	subwf	btemp+1,w
  2632  02E4' 1D03               	skipz
  2633  02E5' 2800'              	goto	u8785
  2634  02E6' 300D               	movlw	13
  2635  02E7' 0200'              	subwf	sprintf@prec^(0+384),w
  2636  02E8'                    u8785:
  2637  02E8' 1803               	skipnc
  2638  02E9' 2800'              	goto	u8781
  2639  02EA' 2800'              	goto	u8780
  2640  02EB'                    u8781:
  2641  02EB' 2800'              	goto	l4989
  2642  02EC'                    u8780:
  2643  02EC'                    l4987:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2646  02EC' 1683               	bsf	3,5	;RP0=1, select bank3
  2647  02ED' 1703               	bsf	3,6	;RP1=1, select bank3
  2648  02EE' 0800'              	movf	sprintf@prec^(0+384),w
  2649  02EF' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2650  02F4' 1283               	bcf	3,5	;RP0=0, select bank0
  2651  02F5' 1303               	bcf	3,6	;RP1=0, select bank0
  2652  02F6' 0827'              	movf	?_fround+3,w
  2653  02F7' 00BB'              	movwf	___fladd@b+3
  2654  02F8' 0826'              	movf	?_fround+2,w
  2655  02F9' 00BA'              	movwf	___fladd@b+2
  2656  02FA' 0825'              	movf	?_fround+1,w
  2657  02FB' 00B9'              	movwf	___fladd@b+1
  2658  02FC' 0824'              	movf	?_fround,w
  2659  02FD' 00B8'              	movwf	___fladd@b
  2660  02FE' 1683               	bsf	3,5	;RP0=1, select bank3
  2661  02FF' 1703               	bsf	3,6	;RP1=1, select bank3
  2662  0300' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2663  0301' 1283               	bcf	3,5	;RP0=0, select bank0
  2664  0302' 1303               	bcf	3,6	;RP1=0, select bank0
  2665  0303' 00BF'              	movwf	___fladd@a+3
  2666  0304' 1683               	bsf	3,5	;RP0=1, select bank3
  2667  0305' 1703               	bsf	3,6	;RP1=1, select bank3
  2668  0306' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2669  0307' 1283               	bcf	3,5	;RP0=0, select bank0
  2670  0308' 1303               	bcf	3,6	;RP1=0, select bank0
  2671  0309' 00BE'              	movwf	___fladd@a+2
  2672  030A' 1683               	bsf	3,5	;RP0=1, select bank3
  2673  030B' 1703               	bsf	3,6	;RP1=1, select bank3
  2674  030C' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2675  030D' 1283               	bcf	3,5	;RP0=0, select bank0
  2676  030E' 1303               	bcf	3,6	;RP1=0, select bank0
  2677  030F' 00BD'              	movwf	___fladd@a+1
  2678  0310' 1683               	bsf	3,5	;RP0=1, select bank3
  2679  0311' 1703               	bsf	3,6	;RP1=1, select bank3
  2680  0312' 0800'              	movf	sprintf@fval^(0+384),w
  2681  0313' 1283               	bcf	3,5	;RP0=0, select bank0
  2682  0314' 1303               	bcf	3,6	;RP1=0, select bank0
  2683  0315' 00BC'              	movwf	___fladd@a
  2684  0316' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2685  031B' 1283               	bcf	3,5	;RP0=0, select bank0
  2686  031C' 1303               	bcf	3,6	;RP1=0, select bank0
  2687  031D' 083B'              	movf	?___fladd+3,w
  2688  031E' 1683               	bsf	3,5	;RP0=1, select bank3
  2689  031F' 1703               	bsf	3,6	;RP1=1, select bank3
  2690  0320' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2691  0321' 1283               	bcf	3,5	;RP0=0, select bank0
  2692  0322' 1303               	bcf	3,6	;RP1=0, select bank0
  2693  0323' 083A'              	movf	?___fladd+2,w
  2694  0324' 1683               	bsf	3,5	;RP0=1, select bank3
  2695  0325' 1703               	bsf	3,6	;RP1=1, select bank3
  2696  0326' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2697  0327' 1283               	bcf	3,5	;RP0=0, select bank0
  2698  0328' 1303               	bcf	3,6	;RP1=0, select bank0
  2699  0329' 0839'              	movf	?___fladd+1,w
  2700  032A' 1683               	bsf	3,5	;RP0=1, select bank3
  2701  032B' 1703               	bsf	3,6	;RP1=1, select bank3
  2702  032C' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2703  032D' 1283               	bcf	3,5	;RP0=0, select bank0
  2704  032E' 1303               	bcf	3,6	;RP1=0, select bank0
  2705  032F' 0838'              	movf	?___fladd,w
  2706  0330' 1683               	bsf	3,5	;RP0=1, select bank3
  2707  0331' 1703               	bsf	3,6	;RP1=1, select bank3
  2708  0332' 0080'              	movwf	sprintf@fval^(0+384)
  2709  0333'                    l4989:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2712  0333' 1683               	bsf	3,5	;RP0=1, select bank3
  2713  0334' 1703               	bsf	3,6	;RP1=1, select bank3
  2714  0335' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2715  0336' 3A80               	xorlw	128
  2716  0337' 00FF               	movwf	btemp+1
  2717  0338' 3080               	movlw	128
  2718  0339' 027F               	subwf	btemp+1,w
  2719  033A' 1D03               	skipz
  2720  033B' 2800'              	goto	u8795
  2721  033C' 300A               	movlw	10
  2722  033D' 0200'              	subwf	sprintf@eexp^(0+384),w
  2723  033E'                    u8795:
  2724  033E' 1803               	skipnc
  2725  033F' 2800'              	goto	u8791
  2726  0340' 120A' 118A' 2800'  	goto	u8790
  2727  0343'                    u8791:
  2728  0343' 120A' 118A' 2800'  	goto	l4997
  2729  0346'                    L3:
  2730  0346'                    L2:
  2731  0346' 120A' 118A' 2800'  	ljmp	l5179
  2732                           
  2733                           	psect	text2
  2734  0000'                    __ptext2:	
  2735 ;; *************** function _scale *****************
  2736 ;; Defined at:
  2737 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  scl             1    wreg     char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  scl             1   54[BANK0 ] char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  4   36[BANK0 ] char 
  2744 ;; Registers used:
  2745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         0       4       0       0       0
  2752 ;;      Locals:         0       5       0       0       0
  2753 ;;      Temps:          0      10       0       0       0
  2754 ;;      Totals:         0      19       0       0       0
  2755 ;;Total ram usage:       19 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    4
  2758 ;; This function calls:
  2759 ;;		___awdiv
  2760 ;;		___awmod
  2761 ;;		___flmul
  2762 ;; This function is called by:
  2763 ;;		_sprintf
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _scale
  2769  0000'                    _scale:
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2773                           ;scale@scl stored from wreg
  2774  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2775  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2776  0002' 00B6'              	movwf	scale@scl
  2777  0003'                    l4485:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2780  0003' 1FB6'              	btfss	scale@scl,7
  2781  0004' 2800'              	goto	u7511
  2782  0005' 2800'              	goto	u7510
  2783  0006'                    u7511:
  2784  0006' 2800'              	goto	l4507
  2785  0007'                    u7510:
  2786  0007'                    l4487:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2789  0007' 09B6'              	comf	scale@scl,f
  2790  0008' 0AB6'              	incf	scale@scl,f
  2791  0009'                    l4489:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2794  0009' 0836'              	movf	scale@scl,w
  2795  000A' 3A80               	xorlw	128
  2796  000B' 3E12               	addlw	-238
  2797  000C' 1C03               	skipc
  2798  000D' 2800'              	goto	u7521
  2799  000E' 2800'              	goto	u7520
  2800  000F'                    u7521:
  2801  000F' 2800'              	goto	l4497
  2802  0010'                    u7520:
  2803  0010'                    l4491:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2806  0010' 300A               	movlw	10
  2807  0011' 0080'              	movwf	___awdiv@divisor
  2808  0012' 3000               	movlw	0
  2809  0013' 0081'              	movwf	___awdiv@divisor+1
  2810  0014' 0836'              	movf	scale@scl,w
  2811  0015' 0085'              	movwf	___awmod@dividend
  2812  0016' 0186'              	clrf	___awmod@dividend+1
  2813  0017' 1B85'              	btfsc	___awmod@dividend,7
  2814  0018' 0386'              	decf	___awmod@dividend+1,f
  2815  0019' 3064               	movlw	100
  2816  001A' 0083'              	movwf	___awmod@divisor
  2817  001B' 3000               	movlw	0
  2818  001C' 0084'              	movwf	___awmod@divisor+1
  2819  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2820  0022' 0804'              	movf	?___awmod+1,w
  2821  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2822  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2823  0025' 0083'              	movwf	___awdiv@dividend+1
  2824  0026' 0803'              	movf	?___awmod,w
  2825  0027' 0082'              	movwf	___awdiv@dividend
  2826  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2827  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2828  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  2829  002F' 0800'              	movf	?___awdiv,w
  2830  0030' 00A8'              	movwf	??_scale
  2831  0031' 3001               	movlw	1
  2832  0032'                    u7535:
  2833  0032' 1003               	clrc
  2834  0033' 0DA8'              	rlf	??_scale,f
  2835  0034' 3EFF               	addlw	-1
  2836  0035' 1D03               	skipz
  2837  0036' 2800'              	goto	u7535
  2838  0037' 1003               	clrc
  2839  0038' 0D28'              	rlf	??_scale,w
  2840  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2841  003A' 0084               	movwf	4
  2842  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2843  0040' 00A9'              	movwf	??_scale+1
  2844  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2845  0046' 00AA'              	movwf	??_scale+2
  2846  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2847  004C' 00AB'              	movwf	??_scale+3
  2848  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2849  0052' 00AC'              	movwf	??_scale+4
  2850  0053' 082C'              	movf	??_scale+4,w
  2851  0054' 008D'              	movwf	___flmul@b+3
  2852  0055' 082B'              	movf	??_scale+3,w
  2853  0056' 008C'              	movwf	___flmul@b+2
  2854  0057' 082A'              	movf	??_scale+2,w
  2855  0058' 008B'              	movwf	___flmul@b+1
  2856  0059' 0829'              	movf	??_scale+1,w
  2857  005A' 008A'              	movwf	___flmul@b
  2858  005B' 3064               	movlw	100
  2859  005C' 0080'              	movwf	___awdiv@divisor
  2860  005D' 3000               	movlw	0
  2861  005E' 0081'              	movwf	___awdiv@divisor+1
  2862  005F' 0836'              	movf	scale@scl,w
  2863  0060' 0082'              	movwf	___awdiv@dividend
  2864  0061' 0183'              	clrf	___awdiv@dividend+1
  2865  0062' 1B82'              	btfsc	___awdiv@dividend,7
  2866  0063' 0383'              	decf	___awdiv@dividend+1,f
  2867  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2868  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  2869  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  2870  006B' 0800'              	movf	?___awdiv,w
  2871  006C' 00AD'              	movwf	??_scale+5
  2872  006D' 3001               	movlw	1
  2873  006E'                    u7545:
  2874  006E' 1003               	clrc
  2875  006F' 0DAD'              	rlf	??_scale+5,f
  2876  0070' 3EFF               	addlw	-1
  2877  0071' 1D03               	skipz
  2878  0072' 2800'              	goto	u7545
  2879  0073' 1003               	clrc
  2880  0074' 0D2D'              	rlf	??_scale+5,w
  2881  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2882  0076' 0084               	movwf	4
  2883  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2884  007C' 00AE'              	movwf	??_scale+6
  2885  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2886  0082' 00AF'              	movwf	??_scale+7
  2887  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2888  0088' 00B0'              	movwf	??_scale+8
  2889  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2890  008E' 00B1'              	movwf	??_scale+9
  2891  008F' 0831'              	movf	??_scale+9,w
  2892  0090' 0091'              	movwf	___flmul@a+3
  2893  0091' 0830'              	movf	??_scale+8,w
  2894  0092' 0090'              	movwf	___flmul@a+2
  2895  0093' 082F'              	movf	??_scale+7,w
  2896  0094' 008F'              	movwf	___flmul@a+1
  2897  0095' 082E'              	movf	??_scale+6,w
  2898  0096' 008E'              	movwf	___flmul@a
  2899  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2900  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  2901  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  2902  009E' 080D'              	movf	?___flmul+3,w
  2903  009F' 00B5'              	movwf	_scale$1126+3
  2904  00A0' 080C'              	movf	?___flmul+2,w
  2905  00A1' 00B4'              	movwf	_scale$1126+2
  2906  00A2' 080B'              	movf	?___flmul+1,w
  2907  00A3' 00B3'              	movwf	_scale$1126+1
  2908  00A4' 080A'              	movf	?___flmul,w
  2909  00A5' 00B2'              	movwf	_scale$1126
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2912  00A6' 300A               	movlw	10
  2913  00A7' 0083'              	movwf	___awmod@divisor
  2914  00A8' 3000               	movlw	0
  2915  00A9' 0084'              	movwf	___awmod@divisor+1
  2916  00AA' 0836'              	movf	scale@scl,w
  2917  00AB' 0085'              	movwf	___awmod@dividend
  2918  00AC' 0186'              	clrf	___awmod@dividend+1
  2919  00AD' 1B85'              	btfsc	___awmod@dividend,7
  2920  00AE' 0386'              	decf	___awmod@dividend+1,f
  2921  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2922  00B4' 0803'              	movf	?___awmod,w
  2923  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2924  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  2925  00B7' 00A8'              	movwf	??_scale
  2926  00B8' 3001               	movlw	1
  2927  00B9'                    u7555:
  2928  00B9' 1003               	clrc
  2929  00BA' 0DA8'              	rlf	??_scale,f
  2930  00BB' 3EFF               	addlw	-1
  2931  00BC' 1D03               	skipz
  2932  00BD' 2800'              	goto	u7555
  2933  00BE' 1003               	clrc
  2934  00BF' 0D28'              	rlf	??_scale,w
  2935  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2936  00C1' 0084               	movwf	4
  2937  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2938  00C7' 00A9'              	movwf	??_scale+1
  2939  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2940  00CD' 00AA'              	movwf	??_scale+2
  2941  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2942  00D3' 00AB'              	movwf	??_scale+3
  2943  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2944  00D9' 00AC'              	movwf	??_scale+4
  2945  00DA' 082C'              	movf	??_scale+4,w
  2946  00DB' 008D'              	movwf	___flmul@b+3
  2947  00DC' 082B'              	movf	??_scale+3,w
  2948  00DD' 008C'              	movwf	___flmul@b+2
  2949  00DE' 082A'              	movf	??_scale+2,w
  2950  00DF' 008B'              	movwf	___flmul@b+1
  2951  00E0' 0829'              	movf	??_scale+1,w
  2952  00E1' 008A'              	movwf	___flmul@b
  2953  00E2' 0835'              	movf	_scale$1126+3,w
  2954  00E3' 0091'              	movwf	___flmul@a+3
  2955  00E4' 0834'              	movf	_scale$1126+2,w
  2956  00E5' 0090'              	movwf	___flmul@a+2
  2957  00E6' 0833'              	movf	_scale$1126+1,w
  2958  00E7' 008F'              	movwf	___flmul@a+1
  2959  00E8' 0832'              	movf	_scale$1126,w
  2960  00E9' 008E'              	movwf	___flmul@a
  2961  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2962  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  2963  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  2964  00F1' 080D'              	movf	?___flmul+3,w
  2965  00F2' 00A7'              	movwf	?_scale+3
  2966  00F3' 080C'              	movf	?___flmul+2,w
  2967  00F4' 00A6'              	movwf	?_scale+2
  2968  00F5' 080B'              	movf	?___flmul+1,w
  2969  00F6' 00A5'              	movwf	?_scale+1
  2970  00F7' 080A'              	movf	?___flmul,w
  2971  00F8' 00A4'              	movwf	?_scale
  2972  00F9' 2800'              	goto	l352
  2973  00FA'                    l4497:
  2974  00FA' 0836'              	movf	scale@scl,w
  2975  00FB' 3A80               	xorlw	128
  2976  00FC' 3E75               	addlw	-139
  2977  00FD' 1C03               	skipc
  2978  00FE' 2800'              	goto	u7561
  2979  00FF' 2800'              	goto	u7560
  2980  0100'                    u7561:
  2981  0100' 2800'              	goto	l4503
  2982  0101'                    u7560:
  2983  0101'                    l4499:
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2986  0101' 300A               	movlw	10
  2987  0102' 0083'              	movwf	___awmod@divisor
  2988  0103' 3000               	movlw	0
  2989  0104' 0084'              	movwf	___awmod@divisor+1
  2990  0105' 0836'              	movf	scale@scl,w
  2991  0106' 0085'              	movwf	___awmod@dividend
  2992  0107' 0186'              	clrf	___awmod@dividend+1
  2993  0108' 1B85'              	btfsc	___awmod@dividend,7
  2994  0109' 0386'              	decf	___awmod@dividend+1,f
  2995  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2996  010F' 0803'              	movf	?___awmod,w
  2997  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  2998  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  2999  0112' 00A8'              	movwf	??_scale
  3000  0113' 3001               	movlw	1
  3001  0114'                    u7575:
  3002  0114' 1003               	clrc
  3003  0115' 0DA8'              	rlf	??_scale,f
  3004  0116' 3EFF               	addlw	-1
  3005  0117' 1D03               	skipz
  3006  0118' 2800'              	goto	u7575
  3007  0119' 1003               	clrc
  3008  011A' 0D28'              	rlf	??_scale,w
  3009  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3010  011C' 0084               	movwf	4
  3011  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3012  0122' 00A9'              	movwf	??_scale+1
  3013  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3014  0128' 00AA'              	movwf	??_scale+2
  3015  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3016  012E' 00AB'              	movwf	??_scale+3
  3017  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3018  0134' 00AC'              	movwf	??_scale+4
  3019  0135' 082C'              	movf	??_scale+4,w
  3020  0136' 008D'              	movwf	___flmul@b+3
  3021  0137' 082B'              	movf	??_scale+3,w
  3022  0138' 008C'              	movwf	___flmul@b+2
  3023  0139' 082A'              	movf	??_scale+2,w
  3024  013A' 008B'              	movwf	___flmul@b+1
  3025  013B' 0829'              	movf	??_scale+1,w
  3026  013C' 008A'              	movwf	___flmul@b
  3027  013D' 300A               	movlw	10
  3028  013E' 0080'              	movwf	___awdiv@divisor
  3029  013F' 3000               	movlw	0
  3030  0140' 0081'              	movwf	___awdiv@divisor+1
  3031  0141' 0836'              	movf	scale@scl,w
  3032  0142' 0082'              	movwf	___awdiv@dividend
  3033  0143' 0183'              	clrf	___awdiv@dividend+1
  3034  0144' 1B82'              	btfsc	___awdiv@dividend,7
  3035  0145' 0383'              	decf	___awdiv@dividend+1,f
  3036  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3037  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  3038  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  3039  014D' 0800'              	movf	?___awdiv,w
  3040  014E' 00AD'              	movwf	??_scale+5
  3041  014F' 3001               	movlw	1
  3042  0150'                    u7585:
  3043  0150' 1003               	clrc
  3044  0151' 0DAD'              	rlf	??_scale+5,f
  3045  0152' 3EFF               	addlw	-1
  3046  0153' 1D03               	skipz
  3047  0154' 2800'              	goto	u7585
  3048  0155' 1003               	clrc
  3049  0156' 0D2D'              	rlf	??_scale+5,w
  3050  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3051  0158' 0084               	movwf	4
  3052  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3053  015E' 00AE'              	movwf	??_scale+6
  3054  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3055  0164' 00AF'              	movwf	??_scale+7
  3056  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3057  016A' 00B0'              	movwf	??_scale+8
  3058  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3059  0170' 00B1'              	movwf	??_scale+9
  3060  0171' 0831'              	movf	??_scale+9,w
  3061  0172' 0091'              	movwf	___flmul@a+3
  3062  0173' 0830'              	movf	??_scale+8,w
  3063  0174' 0090'              	movwf	___flmul@a+2
  3064  0175' 082F'              	movf	??_scale+7,w
  3065  0176' 008F'              	movwf	___flmul@a+1
  3066  0177' 082E'              	movf	??_scale+6,w
  3067  0178' 008E'              	movwf	___flmul@a
  3068  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3069  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  3070  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  3071  0180' 080D'              	movf	?___flmul+3,w
  3072  0181' 00A7'              	movwf	?_scale+3
  3073  0182' 080C'              	movf	?___flmul+2,w
  3074  0183' 00A6'              	movwf	?_scale+2
  3075  0184' 080B'              	movf	?___flmul+1,w
  3076  0185' 00A5'              	movwf	?_scale+1
  3077  0186' 080A'              	movf	?___flmul,w
  3078  0187' 00A4'              	movwf	?_scale
  3079  0188' 2800'              	goto	l352
  3080  0189'                    l4503:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3083  0189' 0836'              	movf	scale@scl,w
  3084  018A' 00A8'              	movwf	??_scale
  3085  018B' 3001               	movlw	1
  3086  018C'                    u7595:
  3087  018C' 1003               	clrc
  3088  018D' 0DA8'              	rlf	??_scale,f
  3089  018E' 3EFF               	addlw	-1
  3090  018F' 1D03               	skipz
  3091  0190' 2800'              	goto	u7595
  3092  0191' 1003               	clrc
  3093  0192' 0D28'              	rlf	??_scale,w
  3094  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3095  0194' 0084               	movwf	4
  3096  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3097  019A' 00A9'              	movwf	??_scale+1
  3098  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3099  01A0' 00AA'              	movwf	??_scale+2
  3100  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3101  01A6' 00AB'              	movwf	??_scale+3
  3102  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3103  01AC' 00AC'              	movwf	??_scale+4
  3104  01AD' 082C'              	movf	??_scale+4,w
  3105  01AE' 00A7'              	movwf	?_scale+3
  3106  01AF' 082B'              	movf	??_scale+3,w
  3107  01B0' 00A6'              	movwf	?_scale+2
  3108  01B1' 082A'              	movf	??_scale+2,w
  3109  01B2' 00A5'              	movwf	?_scale+1
  3110  01B3' 0829'              	movf	??_scale+1,w
  3111  01B4' 00A4'              	movwf	?_scale
  3112  01B5' 2800'              	goto	l352
  3113  01B6'                    l4507:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3116  01B6' 0836'              	movf	scale@scl,w
  3117  01B7' 3A80               	xorlw	128
  3118  01B8' 3E12               	addlw	-238
  3119  01B9' 1C03               	skipc
  3120  01BA' 2800'              	goto	u7601
  3121  01BB' 2800'              	goto	u7600
  3122  01BC'                    u7601:
  3123  01BC' 2800'              	goto	l4515
  3124  01BD'                    u7600:
  3125  01BD'                    l4509:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3128  01BD' 300A               	movlw	10
  3129  01BE' 0080'              	movwf	___awdiv@divisor
  3130  01BF' 3000               	movlw	0
  3131  01C0' 0081'              	movwf	___awdiv@divisor+1
  3132  01C1' 0836'              	movf	scale@scl,w
  3133  01C2' 0085'              	movwf	___awmod@dividend
  3134  01C3' 0186'              	clrf	___awmod@dividend+1
  3135  01C4' 1B85'              	btfsc	___awmod@dividend,7
  3136  01C5' 0386'              	decf	___awmod@dividend+1,f
  3137  01C6' 3064               	movlw	100
  3138  01C7' 0083'              	movwf	___awmod@divisor
  3139  01C8' 3000               	movlw	0
  3140  01C9' 0084'              	movwf	___awmod@divisor+1
  3141  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3142  01CF' 0804'              	movf	?___awmod+1,w
  3143  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  3144  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  3145  01D2' 0083'              	movwf	___awdiv@dividend+1
  3146  01D3' 0803'              	movf	?___awmod,w
  3147  01D4' 0082'              	movwf	___awdiv@dividend
  3148  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3149  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3150  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3151  01DC' 0800'              	movf	?___awdiv,w
  3152  01DD' 00A8'              	movwf	??_scale
  3153  01DE' 3001               	movlw	1
  3154  01DF'                    u7615:
  3155  01DF' 1003               	clrc
  3156  01E0' 0DA8'              	rlf	??_scale,f
  3157  01E1' 3EFF               	addlw	-1
  3158  01E2' 1D03               	skipz
  3159  01E3' 2800'              	goto	u7615
  3160  01E4' 1003               	clrc
  3161  01E5' 0D28'              	rlf	??_scale,w
  3162  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3163  01E7' 0084               	movwf	4
  3164  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3165  01ED' 00A9'              	movwf	??_scale+1
  3166  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3167  01F3' 00AA'              	movwf	??_scale+2
  3168  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3169  01F9' 00AB'              	movwf	??_scale+3
  3170  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3171  01FF' 00AC'              	movwf	??_scale+4
  3172  0200' 082C'              	movf	??_scale+4,w
  3173  0201' 008D'              	movwf	___flmul@b+3
  3174  0202' 082B'              	movf	??_scale+3,w
  3175  0203' 008C'              	movwf	___flmul@b+2
  3176  0204' 082A'              	movf	??_scale+2,w
  3177  0205' 008B'              	movwf	___flmul@b+1
  3178  0206' 0829'              	movf	??_scale+1,w
  3179  0207' 008A'              	movwf	___flmul@b
  3180  0208' 3064               	movlw	100
  3181  0209' 0080'              	movwf	___awdiv@divisor
  3182  020A' 3000               	movlw	0
  3183  020B' 0081'              	movwf	___awdiv@divisor+1
  3184  020C' 0836'              	movf	scale@scl,w
  3185  020D' 0082'              	movwf	___awdiv@dividend
  3186  020E' 0183'              	clrf	___awdiv@dividend+1
  3187  020F' 1B82'              	btfsc	___awdiv@dividend,7
  3188  0210' 0383'              	decf	___awdiv@dividend+1,f
  3189  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3190  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  3191  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  3192  0218' 0800'              	movf	?___awdiv,w
  3193  0219' 00AD'              	movwf	??_scale+5
  3194  021A' 3001               	movlw	1
  3195  021B'                    u7625:
  3196  021B' 1003               	clrc
  3197  021C' 0DAD'              	rlf	??_scale+5,f
  3198  021D' 3EFF               	addlw	-1
  3199  021E' 1D03               	skipz
  3200  021F' 2800'              	goto	u7625
  3201  0220' 1003               	clrc
  3202  0221' 0D2D'              	rlf	??_scale+5,w
  3203  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3204  0223' 0084               	movwf	4
  3205  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3206  0229' 00AE'              	movwf	??_scale+6
  3207  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3208  022F' 00AF'              	movwf	??_scale+7
  3209  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3210  0235' 00B0'              	movwf	??_scale+8
  3211  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3212  023B' 00B1'              	movwf	??_scale+9
  3213  023C' 0831'              	movf	??_scale+9,w
  3214  023D' 0091'              	movwf	___flmul@a+3
  3215  023E' 0830'              	movf	??_scale+8,w
  3216  023F' 0090'              	movwf	___flmul@a+2
  3217  0240' 082F'              	movf	??_scale+7,w
  3218  0241' 008F'              	movwf	___flmul@a+1
  3219  0242' 082E'              	movf	??_scale+6,w
  3220  0243' 008E'              	movwf	___flmul@a
  3221  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3222  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  3223  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  3224  024B' 080D'              	movf	?___flmul+3,w
  3225  024C' 00B5'              	movwf	_scale$1126+3
  3226  024D' 080C'              	movf	?___flmul+2,w
  3227  024E' 00B4'              	movwf	_scale$1126+2
  3228  024F' 080B'              	movf	?___flmul+1,w
  3229  0250' 00B3'              	movwf	_scale$1126+1
  3230  0251' 080A'              	movf	?___flmul,w
  3231  0252' 00B2'              	movwf	_scale$1126
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3234  0253' 300A               	movlw	10
  3235  0254' 0083'              	movwf	___awmod@divisor
  3236  0255' 3000               	movlw	0
  3237  0256' 0084'              	movwf	___awmod@divisor+1
  3238  0257' 0836'              	movf	scale@scl,w
  3239  0258' 0085'              	movwf	___awmod@dividend
  3240  0259' 0186'              	clrf	___awmod@dividend+1
  3241  025A' 1B85'              	btfsc	___awmod@dividend,7
  3242  025B' 0386'              	decf	___awmod@dividend+1,f
  3243  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3244  0261' 0803'              	movf	?___awmod,w
  3245  0262' 1283               	bcf	3,5	;RP0=0, select bank0
  3246  0263' 1303               	bcf	3,6	;RP1=0, select bank0
  3247  0264' 00A8'              	movwf	??_scale
  3248  0265' 3001               	movlw	1
  3249  0266'                    u7635:
  3250  0266' 1003               	clrc
  3251  0267' 0DA8'              	rlf	??_scale,f
  3252  0268' 3EFF               	addlw	-1
  3253  0269' 1D03               	skipz
  3254  026A' 2800'              	goto	u7635
  3255  026B' 1003               	clrc
  3256  026C' 0D28'              	rlf	??_scale,w
  3257  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3258  026E' 0084               	movwf	4
  3259  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3260  0274' 00A9'              	movwf	??_scale+1
  3261  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3262  027A' 00AA'              	movwf	??_scale+2
  3263  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3264  0280' 00AB'              	movwf	??_scale+3
  3265  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3266  0286' 00AC'              	movwf	??_scale+4
  3267  0287' 082C'              	movf	??_scale+4,w
  3268  0288' 008D'              	movwf	___flmul@b+3
  3269  0289' 082B'              	movf	??_scale+3,w
  3270  028A' 008C'              	movwf	___flmul@b+2
  3271  028B' 082A'              	movf	??_scale+2,w
  3272  028C' 008B'              	movwf	___flmul@b+1
  3273  028D' 0829'              	movf	??_scale+1,w
  3274  028E' 008A'              	movwf	___flmul@b
  3275  028F' 0835'              	movf	_scale$1126+3,w
  3276  0290' 0091'              	movwf	___flmul@a+3
  3277  0291' 0834'              	movf	_scale$1126+2,w
  3278  0292' 0090'              	movwf	___flmul@a+2
  3279  0293' 0833'              	movf	_scale$1126+1,w
  3280  0294' 008F'              	movwf	___flmul@a+1
  3281  0295' 0832'              	movf	_scale$1126,w
  3282  0296' 008E'              	movwf	___flmul@a
  3283  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3284  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  3285  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  3286  029E' 080D'              	movf	?___flmul+3,w
  3287  029F' 00A7'              	movwf	?_scale+3
  3288  02A0' 080C'              	movf	?___flmul+2,w
  3289  02A1' 00A6'              	movwf	?_scale+2
  3290  02A2' 080B'              	movf	?___flmul+1,w
  3291  02A3' 00A5'              	movwf	?_scale+1
  3292  02A4' 080A'              	movf	?___flmul,w
  3293  02A5' 00A4'              	movwf	?_scale
  3294  02A6' 2800'              	goto	l352
  3295  02A7'                    l4515:
  3296  02A7' 0836'              	movf	scale@scl,w
  3297  02A8' 3A80               	xorlw	128
  3298  02A9' 3E75               	addlw	-139
  3299  02AA' 1C03               	skipc
  3300  02AB' 2800'              	goto	u7641
  3301  02AC' 2800'              	goto	u7640
  3302  02AD'                    u7641:
  3303  02AD' 2800'              	goto	l4521
  3304  02AE'                    u7640:
  3305  02AE'                    l4517:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3308  02AE' 300A               	movlw	10
  3309  02AF' 0083'              	movwf	___awmod@divisor
  3310  02B0' 3000               	movlw	0
  3311  02B1' 0084'              	movwf	___awmod@divisor+1
  3312  02B2' 0836'              	movf	scale@scl,w
  3313  02B3' 0085'              	movwf	___awmod@dividend
  3314  02B4' 0186'              	clrf	___awmod@dividend+1
  3315  02B5' 1B85'              	btfsc	___awmod@dividend,7
  3316  02B6' 0386'              	decf	___awmod@dividend+1,f
  3317  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3318  02BC' 0803'              	movf	?___awmod,w
  3319  02BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3320  02BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3321  02BF' 00A8'              	movwf	??_scale
  3322  02C0' 3001               	movlw	1
  3323  02C1'                    u7655:
  3324  02C1' 1003               	clrc
  3325  02C2' 0DA8'              	rlf	??_scale,f
  3326  02C3' 3EFF               	addlw	-1
  3327  02C4' 1D03               	skipz
  3328  02C5' 2800'              	goto	u7655
  3329  02C6' 1003               	clrc
  3330  02C7' 0D28'              	rlf	??_scale,w
  3331  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3332  02C9' 0084               	movwf	4
  3333  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3334  02CF' 00A9'              	movwf	??_scale+1
  3335  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3336  02D5' 00AA'              	movwf	??_scale+2
  3337  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3338  02DB' 00AB'              	movwf	??_scale+3
  3339  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3340  02E1' 00AC'              	movwf	??_scale+4
  3341  02E2' 082C'              	movf	??_scale+4,w
  3342  02E3' 008D'              	movwf	___flmul@b+3
  3343  02E4' 082B'              	movf	??_scale+3,w
  3344  02E5' 008C'              	movwf	___flmul@b+2
  3345  02E6' 082A'              	movf	??_scale+2,w
  3346  02E7' 008B'              	movwf	___flmul@b+1
  3347  02E8' 0829'              	movf	??_scale+1,w
  3348  02E9' 008A'              	movwf	___flmul@b
  3349  02EA' 300A               	movlw	10
  3350  02EB' 0080'              	movwf	___awdiv@divisor
  3351  02EC' 3000               	movlw	0
  3352  02ED' 0081'              	movwf	___awdiv@divisor+1
  3353  02EE' 0836'              	movf	scale@scl,w
  3354  02EF' 0082'              	movwf	___awdiv@dividend
  3355  02F0' 0183'              	clrf	___awdiv@dividend+1
  3356  02F1' 1B82'              	btfsc	___awdiv@dividend,7
  3357  02F2' 0383'              	decf	___awdiv@dividend+1,f
  3358  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3359  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3360  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3361  02FA' 0800'              	movf	?___awdiv,w
  3362  02FB' 00AD'              	movwf	??_scale+5
  3363  02FC' 3001               	movlw	1
  3364  02FD'                    u7665:
  3365  02FD' 1003               	clrc
  3366  02FE' 0DAD'              	rlf	??_scale+5,f
  3367  02FF' 3EFF               	addlw	-1
  3368  0300' 1D03               	skipz
  3369  0301' 2800'              	goto	u7665
  3370  0302' 1003               	clrc
  3371  0303' 0D2D'              	rlf	??_scale+5,w
  3372  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3373  0305' 0084               	movwf	4
  3374  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3375  030B' 00AE'              	movwf	??_scale+6
  3376  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3377  0311' 00AF'              	movwf	??_scale+7
  3378  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3379  0317' 00B0'              	movwf	??_scale+8
  3380  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3381  031D' 00B1'              	movwf	??_scale+9
  3382  031E' 0831'              	movf	??_scale+9,w
  3383  031F' 0091'              	movwf	___flmul@a+3
  3384  0320' 0830'              	movf	??_scale+8,w
  3385  0321' 0090'              	movwf	___flmul@a+2
  3386  0322' 082F'              	movf	??_scale+7,w
  3387  0323' 008F'              	movwf	___flmul@a+1
  3388  0324' 082E'              	movf	??_scale+6,w
  3389  0325' 008E'              	movwf	___flmul@a
  3390  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3391  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3392  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3393  032D' 080D'              	movf	?___flmul+3,w
  3394  032E' 00A7'              	movwf	?_scale+3
  3395  032F' 080C'              	movf	?___flmul+2,w
  3396  0330' 00A6'              	movwf	?_scale+2
  3397  0331' 080B'              	movf	?___flmul+1,w
  3398  0332' 00A5'              	movwf	?_scale+1
  3399  0333' 080A'              	movf	?___flmul,w
  3400  0334' 00A4'              	movwf	?_scale
  3401  0335' 2800'              	goto	l352
  3402  0336'                    l4521:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3405  0336' 0836'              	movf	scale@scl,w
  3406  0337' 00A8'              	movwf	??_scale
  3407  0338' 3001               	movlw	1
  3408  0339'                    u7675:
  3409  0339' 1003               	clrc
  3410  033A' 0DA8'              	rlf	??_scale,f
  3411  033B' 3EFF               	addlw	-1
  3412  033C' 1D03               	skipz
  3413  033D' 2800'              	goto	u7675
  3414  033E' 1003               	clrc
  3415  033F' 0D28'              	rlf	??_scale,w
  3416  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3417  0341' 0084               	movwf	4
  3418  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3419  0347' 00A9'              	movwf	??_scale+1
  3420  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3421  034D' 00AA'              	movwf	??_scale+2
  3422  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3423  0353' 00AB'              	movwf	??_scale+3
  3424  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3425  0359' 00AC'              	movwf	??_scale+4
  3426  035A' 082C'              	movf	??_scale+4,w
  3427  035B' 00A7'              	movwf	?_scale+3
  3428  035C' 082B'              	movf	??_scale+3,w
  3429  035D' 00A6'              	movwf	?_scale+2
  3430  035E' 082A'              	movf	??_scale+2,w
  3431  035F' 00A5'              	movwf	?_scale+1
  3432  0360' 0829'              	movf	??_scale+1,w
  3433  0361' 00A4'              	movwf	?_scale
  3434  0362'                    l352:
  3435  0362' 0008               	return
  3436  0363'                    __end_of_scale:
  3437                           
  3438                           	psect	text3
  3439  0000'                    __ptext3:	
  3440 ;; *************** function ___awmod *****************
  3441 ;; Defined at:
  3442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  divisor         2    3[COMMON] int 
  3445 ;;  dividend        2    5[COMMON] int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  sign            1    9[COMMON] unsigned char 
  3448 ;;  counter         1    8[COMMON] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  2    3[COMMON] int 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         4       0       0       0       0
  3459 ;;      Locals:         2       0       0       0       0
  3460 ;;      Temps:          1       0       0       0       0
  3461 ;;      Totals:         7       0       0       0       0
  3462 ;;Total ram usage:        7 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    2
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_scale
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function ___awmod
  3474  0000'                    ___awmod:
  3475  0000'                    l4047:	
  3476                           ;incstack = 0
  3477                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3478                           
  3479  0000' 0189'              	clrf	___awmod@sign
  3480  0001'                    l4049:
  3481  0001' 1F86'              	btfss	___awmod@dividend+1,7
  3482  0002' 2800'              	goto	u6381
  3483  0003' 2800'              	goto	u6380
  3484  0004'                    u6381:
  3485  0004' 2800'              	goto	l4055
  3486  0005'                    u6380:
  3487  0005'                    l4051:
  3488  0005' 0985'              	comf	___awmod@dividend,f
  3489  0006' 0986'              	comf	___awmod@dividend+1,f
  3490  0007' 0A85'              	incf	___awmod@dividend,f
  3491  0008' 1903               	skipnz
  3492  0009' 0A86'              	incf	___awmod@dividend+1,f
  3493  000A'                    l4053:
  3494  000A' 0189'              	clrf	___awmod@sign
  3495  000B' 0A89'              	incf	___awmod@sign,f
  3496  000C'                    l4055:
  3497  000C' 1F84'              	btfss	___awmod@divisor+1,7
  3498  000D' 2800'              	goto	u6391
  3499  000E' 2800'              	goto	u6390
  3500  000F'                    u6391:
  3501  000F' 2800'              	goto	l4059
  3502  0010'                    u6390:
  3503  0010'                    l4057:
  3504  0010' 0983'              	comf	___awmod@divisor,f
  3505  0011' 0984'              	comf	___awmod@divisor+1,f
  3506  0012' 0A83'              	incf	___awmod@divisor,f
  3507  0013' 1903               	skipnz
  3508  0014' 0A84'              	incf	___awmod@divisor+1,f
  3509  0015'                    l4059:
  3510  0015' 0803'              	movf	___awmod@divisor,w
  3511  0016' 0404'              	iorwf	___awmod@divisor+1,w
  3512  0017' 1903               	btfsc	3,2
  3513  0018' 2800'              	goto	u6401
  3514  0019' 2800'              	goto	u6400
  3515  001A'                    u6401:
  3516  001A' 2800'              	goto	l4077
  3517  001B'                    u6400:
  3518  001B'                    l4061:
  3519  001B' 0188'              	clrf	___awmod@counter
  3520  001C' 0A88'              	incf	___awmod@counter,f
  3521  001D' 2800'              	goto	l4067
  3522  001E'                    l4063:
  3523  001E' 3001               	movlw	1
  3524  001F'                    u6415:
  3525  001F' 1003               	clrc
  3526  0020' 0D83'              	rlf	___awmod@divisor,f
  3527  0021' 0D84'              	rlf	___awmod@divisor+1,f
  3528  0022' 3EFF               	addlw	-1
  3529  0023' 1D03               	skipz
  3530  0024' 2800'              	goto	u6415
  3531  0025'                    l4065:
  3532  0025' 3001               	movlw	1
  3533  0026' 0087'              	movwf	??___awmod
  3534  0027' 0807'              	movf	??___awmod,w
  3535  0028' 0788'              	addwf	___awmod@counter,f
  3536  0029'                    l4067:
  3537  0029' 1F84'              	btfss	___awmod@divisor+1,7
  3538  002A' 2800'              	goto	u6421
  3539  002B' 2800'              	goto	u6420
  3540  002C'                    u6421:
  3541  002C' 2800'              	goto	l4063
  3542  002D'                    u6420:
  3543  002D'                    l4069:
  3544  002D' 0804'              	movf	___awmod@divisor+1,w
  3545  002E' 0206'              	subwf	___awmod@dividend+1,w
  3546  002F' 1D03               	skipz
  3547  0030' 2800'              	goto	u6435
  3548  0031' 0803'              	movf	___awmod@divisor,w
  3549  0032' 0205'              	subwf	___awmod@dividend,w
  3550  0033'                    u6435:
  3551  0033' 1C03               	skipc
  3552  0034' 2800'              	goto	u6431
  3553  0035' 2800'              	goto	u6430
  3554  0036'                    u6431:
  3555  0036' 2800'              	goto	l4073
  3556  0037'                    u6430:
  3557  0037'                    l4071:
  3558  0037' 0803'              	movf	___awmod@divisor,w
  3559  0038' 0285'              	subwf	___awmod@dividend,f
  3560  0039' 0804'              	movf	___awmod@divisor+1,w
  3561  003A' 1C03               	skipc
  3562  003B' 0386'              	decf	___awmod@dividend+1,f
  3563  003C' 0286'              	subwf	___awmod@dividend+1,f
  3564  003D'                    l4073:
  3565  003D' 3001               	movlw	1
  3566  003E'                    u6445:
  3567  003E' 1003               	clrc
  3568  003F' 0C84'              	rrf	___awmod@divisor+1,f
  3569  0040' 0C83'              	rrf	___awmod@divisor,f
  3570  0041' 3EFF               	addlw	-1
  3571  0042' 1D03               	skipz
  3572  0043' 2800'              	goto	u6445
  3573  0044'                    l4075:
  3574  0044' 3001               	movlw	1
  3575  0045' 0288'              	subwf	___awmod@counter,f
  3576  0046' 1D03               	btfss	3,2
  3577  0047' 2800'              	goto	u6451
  3578  0048' 2800'              	goto	u6450
  3579  0049'                    u6451:
  3580  0049' 2800'              	goto	l4069
  3581  004A'                    u6450:
  3582  004A'                    l4077:
  3583  004A' 0809'              	movf	___awmod@sign,w
  3584  004B' 1903               	btfsc	3,2
  3585  004C' 2800'              	goto	u6461
  3586  004D' 2800'              	goto	u6460
  3587  004E'                    u6461:
  3588  004E' 2800'              	goto	l4081
  3589  004F'                    u6460:
  3590  004F'                    l4079:
  3591  004F' 0985'              	comf	___awmod@dividend,f
  3592  0050' 0986'              	comf	___awmod@dividend+1,f
  3593  0051' 0A85'              	incf	___awmod@dividend,f
  3594  0052' 1903               	skipnz
  3595  0053' 0A86'              	incf	___awmod@dividend+1,f
  3596  0054'                    l4081:
  3597  0054' 0806'              	movf	___awmod@dividend+1,w
  3598  0055' 0084'              	movwf	?___awmod+1
  3599  0056' 0805'              	movf	___awmod@dividend,w
  3600  0057' 0083'              	movwf	?___awmod
  3601  0058'                    l614:
  3602  0058' 0008               	return
  3603  0059'                    __end_of___awmod:
  3604                           
  3605                           	psect	text4
  3606  0000'                    __ptext4:	
  3607 ;; *************** function ___awdiv *****************
  3608 ;; Defined at:
  3609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  divisor         2    0[BANK0 ] int 
  3612 ;;  dividend        2    2[BANK0 ] int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  quotient        2    7[BANK0 ] int 
  3615 ;;  sign            1    6[BANK0 ] unsigned char 
  3616 ;;  counter         1    5[BANK0 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2    0[BANK0 ] int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3626 ;;      Params:         0       4       0       0       0
  3627 ;;      Locals:         0       4       0       0       0
  3628 ;;      Temps:          0       1       0       0       0
  3629 ;;      Totals:         0       9       0       0       0
  3630 ;;Total ram usage:        9 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    2
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_scale
  3637 ;;		_sprintf
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           
  3642                           ;psect for function ___awdiv
  3643  0000'                    ___awdiv:
  3644  0000'                    l4003:	
  3645                           ;incstack = 0
  3646                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3647                           
  3648  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3649  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3650  0002' 0186'              	clrf	___awdiv@sign
  3651  0003'                    l4005:
  3652  0003' 1F81'              	btfss	___awdiv@divisor+1,7
  3653  0004' 2800'              	goto	u6281
  3654  0005' 2800'              	goto	u6280
  3655  0006'                    u6281:
  3656  0006' 2800'              	goto	l4011
  3657  0007'                    u6280:
  3658  0007'                    l4007:
  3659  0007' 0980'              	comf	___awdiv@divisor,f
  3660  0008' 0981'              	comf	___awdiv@divisor+1,f
  3661  0009' 0A80'              	incf	___awdiv@divisor,f
  3662  000A' 1903               	skipnz
  3663  000B' 0A81'              	incf	___awdiv@divisor+1,f
  3664  000C'                    l4009:
  3665  000C' 0186'              	clrf	___awdiv@sign
  3666  000D' 0A86'              	incf	___awdiv@sign,f
  3667  000E'                    l4011:
  3668  000E' 1F83'              	btfss	___awdiv@dividend+1,7
  3669  000F' 2800'              	goto	u6291
  3670  0010' 2800'              	goto	u6290
  3671  0011'                    u6291:
  3672  0011' 2800'              	goto	l4017
  3673  0012'                    u6290:
  3674  0012'                    l4013:
  3675  0012' 0982'              	comf	___awdiv@dividend,f
  3676  0013' 0983'              	comf	___awdiv@dividend+1,f
  3677  0014' 0A82'              	incf	___awdiv@dividend,f
  3678  0015' 1903               	skipnz
  3679  0016' 0A83'              	incf	___awdiv@dividend+1,f
  3680  0017'                    l4015:
  3681  0017' 3001               	movlw	1
  3682  0018' 0084'              	movwf	??___awdiv
  3683  0019' 0804'              	movf	??___awdiv,w
  3684  001A' 0686'              	xorwf	___awdiv@sign,f
  3685  001B'                    l4017:
  3686  001B' 0187'              	clrf	___awdiv@quotient
  3687  001C' 0188'              	clrf	___awdiv@quotient+1
  3688  001D'                    l4019:
  3689  001D' 0800'              	movf	___awdiv@divisor,w
  3690  001E' 0401'              	iorwf	___awdiv@divisor+1,w
  3691  001F' 1903               	btfsc	3,2
  3692  0020' 2800'              	goto	u6301
  3693  0021' 2800'              	goto	u6300
  3694  0022'                    u6301:
  3695  0022' 2800'              	goto	l4039
  3696  0023'                    u6300:
  3697  0023'                    l4021:
  3698  0023' 0185'              	clrf	___awdiv@counter
  3699  0024' 0A85'              	incf	___awdiv@counter,f
  3700  0025' 2800'              	goto	l4027
  3701  0026'                    l4023:
  3702  0026' 3001               	movlw	1
  3703  0027'                    u6315:
  3704  0027' 1003               	clrc
  3705  0028' 0D80'              	rlf	___awdiv@divisor,f
  3706  0029' 0D81'              	rlf	___awdiv@divisor+1,f
  3707  002A' 3EFF               	addlw	-1
  3708  002B' 1D03               	skipz
  3709  002C' 2800'              	goto	u6315
  3710  002D'                    l4025:
  3711  002D' 3001               	movlw	1
  3712  002E' 0084'              	movwf	??___awdiv
  3713  002F' 0804'              	movf	??___awdiv,w
  3714  0030' 0785'              	addwf	___awdiv@counter,f
  3715  0031'                    l4027:
  3716  0031' 1F81'              	btfss	___awdiv@divisor+1,7
  3717  0032' 2800'              	goto	u6321
  3718  0033' 2800'              	goto	u6320
  3719  0034'                    u6321:
  3720  0034' 2800'              	goto	l4023
  3721  0035'                    u6320:
  3722  0035'                    l4029:
  3723  0035' 3001               	movlw	1
  3724  0036'                    u6335:
  3725  0036' 1003               	clrc
  3726  0037' 0D87'              	rlf	___awdiv@quotient,f
  3727  0038' 0D88'              	rlf	___awdiv@quotient+1,f
  3728  0039' 3EFF               	addlw	-1
  3729  003A' 1D03               	skipz
  3730  003B' 2800'              	goto	u6335
  3731  003C' 0801'              	movf	___awdiv@divisor+1,w
  3732  003D' 0203'              	subwf	___awdiv@dividend+1,w
  3733  003E' 1D03               	skipz
  3734  003F' 2800'              	goto	u6345
  3735  0040' 0800'              	movf	___awdiv@divisor,w
  3736  0041' 0202'              	subwf	___awdiv@dividend,w
  3737  0042'                    u6345:
  3738  0042' 1C03               	skipc
  3739  0043' 2800'              	goto	u6341
  3740  0044' 2800'              	goto	u6340
  3741  0045'                    u6341:
  3742  0045' 2800'              	goto	l4035
  3743  0046'                    u6340:
  3744  0046'                    l4031:
  3745  0046' 0800'              	movf	___awdiv@divisor,w
  3746  0047' 0282'              	subwf	___awdiv@dividend,f
  3747  0048' 0801'              	movf	___awdiv@divisor+1,w
  3748  0049' 1C03               	skipc
  3749  004A' 0383'              	decf	___awdiv@dividend+1,f
  3750  004B' 0283'              	subwf	___awdiv@dividend+1,f
  3751  004C'                    l4033:
  3752  004C' 1407'              	bsf	___awdiv@quotient,0
  3753  004D'                    l4035:
  3754  004D' 3001               	movlw	1
  3755  004E'                    u6355:
  3756  004E' 1003               	clrc
  3757  004F' 0C81'              	rrf	___awdiv@divisor+1,f
  3758  0050' 0C80'              	rrf	___awdiv@divisor,f
  3759  0051' 3EFF               	addlw	-1
  3760  0052' 1D03               	skipz
  3761  0053' 2800'              	goto	u6355
  3762  0054'                    l4037:
  3763  0054' 3001               	movlw	1
  3764  0055' 0285'              	subwf	___awdiv@counter,f
  3765  0056' 1D03               	btfss	3,2
  3766  0057' 2800'              	goto	u6361
  3767  0058' 2800'              	goto	u6360
  3768  0059'                    u6361:
  3769  0059' 2800'              	goto	l4029
  3770  005A'                    u6360:
  3771  005A'                    l4039:
  3772  005A' 0806'              	movf	___awdiv@sign,w
  3773  005B' 1903               	btfsc	3,2
  3774  005C' 2800'              	goto	u6371
  3775  005D' 2800'              	goto	u6370
  3776  005E'                    u6371:
  3777  005E' 2800'              	goto	l4043
  3778  005F'                    u6370:
  3779  005F'                    l4041:
  3780  005F' 0987'              	comf	___awdiv@quotient,f
  3781  0060' 0988'              	comf	___awdiv@quotient+1,f
  3782  0061' 0A87'              	incf	___awdiv@quotient,f
  3783  0062' 1903               	skipnz
  3784  0063' 0A88'              	incf	___awdiv@quotient+1,f
  3785  0064'                    l4043:
  3786  0064' 0808'              	movf	___awdiv@quotient+1,w
  3787  0065' 0081'              	movwf	?___awdiv+1
  3788  0066' 0807'              	movf	___awdiv@quotient,w
  3789  0067' 0080'              	movwf	?___awdiv
  3790  0068'                    l601:
  3791  0068' 0008               	return
  3792  0069'                    __end_of___awdiv:
  3793                           
  3794                           	psect	text5
  3795  0000'                    __ptext5:	
  3796 ;; *************** function _isdigit *****************
  3797 ;; Defined at:
  3798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  c               1    wreg     unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  c               1    4[COMMON] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         2       0       0       0       0
  3816 ;;Total ram usage:        2 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    2
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_sprintf
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _isdigit
  3828  0000'                    _isdigit:
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3832                           ;isdigit@c stored from wreg
  3833  0000' 0084'              	movwf	isdigit@c
  3834  0001'                    l4525:
  3835  0001' 0183'              	clrf	_isdigit$944
  3836  0002'                    l4527:
  3837  0002' 303A               	movlw	58
  3838  0003' 0204'              	subwf	isdigit@c,w
  3839  0004' 1803               	skipnc
  3840  0005' 2800'              	goto	u7681
  3841  0006' 2800'              	goto	u7680
  3842  0007'                    u7681:
  3843  0007' 2800'              	goto	l4533
  3844  0008'                    u7680:
  3845  0008'                    l4529:
  3846  0008' 3030               	movlw	48
  3847  0009' 0204'              	subwf	isdigit@c,w
  3848  000A' 1C03               	skipc
  3849  000B' 2800'              	goto	u7691
  3850  000C' 2800'              	goto	u7690
  3851  000D'                    u7691:
  3852  000D' 2800'              	goto	l4533
  3853  000E'                    u7690:
  3854  000E'                    l4531:
  3855  000E' 0183'              	clrf	_isdigit$944
  3856  000F' 0A83'              	incf	_isdigit$944,f
  3857  0010'                    l4533:
  3858  0010' 0C03'              	rrf	_isdigit$944,w
  3859  0011'                    l935:
  3860  0011' 0008               	return
  3861  0012'                    __end_of_isdigit:
  3862                           
  3863                           	psect	text6
  3864  0000'                    __ptext6:	
  3865 ;; *************** function _fround *****************
  3866 ;; Defined at:
  3867 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  prec            1    wreg     unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  prec            1   55[BANK0 ] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  4   36[BANK0 ] unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3881 ;;      Params:         0       4       0       0       0
  3882 ;;      Locals:         0       9       0       0       0
  3883 ;;      Temps:          0       7       0       0       0
  3884 ;;      Totals:         0      20       0       0       0
  3885 ;;Total ram usage:       20 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		___flmul
  3890 ;;		___lwdiv
  3891 ;;		___lwmod
  3892 ;; This function is called by:
  3893 ;;		_sprintf
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _fround
  3899  0000'                    _fround:
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3903                           ;fround@prec stored from wreg
  3904  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3905  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3906  0002' 00B7'              	movwf	fround@prec
  3907  0003'                    l4467:
  3908                           
  3909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3910  0003' 306E               	movlw	110
  3911  0004' 0237'              	subwf	fround@prec,w
  3912  0005' 1C03               	skipc
  3913  0006' 2800'              	goto	u7431
  3914  0007' 2800'              	goto	u7430
  3915  0008'                    u7431:
  3916  0008' 2800'              	goto	l4475
  3917  0009'                    u7430:
  3918  0009'                    l4469:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3921  0009' 303F               	movlw	63
  3922  000A' 008D'              	movwf	___flmul@b+3
  3923  000B' 3000               	movlw	0
  3924  000C' 008C'              	movwf	___flmul@b+2
  3925  000D' 3000               	movlw	0
  3926  000E' 008B'              	movwf	___flmul@b+1
  3927  000F' 3000               	movlw	0
  3928  0010' 008A'              	movwf	___flmul@b
  3929  0011' 3064               	movlw	100
  3930  0012' 0080'              	movwf	___lwdiv@divisor
  3931  0013' 3000               	movlw	0
  3932  0014' 0081'              	movwf	___lwdiv@divisor+1
  3933  0015' 0837'              	movf	fround@prec,w
  3934  0016' 00A8'              	movwf	??_fround
  3935  0017' 01A9'              	clrf	??_fround+1
  3936  0018' 0828'              	movf	??_fround,w
  3937  0019' 0082'              	movwf	___lwdiv@dividend
  3938  001A' 0829'              	movf	??_fround+1,w
  3939  001B' 0083'              	movwf	___lwdiv@dividend+1
  3940  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3941  0021' 1283               	bcf	3,5	;RP0=0, select bank0
  3942  0022' 1303               	bcf	3,6	;RP1=0, select bank0
  3943  0023' 0800'              	movf	?___lwdiv,w
  3944  0024' 00AA'              	movwf	??_fround+2
  3945  0025' 3001               	movlw	1
  3946  0026'                    u7445:
  3947  0026' 1003               	clrc
  3948  0027' 0DAA'              	rlf	??_fround+2,f
  3949  0028' 3EFF               	addlw	-1
  3950  0029' 1D03               	skipz
  3951  002A' 2800'              	goto	u7445
  3952  002B' 1003               	clrc
  3953  002C' 0D2A'              	rlf	??_fround+2,w
  3954  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3955  002E' 0084               	movwf	4
  3956  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3957  0034' 00AB'              	movwf	??_fround+3
  3958  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3959  003A' 00AC'              	movwf	??_fround+4
  3960  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3961  0040' 00AD'              	movwf	??_fround+5
  3962  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3963  0046' 00AE'              	movwf	??_fround+6
  3964  0047' 082E'              	movf	??_fround+6,w
  3965  0048' 0091'              	movwf	___flmul@a+3
  3966  0049' 082D'              	movf	??_fround+5,w
  3967  004A' 0090'              	movwf	___flmul@a+2
  3968  004B' 082C'              	movf	??_fround+4,w
  3969  004C' 008F'              	movwf	___flmul@a+1
  3970  004D' 082B'              	movf	??_fround+3,w
  3971  004E' 008E'              	movwf	___flmul@a
  3972  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3973  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  3974  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  3975  0056' 080D'              	movf	?___flmul+3,w
  3976  0057' 00B6'              	movwf	_fround$1124+3
  3977  0058' 080C'              	movf	?___flmul+2,w
  3978  0059' 00B5'              	movwf	_fround$1124+2
  3979  005A' 080B'              	movf	?___flmul+1,w
  3980  005B' 00B4'              	movwf	_fround$1124+1
  3981  005C' 080A'              	movf	?___flmul,w
  3982  005D' 00B3'              	movwf	_fround$1124
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3985  005E' 300A               	movlw	10
  3986  005F' 0080'              	movwf	___lwdiv@divisor
  3987  0060' 3000               	movlw	0
  3988  0061' 0081'              	movwf	___lwdiv@divisor+1
  3989  0062' 0837'              	movf	fround@prec,w
  3990  0063' 00A8'              	movwf	??_fround
  3991  0064' 01A9'              	clrf	??_fround+1
  3992  0065' 0828'              	movf	??_fround,w
  3993  0066' 0085'              	movwf	___lwmod@dividend
  3994  0067' 0829'              	movf	??_fround+1,w
  3995  0068' 0086'              	movwf	___lwmod@dividend+1
  3996  0069' 3064               	movlw	100
  3997  006A' 0083'              	movwf	___lwmod@divisor
  3998  006B' 3000               	movlw	0
  3999  006C' 0084'              	movwf	___lwmod@divisor+1
  4000  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4001  0072' 0804'              	movf	?___lwmod+1,w
  4002  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  4003  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  4004  0075' 0083'              	movwf	___lwdiv@dividend+1
  4005  0076' 0803'              	movf	?___lwmod,w
  4006  0077' 0082'              	movwf	___lwdiv@dividend
  4007  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4008  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  4009  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  4010  007F' 0800'              	movf	?___lwdiv,w
  4011  0080' 00AA'              	movwf	??_fround+2
  4012  0081' 3001               	movlw	1
  4013  0082'                    u7455:
  4014  0082' 1003               	clrc
  4015  0083' 0DAA'              	rlf	??_fround+2,f
  4016  0084' 3EFF               	addlw	-1
  4017  0085' 1D03               	skipz
  4018  0086' 2800'              	goto	u7455
  4019  0087' 1003               	clrc
  4020  0088' 0D2A'              	rlf	??_fround+2,w
  4021  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4022  008A' 0084               	movwf	4
  4023  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4024  0090' 00AB'              	movwf	??_fround+3
  4025  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4026  0096' 00AC'              	movwf	??_fround+4
  4027  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4028  009C' 00AD'              	movwf	??_fround+5
  4029  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4030  00A2' 00AE'              	movwf	??_fround+6
  4031  00A3' 082E'              	movf	??_fround+6,w
  4032  00A4' 008D'              	movwf	___flmul@b+3
  4033  00A5' 082D'              	movf	??_fround+5,w
  4034  00A6' 008C'              	movwf	___flmul@b+2
  4035  00A7' 082C'              	movf	??_fround+4,w
  4036  00A8' 008B'              	movwf	___flmul@b+1
  4037  00A9' 082B'              	movf	??_fround+3,w
  4038  00AA' 008A'              	movwf	___flmul@b
  4039  00AB' 0836'              	movf	_fround$1124+3,w
  4040  00AC' 0091'              	movwf	___flmul@a+3
  4041  00AD' 0835'              	movf	_fround$1124+2,w
  4042  00AE' 0090'              	movwf	___flmul@a+2
  4043  00AF' 0834'              	movf	_fround$1124+1,w
  4044  00B0' 008F'              	movwf	___flmul@a+1
  4045  00B1' 0833'              	movf	_fround$1124,w
  4046  00B2' 008E'              	movwf	___flmul@a
  4047  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4048  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  4049  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  4050  00BA' 080D'              	movf	?___flmul+3,w
  4051  00BB' 00B2'              	movwf	_fround$1125+3
  4052  00BC' 080C'              	movf	?___flmul+2,w
  4053  00BD' 00B1'              	movwf	_fround$1125+2
  4054  00BE' 080B'              	movf	?___flmul+1,w
  4055  00BF' 00B0'              	movwf	_fround$1125+1
  4056  00C0' 080A'              	movf	?___flmul,w
  4057  00C1' 00AF'              	movwf	_fround$1125
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4060  00C2' 300A               	movlw	10
  4061  00C3' 0083'              	movwf	___lwmod@divisor
  4062  00C4' 3000               	movlw	0
  4063  00C5' 0084'              	movwf	___lwmod@divisor+1
  4064  00C6' 0837'              	movf	fround@prec,w
  4065  00C7' 00A8'              	movwf	??_fround
  4066  00C8' 01A9'              	clrf	??_fround+1
  4067  00C9' 0828'              	movf	??_fround,w
  4068  00CA' 0085'              	movwf	___lwmod@dividend
  4069  00CB' 0829'              	movf	??_fround+1,w
  4070  00CC' 0086'              	movwf	___lwmod@dividend+1
  4071  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4072  00D2' 0803'              	movf	?___lwmod,w
  4073  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4074  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4075  00D5' 00AA'              	movwf	??_fround+2
  4076  00D6' 3001               	movlw	1
  4077  00D7'                    u7465:
  4078  00D7' 1003               	clrc
  4079  00D8' 0DAA'              	rlf	??_fround+2,f
  4080  00D9' 3EFF               	addlw	-1
  4081  00DA' 1D03               	skipz
  4082  00DB' 2800'              	goto	u7465
  4083  00DC' 1003               	clrc
  4084  00DD' 0D2A'              	rlf	??_fround+2,w
  4085  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4086  00DF' 0084               	movwf	4
  4087  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4088  00E5' 00AB'              	movwf	??_fround+3
  4089  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4090  00EB' 00AC'              	movwf	??_fround+4
  4091  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4092  00F1' 00AD'              	movwf	??_fround+5
  4093  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4094  00F7' 00AE'              	movwf	??_fround+6
  4095  00F8' 082E'              	movf	??_fround+6,w
  4096  00F9' 008D'              	movwf	___flmul@b+3
  4097  00FA' 082D'              	movf	??_fround+5,w
  4098  00FB' 008C'              	movwf	___flmul@b+2
  4099  00FC' 082C'              	movf	??_fround+4,w
  4100  00FD' 008B'              	movwf	___flmul@b+1
  4101  00FE' 082B'              	movf	??_fround+3,w
  4102  00FF' 008A'              	movwf	___flmul@b
  4103  0100' 0832'              	movf	_fround$1125+3,w
  4104  0101' 0091'              	movwf	___flmul@a+3
  4105  0102' 0831'              	movf	_fround$1125+2,w
  4106  0103' 0090'              	movwf	___flmul@a+2
  4107  0104' 0830'              	movf	_fround$1125+1,w
  4108  0105' 008F'              	movwf	___flmul@a+1
  4109  0106' 082F'              	movf	_fround$1125,w
  4110  0107' 008E'              	movwf	___flmul@a
  4111  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4112  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  4113  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  4114  010F' 080D'              	movf	?___flmul+3,w
  4115  0110' 00A7'              	movwf	?_fround+3
  4116  0111' 080C'              	movf	?___flmul+2,w
  4117  0112' 00A6'              	movwf	?_fround+2
  4118  0113' 080B'              	movf	?___flmul+1,w
  4119  0114' 00A5'              	movwf	?_fround+1
  4120  0115' 080A'              	movf	?___flmul,w
  4121  0116' 00A4'              	movwf	?_fround
  4122  0117' 2800'              	goto	l345
  4123  0118'                    l4475:
  4124  0118' 300B               	movlw	11
  4125  0119' 0237'              	subwf	fround@prec,w
  4126  011A' 1C03               	skipc
  4127  011B' 2800'              	goto	u7471
  4128  011C' 2800'              	goto	u7470
  4129  011D'                    u7471:
  4130  011D' 2800'              	goto	l4481
  4131  011E'                    u7470:
  4132  011E'                    l4477:
  4133                           
  4134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4135  011E' 303F               	movlw	63
  4136  011F' 008D'              	movwf	___flmul@b+3
  4137  0120' 3000               	movlw	0
  4138  0121' 008C'              	movwf	___flmul@b+2
  4139  0122' 3000               	movlw	0
  4140  0123' 008B'              	movwf	___flmul@b+1
  4141  0124' 3000               	movlw	0
  4142  0125' 008A'              	movwf	___flmul@b
  4143  0126' 300A               	movlw	10
  4144  0127' 0080'              	movwf	___lwdiv@divisor
  4145  0128' 3000               	movlw	0
  4146  0129' 0081'              	movwf	___lwdiv@divisor+1
  4147  012A' 0837'              	movf	fround@prec,w
  4148  012B' 00A8'              	movwf	??_fround
  4149  012C' 01A9'              	clrf	??_fround+1
  4150  012D' 0828'              	movf	??_fround,w
  4151  012E' 0082'              	movwf	___lwdiv@dividend
  4152  012F' 0829'              	movf	??_fround+1,w
  4153  0130' 0083'              	movwf	___lwdiv@dividend+1
  4154  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4155  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  4156  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  4157  0138' 0800'              	movf	?___lwdiv,w
  4158  0139' 00AA'              	movwf	??_fround+2
  4159  013A' 3001               	movlw	1
  4160  013B'                    u7485:
  4161  013B' 1003               	clrc
  4162  013C' 0DAA'              	rlf	??_fround+2,f
  4163  013D' 3EFF               	addlw	-1
  4164  013E' 1D03               	skipz
  4165  013F' 2800'              	goto	u7485
  4166  0140' 1003               	clrc
  4167  0141' 0D2A'              	rlf	??_fround+2,w
  4168  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4169  0143' 0084               	movwf	4
  4170  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4171  0149' 00AB'              	movwf	??_fround+3
  4172  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4173  014F' 00AC'              	movwf	??_fround+4
  4174  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4175  0155' 00AD'              	movwf	??_fround+5
  4176  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4177  015B' 00AE'              	movwf	??_fround+6
  4178  015C' 082E'              	movf	??_fround+6,w
  4179  015D' 0091'              	movwf	___flmul@a+3
  4180  015E' 082D'              	movf	??_fround+5,w
  4181  015F' 0090'              	movwf	___flmul@a+2
  4182  0160' 082C'              	movf	??_fround+4,w
  4183  0161' 008F'              	movwf	___flmul@a+1
  4184  0162' 082B'              	movf	??_fround+3,w
  4185  0163' 008E'              	movwf	___flmul@a
  4186  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4187  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  4188  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  4189  016B' 080D'              	movf	?___flmul+3,w
  4190  016C' 00B6'              	movwf	_fround$1124+3
  4191  016D' 080C'              	movf	?___flmul+2,w
  4192  016E' 00B5'              	movwf	_fround$1124+2
  4193  016F' 080B'              	movf	?___flmul+1,w
  4194  0170' 00B4'              	movwf	_fround$1124+1
  4195  0171' 080A'              	movf	?___flmul,w
  4196  0172' 00B3'              	movwf	_fround$1124
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4199  0173' 300A               	movlw	10
  4200  0174' 0083'              	movwf	___lwmod@divisor
  4201  0175' 3000               	movlw	0
  4202  0176' 0084'              	movwf	___lwmod@divisor+1
  4203  0177' 0837'              	movf	fround@prec,w
  4204  0178' 00A8'              	movwf	??_fround
  4205  0179' 01A9'              	clrf	??_fround+1
  4206  017A' 0828'              	movf	??_fround,w
  4207  017B' 0085'              	movwf	___lwmod@dividend
  4208  017C' 0829'              	movf	??_fround+1,w
  4209  017D' 0086'              	movwf	___lwmod@dividend+1
  4210  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4211  0183' 0803'              	movf	?___lwmod,w
  4212  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  4213  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  4214  0186' 00AA'              	movwf	??_fround+2
  4215  0187' 3001               	movlw	1
  4216  0188'                    u7495:
  4217  0188' 1003               	clrc
  4218  0189' 0DAA'              	rlf	??_fround+2,f
  4219  018A' 3EFF               	addlw	-1
  4220  018B' 1D03               	skipz
  4221  018C' 2800'              	goto	u7495
  4222  018D' 1003               	clrc
  4223  018E' 0D2A'              	rlf	??_fround+2,w
  4224  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4225  0190' 0084               	movwf	4
  4226  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4227  0196' 00AB'              	movwf	??_fround+3
  4228  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4229  019C' 00AC'              	movwf	??_fround+4
  4230  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4231  01A2' 00AD'              	movwf	??_fround+5
  4232  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4233  01A8' 00AE'              	movwf	??_fround+6
  4234  01A9' 082E'              	movf	??_fround+6,w
  4235  01AA' 008D'              	movwf	___flmul@b+3
  4236  01AB' 082D'              	movf	??_fround+5,w
  4237  01AC' 008C'              	movwf	___flmul@b+2
  4238  01AD' 082C'              	movf	??_fround+4,w
  4239  01AE' 008B'              	movwf	___flmul@b+1
  4240  01AF' 082B'              	movf	??_fround+3,w
  4241  01B0' 008A'              	movwf	___flmul@b
  4242  01B1' 0836'              	movf	_fround$1124+3,w
  4243  01B2' 0091'              	movwf	___flmul@a+3
  4244  01B3' 0835'              	movf	_fround$1124+2,w
  4245  01B4' 0090'              	movwf	___flmul@a+2
  4246  01B5' 0834'              	movf	_fround$1124+1,w
  4247  01B6' 008F'              	movwf	___flmul@a+1
  4248  01B7' 0833'              	movf	_fround$1124,w
  4249  01B8' 008E'              	movwf	___flmul@a
  4250  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4251  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4252  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4253  01C0' 080D'              	movf	?___flmul+3,w
  4254  01C1' 00A7'              	movwf	?_fround+3
  4255  01C2' 080C'              	movf	?___flmul+2,w
  4256  01C3' 00A6'              	movwf	?_fround+2
  4257  01C4' 080B'              	movf	?___flmul+1,w
  4258  01C5' 00A5'              	movwf	?_fround+1
  4259  01C6' 080A'              	movf	?___flmul,w
  4260  01C7' 00A4'              	movwf	?_fround
  4261  01C8' 2800'              	goto	l345
  4262  01C9'                    l4481:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4265  01C9' 303F               	movlw	63
  4266  01CA' 008D'              	movwf	___flmul@b+3
  4267  01CB' 3000               	movlw	0
  4268  01CC' 008C'              	movwf	___flmul@b+2
  4269  01CD' 3000               	movlw	0
  4270  01CE' 008B'              	movwf	___flmul@b+1
  4271  01CF' 3000               	movlw	0
  4272  01D0' 008A'              	movwf	___flmul@b
  4273  01D1' 0837'              	movf	fround@prec,w
  4274  01D2' 00A8'              	movwf	??_fround
  4275  01D3' 3001               	movlw	1
  4276  01D4'                    u7505:
  4277  01D4' 1003               	clrc
  4278  01D5' 0DA8'              	rlf	??_fround,f
  4279  01D6' 3EFF               	addlw	-1
  4280  01D7' 1D03               	skipz
  4281  01D8' 2800'              	goto	u7505
  4282  01D9' 1003               	clrc
  4283  01DA' 0D28'              	rlf	??_fround,w
  4284  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4285  01DC' 0084               	movwf	4
  4286  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4287  01E2' 00A9'              	movwf	??_fround+1
  4288  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4289  01E8' 00AA'              	movwf	??_fround+2
  4290  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4291  01EE' 00AB'              	movwf	??_fround+3
  4292  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4293  01F4' 00AC'              	movwf	??_fround+4
  4294  01F5' 082C'              	movf	??_fround+4,w
  4295  01F6' 0091'              	movwf	___flmul@a+3
  4296  01F7' 082B'              	movf	??_fround+3,w
  4297  01F8' 0090'              	movwf	___flmul@a+2
  4298  01F9' 082A'              	movf	??_fround+2,w
  4299  01FA' 008F'              	movwf	___flmul@a+1
  4300  01FB' 0829'              	movf	??_fround+1,w
  4301  01FC' 008E'              	movwf	___flmul@a
  4302  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4303  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  4304  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  4305  0204' 080D'              	movf	?___flmul+3,w
  4306  0205' 00A7'              	movwf	?_fround+3
  4307  0206' 080C'              	movf	?___flmul+2,w
  4308  0207' 00A6'              	movwf	?_fround+2
  4309  0208' 080B'              	movf	?___flmul+1,w
  4310  0209' 00A5'              	movwf	?_fround+1
  4311  020A' 080A'              	movf	?___flmul,w
  4312  020B' 00A4'              	movwf	?_fround
  4313  020C'                    l345:
  4314  020C' 0008               	return
  4315  020D'                    __end_of_fround:
  4316                           
  4317                           	psect	text7
  4318  0000'                    __ptext7:	
  4319 ;; *************** function ___lwmod *****************
  4320 ;; Defined at:
  4321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  divisor         2    3[COMMON] unsigned int 
  4324 ;;  dividend        2    5[COMMON] unsigned int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  counter         1    8[COMMON] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  2    3[COMMON] unsigned int 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         4       0       0       0       0
  4337 ;;      Locals:         1       0       0       0       0
  4338 ;;      Temps:          1       0       0       0       0
  4339 ;;      Totals:         6       0       0       0       0
  4340 ;;Total ram usage:        6 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_fround
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           
  4351                           ;psect for function ___lwmod
  4352  0000'                    ___lwmod:
  4353  0000'                    l4111:	
  4354                           ;incstack = 0
  4355                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4356                           
  4357  0000' 0803'              	movf	___lwmod@divisor,w
  4358  0001' 0404'              	iorwf	___lwmod@divisor+1,w
  4359  0002' 1903               	btfsc	3,2
  4360  0003' 2800'              	goto	u6541
  4361  0004' 2800'              	goto	u6540
  4362  0005'                    u6541:
  4363  0005' 2800'              	goto	l4129
  4364  0006'                    u6540:
  4365  0006'                    l4113:
  4366  0006' 0188'              	clrf	___lwmod@counter
  4367  0007' 0A88'              	incf	___lwmod@counter,f
  4368  0008' 2800'              	goto	l4119
  4369  0009'                    l4115:
  4370  0009' 3001               	movlw	1
  4371  000A'                    u6555:
  4372  000A' 1003               	clrc
  4373  000B' 0D83'              	rlf	___lwmod@divisor,f
  4374  000C' 0D84'              	rlf	___lwmod@divisor+1,f
  4375  000D' 3EFF               	addlw	-1
  4376  000E' 1D03               	skipz
  4377  000F' 2800'              	goto	u6555
  4378  0010'                    l4117:
  4379  0010' 3001               	movlw	1
  4380  0011' 0087'              	movwf	??___lwmod
  4381  0012' 0807'              	movf	??___lwmod,w
  4382  0013' 0788'              	addwf	___lwmod@counter,f
  4383  0014'                    l4119:
  4384  0014' 1F84'              	btfss	___lwmod@divisor+1,7
  4385  0015' 2800'              	goto	u6561
  4386  0016' 2800'              	goto	u6560
  4387  0017'                    u6561:
  4388  0017' 2800'              	goto	l4115
  4389  0018'                    u6560:
  4390  0018'                    l4121:
  4391  0018' 0804'              	movf	___lwmod@divisor+1,w
  4392  0019' 0206'              	subwf	___lwmod@dividend+1,w
  4393  001A' 1D03               	skipz
  4394  001B' 2800'              	goto	u6575
  4395  001C' 0803'              	movf	___lwmod@divisor,w
  4396  001D' 0205'              	subwf	___lwmod@dividend,w
  4397  001E'                    u6575:
  4398  001E' 1C03               	skipc
  4399  001F' 2800'              	goto	u6571
  4400  0020' 2800'              	goto	u6570
  4401  0021'                    u6571:
  4402  0021' 2800'              	goto	l4125
  4403  0022'                    u6570:
  4404  0022'                    l4123:
  4405  0022' 0803'              	movf	___lwmod@divisor,w
  4406  0023' 0285'              	subwf	___lwmod@dividend,f
  4407  0024' 0804'              	movf	___lwmod@divisor+1,w
  4408  0025' 1C03               	skipc
  4409  0026' 0386'              	decf	___lwmod@dividend+1,f
  4410  0027' 0286'              	subwf	___lwmod@dividend+1,f
  4411  0028'                    l4125:
  4412  0028' 3001               	movlw	1
  4413  0029'                    u6585:
  4414  0029' 1003               	clrc
  4415  002A' 0C84'              	rrf	___lwmod@divisor+1,f
  4416  002B' 0C83'              	rrf	___lwmod@divisor,f
  4417  002C' 3EFF               	addlw	-1
  4418  002D' 1D03               	skipz
  4419  002E' 2800'              	goto	u6585
  4420  002F'                    l4127:
  4421  002F' 3001               	movlw	1
  4422  0030' 0288'              	subwf	___lwmod@counter,f
  4423  0031' 1D03               	btfss	3,2
  4424  0032' 2800'              	goto	u6591
  4425  0033' 2800'              	goto	u6590
  4426  0034'                    u6591:
  4427  0034' 2800'              	goto	l4121
  4428  0035'                    u6590:
  4429  0035'                    l4129:
  4430  0035' 0806'              	movf	___lwmod@dividend+1,w
  4431  0036' 0084'              	movwf	?___lwmod+1
  4432  0037' 0805'              	movf	___lwmod@dividend,w
  4433  0038' 0083'              	movwf	?___lwmod
  4434  0039'                    l764:
  4435  0039' 0008               	return
  4436  003A'                    __end_of___lwmod:
  4437                           
  4438                           	psect	text8
  4439  0000'                    __ptext8:	
  4440 ;; *************** function ___lwdiv *****************
  4441 ;; Defined at:
  4442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  divisor         2    0[BANK0 ] unsigned int 
  4445 ;;  dividend        2    2[BANK0 ] unsigned int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  quotient        2    5[BANK0 ] unsigned int 
  4448 ;;  counter         1    4[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    0[BANK0 ] unsigned int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       4       0       0       0
  4459 ;;      Locals:         0       3       0       0       0
  4460 ;;      Temps:          1       0       0       0       0
  4461 ;;      Totals:         1       7       0       0       0
  4462 ;;Total ram usage:        8 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    2
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_fround
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function ___lwdiv
  4474  0000'                    ___lwdiv:
  4475  0000'                    l4085:	
  4476                           ;incstack = 0
  4477                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4478                           
  4479  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4480  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4481  0002' 0185'              	clrf	___lwdiv@quotient
  4482  0003' 0186'              	clrf	___lwdiv@quotient+1
  4483  0004'                    l4087:
  4484  0004' 0800'              	movf	___lwdiv@divisor,w
  4485  0005' 0401'              	iorwf	___lwdiv@divisor+1,w
  4486  0006' 1903               	btfsc	3,2
  4487  0007' 2800'              	goto	u6471
  4488  0008' 2800'              	goto	u6470
  4489  0009'                    u6471:
  4490  0009' 2800'              	goto	l4107
  4491  000A'                    u6470:
  4492  000A'                    l4089:
  4493  000A' 0184'              	clrf	___lwdiv@counter
  4494  000B' 0A84'              	incf	___lwdiv@counter,f
  4495  000C' 2800'              	goto	l4095
  4496  000D'                    l4091:
  4497  000D' 3001               	movlw	1
  4498  000E'                    u6485:
  4499  000E' 1003               	clrc
  4500  000F' 0D80'              	rlf	___lwdiv@divisor,f
  4501  0010' 0D81'              	rlf	___lwdiv@divisor+1,f
  4502  0011' 3EFF               	addlw	-1
  4503  0012' 1D03               	skipz
  4504  0013' 2800'              	goto	u6485
  4505  0014'                    l4093:
  4506  0014' 3001               	movlw	1
  4507  0015' 0089'              	movwf	??___lwdiv
  4508  0016' 0809'              	movf	??___lwdiv,w
  4509  0017' 0784'              	addwf	___lwdiv@counter,f
  4510  0018'                    l4095:
  4511  0018' 1F81'              	btfss	___lwdiv@divisor+1,7
  4512  0019' 2800'              	goto	u6491
  4513  001A' 2800'              	goto	u6490
  4514  001B'                    u6491:
  4515  001B' 2800'              	goto	l4091
  4516  001C'                    u6490:
  4517  001C'                    l4097:
  4518  001C' 3001               	movlw	1
  4519  001D'                    u6505:
  4520  001D' 1003               	clrc
  4521  001E' 0D85'              	rlf	___lwdiv@quotient,f
  4522  001F' 0D86'              	rlf	___lwdiv@quotient+1,f
  4523  0020' 3EFF               	addlw	-1
  4524  0021' 1D03               	skipz
  4525  0022' 2800'              	goto	u6505
  4526  0023' 0801'              	movf	___lwdiv@divisor+1,w
  4527  0024' 0203'              	subwf	___lwdiv@dividend+1,w
  4528  0025' 1D03               	skipz
  4529  0026' 2800'              	goto	u6515
  4530  0027' 0800'              	movf	___lwdiv@divisor,w
  4531  0028' 0202'              	subwf	___lwdiv@dividend,w
  4532  0029'                    u6515:
  4533  0029' 1C03               	skipc
  4534  002A' 2800'              	goto	u6511
  4535  002B' 2800'              	goto	u6510
  4536  002C'                    u6511:
  4537  002C' 2800'              	goto	l4103
  4538  002D'                    u6510:
  4539  002D'                    l4099:
  4540  002D' 0800'              	movf	___lwdiv@divisor,w
  4541  002E' 0282'              	subwf	___lwdiv@dividend,f
  4542  002F' 0801'              	movf	___lwdiv@divisor+1,w
  4543  0030' 1C03               	skipc
  4544  0031' 0383'              	decf	___lwdiv@dividend+1,f
  4545  0032' 0283'              	subwf	___lwdiv@dividend+1,f
  4546  0033'                    l4101:
  4547  0033' 1405'              	bsf	___lwdiv@quotient,0
  4548  0034'                    l4103:
  4549  0034' 3001               	movlw	1
  4550  0035'                    u6525:
  4551  0035' 1003               	clrc
  4552  0036' 0C81'              	rrf	___lwdiv@divisor+1,f
  4553  0037' 0C80'              	rrf	___lwdiv@divisor,f
  4554  0038' 3EFF               	addlw	-1
  4555  0039' 1D03               	skipz
  4556  003A' 2800'              	goto	u6525
  4557  003B'                    l4105:
  4558  003B' 3001               	movlw	1
  4559  003C' 0284'              	subwf	___lwdiv@counter,f
  4560  003D' 1D03               	btfss	3,2
  4561  003E' 2800'              	goto	u6531
  4562  003F' 2800'              	goto	u6530
  4563  0040'                    u6531:
  4564  0040' 2800'              	goto	l4097
  4565  0041'                    u6530:
  4566  0041'                    l4107:
  4567  0041' 0806'              	movf	___lwdiv@quotient+1,w
  4568  0042' 0081'              	movwf	?___lwdiv+1
  4569  0043' 0805'              	movf	___lwdiv@quotient,w
  4570  0044' 0080'              	movwf	?___lwdiv
  4571  0045'                    l754:
  4572  0045' 0008               	return
  4573  0046'                    __end_of___lwdiv:
  4574                           
  4575                           	psect	text9
  4576  0000'                    __ptext9:	
  4577 ;; *************** function __tdiv_to_l_ *****************
  4578 ;; Defined at:
  4579 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  f1              4    0[BANK0 ] float 
  4582 ;;  f2              4    4[BANK0 ] float 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  quot            4    8[BANK0 ] unsigned long 
  4585 ;;  exp1            1   13[BANK0 ] unsigned char 
  4586 ;;  cntr            1   12[BANK0 ] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  4    0[BANK0 ] unsigned long 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         0       8       0       0       0
  4597 ;;      Locals:         0       6       0       0       0
  4598 ;;      Temps:          4       0       0       0       0
  4599 ;;      Totals:         4      14       0       0       0
  4600 ;;Total ram usage:       18 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    2
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_sprintf
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function __tdiv_to_l_
  4612  0000'                    __tdiv_to_l_:
  4613  0000'                    l4537:	
  4614                           ;incstack = 0
  4615                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4616                           
  4617  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4618  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4619  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  4620  0003' 0083'              	movwf	??__tdiv_to_l_
  4621  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  4622  0005' 0084'              	movwf	??__tdiv_to_l_+1
  4623  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  4624  0007' 0085'              	movwf	??__tdiv_to_l_+2
  4625  0008' 1003               	clrc
  4626  0009' 0D04'              	rlf	??__tdiv_to_l_+1,w
  4627  000A' 0D05'              	rlf	??__tdiv_to_l_+2,w
  4628  000B' 0086'              	movwf	??__tdiv_to_l_+3
  4629  000C' 0806'              	movf	??__tdiv_to_l_+3,w
  4630  000D' 008D'              	movwf	__tdiv_to_l_@exp1
  4631  000E' 080D'              	movf	__tdiv_to_l_@exp1,w
  4632  000F' 1D03               	btfss	3,2
  4633  0010' 2800'              	goto	u7701
  4634  0011' 2800'              	goto	u7700
  4635  0012'                    u7701:
  4636  0012' 2800'              	goto	l4543
  4637  0013'                    u7700:
  4638  0013'                    l4539:
  4639  0013' 3000               	movlw	0
  4640  0014' 0083'              	movwf	?__tdiv_to_l_+3
  4641  0015' 3000               	movlw	0
  4642  0016' 0082'              	movwf	?__tdiv_to_l_+2
  4643  0017' 3000               	movlw	0
  4644  0018' 0081'              	movwf	?__tdiv_to_l_+1
  4645  0019' 3000               	movlw	0
  4646  001A' 0080'              	movwf	?__tdiv_to_l_
  4647  001B' 2800'              	goto	l665
  4648  001C'                    l4543:
  4649  001C' 0804'              	movf	__tdiv_to_l_@f2,w
  4650  001D' 0083'              	movwf	??__tdiv_to_l_
  4651  001E' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4652  001F' 0084'              	movwf	??__tdiv_to_l_+1
  4653  0020' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4654  0021' 0085'              	movwf	??__tdiv_to_l_+2
  4655  0022' 1003               	clrc
  4656  0023' 0D04'              	rlf	??__tdiv_to_l_+1,w
  4657  0024' 0D05'              	rlf	??__tdiv_to_l_+2,w
  4658  0025' 0086'              	movwf	??__tdiv_to_l_+3
  4659  0026' 0806'              	movf	??__tdiv_to_l_+3,w
  4660  0027' 008C'              	movwf	__tdiv_to_l_@cntr
  4661  0028' 080C'              	movf	__tdiv_to_l_@cntr,w
  4662  0029' 1D03               	btfss	3,2
  4663  002A' 2800'              	goto	u7711
  4664  002B' 2800'              	goto	u7710
  4665  002C'                    u7711:
  4666  002C' 2800'              	goto	l666
  4667  002D'                    u7710:
  4668  002D' 2800'              	goto	l4539
  4669  002E'                    l666:
  4670  002E' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  4671  002F'                    l4549:
  4672  002F' 30FF               	movlw	255
  4673  0030' 0580'              	andwf	__tdiv_to_l_@f1,f
  4674  0031' 30FF               	movlw	255
  4675  0032' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  4676  0033' 3000               	movlw	0
  4677  0034' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  4678  0035'                    l4551:
  4679  0035' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  4680  0036' 30FF               	movlw	255
  4681  0037' 0584'              	andwf	__tdiv_to_l_@f2,f
  4682  0038' 30FF               	movlw	255
  4683  0039' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  4684  003A' 3000               	movlw	0
  4685  003B' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  4686  003C' 3000               	movlw	0
  4687  003D' 008B'              	movwf	__tdiv_to_l_@quot+3
  4688  003E' 3000               	movlw	0
  4689  003F' 008A'              	movwf	__tdiv_to_l_@quot+2
  4690  0040' 3000               	movlw	0
  4691  0041' 0089'              	movwf	__tdiv_to_l_@quot+1
  4692  0042' 3000               	movlw	0
  4693  0043' 0088'              	movwf	__tdiv_to_l_@quot
  4694  0044'                    l4553:
  4695  0044' 307F               	movlw	127
  4696  0045' 028D'              	subwf	__tdiv_to_l_@exp1,f
  4697  0046'                    l4555:
  4698  0046' 3098               	movlw	152
  4699  0047' 070C'              	addwf	__tdiv_to_l_@cntr,w
  4700  0048' 0083'              	movwf	??__tdiv_to_l_
  4701  0049' 0803'              	movf	??__tdiv_to_l_,w
  4702  004A' 028D'              	subwf	__tdiv_to_l_@exp1,f
  4703  004B' 3018               	movlw	24
  4704  004C' 0083'              	movwf	??__tdiv_to_l_
  4705  004D' 0803'              	movf	??__tdiv_to_l_,w
  4706  004E' 008C'              	movwf	__tdiv_to_l_@cntr
  4707  004F'                    l4557:
  4708  004F' 3001               	movlw	1
  4709  0050' 0083'              	movwf	??__tdiv_to_l_
  4710  0051'                    u7725:
  4711  0051' 1003               	clrc
  4712  0052' 0D88'              	rlf	__tdiv_to_l_@quot,f
  4713  0053' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  4714  0054' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  4715  0055' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  4716  0056' 0B83'              	decfsz	??__tdiv_to_l_,f
  4717  0057' 2800'              	goto	u7725
  4718  0058'                    l4559:
  4719  0058' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4720  0059' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  4721  005A' 1D03               	skipz
  4722  005B' 2800'              	goto	u7735
  4723  005C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4724  005D' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  4725  005E' 1D03               	skipz
  4726  005F' 2800'              	goto	u7735
  4727  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  4728  0061' 0200'              	subwf	__tdiv_to_l_@f1,w
  4729  0062'                    u7735:
  4730  0062' 1C03               	skipc
  4731  0063' 2800'              	goto	u7731
  4732  0064' 2800'              	goto	u7730
  4733  0065'                    u7731:
  4734  0065' 2800'              	goto	l4565
  4735  0066'                    u7730:
  4736  0066'                    l4561:
  4737  0066' 0804'              	movf	__tdiv_to_l_@f2,w
  4738  0067' 0280'              	subwf	__tdiv_to_l_@f1,f
  4739  0068' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4740  0069' 1C03               	skipc
  4741  006A' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  4742  006B' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  4743  006C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4744  006D' 1C03               	skipc
  4745  006E' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  4746  006F' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  4747  0070'                    l4563:
  4748  0070' 1408'              	bsf	__tdiv_to_l_@quot,0
  4749  0071'                    l4565:
  4750  0071' 3001               	movlw	1
  4751  0072'                    u7745:
  4752  0072' 1003               	clrc
  4753  0073' 0D80'              	rlf	__tdiv_to_l_@f1,f
  4754  0074' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  4755  0075' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  4756  0076' 3EFF               	addlw	-1
  4757  0077' 1D03               	skipz
  4758  0078' 2800'              	goto	u7745
  4759  0079'                    l4567:
  4760  0079' 3001               	movlw	1
  4761  007A' 028C'              	subwf	__tdiv_to_l_@cntr,f
  4762  007B' 1D03               	btfss	3,2
  4763  007C' 2800'              	goto	u7751
  4764  007D' 2800'              	goto	u7750
  4765  007E'                    u7751:
  4766  007E' 2800'              	goto	l4557
  4767  007F'                    u7750:
  4768  007F'                    l669:
  4769  007F' 1F8D'              	btfss	__tdiv_to_l_@exp1,7
  4770  0080' 2800'              	goto	u7761
  4771  0081' 2800'              	goto	u7760
  4772  0082'                    u7761:
  4773  0082' 2800'              	goto	l4577
  4774  0083'                    u7760:
  4775  0083'                    l4569:
  4776  0083' 080D'              	movf	__tdiv_to_l_@exp1,w
  4777  0084' 3A80               	xorlw	128
  4778  0085' 3E97               	addlw	151
  4779  0086' 1803               	skipnc
  4780  0087' 2800'              	goto	u7771
  4781  0088' 2800'              	goto	u7770
  4782  0089'                    u7771:
  4783  0089' 2800'              	goto	l4575
  4784  008A'                    u7770:
  4785  008A' 2800'              	goto	l4539
  4786  008B'                    l4575:
  4787  008B' 3001               	movlw	1
  4788  008C'                    u7785:
  4789  008C' 1003               	clrc
  4790  008D' 0C8B'              	rrf	__tdiv_to_l_@quot+3,f
  4791  008E' 0C8A'              	rrf	__tdiv_to_l_@quot+2,f
  4792  008F' 0C89'              	rrf	__tdiv_to_l_@quot+1,f
  4793  0090' 0C88'              	rrf	__tdiv_to_l_@quot,f
  4794  0091' 3EFF               	addlw	-1
  4795  0092' 1D03               	skipz
  4796  0093' 2800'              	goto	u7785
  4797  0094' 3001               	movlw	1
  4798  0095' 0083'              	movwf	??__tdiv_to_l_
  4799  0096' 0803'              	movf	??__tdiv_to_l_,w
  4800  0097' 078D'              	addwf	__tdiv_to_l_@exp1,f
  4801  0098' 1D03               	btfss	3,2
  4802  0099' 2800'              	goto	u7791
  4803  009A' 2800'              	goto	u7790
  4804  009B'                    u7791:
  4805  009B' 2800'              	goto	l4575
  4806  009C'                    u7790:
  4807  009C' 2800'              	goto	l4585
  4808  009D'                    l4577:
  4809  009D' 3018               	movlw	24
  4810  009E' 020D'              	subwf	__tdiv_to_l_@exp1,w
  4811  009F' 1C03               	skipc
  4812  00A0' 2800'              	goto	u7801
  4813  00A1' 2800'              	goto	u7800
  4814  00A2'                    u7801:
  4815  00A2' 2800'              	goto	l676
  4816  00A3'                    u7800:
  4817  00A3' 2800'              	goto	l4539
  4818  00A4'                    l4583:
  4819  00A4' 3001               	movlw	1
  4820  00A5' 0083'              	movwf	??__tdiv_to_l_
  4821  00A6'                    u7815:
  4822  00A6' 1003               	clrc
  4823  00A7' 0D88'              	rlf	__tdiv_to_l_@quot,f
  4824  00A8' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  4825  00A9' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  4826  00AA' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  4827  00AB' 0B83'              	decfsz	??__tdiv_to_l_,f
  4828  00AC' 2800'              	goto	u7815
  4829  00AD' 3001               	movlw	1
  4830  00AE' 028D'              	subwf	__tdiv_to_l_@exp1,f
  4831  00AF'                    l676:
  4832  00AF' 080D'              	movf	__tdiv_to_l_@exp1,w
  4833  00B0' 1D03               	btfss	3,2
  4834  00B1' 2800'              	goto	u7821
  4835  00B2' 2800'              	goto	u7820
  4836  00B3'                    u7821:
  4837  00B3' 2800'              	goto	l4583
  4838  00B4'                    u7820:
  4839  00B4'                    l4585:
  4840  00B4' 080B'              	movf	__tdiv_to_l_@quot+3,w
  4841  00B5' 0083'              	movwf	?__tdiv_to_l_+3
  4842  00B6' 080A'              	movf	__tdiv_to_l_@quot+2,w
  4843  00B7' 0082'              	movwf	?__tdiv_to_l_+2
  4844  00B8' 0809'              	movf	__tdiv_to_l_@quot+1,w
  4845  00B9' 0081'              	movwf	?__tdiv_to_l_+1
  4846  00BA' 0808'              	movf	__tdiv_to_l_@quot,w
  4847  00BB' 0080'              	movwf	?__tdiv_to_l_
  4848  00BC'                    l665:
  4849  00BC' 0008               	return
  4850  00BD'                    __end_of__tdiv_to_l_:
  4851                           
  4852                           	psect	text10
  4853  0000'                    __ptext10:	
  4854 ;; *************** function __div_to_l_ *****************
  4855 ;; Defined at:
  4856 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  f1              4    0[BANK0 ] unsigned long 
  4859 ;;  f2              4    4[BANK0 ] unsigned long 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  quot            4    4[COMMON] unsigned long 
  4862 ;;  exp1            1    9[COMMON] unsigned char 
  4863 ;;  cntr            1    8[COMMON] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  4    0[BANK0 ] unsigned long 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       8       0       0       0
  4874 ;;      Locals:         6       0       0       0       0
  4875 ;;      Temps:          1       0       0       0       0
  4876 ;;      Totals:         7       8       0       0       0
  4877 ;;Total ram usage:       15 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    2
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_sprintf
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function __div_to_l_
  4889  0000'                    __div_to_l_:
  4890  0000'                    l4589:	
  4891                           ;incstack = 0
  4892                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4893                           
  4894  0000' 1003               	clrc
  4895  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4896  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  4897  0003' 0D02'              	rlf	__div_to_l_@f1+2,w
  4898  0004' 0D03'              	rlf	__div_to_l_@f1+3,w
  4899  0005' 0083'              	movwf	??__div_to_l_
  4900  0006' 0803'              	movf	??__div_to_l_,w
  4901  0007' 0089'              	movwf	__div_to_l_@exp1
  4902  0008' 0809'              	movf	__div_to_l_@exp1,w
  4903  0009' 1D03               	btfss	3,2
  4904  000A' 2800'              	goto	u7831
  4905  000B' 2800'              	goto	u7830
  4906  000C'                    u7831:
  4907  000C' 2800'              	goto	l4595
  4908  000D'                    u7830:
  4909  000D'                    l4591:
  4910  000D' 3000               	movlw	0
  4911  000E' 0083'              	movwf	?__div_to_l_+3
  4912  000F' 3000               	movlw	0
  4913  0010' 0082'              	movwf	?__div_to_l_+2
  4914  0011' 3000               	movlw	0
  4915  0012' 0081'              	movwf	?__div_to_l_+1
  4916  0013' 3000               	movlw	0
  4917  0014' 0080'              	movwf	?__div_to_l_
  4918  0015' 2800'              	goto	l618
  4919  0016'                    l4595:
  4920  0016' 1003               	clrc
  4921  0017' 0D06'              	rlf	__div_to_l_@f2+2,w
  4922  0018' 0D07'              	rlf	__div_to_l_@f2+3,w
  4923  0019' 0083'              	movwf	??__div_to_l_
  4924  001A' 0803'              	movf	??__div_to_l_,w
  4925  001B' 0088'              	movwf	__div_to_l_@cntr
  4926  001C' 0808'              	movf	__div_to_l_@cntr,w
  4927  001D' 1D03               	btfss	3,2
  4928  001E' 2800'              	goto	u7841
  4929  001F' 2800'              	goto	u7840
  4930  0020'                    u7841:
  4931  0020' 2800'              	goto	l619
  4932  0021'                    u7840:
  4933  0021' 2800'              	goto	l4591
  4934  0022'                    l619:
  4935  0022' 1782'              	bsf	__div_to_l_@f1+2,7
  4936  0023'                    l4601:
  4937  0023' 30FF               	movlw	255
  4938  0024' 0580'              	andwf	__div_to_l_@f1,f
  4939  0025' 30FF               	movlw	255
  4940  0026' 0581'              	andwf	__div_to_l_@f1+1,f
  4941  0027' 30FF               	movlw	255
  4942  0028' 0582'              	andwf	__div_to_l_@f1+2,f
  4943  0029' 3000               	movlw	0
  4944  002A' 0583'              	andwf	__div_to_l_@f1+3,f
  4945  002B'                    l4603:
  4946  002B' 1786'              	bsf	__div_to_l_@f2+2,7
  4947  002C' 30FF               	movlw	255
  4948  002D' 0584'              	andwf	__div_to_l_@f2,f
  4949  002E' 30FF               	movlw	255
  4950  002F' 0585'              	andwf	__div_to_l_@f2+1,f
  4951  0030' 30FF               	movlw	255
  4952  0031' 0586'              	andwf	__div_to_l_@f2+2,f
  4953  0032' 3000               	movlw	0
  4954  0033' 0587'              	andwf	__div_to_l_@f2+3,f
  4955  0034' 3000               	movlw	0
  4956  0035' 0087'              	movwf	__div_to_l_@quot+3
  4957  0036' 3000               	movlw	0
  4958  0037' 0086'              	movwf	__div_to_l_@quot+2
  4959  0038' 3000               	movlw	0
  4960  0039' 0085'              	movwf	__div_to_l_@quot+1
  4961  003A' 3000               	movlw	0
  4962  003B' 0084'              	movwf	__div_to_l_@quot
  4963  003C'                    l4605:
  4964  003C' 307F               	movlw	127
  4965  003D' 0289'              	subwf	__div_to_l_@exp1,f
  4966  003E'                    l4607:
  4967  003E' 30A0               	movlw	160
  4968  003F' 0708'              	addwf	__div_to_l_@cntr,w
  4969  0040' 0083'              	movwf	??__div_to_l_
  4970  0041' 0803'              	movf	??__div_to_l_,w
  4971  0042' 0289'              	subwf	__div_to_l_@exp1,f
  4972  0043' 3020               	movlw	32
  4973  0044' 0083'              	movwf	??__div_to_l_
  4974  0045' 0803'              	movf	??__div_to_l_,w
  4975  0046' 0088'              	movwf	__div_to_l_@cntr
  4976  0047'                    l4609:
  4977  0047' 3001               	movlw	1
  4978  0048' 0083'              	movwf	??__div_to_l_
  4979  0049'                    u7855:
  4980  0049' 1003               	clrc
  4981  004A' 0D84'              	rlf	__div_to_l_@quot,f
  4982  004B' 0D85'              	rlf	__div_to_l_@quot+1,f
  4983  004C' 0D86'              	rlf	__div_to_l_@quot+2,f
  4984  004D' 0D87'              	rlf	__div_to_l_@quot+3,f
  4985  004E' 0B83'              	decfsz	??__div_to_l_,f
  4986  004F' 2800'              	goto	u7855
  4987  0050'                    l4611:
  4988  0050' 0807'              	movf	__div_to_l_@f2+3,w
  4989  0051' 0203'              	subwf	__div_to_l_@f1+3,w
  4990  0052' 1D03               	skipz
  4991  0053' 2800'              	goto	u7865
  4992  0054' 0806'              	movf	__div_to_l_@f2+2,w
  4993  0055' 0202'              	subwf	__div_to_l_@f1+2,w
  4994  0056' 1D03               	skipz
  4995  0057' 2800'              	goto	u7865
  4996  0058' 0805'              	movf	__div_to_l_@f2+1,w
  4997  0059' 0201'              	subwf	__div_to_l_@f1+1,w
  4998  005A' 1D03               	skipz
  4999  005B' 2800'              	goto	u7865
  5000  005C' 0804'              	movf	__div_to_l_@f2,w
  5001  005D' 0200'              	subwf	__div_to_l_@f1,w
  5002  005E'                    u7865:
  5003  005E' 1C03               	skipc
  5004  005F' 2800'              	goto	u7861
  5005  0060' 2800'              	goto	u7860
  5006  0061'                    u7861:
  5007  0061' 2800'              	goto	l4617
  5008  0062'                    u7860:
  5009  0062'                    l4613:
  5010  0062' 0804'              	movf	__div_to_l_@f2,w
  5011  0063' 0280'              	subwf	__div_to_l_@f1,f
  5012  0064' 0805'              	movf	__div_to_l_@f2+1,w
  5013  0065' 1C03               	skipc
  5014  0066' 0F05'              	incfsz	__div_to_l_@f2+1,w
  5015  0067' 0281'              	subwf	__div_to_l_@f1+1,f
  5016  0068' 0806'              	movf	__div_to_l_@f2+2,w
  5017  0069' 1C03               	skipc
  5018  006A' 0F06'              	incfsz	__div_to_l_@f2+2,w
  5019  006B' 0282'              	subwf	__div_to_l_@f1+2,f
  5020  006C' 0807'              	movf	__div_to_l_@f2+3,w
  5021  006D' 1C03               	skipc
  5022  006E' 0F07'              	incfsz	__div_to_l_@f2+3,w
  5023  006F' 0283'              	subwf	__div_to_l_@f1+3,f
  5024  0070'                    l4615:
  5025  0070' 1404'              	bsf	__div_to_l_@quot,0
  5026  0071'                    l4617:
  5027  0071' 3001               	movlw	1
  5028  0072' 0083'              	movwf	??__div_to_l_
  5029  0073'                    u7875:
  5030  0073' 1003               	clrc
  5031  0074' 0D80'              	rlf	__div_to_l_@f1,f
  5032  0075' 0D81'              	rlf	__div_to_l_@f1+1,f
  5033  0076' 0D82'              	rlf	__div_to_l_@f1+2,f
  5034  0077' 0D83'              	rlf	__div_to_l_@f1+3,f
  5035  0078' 0B83'              	decfsz	??__div_to_l_,f
  5036  0079' 2800'              	goto	u7875
  5037  007A'                    l4619:
  5038  007A' 3001               	movlw	1
  5039  007B' 0288'              	subwf	__div_to_l_@cntr,f
  5040  007C' 1D03               	btfss	3,2
  5041  007D' 2800'              	goto	u7881
  5042  007E' 2800'              	goto	u7880
  5043  007F'                    u7881:
  5044  007F' 2800'              	goto	l4609
  5045  0080'                    u7880:
  5046  0080'                    l622:
  5047  0080' 1F89'              	btfss	__div_to_l_@exp1,7
  5048  0081' 2800'              	goto	u7891
  5049  0082' 2800'              	goto	u7890
  5050  0083'                    u7891:
  5051  0083' 2800'              	goto	l4629
  5052  0084'                    u7890:
  5053  0084'                    l4621:
  5054  0084' 0809'              	movf	__div_to_l_@exp1,w
  5055  0085' 3A80               	xorlw	128
  5056  0086' 3E9F               	addlw	159
  5057  0087' 1803               	skipnc
  5058  0088' 2800'              	goto	u7901
  5059  0089' 2800'              	goto	u7900
  5060  008A'                    u7901:
  5061  008A' 2800'              	goto	l4627
  5062  008B'                    u7900:
  5063  008B' 2800'              	goto	l4591
  5064  008C'                    l4627:
  5065  008C' 3001               	movlw	1
  5066  008D'                    u7915:
  5067  008D' 1003               	clrc
  5068  008E' 0C87'              	rrf	__div_to_l_@quot+3,f
  5069  008F' 0C86'              	rrf	__div_to_l_@quot+2,f
  5070  0090' 0C85'              	rrf	__div_to_l_@quot+1,f
  5071  0091' 0C84'              	rrf	__div_to_l_@quot,f
  5072  0092' 3EFF               	addlw	-1
  5073  0093' 1D03               	skipz
  5074  0094' 2800'              	goto	u7915
  5075  0095' 3001               	movlw	1
  5076  0096' 0083'              	movwf	??__div_to_l_
  5077  0097' 0803'              	movf	??__div_to_l_,w
  5078  0098' 0789'              	addwf	__div_to_l_@exp1,f
  5079  0099' 1D03               	btfss	3,2
  5080  009A' 2800'              	goto	u7921
  5081  009B' 2800'              	goto	u7920
  5082  009C'                    u7921:
  5083  009C' 2800'              	goto	l4627
  5084  009D'                    u7920:
  5085  009D' 2800'              	goto	l4637
  5086  009E'                    l4629:
  5087  009E' 3020               	movlw	32
  5088  009F' 0209'              	subwf	__div_to_l_@exp1,w
  5089  00A0' 1C03               	skipc
  5090  00A1' 2800'              	goto	u7931
  5091  00A2' 2800'              	goto	u7930
  5092  00A3'                    u7931:
  5093  00A3' 2800'              	goto	l629
  5094  00A4'                    u7930:
  5095  00A4' 2800'              	goto	l4591
  5096  00A5'                    l4635:
  5097  00A5' 3001               	movlw	1
  5098  00A6' 0083'              	movwf	??__div_to_l_
  5099  00A7'                    u7945:
  5100  00A7' 1003               	clrc
  5101  00A8' 0D84'              	rlf	__div_to_l_@quot,f
  5102  00A9' 0D85'              	rlf	__div_to_l_@quot+1,f
  5103  00AA' 0D86'              	rlf	__div_to_l_@quot+2,f
  5104  00AB' 0D87'              	rlf	__div_to_l_@quot+3,f
  5105  00AC' 0B83'              	decfsz	??__div_to_l_,f
  5106  00AD' 2800'              	goto	u7945
  5107  00AE' 3001               	movlw	1
  5108  00AF' 0289'              	subwf	__div_to_l_@exp1,f
  5109  00B0'                    l629:
  5110  00B0' 0809'              	movf	__div_to_l_@exp1,w
  5111  00B1' 1D03               	btfss	3,2
  5112  00B2' 2800'              	goto	u7951
  5113  00B3' 2800'              	goto	u7950
  5114  00B4'                    u7951:
  5115  00B4' 2800'              	goto	l4635
  5116  00B5'                    u7950:
  5117  00B5'                    l4637:
  5118  00B5' 0807'              	movf	__div_to_l_@quot+3,w
  5119  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  5120  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  5121  00B8' 0083'              	movwf	?__div_to_l_+3
  5122  00B9' 0806'              	movf	__div_to_l_@quot+2,w
  5123  00BA' 0082'              	movwf	?__div_to_l_+2
  5124  00BB' 0805'              	movf	__div_to_l_@quot+1,w
  5125  00BC' 0081'              	movwf	?__div_to_l_+1
  5126  00BD' 0804'              	movf	__div_to_l_@quot,w
  5127  00BE' 0080'              	movwf	?__div_to_l_
  5128  00BF'                    l618:
  5129  00BF' 0008               	return
  5130  00C0'                    __end_of__div_to_l_:
  5131                           
  5132                           	psect	text11
  5133  0000'                    __ptext11:	
  5134 ;; *************** function ___wmul *****************
  5135 ;; Defined at:
  5136 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  multiplier      2    3[COMMON] unsigned int 
  5139 ;;  multiplicand    2    5[COMMON] unsigned int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  product         2    7[COMMON] unsigned int 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  2    3[COMMON] unsigned int 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         4       0       0       0       0
  5152 ;;      Locals:         2       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         6       0       0       0       0
  5155 ;;Total ram usage:        6 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    2
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_sprintf
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function ___wmul
  5167  0000'                    ___wmul:
  5168  0000'                    l4641:	
  5169                           ;incstack = 0
  5170                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5171                           
  5172  0000' 0187'              	clrf	___wmul@product
  5173  0001' 0188'              	clrf	___wmul@product+1
  5174  0002'                    l4643:
  5175  0002' 1C03'              	btfss	___wmul@multiplier,0
  5176  0003' 2800'              	goto	u7961
  5177  0004' 2800'              	goto	u7960
  5178  0005'                    u7961:
  5179  0005' 2800'              	goto	l448
  5180  0006'                    u7960:
  5181  0006'                    l4645:
  5182  0006' 0805'              	movf	___wmul@multiplicand,w
  5183  0007' 0787'              	addwf	___wmul@product,f
  5184  0008' 1803               	skipnc
  5185  0009' 0A88'              	incf	___wmul@product+1,f
  5186  000A' 0806'              	movf	___wmul@multiplicand+1,w
  5187  000B' 0788'              	addwf	___wmul@product+1,f
  5188  000C'                    l448:
  5189  000C' 3001               	movlw	1
  5190  000D'                    u7975:
  5191  000D' 1003               	clrc
  5192  000E' 0D85'              	rlf	___wmul@multiplicand,f
  5193  000F' 0D86'              	rlf	___wmul@multiplicand+1,f
  5194  0010' 3EFF               	addlw	-1
  5195  0011' 1D03               	skipz
  5196  0012' 2800'              	goto	u7975
  5197  0013'                    l4647:
  5198  0013' 3001               	movlw	1
  5199  0014'                    u7985:
  5200  0014' 1003               	clrc
  5201  0015' 0C84'              	rrf	___wmul@multiplier+1,f
  5202  0016' 0C83'              	rrf	___wmul@multiplier,f
  5203  0017' 3EFF               	addlw	-1
  5204  0018' 1D03               	skipz
  5205  0019' 2800'              	goto	u7985
  5206  001A'                    l4649:
  5207  001A' 0803'              	movf	___wmul@multiplier,w
  5208  001B' 0404'              	iorwf	___wmul@multiplier+1,w
  5209  001C' 1D03               	btfss	3,2
  5210  001D' 2800'              	goto	u7991
  5211  001E' 2800'              	goto	u7990
  5212  001F'                    u7991:
  5213  001F' 2800'              	goto	l4643
  5214  0020'                    u7990:
  5215  0020'                    l4651:
  5216  0020' 0808'              	movf	___wmul@product+1,w
  5217  0021' 0084'              	movwf	?___wmul+1
  5218  0022' 0807'              	movf	___wmul@product,w
  5219  0023' 0083'              	movwf	?___wmul
  5220  0024'                    l450:
  5221  0024' 0008               	return
  5222  0025'                    __end_of___wmul:
  5223                           
  5224                           	psect	text12
  5225  0000'                    __ptext12:	
  5226 ;; *************** function ___llmod *****************
  5227 ;; Defined at:
  5228 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  divisor         4    8[BANK0 ] unsigned long 
  5231 ;;  dividend        4   12[BANK0 ] unsigned long 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  counter         1   16[BANK0 ] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  4    8[BANK0 ] unsigned long 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5243 ;;      Params:         0       8       0       0       0
  5244 ;;      Locals:         0       1       0       0       0
  5245 ;;      Temps:          1       0       0       0       0
  5246 ;;      Totals:         1       9       0       0       0
  5247 ;;Total ram usage:       10 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    2
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_sprintf
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function ___llmod
  5259  0000'                    ___llmod:
  5260  0000'                    l4795:	
  5261                           ;incstack = 0
  5262                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5263                           
  5264  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5265  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5266  0002' 080B'              	movf	___llmod@divisor+3,w
  5267  0003' 040A'              	iorwf	___llmod@divisor+2,w
  5268  0004' 0409'              	iorwf	___llmod@divisor+1,w
  5269  0005' 0408'              	iorwf	___llmod@divisor,w
  5270  0006' 1903               	skipnz
  5271  0007' 2800'              	goto	u8381
  5272  0008' 2800'              	goto	u8380
  5273  0009'                    u8381:
  5274  0009' 2800'              	goto	l4811
  5275  000A'                    u8380:
  5276  000A'                    l4797:
  5277  000A' 0190'              	clrf	___llmod@counter
  5278  000B' 0A90'              	incf	___llmod@counter,f
  5279  000C' 2800'              	goto	l4801
  5280  000D'                    l4799:
  5281  000D' 3001               	movlw	1
  5282  000E' 0089'              	movwf	??___llmod
  5283  000F'                    u8395:
  5284  000F' 1003               	clrc
  5285  0010' 0D88'              	rlf	___llmod@divisor,f
  5286  0011' 0D89'              	rlf	___llmod@divisor+1,f
  5287  0012' 0D8A'              	rlf	___llmod@divisor+2,f
  5288  0013' 0D8B'              	rlf	___llmod@divisor+3,f
  5289  0014' 0B89'              	decfsz	??___llmod,f
  5290  0015' 2800'              	goto	u8395
  5291  0016' 3001               	movlw	1
  5292  0017' 0089'              	movwf	??___llmod
  5293  0018' 0809'              	movf	??___llmod,w
  5294  0019' 0790'              	addwf	___llmod@counter,f
  5295  001A'                    l4801:
  5296  001A' 1F8B'              	btfss	___llmod@divisor+3,7
  5297  001B' 2800'              	goto	u8401
  5298  001C' 2800'              	goto	u8400
  5299  001D'                    u8401:
  5300  001D' 2800'              	goto	l4799
  5301  001E'                    u8400:
  5302  001E'                    l4803:
  5303  001E' 080B'              	movf	___llmod@divisor+3,w
  5304  001F' 020F'              	subwf	___llmod@dividend+3,w
  5305  0020' 1D03               	skipz
  5306  0021' 2800'              	goto	u8415
  5307  0022' 080A'              	movf	___llmod@divisor+2,w
  5308  0023' 020E'              	subwf	___llmod@dividend+2,w
  5309  0024' 1D03               	skipz
  5310  0025' 2800'              	goto	u8415
  5311  0026' 0809'              	movf	___llmod@divisor+1,w
  5312  0027' 020D'              	subwf	___llmod@dividend+1,w
  5313  0028' 1D03               	skipz
  5314  0029' 2800'              	goto	u8415
  5315  002A' 0808'              	movf	___llmod@divisor,w
  5316  002B' 020C'              	subwf	___llmod@dividend,w
  5317  002C'                    u8415:
  5318  002C' 1C03               	skipc
  5319  002D' 2800'              	goto	u8411
  5320  002E' 2800'              	goto	u8410
  5321  002F'                    u8411:
  5322  002F' 2800'              	goto	l4807
  5323  0030'                    u8410:
  5324  0030'                    l4805:
  5325  0030' 0808'              	movf	___llmod@divisor,w
  5326  0031' 028C'              	subwf	___llmod@dividend,f
  5327  0032' 0809'              	movf	___llmod@divisor+1,w
  5328  0033' 1C03               	skipc
  5329  0034' 0F09'              	incfsz	___llmod@divisor+1,w
  5330  0035' 028D'              	subwf	___llmod@dividend+1,f
  5331  0036' 080A'              	movf	___llmod@divisor+2,w
  5332  0037' 1C03               	skipc
  5333  0038' 0F0A'              	incfsz	___llmod@divisor+2,w
  5334  0039' 028E'              	subwf	___llmod@dividend+2,f
  5335  003A' 080B'              	movf	___llmod@divisor+3,w
  5336  003B' 1C03               	skipc
  5337  003C' 0F0B'              	incfsz	___llmod@divisor+3,w
  5338  003D' 028F'              	subwf	___llmod@dividend+3,f
  5339  003E'                    l4807:
  5340  003E' 3001               	movlw	1
  5341  003F'                    u8425:
  5342  003F' 1003               	clrc
  5343  0040' 0C8B'              	rrf	___llmod@divisor+3,f
  5344  0041' 0C8A'              	rrf	___llmod@divisor+2,f
  5345  0042' 0C89'              	rrf	___llmod@divisor+1,f
  5346  0043' 0C88'              	rrf	___llmod@divisor,f
  5347  0044' 3EFF               	addlw	-1
  5348  0045' 1D03               	skipz
  5349  0046' 2800'              	goto	u8425
  5350  0047'                    l4809:
  5351  0047' 3001               	movlw	1
  5352  0048' 0290'              	subwf	___llmod@counter,f
  5353  0049' 1D03               	btfss	3,2
  5354  004A' 2800'              	goto	u8431
  5355  004B' 2800'              	goto	u8430
  5356  004C'                    u8431:
  5357  004C' 2800'              	goto	l4803
  5358  004D'                    u8430:
  5359  004D'                    l4811:
  5360  004D' 080F'              	movf	___llmod@dividend+3,w
  5361  004E' 008B'              	movwf	?___llmod+3
  5362  004F' 080E'              	movf	___llmod@dividend+2,w
  5363  0050' 008A'              	movwf	?___llmod+2
  5364  0051' 080D'              	movf	___llmod@dividend+1,w
  5365  0052' 0089'              	movwf	?___llmod+1
  5366  0053' 080C'              	movf	___llmod@dividend,w
  5367  0054' 0088'              	movwf	?___llmod
  5368  0055'                    l704:
  5369  0055' 0008               	return
  5370  0056'                    __end_of___llmod:
  5371                           
  5372                           	psect	text13
  5373  0000'                    __ptext13:	
  5374 ;; *************** function ___lldiv *****************
  5375 ;; Defined at:
  5376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  divisor         4    0[BANK0 ] unsigned long 
  5379 ;;  dividend        4    4[BANK0 ] unsigned long 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  quotient        4    4[COMMON] unsigned long 
  5382 ;;  counter         1    8[COMMON] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  4    0[BANK0 ] unsigned long 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       8       0       0       0
  5393 ;;      Locals:         5       0       0       0       0
  5394 ;;      Temps:          1       0       0       0       0
  5395 ;;      Totals:         6       8       0       0       0
  5396 ;;Total ram usage:       14 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    2
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_sprintf
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function ___lldiv
  5408  0000'                    ___lldiv:
  5409  0000'                    l4655:	
  5410                           ;incstack = 0
  5411                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5412                           
  5413  0000' 3000               	movlw	0
  5414  0001' 0087'              	movwf	___lldiv@quotient+3
  5415  0002' 3000               	movlw	0
  5416  0003' 0086'              	movwf	___lldiv@quotient+2
  5417  0004' 3000               	movlw	0
  5418  0005' 0085'              	movwf	___lldiv@quotient+1
  5419  0006' 3000               	movlw	0
  5420  0007' 0084'              	movwf	___lldiv@quotient
  5421  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  5422  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  5423  000A' 0803'              	movf	___lldiv@divisor+3,w
  5424  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  5425  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  5426  000D' 0400'              	iorwf	___lldiv@divisor,w
  5427  000E' 1903               	skipnz
  5428  000F' 2800'              	goto	u8001
  5429  0010' 2800'              	goto	u8000
  5430  0011'                    u8001:
  5431  0011' 2800'              	goto	l4675
  5432  0012'                    u8000:
  5433  0012'                    l4657:
  5434  0012' 0188'              	clrf	___lldiv@counter
  5435  0013' 0A88'              	incf	___lldiv@counter,f
  5436  0014' 2800'              	goto	l4661
  5437  0015'                    l4659:
  5438  0015' 3001               	movlw	1
  5439  0016' 0083'              	movwf	??___lldiv
  5440  0017'                    u8015:
  5441  0017' 1003               	clrc
  5442  0018' 0D80'              	rlf	___lldiv@divisor,f
  5443  0019' 0D81'              	rlf	___lldiv@divisor+1,f
  5444  001A' 0D82'              	rlf	___lldiv@divisor+2,f
  5445  001B' 0D83'              	rlf	___lldiv@divisor+3,f
  5446  001C' 0B83'              	decfsz	??___lldiv,f
  5447  001D' 2800'              	goto	u8015
  5448  001E' 3001               	movlw	1
  5449  001F' 0083'              	movwf	??___lldiv
  5450  0020' 0803'              	movf	??___lldiv,w
  5451  0021' 0788'              	addwf	___lldiv@counter,f
  5452  0022'                    l4661:
  5453  0022' 1F83'              	btfss	___lldiv@divisor+3,7
  5454  0023' 2800'              	goto	u8021
  5455  0024' 2800'              	goto	u8020
  5456  0025'                    u8021:
  5457  0025' 2800'              	goto	l4659
  5458  0026'                    u8020:
  5459  0026'                    l4663:
  5460  0026' 3001               	movlw	1
  5461  0027' 0083'              	movwf	??___lldiv
  5462  0028'                    u8035:
  5463  0028' 1003               	clrc
  5464  0029' 0D84'              	rlf	___lldiv@quotient,f
  5465  002A' 0D85'              	rlf	___lldiv@quotient+1,f
  5466  002B' 0D86'              	rlf	___lldiv@quotient+2,f
  5467  002C' 0D87'              	rlf	___lldiv@quotient+3,f
  5468  002D' 0B83'              	decfsz	??___lldiv,f
  5469  002E' 2800'              	goto	u8035
  5470  002F'                    l4665:
  5471  002F' 0803'              	movf	___lldiv@divisor+3,w
  5472  0030' 0207'              	subwf	___lldiv@dividend+3,w
  5473  0031' 1D03               	skipz
  5474  0032' 2800'              	goto	u8045
  5475  0033' 0802'              	movf	___lldiv@divisor+2,w
  5476  0034' 0206'              	subwf	___lldiv@dividend+2,w
  5477  0035' 1D03               	skipz
  5478  0036' 2800'              	goto	u8045
  5479  0037' 0801'              	movf	___lldiv@divisor+1,w
  5480  0038' 0205'              	subwf	___lldiv@dividend+1,w
  5481  0039' 1D03               	skipz
  5482  003A' 2800'              	goto	u8045
  5483  003B' 0800'              	movf	___lldiv@divisor,w
  5484  003C' 0204'              	subwf	___lldiv@dividend,w
  5485  003D'                    u8045:
  5486  003D' 1C03               	skipc
  5487  003E' 2800'              	goto	u8041
  5488  003F' 2800'              	goto	u8040
  5489  0040'                    u8041:
  5490  0040' 2800'              	goto	l4671
  5491  0041'                    u8040:
  5492  0041'                    l4667:
  5493  0041' 0800'              	movf	___lldiv@divisor,w
  5494  0042' 0284'              	subwf	___lldiv@dividend,f
  5495  0043' 0801'              	movf	___lldiv@divisor+1,w
  5496  0044' 1C03               	skipc
  5497  0045' 0F01'              	incfsz	___lldiv@divisor+1,w
  5498  0046' 0285'              	subwf	___lldiv@dividend+1,f
  5499  0047' 0802'              	movf	___lldiv@divisor+2,w
  5500  0048' 1C03               	skipc
  5501  0049' 0F02'              	incfsz	___lldiv@divisor+2,w
  5502  004A' 0286'              	subwf	___lldiv@dividend+2,f
  5503  004B' 0803'              	movf	___lldiv@divisor+3,w
  5504  004C' 1C03               	skipc
  5505  004D' 0F03'              	incfsz	___lldiv@divisor+3,w
  5506  004E' 0287'              	subwf	___lldiv@dividend+3,f
  5507  004F'                    l4669:
  5508  004F' 1404'              	bsf	___lldiv@quotient,0
  5509  0050'                    l4671:
  5510  0050' 3001               	movlw	1
  5511  0051'                    u8055:
  5512  0051' 1003               	clrc
  5513  0052' 0C83'              	rrf	___lldiv@divisor+3,f
  5514  0053' 0C82'              	rrf	___lldiv@divisor+2,f
  5515  0054' 0C81'              	rrf	___lldiv@divisor+1,f
  5516  0055' 0C80'              	rrf	___lldiv@divisor,f
  5517  0056' 3EFF               	addlw	-1
  5518  0057' 1D03               	skipz
  5519  0058' 2800'              	goto	u8055
  5520  0059'                    l4673:
  5521  0059' 3001               	movlw	1
  5522  005A' 0288'              	subwf	___lldiv@counter,f
  5523  005B' 1D03               	btfss	3,2
  5524  005C' 2800'              	goto	u8061
  5525  005D' 2800'              	goto	u8060
  5526  005E'                    u8061:
  5527  005E' 2800'              	goto	l4663
  5528  005F'                    u8060:
  5529  005F'                    l4675:
  5530  005F' 0807'              	movf	___lldiv@quotient+3,w
  5531  0060' 0083'              	movwf	?___lldiv+3
  5532  0061' 0806'              	movf	___lldiv@quotient+2,w
  5533  0062' 0082'              	movwf	?___lldiv+2
  5534  0063' 0805'              	movf	___lldiv@quotient+1,w
  5535  0064' 0081'              	movwf	?___lldiv+1
  5536  0065' 0804'              	movf	___lldiv@quotient,w
  5537  0066' 0080'              	movwf	?___lldiv
  5538  0067'                    l484:
  5539  0067' 0008               	return
  5540  0068'                    __end_of___lldiv:
  5541                           
  5542                           	psect	text14
  5543  0000'                    __ptext14:	
  5544 ;; *************** function ___fltol *****************
  5545 ;; Defined at:
  5546 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  f1              4   55[BANK0 ] unsigned long 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  exp1            1   65[BANK0 ] unsigned char 
  5551 ;;  sign1           1   64[BANK0 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  4   55[BANK0 ] long 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5561 ;;      Params:         0       4       0       0       0
  5562 ;;      Locals:         0       2       0       0       0
  5563 ;;      Temps:          0       5       0       0       0
  5564 ;;      Totals:         0      11       0       0       0
  5565 ;;Total ram usage:       11 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    2
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_sprintf
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function ___fltol
  5577  0000'                    ___fltol:
  5578  0000'                    l4759:	
  5579                           ;incstack = 0
  5580                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5581                           
  5582  0000' 1003               	clrc
  5583  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5584  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5585  0003' 0D39'              	rlf	___fltol@f1+2,w
  5586  0004' 0D3A'              	rlf	___fltol@f1+3,w
  5587  0005' 00BB'              	movwf	??___fltol
  5588  0006' 083B'              	movf	??___fltol,w
  5589  0007' 00C1'              	movwf	___fltol@exp1
  5590  0008' 0841'              	movf	___fltol@exp1,w
  5591  0009' 1D03               	btfss	3,2
  5592  000A' 2800'              	goto	u8281
  5593  000B' 2800'              	goto	u8280
  5594  000C'                    u8281:
  5595  000C' 2800'              	goto	l4765
  5596  000D'                    u8280:
  5597  000D'                    l4761:
  5598  000D' 3000               	movlw	0
  5599  000E' 00BA'              	movwf	?___fltol+3
  5600  000F' 3000               	movlw	0
  5601  0010' 00B9'              	movwf	?___fltol+2
  5602  0011' 3000               	movlw	0
  5603  0012' 00B8'              	movwf	?___fltol+1
  5604  0013' 3000               	movlw	0
  5605  0014' 00B7'              	movwf	?___fltol
  5606  0015' 2800'              	goto	l651
  5607  0016'                    l4765:
  5608  0016' 0837'              	movf	___fltol@f1,w
  5609  0017' 00BB'              	movwf	??___fltol
  5610  0018' 0838'              	movf	___fltol@f1+1,w
  5611  0019' 00BC'              	movwf	??___fltol+1
  5612  001A' 0839'              	movf	___fltol@f1+2,w
  5613  001B' 00BD'              	movwf	??___fltol+2
  5614  001C' 083A'              	movf	___fltol@f1+3,w
  5615  001D' 00BE'              	movwf	??___fltol+3
  5616  001E' 301F               	movlw	31
  5617  001F'                    u8295:
  5618  001F' 1003               	clrc
  5619  0020' 0CBE'              	rrf	??___fltol+3,f
  5620  0021' 0CBD'              	rrf	??___fltol+2,f
  5621  0022' 0CBC'              	rrf	??___fltol+1,f
  5622  0023' 0CBB'              	rrf	??___fltol,f
  5623  0024'                    u8290:
  5624  0024' 3EFF               	addlw	-1
  5625  0025' 1D03               	skipz
  5626  0026' 2800'              	goto	u8295
  5627  0027' 083B'              	movf	??___fltol,w
  5628  0028' 00BF'              	movwf	??___fltol+4
  5629  0029' 083F'              	movf	??___fltol+4,w
  5630  002A' 00C0'              	movwf	___fltol@sign1
  5631  002B'                    l4767:
  5632  002B' 17B9'              	bsf	___fltol@f1+2,7
  5633  002C'                    l4769:
  5634  002C' 30FF               	movlw	255
  5635  002D' 05B7'              	andwf	___fltol@f1,f
  5636  002E' 30FF               	movlw	255
  5637  002F' 05B8'              	andwf	___fltol@f1+1,f
  5638  0030' 30FF               	movlw	255
  5639  0031' 05B9'              	andwf	___fltol@f1+2,f
  5640  0032' 3000               	movlw	0
  5641  0033' 05BA'              	andwf	___fltol@f1+3,f
  5642  0034'                    l4771:
  5643  0034' 3096               	movlw	150
  5644  0035' 02C1'              	subwf	___fltol@exp1,f
  5645  0036'                    l4773:
  5646  0036' 1FC1'              	btfss	___fltol@exp1,7
  5647  0037' 2800'              	goto	u8301
  5648  0038' 2800'              	goto	u8300
  5649  0039'                    u8301:
  5650  0039' 2800'              	goto	l4783
  5651  003A'                    u8300:
  5652  003A'                    l4775:
  5653  003A' 0841'              	movf	___fltol@exp1,w
  5654  003B' 3A80               	xorlw	128
  5655  003C' 3E97               	addlw	151
  5656  003D' 1803               	skipnc
  5657  003E' 2800'              	goto	u8311
  5658  003F' 2800'              	goto	u8310
  5659  0040'                    u8311:
  5660  0040' 2800'              	goto	l4781
  5661  0041'                    u8310:
  5662  0041' 2800'              	goto	l4761
  5663  0042'                    l4781:
  5664  0042' 3001               	movlw	1
  5665  0043'                    u8325:
  5666  0043' 1003               	clrc
  5667  0044' 0CBA'              	rrf	___fltol@f1+3,f
  5668  0045' 0CB9'              	rrf	___fltol@f1+2,f
  5669  0046' 0CB8'              	rrf	___fltol@f1+1,f
  5670  0047' 0CB7'              	rrf	___fltol@f1,f
  5671  0048' 3EFF               	addlw	-1
  5672  0049' 1D03               	skipz
  5673  004A' 2800'              	goto	u8325
  5674  004B' 3001               	movlw	1
  5675  004C' 00BB'              	movwf	??___fltol
  5676  004D' 083B'              	movf	??___fltol,w
  5677  004E' 07C1'              	addwf	___fltol@exp1,f
  5678  004F' 1D03               	btfss	3,2
  5679  0050' 2800'              	goto	u8331
  5680  0051' 2800'              	goto	u8330
  5681  0052'                    u8331:
  5682  0052' 2800'              	goto	l4781
  5683  0053'                    u8330:
  5684  0053' 2800'              	goto	l4791
  5685  0054'                    l4783:
  5686  0054' 3020               	movlw	32
  5687  0055' 0241'              	subwf	___fltol@exp1,w
  5688  0056' 1C03               	skipc
  5689  0057' 2800'              	goto	u8341
  5690  0058' 2800'              	goto	u8340
  5691  0059'                    u8341:
  5692  0059' 2800'              	goto	l658
  5693  005A'                    u8340:
  5694  005A' 2800'              	goto	l4761
  5695  005B'                    l4789:
  5696  005B' 3001               	movlw	1
  5697  005C' 00BB'              	movwf	??___fltol
  5698  005D'                    u8355:
  5699  005D' 1003               	clrc
  5700  005E' 0DB7'              	rlf	___fltol@f1,f
  5701  005F' 0DB8'              	rlf	___fltol@f1+1,f
  5702  0060' 0DB9'              	rlf	___fltol@f1+2,f
  5703  0061' 0DBA'              	rlf	___fltol@f1+3,f
  5704  0062' 0BBB'              	decfsz	??___fltol,f
  5705  0063' 2800'              	goto	u8355
  5706  0064' 3001               	movlw	1
  5707  0065' 02C1'              	subwf	___fltol@exp1,f
  5708  0066'                    l658:
  5709  0066' 0841'              	movf	___fltol@exp1,w
  5710  0067' 1D03               	btfss	3,2
  5711  0068' 2800'              	goto	u8361
  5712  0069' 2800'              	goto	u8360
  5713  006A'                    u8361:
  5714  006A' 2800'              	goto	l4789
  5715  006B'                    u8360:
  5716  006B'                    l4791:
  5717  006B' 0840'              	movf	___fltol@sign1,w
  5718  006C' 1903               	btfsc	3,2
  5719  006D' 2800'              	goto	u8371
  5720  006E' 2800'              	goto	u8370
  5721  006F'                    u8371:
  5722  006F' 2800'              	goto	l661
  5723  0070'                    u8370:
  5724  0070'                    l4793:
  5725  0070' 09B7'              	comf	___fltol@f1,f
  5726  0071' 09B8'              	comf	___fltol@f1+1,f
  5727  0072' 09B9'              	comf	___fltol@f1+2,f
  5728  0073' 09BA'              	comf	___fltol@f1+3,f
  5729  0074' 0AB7'              	incf	___fltol@f1,f
  5730  0075' 1903               	skipnz
  5731  0076' 0AB8'              	incf	___fltol@f1+1,f
  5732  0077' 1903               	skipnz
  5733  0078' 0AB9'              	incf	___fltol@f1+2,f
  5734  0079' 1903               	skipnz
  5735  007A' 0ABA'              	incf	___fltol@f1+3,f
  5736  007B'                    l661:
  5737  007B'                    l651:
  5738  007B' 0008               	return
  5739  007C'                    __end_of___fltol:
  5740                           
  5741                           	psect	text15
  5742  0000'                    __ptext15:	
  5743 ;; *************** function ___flsub *****************
  5744 ;; Defined at:
  5745 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  a               4    0[BANK1 ] long 
  5748 ;;  b               4    4[BANK1 ] long 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  4    0[BANK1 ] long 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5760 ;;      Params:         0       0       8       0       0
  5761 ;;      Locals:         0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0
  5763 ;;      Totals:         0       0       8       0       0
  5764 ;;Total ram usage:        8 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    3
  5767 ;; This function calls:
  5768 ;;		___fladd
  5769 ;; This function is called by:
  5770 ;;		_sprintf
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function ___flsub
  5776  0000'                    ___flsub:
  5777  0000'                    l4815:	
  5778                           ;incstack = 0
  5779                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5780                           
  5781  0000' 3080               	movlw	128
  5782  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  5783  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  5784  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  5785  0004'                    l4817:
  5786  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  5787  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  5788  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  5789  0007' 00BB'              	movwf	___fladd@b+3
  5790  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  5791  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  5792  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  5793  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  5794  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  5795  000D' 00BA'              	movwf	___fladd@b+2
  5796  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  5797  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  5798  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  5799  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  5800  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  5801  0013' 00B9'              	movwf	___fladd@b+1
  5802  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  5803  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  5804  0016' 0800'              	movf	___flsub@b^(0+128),w
  5805  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  5806  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  5807  0019' 00B8'              	movwf	___fladd@b
  5808  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  5809  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  5810  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  5811  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  5812  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  5813  001F' 00BF'              	movwf	___fladd@a+3
  5814  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  5815  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  5816  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  5817  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  5818  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  5819  0025' 00BE'              	movwf	___fladd@a+2
  5820  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  5821  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  5822  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  5823  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  5824  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  5825  002B' 00BD'              	movwf	___fladd@a+1
  5826  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  5827  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  5828  002E' 0800'              	movf	___flsub@a^(0+128),w
  5829  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  5830  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  5831  0031' 00BC'              	movwf	___fladd@a
  5832  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  5833  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  5834  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  5835  0039' 083B'              	movf	?___fladd+3,w
  5836  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  5837  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  5838  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  5839  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  5840  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  5841  003F' 083A'              	movf	?___fladd+2,w
  5842  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  5843  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  5844  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  5845  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  5846  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  5847  0045' 0839'              	movf	?___fladd+1,w
  5848  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  5849  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  5850  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  5851  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  5852  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  5853  004B' 0838'              	movf	?___fladd,w
  5854  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  5855  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  5856  004E' 0080'              	movwf	?___flsub^(0+128)
  5857  004F'                    l821:
  5858  004F' 0008               	return
  5859  0050'                    __end_of___flsub:
  5860                           
  5861                           	psect	text16
  5862  0000'                    __ptext16:	
  5863 ;; *************** function ___fladd *****************
  5864 ;; Defined at:
  5865 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  b               4   56[BANK0 ] long 
  5868 ;;  a               4   60[BANK0 ] long 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  grs             1   75[BANK0 ] unsigned char 
  5871 ;;  bexp            1   74[BANK0 ] unsigned char 
  5872 ;;  aexp            1   73[BANK0 ] unsigned char 
  5873 ;;  signs           1   72[BANK0 ] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  4   56[BANK0 ] unsigned char 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0, btemp+1
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5883 ;;      Params:         0       8       0       0       0
  5884 ;;      Locals:         0       4       0       0       0
  5885 ;;      Temps:          0       8       0       0       0
  5886 ;;      Totals:         0      20       0       0       0
  5887 ;;Total ram usage:       20 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    2
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_sprintf
  5894 ;;		___flsub
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function ___fladd
  5900  0000'                    ___fladd:
  5901  0000'                    l4133:	
  5902                           ;incstack = 0
  5903                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5904                           
  5905  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5906  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5907  0002' 083B'              	movf	___fladd@b+3,w
  5908  0003' 3980               	andlw	128
  5909  0004' 00C0'              	movwf	??___fladd
  5910  0005' 0840'              	movf	??___fladd,w
  5911  0006' 00C8'              	movwf	___fladd@signs
  5912  0007'                    l4135:
  5913  0007' 083B'              	movf	___fladd@b+3,w
  5914  0008' 00C0'              	movwf	??___fladd
  5915  0009' 0740'              	addwf	??___fladd,w
  5916  000A' 00C1'              	movwf	??___fladd+1
  5917  000B' 0841'              	movf	??___fladd+1,w
  5918  000C' 00CA'              	movwf	___fladd@bexp
  5919  000D'                    l4137:
  5920  000D' 1FBA'              	btfss	___fladd@b+2,7
  5921  000E' 2800'              	goto	u6601
  5922  000F' 2800'              	goto	u6600
  5923  0010'                    u6601:
  5924  0010' 2800'              	goto	l4141
  5925  0011'                    u6600:
  5926  0011'                    l4139:
  5927  0011' 144A'              	bsf	___fladd@bexp,0
  5928  0012'                    l4141:
  5929  0012' 084A'              	movf	___fladd@bexp,w
  5930  0013' 1903               	btfsc	3,2
  5931  0014' 2800'              	goto	u6611
  5932  0015' 2800'              	goto	u6610
  5933  0016'                    u6611:
  5934  0016' 2800'              	goto	l4151
  5935  0017'                    u6610:
  5936  0017'                    l4143:
  5937  0017' 0A4A'              	incf	___fladd@bexp,w
  5938  0018' 1D03               	btfss	3,2
  5939  0019' 2800'              	goto	u6621
  5940  001A' 2800'              	goto	u6620
  5941  001B'                    u6621:
  5942  001B' 2800'              	goto	l4147
  5943  001C'                    u6620:
  5944  001C'                    l4145:
  5945  001C' 3000               	movlw	0
  5946  001D' 00BB'              	movwf	___fladd@b+3
  5947  001E' 3000               	movlw	0
  5948  001F' 00BA'              	movwf	___fladd@b+2
  5949  0020' 3000               	movlw	0
  5950  0021' 00B9'              	movwf	___fladd@b+1
  5951  0022' 3000               	movlw	0
  5952  0023' 00B8'              	movwf	___fladd@b
  5953  0024'                    l4147:
  5954  0024' 17BA'              	bsf	___fladd@b+2,7
  5955  0025'                    l4149:
  5956  0025' 01BB'              	clrf	___fladd@b+3
  5957  0026' 2800'              	goto	l4153
  5958  0027'                    l4151:
  5959  0027' 3000               	movlw	0
  5960  0028' 00BB'              	movwf	___fladd@b+3
  5961  0029' 3000               	movlw	0
  5962  002A' 00BA'              	movwf	___fladd@b+2
  5963  002B' 3000               	movlw	0
  5964  002C' 00B9'              	movwf	___fladd@b+1
  5965  002D' 3000               	movlw	0
  5966  002E' 00B8'              	movwf	___fladd@b
  5967  002F'                    l4153:
  5968  002F' 083F'              	movf	___fladd@a+3,w
  5969  0030' 3980               	andlw	128
  5970  0031' 00C0'              	movwf	??___fladd
  5971  0032' 0840'              	movf	??___fladd,w
  5972  0033' 00C9'              	movwf	___fladd@aexp
  5973  0034'                    l4155:
  5974  0034' 0849'              	movf	___fladd@aexp,w
  5975  0035' 0648'              	xorwf	___fladd@signs,w
  5976  0036' 1903               	skipnz
  5977  0037' 2800'              	goto	u6631
  5978  0038' 2800'              	goto	u6630
  5979  0039'                    u6631:
  5980  0039' 2800'              	goto	l4159
  5981  003A'                    u6630:
  5982  003A'                    l4157:
  5983  003A' 1748'              	bsf	___fladd@signs,6
  5984  003B'                    l4159:
  5985  003B' 083F'              	movf	___fladd@a+3,w
  5986  003C' 00C0'              	movwf	??___fladd
  5987  003D' 0740'              	addwf	??___fladd,w
  5988  003E' 00C1'              	movwf	??___fladd+1
  5989  003F' 0841'              	movf	??___fladd+1,w
  5990  0040' 00C9'              	movwf	___fladd@aexp
  5991  0041'                    l4161:
  5992  0041' 1FBE'              	btfss	___fladd@a+2,7
  5993  0042' 2800'              	goto	u6641
  5994  0043' 2800'              	goto	u6640
  5995  0044'                    u6641:
  5996  0044' 2800'              	goto	l4165
  5997  0045'                    u6640:
  5998  0045'                    l4163:
  5999  0045' 1449'              	bsf	___fladd@aexp,0
  6000  0046'                    l4165:
  6001  0046' 0849'              	movf	___fladd@aexp,w
  6002  0047' 1903               	btfsc	3,2
  6003  0048' 2800'              	goto	u6651
  6004  0049' 2800'              	goto	u6650
  6005  004A'                    u6651:
  6006  004A' 2800'              	goto	l4175
  6007  004B'                    u6650:
  6008  004B'                    l4167:
  6009  004B' 0A49'              	incf	___fladd@aexp,w
  6010  004C' 1D03               	btfss	3,2
  6011  004D' 2800'              	goto	u6661
  6012  004E' 2800'              	goto	u6660
  6013  004F'                    u6661:
  6014  004F' 2800'              	goto	l4171
  6015  0050'                    u6660:
  6016  0050'                    l4169:
  6017  0050' 3000               	movlw	0
  6018  0051' 00BF'              	movwf	___fladd@a+3
  6019  0052' 3000               	movlw	0
  6020  0053' 00BE'              	movwf	___fladd@a+2
  6021  0054' 3000               	movlw	0
  6022  0055' 00BD'              	movwf	___fladd@a+1
  6023  0056' 3000               	movlw	0
  6024  0057' 00BC'              	movwf	___fladd@a
  6025  0058'                    l4171:
  6026  0058' 17BE'              	bsf	___fladd@a+2,7
  6027  0059'                    l4173:
  6028  0059' 01BF'              	clrf	___fladd@a+3
  6029  005A' 2800'              	goto	l775
  6030  005B'                    l4175:
  6031  005B' 3000               	movlw	0
  6032  005C' 00BF'              	movwf	___fladd@a+3
  6033  005D' 3000               	movlw	0
  6034  005E' 00BE'              	movwf	___fladd@a+2
  6035  005F' 3000               	movlw	0
  6036  0060' 00BD'              	movwf	___fladd@a+1
  6037  0061' 3000               	movlw	0
  6038  0062' 00BC'              	movwf	___fladd@a
  6039  0063'                    l775:
  6040  0063' 084A'              	movf	___fladd@bexp,w
  6041  0064' 0249'              	subwf	___fladd@aexp,w
  6042  0065' 1803               	skipnc
  6043  0066' 2800'              	goto	u6671
  6044  0067' 2800'              	goto	u6670
  6045  0068'                    u6671:
  6046  0068' 2800'              	goto	l4211
  6047  0069'                    u6670:
  6048  0069'                    l4177:
  6049  0069' 1F48'              	btfss	___fladd@signs,6
  6050  006A' 2800'              	goto	u6681
  6051  006B' 2800'              	goto	u6680
  6052  006C'                    u6681:
  6053  006C' 2800'              	goto	l4181
  6054  006D'                    u6680:
  6055  006D'                    l4179:
  6056  006D' 3080               	movlw	128
  6057  006E' 00C0'              	movwf	??___fladd
  6058  006F' 0840'              	movf	??___fladd,w
  6059  0070' 06C8'              	xorwf	___fladd@signs,f
  6060  0071'                    l4181:
  6061  0071' 084A'              	movf	___fladd@bexp,w
  6062  0072' 00C0'              	movwf	??___fladd
  6063  0073' 0840'              	movf	??___fladd,w
  6064  0074' 00CB'              	movwf	___fladd@grs
  6065  0075'                    l4183:
  6066  0075' 0849'              	movf	___fladd@aexp,w
  6067  0076' 00C0'              	movwf	??___fladd
  6068  0077' 0840'              	movf	??___fladd,w
  6069  0078' 00CA'              	movwf	___fladd@bexp
  6070  0079'                    l4185:
  6071  0079' 084B'              	movf	___fladd@grs,w
  6072  007A' 00C0'              	movwf	??___fladd
  6073  007B' 0840'              	movf	??___fladd,w
  6074  007C' 00C9'              	movwf	___fladd@aexp
  6075  007D'                    l4187:
  6076  007D' 0838'              	movf	___fladd@b,w
  6077  007E' 00C0'              	movwf	??___fladd
  6078  007F' 0840'              	movf	??___fladd,w
  6079  0080' 00CB'              	movwf	___fladd@grs
  6080  0081'                    l4189:
  6081  0081' 083C'              	movf	___fladd@a,w
  6082  0082' 00C0'              	movwf	??___fladd
  6083  0083' 0840'              	movf	??___fladd,w
  6084  0084' 00B8'              	movwf	___fladd@b
  6085  0085'                    l4191:
  6086  0085' 084B'              	movf	___fladd@grs,w
  6087  0086' 00C0'              	movwf	??___fladd
  6088  0087' 0840'              	movf	??___fladd,w
  6089  0088' 00BC'              	movwf	___fladd@a
  6090  0089'                    l4193:
  6091  0089' 0839'              	movf	___fladd@b+1,w
  6092  008A' 00C0'              	movwf	??___fladd
  6093  008B' 0840'              	movf	??___fladd,w
  6094  008C' 00CB'              	movwf	___fladd@grs
  6095  008D'                    l4195:
  6096  008D' 083D'              	movf	___fladd@a+1,w
  6097  008E' 00C0'              	movwf	??___fladd
  6098  008F' 0840'              	movf	??___fladd,w
  6099  0090' 00B9'              	movwf	___fladd@b+1
  6100  0091'                    l4197:
  6101  0091' 084B'              	movf	___fladd@grs,w
  6102  0092' 00C0'              	movwf	??___fladd
  6103  0093' 0840'              	movf	??___fladd,w
  6104  0094' 00BD'              	movwf	___fladd@a+1
  6105  0095'                    l4199:
  6106  0095' 083A'              	movf	___fladd@b+2,w
  6107  0096' 00C0'              	movwf	??___fladd
  6108  0097' 0840'              	movf	??___fladd,w
  6109  0098' 00CB'              	movwf	___fladd@grs
  6110  0099'                    l4201:
  6111  0099' 083E'              	movf	___fladd@a+2,w
  6112  009A' 00C0'              	movwf	??___fladd
  6113  009B' 0840'              	movf	??___fladd,w
  6114  009C' 00BA'              	movwf	___fladd@b+2
  6115  009D'                    l4203:
  6116  009D' 084B'              	movf	___fladd@grs,w
  6117  009E' 00C0'              	movwf	??___fladd
  6118  009F' 0840'              	movf	??___fladd,w
  6119  00A0' 00BE'              	movwf	___fladd@a+2
  6120  00A1'                    l4205:
  6121  00A1' 083B'              	movf	___fladd@b+3,w
  6122  00A2' 00C0'              	movwf	??___fladd
  6123  00A3' 0840'              	movf	??___fladd,w
  6124  00A4' 00CB'              	movwf	___fladd@grs
  6125  00A5'                    l4207:
  6126  00A5' 083F'              	movf	___fladd@a+3,w
  6127  00A6' 00C0'              	movwf	??___fladd
  6128  00A7' 0840'              	movf	??___fladd,w
  6129  00A8' 00BB'              	movwf	___fladd@b+3
  6130  00A9'                    l4209:
  6131  00A9' 084B'              	movf	___fladd@grs,w
  6132  00AA' 00C0'              	movwf	??___fladd
  6133  00AB' 0840'              	movf	??___fladd,w
  6134  00AC' 00BF'              	movwf	___fladd@a+3
  6135  00AD'                    l4211:
  6136  00AD' 01CB'              	clrf	___fladd@grs
  6137  00AE'                    l4213:
  6138  00AE' 0849'              	movf	___fladd@aexp,w
  6139  00AF' 00C0'              	movwf	??___fladd
  6140  00B0' 01C1'              	clrf	??___fladd+1
  6141  00B1' 0841'              	movf	??___fladd+1,w
  6142  00B2' 00C3'              	movwf	??___fladd+3
  6143  00B3' 084A'              	movf	___fladd@bexp,w
  6144  00B4' 0240'              	subwf	??___fladd,w
  6145  00B5' 00C2'              	movwf	??___fladd+2
  6146  00B6' 1C03               	skipc
  6147  00B7' 03C3'              	decf	??___fladd+3,f
  6148  00B8' 0843'              	movf	??___fladd+3,w
  6149  00B9' 3A80               	xorlw	128
  6150  00BA' 00FF               	movwf	btemp+1
  6151  00BB' 3080               	movlw	128
  6152  00BC' 027F               	subwf	btemp+1,w
  6153  00BD' 1D03               	skipz
  6154  00BE' 2800'              	goto	u6695
  6155  00BF' 301A               	movlw	26
  6156  00C0' 0242'              	subwf	??___fladd+2,w
  6157  00C1'                    u6695:
  6158  00C1' 1C03               	skipc
  6159  00C2' 2800'              	goto	u6691
  6160  00C3' 2800'              	goto	u6690
  6161  00C4'                    u6691:
  6162  00C4' 2800'              	goto	l4229
  6163  00C5'                    u6690:
  6164  00C5'                    l4215:
  6165  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  6166  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  6167  00C7' 083B'              	movf	___fladd@b+3,w
  6168  00C8' 043A'              	iorwf	___fladd@b+2,w
  6169  00C9' 0439'              	iorwf	___fladd@b+1,w
  6170  00CA' 0438'              	iorwf	___fladd@b,w
  6171  00CB' 1D03               	skipz
  6172  00CC' 2800'              	goto	u6701
  6173  00CD' 2800'              	goto	u6700
  6174  00CE'                    u6701:
  6175  00CE' 3001               	movlw	1
  6176  00CF' 2800'              	goto	u6710
  6177  00D0'                    u6700:
  6178  00D0' 3000               	movlw	0
  6179  00D1'                    u6710:
  6180  00D1' 00C0'              	movwf	??___fladd
  6181  00D2' 0840'              	movf	??___fladd,w
  6182  00D3' 00CB'              	movwf	___fladd@grs
  6183  00D4' 3000               	movlw	0
  6184  00D5' 00BB'              	movwf	___fladd@b+3
  6185  00D6' 3000               	movlw	0
  6186  00D7' 00BA'              	movwf	___fladd@b+2
  6187  00D8' 3000               	movlw	0
  6188  00D9' 00B9'              	movwf	___fladd@b+1
  6189  00DA' 3000               	movlw	0
  6190  00DB' 00B8'              	movwf	___fladd@b
  6191  00DC' 0849'              	movf	___fladd@aexp,w
  6192  00DD' 00C0'              	movwf	??___fladd
  6193  00DE' 0840'              	movf	??___fladd,w
  6194  00DF' 00CA'              	movwf	___fladd@bexp
  6195  00E0' 2800'              	goto	l779
  6196  00E1'                    l781:
  6197  00E1' 1C4B'              	btfss	___fladd@grs,0
  6198  00E2' 2800'              	goto	u6721
  6199  00E3' 2800'              	goto	u6720
  6200  00E4'                    u6721:
  6201  00E4' 2800'              	goto	l4219
  6202  00E5'                    u6720:
  6203  00E5'                    l4217:
  6204  00E5' 084B'              	movf	___fladd@grs,w
  6205  00E6' 00C0'              	movwf	??___fladd
  6206  00E7' 1003               	clrc
  6207  00E8' 0C40'              	rrf	??___fladd,w
  6208  00E9' 3801               	iorlw	1
  6209  00EA' 00C1'              	movwf	??___fladd+1
  6210  00EB' 0841'              	movf	??___fladd+1,w
  6211  00EC' 00CB'              	movwf	___fladd@grs
  6212  00ED' 2800'              	goto	l4221
  6213  00EE'                    l4219:
  6214  00EE' 1003               	clrc
  6215  00EF' 0CCB'              	rrf	___fladd@grs,f
  6216  00F0'                    l4221:
  6217  00F0' 1C38'              	btfss	___fladd@b,0
  6218  00F1' 2800'              	goto	u6731
  6219  00F2' 2800'              	goto	u6730
  6220  00F3'                    u6731:
  6221  00F3' 2800'              	goto	l4225
  6222  00F4'                    u6730:
  6223  00F4'                    l4223:
  6224  00F4' 17CB'              	bsf	___fladd@grs,7
  6225  00F5'                    l4225:
  6226  00F5' 3001               	movlw	1
  6227  00F6' 00C0'              	movwf	??___fladd
  6228  00F7'                    u6745:
  6229  00F7' 0D3B'              	rlf	___fladd@b+3,w
  6230  00F8' 0CBB'              	rrf	___fladd@b+3,f
  6231  00F9' 0CBA'              	rrf	___fladd@b+2,f
  6232  00FA' 0CB9'              	rrf	___fladd@b+1,f
  6233  00FB' 0CB8'              	rrf	___fladd@b,f
  6234  00FC' 0B80'              	decfsz	??___fladd& (0+127),f
  6235  00FD' 2800'              	goto	u6745
  6236  00FE'                    l4227:
  6237  00FE' 3001               	movlw	1
  6238  00FF' 00C0'              	movwf	??___fladd
  6239  0100' 0840'              	movf	??___fladd,w
  6240  0101' 07CA'              	addwf	___fladd@bexp,f
  6241  0102'                    l4229:
  6242  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  6243  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  6244  0104' 0849'              	movf	___fladd@aexp,w
  6245  0105' 024A'              	subwf	___fladd@bexp,w
  6246  0106' 1C03               	skipc
  6247  0107' 2800'              	goto	u6751
  6248  0108' 2800'              	goto	u6750
  6249  0109'                    u6751:
  6250  0109' 2800'              	goto	l781
  6251  010A'                    u6750:
  6252  010A'                    l779:
  6253  010A' 1B48'              	btfsc	___fladd@signs,6
  6254  010B' 2800'              	goto	u6761
  6255  010C' 2800'              	goto	u6760
  6256  010D'                    u6761:
  6257  010D' 2800'              	goto	l4255
  6258  010E'                    u6760:
  6259  010E'                    l4231:
  6260  010E' 084A'              	movf	___fladd@bexp,w
  6261  010F' 1D03               	btfss	3,2
  6262  0110' 2800'              	goto	u6771
  6263  0111' 2800'              	goto	u6770
  6264  0112'                    u6771:
  6265  0112' 2800'              	goto	l4237
  6266  0113'                    u6770:
  6267  0113'                    l4233:
  6268  0113' 3000               	movlw	0
  6269  0114' 00BB'              	movwf	?___fladd+3
  6270  0115' 3000               	movlw	0
  6271  0116' 00BA'              	movwf	?___fladd+2
  6272  0117' 3000               	movlw	0
  6273  0118' 00B9'              	movwf	?___fladd+1
  6274  0119' 3000               	movlw	0
  6275  011A' 00B8'              	movwf	?___fladd
  6276  011B' 2800'              	goto	l788
  6277  011C'                    l4237:
  6278  011C' 083C'              	movf	___fladd@a,w
  6279  011D' 07B8'              	addwf	___fladd@b,f
  6280  011E' 083D'              	movf	___fladd@a+1,w
  6281  011F' 1103               	clrz
  6282  0120' 1803               	skipnc
  6283  0121' 3E01               	addlw	1
  6284  0122' 1903               	skipnz
  6285  0123' 2800'              	goto	u6781
  6286  0124' 07B9'              	addwf	___fladd@b+1,f
  6287  0125'                    u6781:
  6288  0125' 083E'              	movf	___fladd@a+2,w
  6289  0126' 1103               	clrz
  6290  0127' 1803               	skipnc
  6291  0128' 3E01               	addlw	1
  6292  0129' 1903               	skipnz
  6293  012A' 2800'              	goto	u6782
  6294  012B' 07BA'              	addwf	___fladd@b+2,f
  6295  012C'                    u6782:
  6296  012C' 083F'              	movf	___fladd@a+3,w
  6297  012D' 1103               	clrz
  6298  012E' 1803               	skipnc
  6299  012F' 3E01               	addlw	1
  6300  0130' 1903               	skipnz
  6301  0131' 2800'              	goto	u6783
  6302  0132' 07BB'              	addwf	___fladd@b+3,f
  6303  0133'                    u6783:
  6304  0133'                    l4239:
  6305  0133' 1C3B'              	btfss	___fladd@b+3,0
  6306  0134' 2800'              	goto	u6791
  6307  0135' 2800'              	goto	u6790
  6308  0136'                    u6791:
  6309  0136' 2800'              	goto	l4289
  6310  0137'                    u6790:
  6311  0137'                    l4241:
  6312  0137' 1C4B'              	btfss	___fladd@grs,0
  6313  0138' 2800'              	goto	u6801
  6314  0139' 2800'              	goto	u6800
  6315  013A'                    u6801:
  6316  013A' 2800'              	goto	l4245
  6317  013B'                    u6800:
  6318  013B'                    l4243:
  6319  013B' 084B'              	movf	___fladd@grs,w
  6320  013C' 00C0'              	movwf	??___fladd
  6321  013D' 1003               	clrc
  6322  013E' 0C40'              	rrf	??___fladd,w
  6323  013F' 3801               	iorlw	1
  6324  0140' 00C1'              	movwf	??___fladd+1
  6325  0141' 0841'              	movf	??___fladd+1,w
  6326  0142' 00CB'              	movwf	___fladd@grs
  6327  0143' 2800'              	goto	l4247
  6328  0144'                    l4245:
  6329  0144' 1003               	clrc
  6330  0145' 0CCB'              	rrf	___fladd@grs,f
  6331  0146'                    l4247:
  6332  0146' 1C38'              	btfss	___fladd@b,0
  6333  0147' 2800'              	goto	u6811
  6334  0148' 2800'              	goto	u6810
  6335  0149'                    u6811:
  6336  0149' 2800'              	goto	l4251
  6337  014A'                    u6810:
  6338  014A'                    l4249:
  6339  014A' 17CB'              	bsf	___fladd@grs,7
  6340  014B'                    l4251:
  6341  014B' 3001               	movlw	1
  6342  014C' 00C0'              	movwf	??___fladd
  6343  014D'                    u6825:
  6344  014D' 0D3B'              	rlf	___fladd@b+3,w
  6345  014E' 0CBB'              	rrf	___fladd@b+3,f
  6346  014F' 0CBA'              	rrf	___fladd@b+2,f
  6347  0150' 0CB9'              	rrf	___fladd@b+1,f
  6348  0151' 0CB8'              	rrf	___fladd@b,f
  6349  0152' 0B80'              	decfsz	??___fladd& (0+127),f
  6350  0153' 2800'              	goto	u6825
  6351  0154'                    l4253:
  6352  0154' 3001               	movlw	1
  6353  0155' 00C0'              	movwf	??___fladd
  6354  0156' 0840'              	movf	??___fladd,w
  6355  0157' 07CA'              	addwf	___fladd@bexp,f
  6356  0158' 2800'              	goto	l4289
  6357  0159'                    l4255:
  6358  0159' 083B'              	movf	___fladd@b+3,w
  6359  015A' 3A80               	xorlw	128
  6360  015B' 00FF               	movwf	btemp+1
  6361  015C' 083F'              	movf	___fladd@a+3,w
  6362  015D' 3A80               	xorlw	128
  6363  015E' 027F               	subwf	btemp+1,w
  6364  015F' 1D03               	skipz
  6365  0160' 2800'              	goto	u6833
  6366  0161' 083E'              	movf	___fladd@a+2,w
  6367  0162' 023A'              	subwf	___fladd@b+2,w
  6368  0163' 1D03               	skipz
  6369  0164' 2800'              	goto	u6833
  6370  0165' 083D'              	movf	___fladd@a+1,w
  6371  0166' 0239'              	subwf	___fladd@b+1,w
  6372  0167' 1D03               	skipz
  6373  0168' 2800'              	goto	u6833
  6374  0169' 083C'              	movf	___fladd@a,w
  6375  016A' 0238'              	subwf	___fladd@b,w
  6376  016B'                    u6833:
  6377  016B' 1803               	skipnc
  6378  016C' 2800'              	goto	u6831
  6379  016D' 2800'              	goto	u6830
  6380  016E'                    u6831:
  6381  016E' 2800'              	goto	l4265
  6382  016F'                    u6830:
  6383  016F'                    l4257:
  6384  016F' 30FF               	movlw	255
  6385  0170' 00C0'              	movwf	??___fladd
  6386  0171' 30FF               	movlw	255
  6387  0172' 00C1'              	movwf	??___fladd+1
  6388  0173' 30FF               	movlw	255
  6389  0174' 00C2'              	movwf	??___fladd+2
  6390  0175' 30FF               	movlw	255
  6391  0176' 00C3'              	movwf	??___fladd+3
  6392  0177' 083C'              	movf	___fladd@a,w
  6393  0178' 00C4'              	movwf	??___fladd+4
  6394  0179' 083D'              	movf	___fladd@a+1,w
  6395  017A' 00C5'              	movwf	??___fladd+5
  6396  017B' 083E'              	movf	___fladd@a+2,w
  6397  017C' 00C6'              	movwf	??___fladd+6
  6398  017D' 083F'              	movf	___fladd@a+3,w
  6399  017E' 00C7'              	movwf	??___fladd+7
  6400  017F' 0838'              	movf	___fladd@b,w
  6401  0180' 02C4'              	subwf	??___fladd+4,f
  6402  0181' 0839'              	movf	___fladd@b+1,w
  6403  0182' 1C03               	skipc
  6404  0183' 0F39'              	incfsz	___fladd@b+1,w
  6405  0184' 2800'              	goto	u6841
  6406  0185' 2800'              	goto	u6842
  6407  0186'                    u6841:
  6408  0186' 02C5'              	subwf	??___fladd+5,f
  6409  0187'                    u6842:
  6410  0187' 083A'              	movf	___fladd@b+2,w
  6411  0188' 1C03               	skipc
  6412  0189' 0F3A'              	incfsz	___fladd@b+2,w
  6413  018A' 2800'              	goto	u6843
  6414  018B' 2800'              	goto	u6844
  6415  018C'                    u6843:
  6416  018C' 02C6'              	subwf	??___fladd+6,f
  6417  018D'                    u6844:
  6418  018D' 083B'              	movf	___fladd@b+3,w
  6419  018E' 1C03               	skipc
  6420  018F' 0F3B'              	incfsz	___fladd@b+3,w
  6421  0190' 2800'              	goto	u6845
  6422  0191' 2800'              	goto	u6846
  6423  0192'                    u6845:
  6424  0192' 02C7'              	subwf	??___fladd+7,f
  6425  0193'                    u6846:
  6426  0193' 0844'              	movf	??___fladd+4,w
  6427  0194' 07C0'              	addwf	??___fladd,f
  6428  0195' 0845'              	movf	??___fladd+5,w
  6429  0196' 1803               	skipnc
  6430  0197' 0F45'              	incfsz	??___fladd+5,w
  6431  0198' 2800'              	goto	u6850
  6432  0199' 2800'              	goto	u6851
  6433  019A'                    u6850:
  6434  019A' 07C1'              	addwf	??___fladd+1,f
  6435  019B'                    u6851:
  6436  019B' 0846'              	movf	??___fladd+6,w
  6437  019C' 1803               	skipnc
  6438  019D' 0F46'              	incfsz	??___fladd+6,w
  6439  019E' 2800'              	goto	u6852
  6440  019F' 2800'              	goto	u6853
  6441  01A0'                    u6852:
  6442  01A0' 07C2'              	addwf	??___fladd+2,f
  6443  01A1'                    u6853:
  6444  01A1' 0847'              	movf	??___fladd+7,w
  6445  01A2' 1803               	skipnc
  6446  01A3' 0A47'              	incf	??___fladd+7,w
  6447  01A4' 07C3'              	addwf	??___fladd+3,f
  6448  01A5' 0843'              	movf	??___fladd+3,w
  6449  01A6' 00BB'              	movwf	___fladd@b+3
  6450  01A7' 0842'              	movf	??___fladd+2,w
  6451  01A8' 00BA'              	movwf	___fladd@b+2
  6452  01A9' 0841'              	movf	??___fladd+1,w
  6453  01AA' 00B9'              	movwf	___fladd@b+1
  6454  01AB' 0840'              	movf	??___fladd,w
  6455  01AC' 00B8'              	movwf	___fladd@b
  6456  01AD'                    l4259:
  6457  01AD' 3080               	movlw	128
  6458  01AE' 00C0'              	movwf	??___fladd
  6459  01AF' 0840'              	movf	??___fladd,w
  6460  01B0' 06C8'              	xorwf	___fladd@signs,f
  6461  01B1' 09CB'              	comf	___fladd@grs,f
  6462  01B2' 0ACB'              	incf	___fladd@grs,f
  6463  01B3'                    l4261:
  6464  01B3' 084B'              	movf	___fladd@grs,w
  6465  01B4' 1D03               	btfss	3,2
  6466  01B5' 2800'              	goto	u6861
  6467  01B6' 2800'              	goto	u6860
  6468  01B7'                    u6861:
  6469  01B7' 2800'              	goto	l796
  6470  01B8'                    u6860:
  6471  01B8'                    l4263:
  6472  01B8' 3001               	movlw	1
  6473  01B9' 07B8'              	addwf	___fladd@b,f
  6474  01BA' 3000               	movlw	0
  6475  01BB' 1803               	skipnc
  6476  01BC' 3001               	movlw	1
  6477  01BD' 07B9'              	addwf	___fladd@b+1,f
  6478  01BE' 3000               	movlw	0
  6479  01BF' 1803               	skipnc
  6480  01C0' 3001               	movlw	1
  6481  01C1' 07BA'              	addwf	___fladd@b+2,f
  6482  01C2' 3000               	movlw	0
  6483  01C3' 1803               	skipnc
  6484  01C4' 3001               	movlw	1
  6485  01C5' 07BB'              	addwf	___fladd@b+3,f
  6486  01C6' 2800'              	goto	l796
  6487  01C7'                    l4265:
  6488  01C7' 083C'              	movf	___fladd@a,w
  6489  01C8' 02B8'              	subwf	___fladd@b,f
  6490  01C9' 083D'              	movf	___fladd@a+1,w
  6491  01CA' 1C03               	skipc
  6492  01CB' 0F3D'              	incfsz	___fladd@a+1,w
  6493  01CC' 02B9'              	subwf	___fladd@b+1,f
  6494  01CD' 083E'              	movf	___fladd@a+2,w
  6495  01CE' 1C03               	skipc
  6496  01CF' 0F3E'              	incfsz	___fladd@a+2,w
  6497  01D0' 02BA'              	subwf	___fladd@b+2,f
  6498  01D1' 083F'              	movf	___fladd@a+3,w
  6499  01D2' 1C03               	skipc
  6500  01D3' 0F3F'              	incfsz	___fladd@a+3,w
  6501  01D4' 02BB'              	subwf	___fladd@b+3,f
  6502  01D5'                    l796:
  6503  01D5' 083B'              	movf	___fladd@b+3,w
  6504  01D6' 043A'              	iorwf	___fladd@b+2,w
  6505  01D7' 0439'              	iorwf	___fladd@b+1,w
  6506  01D8' 0438'              	iorwf	___fladd@b,w
  6507  01D9' 1D03               	skipz
  6508  01DA' 2800'              	goto	u6871
  6509  01DB' 2800'              	goto	u6870
  6510  01DC'                    u6871:
  6511  01DC' 2800'              	goto	l4287
  6512  01DD'                    u6870:
  6513  01DD'                    l4267:
  6514  01DD' 084B'              	movf	___fladd@grs,w
  6515  01DE' 1D03               	btfss	3,2
  6516  01DF' 2800'              	goto	u6881
  6517  01E0' 2800'              	goto	u6880
  6518  01E1'                    u6881:
  6519  01E1' 2800'              	goto	l4287
  6520  01E2'                    u6880:
  6521  01E2'                    l4269:
  6522  01E2' 3000               	movlw	0
  6523  01E3' 00BB'              	movwf	?___fladd+3
  6524  01E4' 3000               	movlw	0
  6525  01E5' 00BA'              	movwf	?___fladd+2
  6526  01E6' 3000               	movlw	0
  6527  01E7' 00B9'              	movwf	?___fladd+1
  6528  01E8' 3000               	movlw	0
  6529  01E9' 00B8'              	movwf	?___fladd
  6530  01EA' 2800'              	goto	l788
  6531  01EB'                    l4273:
  6532  01EB' 3001               	movlw	1
  6533  01EC' 00C0'              	movwf	??___fladd
  6534  01ED'                    u6895:
  6535  01ED' 1003               	clrc
  6536  01EE' 0DB8'              	rlf	___fladd@b,f
  6537  01EF' 0DB9'              	rlf	___fladd@b+1,f
  6538  01F0' 0DBA'              	rlf	___fladd@b+2,f
  6539  01F1' 0DBB'              	rlf	___fladd@b+3,f
  6540  01F2' 0BC0'              	decfsz	??___fladd,f
  6541  01F3' 2800'              	goto	u6895
  6542  01F4'                    l4275:
  6543  01F4' 1FCB'              	btfss	___fladd@grs,7
  6544  01F5' 2800'              	goto	u6901
  6545  01F6' 2800'              	goto	u6900
  6546  01F7'                    u6901:
  6547  01F7' 2800'              	goto	l800
  6548  01F8'                    u6900:
  6549  01F8'                    l4277:
  6550  01F8' 1438'              	bsf	___fladd@b,0
  6551  01F9'                    l800:
  6552  01F9' 1C4B'              	btfss	___fladd@grs,0
  6553  01FA' 2800'              	goto	u6911
  6554  01FB' 2800'              	goto	u6910
  6555  01FC'                    u6911:
  6556  01FC' 2800'              	goto	l4281
  6557  01FD'                    u6910:
  6558  01FD'                    l4279:
  6559  01FD' 1403               	setc
  6560  01FE' 0DCB'              	rlf	___fladd@grs,f
  6561  01FF' 2800'              	goto	l4283
  6562  0200'                    l4281:
  6563  0200' 1003               	clrc
  6564  0201' 0DCB'              	rlf	___fladd@grs,f
  6565  0202'                    l4283:
  6566  0202' 084A'              	movf	___fladd@bexp,w
  6567  0203' 1903               	btfsc	3,2
  6568  0204' 2800'              	goto	u6921
  6569  0205' 2800'              	goto	u6920
  6570  0206'                    u6921:
  6571  0206' 2800'              	goto	l4287
  6572  0207'                    u6920:
  6573  0207'                    l4285:
  6574  0207' 3001               	movlw	1
  6575  0208' 02CA'              	subwf	___fladd@bexp,f
  6576  0209'                    l4287:
  6577  0209' 1FBA'              	btfss	___fladd@b+2,7
  6578  020A' 2800'              	goto	u6931
  6579  020B' 2800'              	goto	u6930
  6580  020C'                    u6931:
  6581  020C' 2800'              	goto	l4273
  6582  020D'                    u6930:
  6583  020D'                    l4289:
  6584  020D' 01C9'              	clrf	___fladd@aexp
  6585  020E'                    l4291:
  6586  020E' 1FCB'              	btfss	___fladd@grs,7
  6587  020F' 2800'              	goto	u6941
  6588  0210' 2800'              	goto	u6940
  6589  0211'                    u6941:
  6590  0211' 2800'              	goto	l4299
  6591  0212'                    u6940:
  6592  0212'                    l4293:
  6593  0212' 084B'              	movf	___fladd@grs,w
  6594  0213' 397F               	andlw	127
  6595  0214' 1903               	btfsc	3,2
  6596  0215' 2800'              	goto	u6951
  6597  0216' 2800'              	goto	u6950
  6598  0217'                    u6951:
  6599  0217' 2800'              	goto	l806
  6600  0218'                    u6950:
  6601  0218'                    l4295:
  6602  0218' 01C9'              	clrf	___fladd@aexp
  6603  0219' 0AC9'              	incf	___fladd@aexp,f
  6604  021A' 2800'              	goto	l4299
  6605  021B'                    l806:
  6606  021B' 1C38'              	btfss	___fladd@b,0
  6607  021C' 2800'              	goto	u6961
  6608  021D' 2800'              	goto	u6960
  6609  021E'                    u6961:
  6610  021E' 2800'              	goto	l4299
  6611  021F'                    u6960:
  6612  021F' 2800'              	goto	l4295
  6613  0220'                    l4299:
  6614  0220' 0849'              	movf	___fladd@aexp,w
  6615  0221' 1903               	btfsc	3,2
  6616  0222' 2800'              	goto	u6971
  6617  0223' 2800'              	goto	u6970
  6618  0224'                    u6971:
  6619  0224' 2800'              	goto	l809
  6620  0225'                    u6970:
  6621  0225'                    l4301:
  6622  0225' 3001               	movlw	1
  6623  0226' 07B8'              	addwf	___fladd@b,f
  6624  0227' 3000               	movlw	0
  6625  0228' 1803               	skipnc
  6626  0229' 3001               	movlw	1
  6627  022A' 07B9'              	addwf	___fladd@b+1,f
  6628  022B' 3000               	movlw	0
  6629  022C' 1803               	skipnc
  6630  022D' 3001               	movlw	1
  6631  022E' 07BA'              	addwf	___fladd@b+2,f
  6632  022F' 3000               	movlw	0
  6633  0230' 1803               	skipnc
  6634  0231' 3001               	movlw	1
  6635  0232' 07BB'              	addwf	___fladd@b+3,f
  6636  0233'                    l4303:
  6637  0233' 1C3B'              	btfss	___fladd@b+3,0
  6638  0234' 2800'              	goto	u6981
  6639  0235' 2800'              	goto	u6980
  6640  0236'                    u6981:
  6641  0236' 2800'              	goto	l809
  6642  0237'                    u6980:
  6643  0237'                    l4305:
  6644  0237' 0838'              	movf	___fladd@b,w
  6645  0238' 00C0'              	movwf	??___fladd
  6646  0239' 0839'              	movf	___fladd@b+1,w
  6647  023A' 00C1'              	movwf	??___fladd+1
  6648  023B' 083A'              	movf	___fladd@b+2,w
  6649  023C' 00C2'              	movwf	??___fladd+2
  6650  023D' 083B'              	movf	___fladd@b+3,w
  6651  023E' 00C3'              	movwf	??___fladd+3
  6652  023F' 3001               	movlw	1
  6653  0240' 00C4'              	movwf	??___fladd+4
  6654  0241'                    u6995:
  6655  0241' 0D43'              	rlf	??___fladd+3,w
  6656  0242' 0CC3'              	rrf	??___fladd+3,f
  6657  0243' 0CC2'              	rrf	??___fladd+2,f
  6658  0244' 0CC1'              	rrf	??___fladd+1,f
  6659  0245' 0CC0'              	rrf	??___fladd,f
  6660  0246'                    u6990:
  6661  0246' 0BC4'              	decfsz	??___fladd+4,f
  6662  0247' 2800'              	goto	u6995
  6663  0248' 0843'              	movf	??___fladd+3,w
  6664  0249' 00BB'              	movwf	___fladd@b+3
  6665  024A' 0842'              	movf	??___fladd+2,w
  6666  024B' 00BA'              	movwf	___fladd@b+2
  6667  024C' 0841'              	movf	??___fladd+1,w
  6668  024D' 00B9'              	movwf	___fladd@b+1
  6669  024E' 0840'              	movf	??___fladd,w
  6670  024F' 00B8'              	movwf	___fladd@b
  6671  0250' 0A4A'              	incf	___fladd@bexp,w
  6672  0251' 1903               	btfsc	3,2
  6673  0252' 2800'              	goto	u7001
  6674  0253' 2800'              	goto	u7000
  6675  0254'                    u7001:
  6676  0254' 2800'              	goto	l809
  6677  0255'                    u7000:
  6678  0255'                    l4307:
  6679  0255' 3001               	movlw	1
  6680  0256' 00C0'              	movwf	??___fladd
  6681  0257' 0840'              	movf	??___fladd,w
  6682  0258' 07CA'              	addwf	___fladd@bexp,f
  6683  0259'                    l809:
  6684  0259' 0A4A'              	incf	___fladd@bexp,w
  6685  025A' 1903               	btfsc	3,2
  6686  025B' 2800'              	goto	u7011
  6687  025C' 2800'              	goto	u7010
  6688  025D'                    u7011:
  6689  025D' 2800'              	goto	l4311
  6690  025E'                    u7010:
  6691  025E'                    l4309:
  6692  025E' 084A'              	movf	___fladd@bexp,w
  6693  025F' 1D03               	btfss	3,2
  6694  0260' 2800'              	goto	u7021
  6695  0261' 2800'              	goto	u7020
  6696  0262'                    u7021:
  6697  0262' 2800'              	goto	l4317
  6698  0263'                    u7020:
  6699  0263'                    l4311:
  6700  0263' 3000               	movlw	0
  6701  0264' 00BB'              	movwf	___fladd@b+3
  6702  0265' 3000               	movlw	0
  6703  0266' 00BA'              	movwf	___fladd@b+2
  6704  0267' 3000               	movlw	0
  6705  0268' 00B9'              	movwf	___fladd@b+1
  6706  0269' 3000               	movlw	0
  6707  026A' 00B8'              	movwf	___fladd@b
  6708  026B'                    l4313:
  6709  026B' 084A'              	movf	___fladd@bexp,w
  6710  026C' 1D03               	btfss	3,2
  6711  026D' 2800'              	goto	u7031
  6712  026E' 2800'              	goto	u7030
  6713  026F'                    u7031:
  6714  026F' 2800'              	goto	l4317
  6715  0270'                    u7030:
  6716  0270'                    l4315:
  6717  0270' 01C8'              	clrf	___fladd@signs
  6718  0271'                    l4317:
  6719  0271' 1C4A'              	btfss	___fladd@bexp,0
  6720  0272' 2800'              	goto	u7041
  6721  0273' 2800'              	goto	u7040
  6722  0274'                    u7041:
  6723  0274' 2800'              	goto	l4321
  6724  0275'                    u7040:
  6725  0275'                    l4319:
  6726  0275' 17BA'              	bsf	___fladd@b+2,7
  6727  0276' 2800'              	goto	l817
  6728  0277'                    l4321:
  6729  0277' 307F               	movlw	127
  6730  0278' 00C0'              	movwf	??___fladd
  6731  0279' 0840'              	movf	??___fladd,w
  6732  027A' 05BA'              	andwf	___fladd@b+2,f
  6733  027B'                    l817:
  6734  027B' 084A'              	movf	___fladd@bexp,w
  6735  027C' 00C0'              	movwf	??___fladd
  6736  027D' 1003               	clrc
  6737  027E' 0C40'              	rrf	??___fladd,w
  6738  027F' 00C1'              	movwf	??___fladd+1
  6739  0280' 0841'              	movf	??___fladd+1,w
  6740  0281' 00BB'              	movwf	___fladd@b+3
  6741  0282'                    l4323:
  6742  0282' 1FC8'              	btfss	___fladd@signs,7
  6743  0283' 2800'              	goto	u7051
  6744  0284' 2800'              	goto	u7050
  6745  0285'                    u7051:
  6746  0285' 2800'              	goto	l818
  6747  0286'                    u7050:
  6748  0286'                    l4325:
  6749  0286' 17BB'              	bsf	___fladd@b+3,7
  6750  0287'                    l818:
  6751  0287'                    l788:
  6752  0287' 0008               	return
  6753  0288'                    __end_of___fladd:
  6754                           
  6755                           	psect	text17
  6756  0000'                    __ptext17:	
  6757 ;; *************** function ___flneg *****************
  6758 ;; Defined at:
  6759 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  f1              4    3[COMMON] unsigned char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  4    3[COMMON] unsigned char 
  6766 ;; Registers used:
  6767 ;;		wreg
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6773 ;;      Params:         4       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0
  6776 ;;      Totals:         4       0       0       0       0
  6777 ;;Total ram usage:        4 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    2
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_sprintf
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function ___flneg
  6789  0000'                    ___flneg:
  6790  0000'                    l4751:	
  6791                           ;incstack = 0
  6792                           ; Regs used in ___flneg: [wreg]
  6793                           
  6794  0000' 0806'              	movf	___flneg@f1+3,w
  6795  0001' 0405'              	iorwf	___flneg@f1+2,w
  6796  0002' 0404'              	iorwf	___flneg@f1+1,w
  6797  0003' 0403'              	iorwf	___flneg@f1,w
  6798  0004' 1903               	skipnz
  6799  0005' 2800'              	goto	u8271
  6800  0006' 2800'              	goto	u8270
  6801  0007'                    u8271:
  6802  0007' 2800'              	goto	l4755
  6803  0008'                    u8270:
  6804  0008'                    l4753:
  6805  0008' 3080               	movlw	128
  6806  0009' 0686'              	xorwf	___flneg@f1+3,f
  6807  000A'                    l4755:
  6808  000A'                    l647:
  6809  000A' 0008               	return
  6810  000B'                    __end_of___flneg:
  6811                           
  6812                           	psect	text18
  6813  0000'                    __ptext18:	
  6814 ;; *************** function ___flge *****************
  6815 ;; Defined at:
  6816 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  ff1             4    0[BANK0 ] unsigned char 
  6819 ;;  ff2             4    4[BANK0 ] unsigned char 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;		None               void
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6831 ;;      Params:         0       8       0       0       0
  6832 ;;      Locals:         0       0       0       0       0
  6833 ;;      Temps:          4       0       0       0       0
  6834 ;;      Totals:         4       8       0       0       0
  6835 ;;Total ram usage:       12 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; Hardware stack levels required when called:    2
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_sprintf
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           
  6846                           ;psect for function ___flge
  6847  0000'                    ___flge:
  6848  0000'                    l4731:	
  6849                           ;incstack = 0
  6850                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6851                           
  6852  0000' 3000               	movlw	0
  6853  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6854  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6855  0003' 0500'              	andwf	___flge@ff1,w
  6856  0004' 0083'              	movwf	??___flge
  6857  0005' 3000               	movlw	0
  6858  0006' 0501'              	andwf	___flge@ff1+1,w
  6859  0007' 0084'              	movwf	??___flge+1
  6860  0008' 3080               	movlw	128
  6861  0009' 0502'              	andwf	___flge@ff1+2,w
  6862  000A' 0085'              	movwf	??___flge+2
  6863  000B' 307F               	movlw	127
  6864  000C' 0503'              	andwf	___flge@ff1+3,w
  6865  000D' 0086'              	movwf	??___flge+3
  6866  000E' 0806'              	movf	??___flge+3,w
  6867  000F' 0405'              	iorwf	??___flge+2,w
  6868  0010' 0404'              	iorwf	??___flge+1,w
  6869  0011' 0403'              	iorwf	??___flge,w
  6870  0012' 1D03               	skipz
  6871  0013' 2800'              	goto	u8201
  6872  0014' 2800'              	goto	u8200
  6873  0015'                    u8201:
  6874  0015' 2800'              	goto	l639
  6875  0016'                    u8200:
  6876  0016'                    l4733:
  6877  0016' 3000               	movlw	0
  6878  0017' 0083'              	movwf	___flge@ff1+3
  6879  0018' 3000               	movlw	0
  6880  0019' 0082'              	movwf	___flge@ff1+2
  6881  001A' 3000               	movlw	0
  6882  001B' 0081'              	movwf	___flge@ff1+1
  6883  001C' 3000               	movlw	0
  6884  001D' 0080'              	movwf	___flge@ff1
  6885  001E'                    l639:
  6886  001E' 3000               	movlw	0
  6887  001F' 0504'              	andwf	___flge@ff2,w
  6888  0020' 0083'              	movwf	??___flge
  6889  0021' 3000               	movlw	0
  6890  0022' 0505'              	andwf	___flge@ff2+1,w
  6891  0023' 0084'              	movwf	??___flge+1
  6892  0024' 3080               	movlw	128
  6893  0025' 0506'              	andwf	___flge@ff2+2,w
  6894  0026' 0085'              	movwf	??___flge+2
  6895  0027' 307F               	movlw	127
  6896  0028' 0507'              	andwf	___flge@ff2+3,w
  6897  0029' 0086'              	movwf	??___flge+3
  6898  002A' 0806'              	movf	??___flge+3,w
  6899  002B' 0405'              	iorwf	??___flge+2,w
  6900  002C' 0404'              	iorwf	??___flge+1,w
  6901  002D' 0403'              	iorwf	??___flge,w
  6902  002E' 1D03               	skipz
  6903  002F' 2800'              	goto	u8211
  6904  0030' 2800'              	goto	u8210
  6905  0031'                    u8211:
  6906  0031' 2800'              	goto	l4737
  6907  0032'                    u8210:
  6908  0032'                    l4735:
  6909  0032' 3000               	movlw	0
  6910  0033' 0087'              	movwf	___flge@ff2+3
  6911  0034' 3000               	movlw	0
  6912  0035' 0086'              	movwf	___flge@ff2+2
  6913  0036' 3000               	movlw	0
  6914  0037' 0085'              	movwf	___flge@ff2+1
  6915  0038' 3000               	movlw	0
  6916  0039' 0084'              	movwf	___flge@ff2
  6917  003A'                    l4737:
  6918  003A' 1F83'              	btfss	___flge@ff1+3,7
  6919  003B' 2800'              	goto	u8221
  6920  003C' 2800'              	goto	u8220
  6921  003D'                    u8221:
  6922  003D' 2800'              	goto	l4741
  6923  003E'                    u8220:
  6924  003E'                    l4739:
  6925  003E' 3000               	movlw	0
  6926  003F' 0083'              	movwf	??___flge
  6927  0040' 3000               	movlw	0
  6928  0041' 0084'              	movwf	??___flge+1
  6929  0042' 3000               	movlw	0
  6930  0043' 0085'              	movwf	??___flge+2
  6931  0044' 3080               	movlw	128
  6932  0045' 0086'              	movwf	??___flge+3
  6933  0046' 0800'              	movf	___flge@ff1,w
  6934  0047' 0283'              	subwf	??___flge,f
  6935  0048' 0801'              	movf	___flge@ff1+1,w
  6936  0049' 1C03               	skipc
  6937  004A' 0F01'              	incfsz	___flge@ff1+1,w
  6938  004B' 2800'              	goto	u8231
  6939  004C' 2800'              	goto	u8232
  6940  004D'                    u8231:
  6941  004D' 0284'              	subwf	??___flge+1,f
  6942  004E'                    u8232:
  6943  004E' 0802'              	movf	___flge@ff1+2,w
  6944  004F' 1C03               	skipc
  6945  0050' 0F02'              	incfsz	___flge@ff1+2,w
  6946  0051' 2800'              	goto	u8233
  6947  0052' 2800'              	goto	u8234
  6948  0053'                    u8233:
  6949  0053' 0285'              	subwf	??___flge+2,f
  6950  0054'                    u8234:
  6951  0054' 0803'              	movf	___flge@ff1+3,w
  6952  0055' 1C03               	skipc
  6953  0056' 0F03'              	incfsz	___flge@ff1+3,w
  6954  0057' 2800'              	goto	u8235
  6955  0058' 2800'              	goto	u8236
  6956  0059'                    u8235:
  6957  0059' 0286'              	subwf	??___flge+3,f
  6958  005A'                    u8236:
  6959  005A' 0806'              	movf	??___flge+3,w
  6960  005B' 0083'              	movwf	___flge@ff1+3
  6961  005C' 0805'              	movf	??___flge+2,w
  6962  005D' 0082'              	movwf	___flge@ff1+2
  6963  005E' 0804'              	movf	??___flge+1,w
  6964  005F' 0081'              	movwf	___flge@ff1+1
  6965  0060' 0803'              	movf	??___flge,w
  6966  0061' 0080'              	movwf	___flge@ff1
  6967  0062'                    l4741:
  6968  0062' 1F87'              	btfss	___flge@ff2+3,7
  6969  0063' 2800'              	goto	u8241
  6970  0064' 2800'              	goto	u8240
  6971  0065'                    u8241:
  6972  0065' 2800'              	goto	l642
  6973  0066'                    u8240:
  6974  0066'                    l4743:
  6975  0066' 3000               	movlw	0
  6976  0067' 0083'              	movwf	??___flge
  6977  0068' 3000               	movlw	0
  6978  0069' 0084'              	movwf	??___flge+1
  6979  006A' 3000               	movlw	0
  6980  006B' 0085'              	movwf	??___flge+2
  6981  006C' 3080               	movlw	128
  6982  006D' 0086'              	movwf	??___flge+3
  6983  006E' 0804'              	movf	___flge@ff2,w
  6984  006F' 0283'              	subwf	??___flge,f
  6985  0070' 0805'              	movf	___flge@ff2+1,w
  6986  0071' 1C03               	skipc
  6987  0072' 0F05'              	incfsz	___flge@ff2+1,w
  6988  0073' 2800'              	goto	u8251
  6989  0074' 2800'              	goto	u8252
  6990  0075'                    u8251:
  6991  0075' 0284'              	subwf	??___flge+1,f
  6992  0076'                    u8252:
  6993  0076' 0806'              	movf	___flge@ff2+2,w
  6994  0077' 1C03               	skipc
  6995  0078' 0F06'              	incfsz	___flge@ff2+2,w
  6996  0079' 2800'              	goto	u8253
  6997  007A' 2800'              	goto	u8254
  6998  007B'                    u8253:
  6999  007B' 0285'              	subwf	??___flge+2,f
  7000  007C'                    u8254:
  7001  007C' 0807'              	movf	___flge@ff2+3,w
  7002  007D' 1C03               	skipc
  7003  007E' 0F07'              	incfsz	___flge@ff2+3,w
  7004  007F' 2800'              	goto	u8255
  7005  0080' 2800'              	goto	u8256
  7006  0081'                    u8255:
  7007  0081' 0286'              	subwf	??___flge+3,f
  7008  0082'                    u8256:
  7009  0082' 0806'              	movf	??___flge+3,w
  7010  0083' 0087'              	movwf	___flge@ff2+3
  7011  0084' 0805'              	movf	??___flge+2,w
  7012  0085' 0086'              	movwf	___flge@ff2+2
  7013  0086' 0804'              	movf	??___flge+1,w
  7014  0087' 0085'              	movwf	___flge@ff2+1
  7015  0088' 0803'              	movf	??___flge,w
  7016  0089' 0084'              	movwf	___flge@ff2
  7017  008A'                    l642:
  7018  008A' 3080               	movlw	128
  7019  008B' 0683'              	xorwf	___flge@ff1+3,f
  7020  008C' 3080               	movlw	128
  7021  008D' 0687'              	xorwf	___flge@ff2+3,f
  7022  008E' 0807'              	movf	___flge@ff2+3,w
  7023  008F' 0203'              	subwf	___flge@ff1+3,w
  7024  0090' 1D03               	skipz
  7025  0091' 2800'              	goto	u8265
  7026  0092' 0806'              	movf	___flge@ff2+2,w
  7027  0093' 0202'              	subwf	___flge@ff1+2,w
  7028  0094' 1D03               	skipz
  7029  0095' 2800'              	goto	u8265
  7030  0096' 0805'              	movf	___flge@ff2+1,w
  7031  0097' 0201'              	subwf	___flge@ff1+1,w
  7032  0098' 1D03               	skipz
  7033  0099' 2800'              	goto	u8265
  7034  009A' 0804'              	movf	___flge@ff2,w
  7035  009B' 0200'              	subwf	___flge@ff1,w
  7036  009C'                    u8265:
  7037  009C' 1803               	skipnc
  7038  009D' 2800'              	goto	u8261
  7039  009E' 2800'              	goto	u8260
  7040  009F'                    u8261:
  7041  009F' 2800'              	goto	l4747
  7042  00A0'                    u8260:
  7043  00A0'                    l4745:
  7044  00A0' 1003               	clrc
  7045  00A1' 2800'              	goto	l643
  7046  00A2'                    l4747:
  7047  00A2' 1403               	setc
  7048  00A3'                    l643:
  7049  00A3' 0008               	return
  7050  00A4'                    __end_of___flge:
  7051                           
  7052                           	psect	text19
  7053  0000'                    __ptext19:	
  7054 ;; *************** function ___fleq *****************
  7055 ;; Defined at:
  7056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  ff1             4    0[BANK0 ] unsigned char 
  7059 ;;  ff2             4    4[BANK0 ] unsigned char 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7071 ;;      Params:         0       8       0       0       0
  7072 ;;      Locals:         0       0       0       0       0
  7073 ;;      Temps:          4       0       0       0       0
  7074 ;;      Totals:         4       8       0       0       0
  7075 ;;Total ram usage:       12 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    2
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_sprintf
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           
  7086                           ;psect for function ___fleq
  7087  0000'                    ___fleq:
  7088  0000'                    l4719:	
  7089                           ;incstack = 0
  7090                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7091                           
  7092  0000' 3000               	movlw	0
  7093  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7094  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7095  0003' 0500'              	andwf	___fleq@ff1,w
  7096  0004' 0083'              	movwf	??___fleq
  7097  0005' 3000               	movlw	0
  7098  0006' 0501'              	andwf	___fleq@ff1+1,w
  7099  0007' 0084'              	movwf	??___fleq+1
  7100  0008' 3080               	movlw	128
  7101  0009' 0502'              	andwf	___fleq@ff1+2,w
  7102  000A' 0085'              	movwf	??___fleq+2
  7103  000B' 307F               	movlw	127
  7104  000C' 0503'              	andwf	___fleq@ff1+3,w
  7105  000D' 0086'              	movwf	??___fleq+3
  7106  000E' 0806'              	movf	??___fleq+3,w
  7107  000F' 0405'              	iorwf	??___fleq+2,w
  7108  0010' 0404'              	iorwf	??___fleq+1,w
  7109  0011' 0403'              	iorwf	??___fleq,w
  7110  0012' 1D03               	skipz
  7111  0013' 2800'              	goto	u8171
  7112  0014' 2800'              	goto	u8170
  7113  0015'                    u8171:
  7114  0015' 2800'              	goto	l634
  7115  0016'                    u8170:
  7116  0016'                    l4721:
  7117  0016' 3000               	movlw	0
  7118  0017' 0083'              	movwf	___fleq@ff1+3
  7119  0018' 3000               	movlw	0
  7120  0019' 0082'              	movwf	___fleq@ff1+2
  7121  001A' 3000               	movlw	0
  7122  001B' 0081'              	movwf	___fleq@ff1+1
  7123  001C' 3000               	movlw	0
  7124  001D' 0080'              	movwf	___fleq@ff1
  7125  001E'                    l634:
  7126  001E' 3000               	movlw	0
  7127  001F' 0504'              	andwf	___fleq@ff2,w
  7128  0020' 0083'              	movwf	??___fleq
  7129  0021' 3000               	movlw	0
  7130  0022' 0505'              	andwf	___fleq@ff2+1,w
  7131  0023' 0084'              	movwf	??___fleq+1
  7132  0024' 3080               	movlw	128
  7133  0025' 0506'              	andwf	___fleq@ff2+2,w
  7134  0026' 0085'              	movwf	??___fleq+2
  7135  0027' 307F               	movlw	127
  7136  0028' 0507'              	andwf	___fleq@ff2+3,w
  7137  0029' 0086'              	movwf	??___fleq+3
  7138  002A' 0806'              	movf	??___fleq+3,w
  7139  002B' 0405'              	iorwf	??___fleq+2,w
  7140  002C' 0404'              	iorwf	??___fleq+1,w
  7141  002D' 0403'              	iorwf	??___fleq,w
  7142  002E' 1D03               	skipz
  7143  002F' 2800'              	goto	u8181
  7144  0030' 2800'              	goto	u8180
  7145  0031'                    u8181:
  7146  0031' 2800'              	goto	l635
  7147  0032'                    u8180:
  7148  0032'                    l4723:
  7149  0032' 3000               	movlw	0
  7150  0033' 0087'              	movwf	___fleq@ff2+3
  7151  0034' 3000               	movlw	0
  7152  0035' 0086'              	movwf	___fleq@ff2+2
  7153  0036' 3000               	movlw	0
  7154  0037' 0085'              	movwf	___fleq@ff2+1
  7155  0038' 3000               	movlw	0
  7156  0039' 0084'              	movwf	___fleq@ff2
  7157  003A'                    l635:
  7158  003A' 0807'              	movf	___fleq@ff2+3,w
  7159  003B' 0603'              	xorwf	___fleq@ff1+3,w
  7160  003C' 1D03               	skipz
  7161  003D' 2800'              	goto	u8195
  7162  003E' 0806'              	movf	___fleq@ff2+2,w
  7163  003F' 0602'              	xorwf	___fleq@ff1+2,w
  7164  0040' 1D03               	skipz
  7165  0041' 2800'              	goto	u8195
  7166  0042' 0805'              	movf	___fleq@ff2+1,w
  7167  0043' 0601'              	xorwf	___fleq@ff1+1,w
  7168  0044' 1D03               	skipz
  7169  0045' 2800'              	goto	u8195
  7170  0046' 0804'              	movf	___fleq@ff2,w
  7171  0047' 0600'              	xorwf	___fleq@ff1,w
  7172  0048'                    u8195:
  7173  0048' 1903               	skipnz
  7174  0049' 2800'              	goto	u8191
  7175  004A' 2800'              	goto	u8190
  7176  004B'                    u8191:
  7177  004B' 2800'              	goto	l4727
  7178  004C'                    u8190:
  7179  004C'                    l4725:
  7180  004C' 1003               	clrc
  7181  004D' 2800'              	goto	l636
  7182  004E'                    l4727:
  7183  004E' 1403               	setc
  7184  004F'                    l636:
  7185  004F' 0008               	return
  7186  0050'                    __end_of___fleq:
  7187                           
  7188                           	psect	text20
  7189  0000'                    __ptext20:	
  7190 ;; *************** function _conversion *****************
  7191 ;; Defined at:
  7192 ;;		line 90 in file "LAB3.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  b               1    wreg     unsigned char 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  b               1   44[BANK0 ] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  4   36[BANK0 ] float 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7206 ;;      Params:         0       4       0       0       0
  7207 ;;      Locals:         0       1       0       0       0
  7208 ;;      Temps:          0       4       0       0       0
  7209 ;;      Totals:         0       9       0       0       0
  7210 ;;Total ram usage:        9 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    4
  7213 ;; This function calls:
  7214 ;;		___flmul
  7215 ;;		___xxtofl
  7216 ;; This function is called by:
  7217 ;;		_main
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _conversion
  7223  0000'                    _conversion:
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in _conversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7227                           ;conversion@b stored from wreg
  7228  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7229  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7230  0002' 00AC'              	movwf	conversion@b
  7231  0003'                    l4865:
  7232                           
  7233                           ;LAB3.c: 91:     return b*0.0196;
  7234  0003' 303C               	movlw	60
  7235  0004' 008D'              	movwf	___flmul@b+3
  7236  0005' 30A0               	movlw	160
  7237  0006' 008C'              	movwf	___flmul@b+2
  7238  0007' 3090               	movlw	144
  7239  0008' 008B'              	movwf	___flmul@b+1
  7240  0009' 302E               	movlw	46
  7241  000A' 008A'              	movwf	___flmul@b
  7242  000B' 082C'              	movf	conversion@b,w
  7243  000C' 00A8'              	movwf	??_conversion
  7244  000D' 01A9'              	clrf	??_conversion+1
  7245  000E' 01AA'              	clrf	??_conversion+2
  7246  000F' 01AB'              	clrf	??_conversion+3
  7247  0010' 082B'              	movf	??_conversion+3,w
  7248  0011' 0086'              	movwf	___xxtofl@val+3
  7249  0012' 082A'              	movf	??_conversion+2,w
  7250  0013' 0085'              	movwf	___xxtofl@val+2
  7251  0014' 0829'              	movf	??_conversion+1,w
  7252  0015' 0084'              	movwf	___xxtofl@val+1
  7253  0016' 0828'              	movf	??_conversion,w
  7254  0017' 0083'              	movwf	___xxtofl@val
  7255  0018' 3001               	movlw	1
  7256  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  7257  001E' 0806'              	movf	?___xxtofl+3,w
  7258  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  7259  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  7260  0021' 0091'              	movwf	___flmul@a+3
  7261  0022' 0805'              	movf	?___xxtofl+2,w
  7262  0023' 0090'              	movwf	___flmul@a+2
  7263  0024' 0804'              	movf	?___xxtofl+1,w
  7264  0025' 008F'              	movwf	___flmul@a+1
  7265  0026' 0803'              	movf	?___xxtofl,w
  7266  0027' 008E'              	movwf	___flmul@a
  7267  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  7268  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  7269  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  7270  002F' 080D'              	movf	?___flmul+3,w
  7271  0030' 00A7'              	movwf	?_conversion+3
  7272  0031' 080C'              	movf	?___flmul+2,w
  7273  0032' 00A6'              	movwf	?_conversion+2
  7274  0033' 080B'              	movf	?___flmul+1,w
  7275  0034' 00A5'              	movwf	?_conversion+1
  7276  0035' 080A'              	movf	?___flmul,w
  7277  0036' 00A4'              	movwf	?_conversion
  7278  0037'                    l68:
  7279  0037' 0008               	return
  7280  0038'                    __end_of_conversion:
  7281                           
  7282                           	psect	text21
  7283  0000'                    __ptext21:	
  7284 ;; *************** function ___xxtofl *****************
  7285 ;; Defined at:
  7286 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  sign            1    wreg     unsigned char 
  7289 ;;  val             4    3[COMMON] long 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  sign            1    4[BANK0 ] unsigned char 
  7292 ;;  arg             4    6[BANK0 ] unsigned long 
  7293 ;;  exp             1    5[BANK0 ] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  4    3[COMMON] unsigned char 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7303 ;;      Params:         4       0       0       0       0
  7304 ;;      Locals:         0       6       0       0       0
  7305 ;;      Temps:          0       4       0       0       0
  7306 ;;      Totals:         4      10       0       0       0
  7307 ;;Total ram usage:       14 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    2
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_conversion
  7314 ;;		_sprintf
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           
  7319                           ;psect for function ___xxtofl
  7320  0000'                    ___xxtofl:
  7321                           
  7322                           ;incstack = 0
  7323                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7324                           ;___xxtofl@sign stored from wreg
  7325  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7326  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7327  0002' 0084'              	movwf	___xxtofl@sign
  7328  0003'                    l4821:
  7329  0003' 0804'              	movf	___xxtofl@sign,w
  7330  0004' 1903               	btfsc	3,2
  7331  0005' 2800'              	goto	u8441
  7332  0006' 2800'              	goto	u8440
  7333  0007'                    u8441:
  7334  0007' 2800'              	goto	l4827
  7335  0008'                    u8440:
  7336  0008'                    l4823:
  7337  0008' 1F86'              	btfss	___xxtofl@val+3,7
  7338  0009' 2800'              	goto	u8451
  7339  000A' 2800'              	goto	u8450
  7340  000B'                    u8451:
  7341  000B' 2800'              	goto	l4827
  7342  000C'                    u8450:
  7343  000C'                    l4825:
  7344  000C' 0903'              	comf	___xxtofl@val,w
  7345  000D' 0086'              	movwf	___xxtofl@arg
  7346  000E' 0904'              	comf	___xxtofl@val+1,w
  7347  000F' 0087'              	movwf	___xxtofl@arg+1
  7348  0010' 0905'              	comf	___xxtofl@val+2,w
  7349  0011' 0088'              	movwf	___xxtofl@arg+2
  7350  0012' 0906'              	comf	___xxtofl@val+3,w
  7351  0013' 0089'              	movwf	___xxtofl@arg+3
  7352  0014' 0A86'              	incf	___xxtofl@arg,f
  7353  0015' 1903               	skipnz
  7354  0016' 0A87'              	incf	___xxtofl@arg+1,f
  7355  0017' 1903               	skipnz
  7356  0018' 0A88'              	incf	___xxtofl@arg+2,f
  7357  0019' 1903               	skipnz
  7358  001A' 0A89'              	incf	___xxtofl@arg+3,f
  7359  001B' 2800'              	goto	l915
  7360  001C'                    l4827:
  7361  001C' 0806'              	movf	___xxtofl@val+3,w
  7362  001D' 0089'              	movwf	___xxtofl@arg+3
  7363  001E' 0805'              	movf	___xxtofl@val+2,w
  7364  001F' 0088'              	movwf	___xxtofl@arg+2
  7365  0020' 0804'              	movf	___xxtofl@val+1,w
  7366  0021' 0087'              	movwf	___xxtofl@arg+1
  7367  0022' 0803'              	movf	___xxtofl@val,w
  7368  0023' 0086'              	movwf	___xxtofl@arg
  7369  0024'                    l915:
  7370  0024' 0806'              	movf	___xxtofl@val+3,w
  7371  0025' 0405'              	iorwf	___xxtofl@val+2,w
  7372  0026' 0404'              	iorwf	___xxtofl@val+1,w
  7373  0027' 0403'              	iorwf	___xxtofl@val,w
  7374  0028' 1D03               	skipz
  7375  0029' 2800'              	goto	u8461
  7376  002A' 2800'              	goto	u8460
  7377  002B'                    u8461:
  7378  002B' 2800'              	goto	l4833
  7379  002C'                    u8460:
  7380  002C'                    l4829:
  7381  002C' 3000               	movlw	0
  7382  002D' 0086'              	movwf	?___xxtofl+3
  7383  002E' 3000               	movlw	0
  7384  002F' 0085'              	movwf	?___xxtofl+2
  7385  0030' 3000               	movlw	0
  7386  0031' 0084'              	movwf	?___xxtofl+1
  7387  0032' 3000               	movlw	0
  7388  0033' 0083'              	movwf	?___xxtofl
  7389  0034' 2800'              	goto	l917
  7390  0035'                    l4833:
  7391  0035' 3096               	movlw	150
  7392  0036' 0080'              	movwf	??___xxtofl
  7393  0037' 0800'              	movf	??___xxtofl,w
  7394  0038' 0085'              	movwf	___xxtofl@exp
  7395  0039' 2800'              	goto	l4837
  7396  003A'                    l4835:
  7397  003A' 3001               	movlw	1
  7398  003B' 0080'              	movwf	??___xxtofl
  7399  003C' 0800'              	movf	??___xxtofl,w
  7400  003D' 0785'              	addwf	___xxtofl@exp,f
  7401  003E' 3001               	movlw	1
  7402  003F'                    u8475:
  7403  003F' 1003               	clrc
  7404  0040' 0C89'              	rrf	___xxtofl@arg+3,f
  7405  0041' 0C88'              	rrf	___xxtofl@arg+2,f
  7406  0042' 0C87'              	rrf	___xxtofl@arg+1,f
  7407  0043' 0C86'              	rrf	___xxtofl@arg,f
  7408  0044' 3EFF               	addlw	-1
  7409  0045' 1D03               	skipz
  7410  0046' 2800'              	goto	u8475
  7411  0047'                    l4837:
  7412  0047' 30FE               	movlw	254
  7413  0048' 0509'              	andwf	___xxtofl@arg+3,w
  7414  0049' 1D03               	btfss	3,2
  7415  004A' 2800'              	goto	u8481
  7416  004B' 2800'              	goto	u8480
  7417  004C'                    u8481:
  7418  004C' 2800'              	goto	l4835
  7419  004D'                    u8480:
  7420  004D' 2800'              	goto	l921
  7421  004E'                    l4839:
  7422  004E' 3001               	movlw	1
  7423  004F' 0080'              	movwf	??___xxtofl
  7424  0050' 0800'              	movf	??___xxtofl,w
  7425  0051' 0785'              	addwf	___xxtofl@exp,f
  7426  0052'                    l4841:
  7427  0052' 3001               	movlw	1
  7428  0053' 0786'              	addwf	___xxtofl@arg,f
  7429  0054' 3000               	movlw	0
  7430  0055' 1803               	skipnc
  7431  0056' 3001               	movlw	1
  7432  0057' 0787'              	addwf	___xxtofl@arg+1,f
  7433  0058' 3000               	movlw	0
  7434  0059' 1803               	skipnc
  7435  005A' 3001               	movlw	1
  7436  005B' 0788'              	addwf	___xxtofl@arg+2,f
  7437  005C' 3000               	movlw	0
  7438  005D' 1803               	skipnc
  7439  005E' 3001               	movlw	1
  7440  005F' 0789'              	addwf	___xxtofl@arg+3,f
  7441  0060'                    l4843:
  7442  0060' 3001               	movlw	1
  7443  0061'                    u8495:
  7444  0061' 1003               	clrc
  7445  0062' 0C89'              	rrf	___xxtofl@arg+3,f
  7446  0063' 0C88'              	rrf	___xxtofl@arg+2,f
  7447  0064' 0C87'              	rrf	___xxtofl@arg+1,f
  7448  0065' 0C86'              	rrf	___xxtofl@arg,f
  7449  0066' 3EFF               	addlw	-1
  7450  0067' 1D03               	skipz
  7451  0068' 2800'              	goto	u8495
  7452  0069'                    l921:
  7453  0069' 30FF               	movlw	255
  7454  006A' 0509'              	andwf	___xxtofl@arg+3,w
  7455  006B' 1D03               	btfss	3,2
  7456  006C' 2800'              	goto	u8501
  7457  006D' 2800'              	goto	u8500
  7458  006E'                    u8501:
  7459  006E' 2800'              	goto	l4839
  7460  006F'                    u8500:
  7461  006F' 2800'              	goto	l4847
  7462  0070'                    l4845:
  7463  0070' 3001               	movlw	1
  7464  0071' 0285'              	subwf	___xxtofl@exp,f
  7465  0072' 3001               	movlw	1
  7466  0073' 0080'              	movwf	??___xxtofl
  7467  0074'                    u8515:
  7468  0074' 1003               	clrc
  7469  0075' 0D86'              	rlf	___xxtofl@arg,f
  7470  0076' 0D87'              	rlf	___xxtofl@arg+1,f
  7471  0077' 0D88'              	rlf	___xxtofl@arg+2,f
  7472  0078' 0D89'              	rlf	___xxtofl@arg+3,f
  7473  0079' 0B80'              	decfsz	??___xxtofl,f
  7474  007A' 2800'              	goto	u8515
  7475  007B'                    l4847:
  7476  007B' 1B88'              	btfsc	___xxtofl@arg+2,7
  7477  007C' 2800'              	goto	u8521
  7478  007D' 2800'              	goto	u8520
  7479  007E'                    u8521:
  7480  007E' 2800'              	goto	l928
  7481  007F'                    u8520:
  7482  007F'                    l4849:
  7483  007F' 3002               	movlw	2
  7484  0080' 0205'              	subwf	___xxtofl@exp,w
  7485  0081' 1803               	skipnc
  7486  0082' 2800'              	goto	u8531
  7487  0083' 2800'              	goto	u8530
  7488  0084'                    u8531:
  7489  0084' 2800'              	goto	l4845
  7490  0085'                    u8530:
  7491  0085'                    l928:
  7492  0085' 1805'              	btfsc	___xxtofl@exp,0
  7493  0086' 2800'              	goto	u8541
  7494  0087' 2800'              	goto	u8540
  7495  0088'                    u8541:
  7496  0088' 2800'              	goto	l929
  7497  0089'                    u8540:
  7498  0089'                    l4851:
  7499  0089' 30FF               	movlw	255
  7500  008A' 0586'              	andwf	___xxtofl@arg,f
  7501  008B' 30FF               	movlw	255
  7502  008C' 0587'              	andwf	___xxtofl@arg+1,f
  7503  008D' 307F               	movlw	127
  7504  008E' 0588'              	andwf	___xxtofl@arg+2,f
  7505  008F' 30FF               	movlw	255
  7506  0090' 0589'              	andwf	___xxtofl@arg+3,f
  7507  0091'                    l929:
  7508  0091' 1003               	clrc
  7509  0092' 0C85'              	rrf	___xxtofl@exp,f
  7510  0093'                    l4853:
  7511  0093' 0805'              	movf	___xxtofl@exp,w
  7512  0094' 0080'              	movwf	??___xxtofl
  7513  0095' 0181'              	clrf	??___xxtofl+1
  7514  0096' 0182'              	clrf	??___xxtofl+2
  7515  0097' 0183'              	clrf	??___xxtofl+3
  7516  0098' 3018               	movlw	24
  7517  0099'                    u8555:
  7518  0099' 1003               	clrc
  7519  009A' 0D80'              	rlf	??___xxtofl,f
  7520  009B' 0D81'              	rlf	??___xxtofl+1,f
  7521  009C' 0D82'              	rlf	??___xxtofl+2,f
  7522  009D' 0D83'              	rlf	??___xxtofl+3,f
  7523  009E'                    u8550:
  7524  009E' 3EFF               	addlw	-1
  7525  009F' 1D03               	skipz
  7526  00A0' 2800'              	goto	u8555
  7527  00A1' 0800'              	movf	??___xxtofl,w
  7528  00A2' 0486'              	iorwf	___xxtofl@arg,f
  7529  00A3' 0801'              	movf	??___xxtofl+1,w
  7530  00A4' 0487'              	iorwf	___xxtofl@arg+1,f
  7531  00A5' 0802'              	movf	??___xxtofl+2,w
  7532  00A6' 0488'              	iorwf	___xxtofl@arg+2,f
  7533  00A7' 0803'              	movf	??___xxtofl+3,w
  7534  00A8' 0489'              	iorwf	___xxtofl@arg+3,f
  7535  00A9'                    l4855:
  7536  00A9' 0804'              	movf	___xxtofl@sign,w
  7537  00AA' 1903               	btfsc	3,2
  7538  00AB' 2800'              	goto	u8561
  7539  00AC' 2800'              	goto	u8560
  7540  00AD'                    u8561:
  7541  00AD' 2800'              	goto	l4861
  7542  00AE'                    u8560:
  7543  00AE'                    l4857:
  7544  00AE' 1F86'              	btfss	___xxtofl@val+3,7
  7545  00AF' 2800'              	goto	u8571
  7546  00B0' 2800'              	goto	u8570
  7547  00B1'                    u8571:
  7548  00B1' 2800'              	goto	l4861
  7549  00B2'                    u8570:
  7550  00B2'                    l4859:
  7551  00B2' 1789'              	bsf	___xxtofl@arg+3,7
  7552  00B3'                    l4861:
  7553  00B3' 0809'              	movf	___xxtofl@arg+3,w
  7554  00B4' 0086'              	movwf	?___xxtofl+3
  7555  00B5' 0808'              	movf	___xxtofl@arg+2,w
  7556  00B6' 0085'              	movwf	?___xxtofl+2
  7557  00B7' 0807'              	movf	___xxtofl@arg+1,w
  7558  00B8' 0084'              	movwf	?___xxtofl+1
  7559  00B9' 0806'              	movf	___xxtofl@arg,w
  7560  00BA' 0083'              	movwf	?___xxtofl
  7561  00BB'                    l917:
  7562  00BB' 0008               	return
  7563  00BC'                    __end_of___xxtofl:
  7564                           
  7565                           	psect	text22
  7566  0000'                    __ptext22:	
  7567 ;; *************** function ___flmul *****************
  7568 ;; Defined at:
  7569 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  b               4   10[BANK0 ] unsigned char 
  7572 ;;  a               4   14[BANK0 ] unsigned char 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  prod            4   30[BANK0 ] struct .
  7575 ;;  grs             4   25[BANK0 ] unsigned long 
  7576 ;;  temp            2   34[BANK0 ] struct .
  7577 ;;  bexp            1   29[BANK0 ] unsigned char 
  7578 ;;  aexp            1   24[BANK0 ] unsigned char 
  7579 ;;  sign            1   23[BANK0 ] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  4   10[BANK0 ] unsigned char 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7589 ;;      Params:         0       8       0       0       0
  7590 ;;      Locals:         0      13       0       0       0
  7591 ;;      Temps:          0       5       0       0       0
  7592 ;;      Totals:         0      26       0       0       0
  7593 ;;Total ram usage:       26 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    3
  7596 ;; This function calls:
  7597 ;;		__Umul8_16
  7598 ;; This function is called by:
  7599 ;;		_conversion
  7600 ;;		_fround
  7601 ;;		_scale
  7602 ;;		_sprintf
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           
  7607                           ;psect for function ___flmul
  7608  0000'                    ___flmul:
  7609  0000'                    l4327:	
  7610                           ;incstack = 0
  7611                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7612                           
  7613  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7614  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7615  0002' 080D'              	movf	___flmul@b+3,w
  7616  0003' 3980               	andlw	128
  7617  0004' 0092'              	movwf	??___flmul
  7618  0005' 0812'              	movf	??___flmul,w
  7619  0006' 0097'              	movwf	___flmul@sign
  7620  0007'                    l4329:
  7621  0007' 080D'              	movf	___flmul@b+3,w
  7622  0008' 0092'              	movwf	??___flmul
  7623  0009' 0712'              	addwf	??___flmul,w
  7624  000A' 0093'              	movwf	??___flmul+1
  7625  000B' 0813'              	movf	??___flmul+1,w
  7626  000C' 009D'              	movwf	___flmul@bexp
  7627  000D'                    l4331:
  7628  000D' 1F8C'              	btfss	___flmul@b+2,7
  7629  000E' 2800'              	goto	u7061
  7630  000F' 2800'              	goto	u7060
  7631  0010'                    u7061:
  7632  0010' 2800'              	goto	l4335
  7633  0011'                    u7060:
  7634  0011'                    l4333:
  7635  0011' 141D'              	bsf	___flmul@bexp,0
  7636  0012'                    l4335:
  7637  0012' 081D'              	movf	___flmul@bexp,w
  7638  0013' 1903               	btfsc	3,2
  7639  0014' 2800'              	goto	u7071
  7640  0015' 2800'              	goto	u7070
  7641  0016'                    u7071:
  7642  0016' 2800'              	goto	l4343
  7643  0017'                    u7070:
  7644  0017'                    l4337:
  7645  0017' 0A1D'              	incf	___flmul@bexp,w
  7646  0018' 1D03               	btfss	3,2
  7647  0019' 2800'              	goto	u7081
  7648  001A' 2800'              	goto	u7080
  7649  001B'                    u7081:
  7650  001B' 2800'              	goto	l4341
  7651  001C'                    u7080:
  7652  001C'                    l4339:
  7653  001C' 3000               	movlw	0
  7654  001D' 008D'              	movwf	___flmul@b+3
  7655  001E' 3000               	movlw	0
  7656  001F' 008C'              	movwf	___flmul@b+2
  7657  0020' 3000               	movlw	0
  7658  0021' 008B'              	movwf	___flmul@b+1
  7659  0022' 3000               	movlw	0
  7660  0023' 008A'              	movwf	___flmul@b
  7661  0024'                    l4341:
  7662  0024' 178C'              	bsf	___flmul@b+2,7
  7663  0025' 2800'              	goto	l4345
  7664  0026'                    l4343:
  7665  0026' 3000               	movlw	0
  7666  0027' 008D'              	movwf	___flmul@b+3
  7667  0028' 3000               	movlw	0
  7668  0029' 008C'              	movwf	___flmul@b+2
  7669  002A' 3000               	movlw	0
  7670  002B' 008B'              	movwf	___flmul@b+1
  7671  002C' 3000               	movlw	0
  7672  002D' 008A'              	movwf	___flmul@b
  7673  002E'                    l4345:
  7674  002E' 0811'              	movf	___flmul@a+3,w
  7675  002F' 3980               	andlw	128
  7676  0030' 0092'              	movwf	??___flmul
  7677  0031' 0812'              	movf	??___flmul,w
  7678  0032' 0697'              	xorwf	___flmul@sign,f
  7679  0033'                    l4347:
  7680  0033' 0811'              	movf	___flmul@a+3,w
  7681  0034' 0092'              	movwf	??___flmul
  7682  0035' 0712'              	addwf	??___flmul,w
  7683  0036' 0093'              	movwf	??___flmul+1
  7684  0037' 0813'              	movf	??___flmul+1,w
  7685  0038' 0098'              	movwf	___flmul@aexp
  7686  0039'                    l4349:
  7687  0039' 1F90'              	btfss	___flmul@a+2,7
  7688  003A' 2800'              	goto	u7091
  7689  003B' 2800'              	goto	u7090
  7690  003C'                    u7091:
  7691  003C' 2800'              	goto	l4353
  7692  003D'                    u7090:
  7693  003D'                    l4351:
  7694  003D' 1418'              	bsf	___flmul@aexp,0
  7695  003E'                    l4353:
  7696  003E' 0818'              	movf	___flmul@aexp,w
  7697  003F' 1903               	btfsc	3,2
  7698  0040' 2800'              	goto	u7101
  7699  0041' 2800'              	goto	u7100
  7700  0042'                    u7101:
  7701  0042' 2800'              	goto	l4361
  7702  0043'                    u7100:
  7703  0043'                    l4355:
  7704  0043' 0A18'              	incf	___flmul@aexp,w
  7705  0044' 1D03               	btfss	3,2
  7706  0045' 2800'              	goto	u7111
  7707  0046' 2800'              	goto	u7110
  7708  0047'                    u7111:
  7709  0047' 2800'              	goto	l4359
  7710  0048'                    u7110:
  7711  0048'                    l4357:
  7712  0048' 3000               	movlw	0
  7713  0049' 0091'              	movwf	___flmul@a+3
  7714  004A' 3000               	movlw	0
  7715  004B' 0090'              	movwf	___flmul@a+2
  7716  004C' 3000               	movlw	0
  7717  004D' 008F'              	movwf	___flmul@a+1
  7718  004E' 3000               	movlw	0
  7719  004F' 008E'              	movwf	___flmul@a
  7720  0050'                    l4359:
  7721  0050' 1790'              	bsf	___flmul@a+2,7
  7722  0051' 2800'              	goto	l4363
  7723  0052'                    l4361:
  7724  0052' 3000               	movlw	0
  7725  0053' 0091'              	movwf	___flmul@a+3
  7726  0054' 3000               	movlw	0
  7727  0055' 0090'              	movwf	___flmul@a+2
  7728  0056' 3000               	movlw	0
  7729  0057' 008F'              	movwf	___flmul@a+1
  7730  0058' 3000               	movlw	0
  7731  0059' 008E'              	movwf	___flmul@a
  7732  005A'                    l4363:
  7733  005A' 0818'              	movf	___flmul@aexp,w
  7734  005B' 1903               	btfsc	3,2
  7735  005C' 2800'              	goto	u7121
  7736  005D' 2800'              	goto	u7120
  7737  005E'                    u7121:
  7738  005E' 2800'              	goto	l4367
  7739  005F'                    u7120:
  7740  005F'                    l4365:
  7741  005F' 081D'              	movf	___flmul@bexp,w
  7742  0060' 1D03               	btfss	3,2
  7743  0061' 2800'              	goto	u7131
  7744  0062' 2800'              	goto	u7130
  7745  0063'                    u7131:
  7746  0063' 2800'              	goto	l4371
  7747  0064'                    u7130:
  7748  0064'                    l4367:
  7749  0064' 3000               	movlw	0
  7750  0065' 008D'              	movwf	?___flmul+3
  7751  0066' 3000               	movlw	0
  7752  0067' 008C'              	movwf	?___flmul+2
  7753  0068' 3000               	movlw	0
  7754  0069' 008B'              	movwf	?___flmul+1
  7755  006A' 3000               	movlw	0
  7756  006B' 008A'              	movwf	?___flmul
  7757  006C' 2800'              	goto	l871
  7758  006D'                    l4371:
  7759  006D' 080A'              	movf	___flmul@b,w
  7760  006E' 0092'              	movwf	??___flmul
  7761  006F' 0812'              	movf	??___flmul,w
  7762  0070' 0083'              	movwf	__Umul8_16@multiplicand
  7763  0071' 0810'              	movf	___flmul@a+2,w
  7764  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  7765  0077' 0804'              	movf	?__Umul8_16+1,w
  7766  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  7767  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  7768  007A' 00A3'              	movwf	___flmul@temp+1
  7769  007B' 0803'              	movf	?__Umul8_16,w
  7770  007C' 00A2'              	movwf	___flmul@temp
  7771  007D'                    l4373:
  7772  007D' 0822'              	movf	___flmul@temp,w
  7773  007E' 0092'              	movwf	??___flmul
  7774  007F' 0193'              	clrf	??___flmul+1
  7775  0080' 0194'              	clrf	??___flmul+2
  7776  0081' 0195'              	clrf	??___flmul+3
  7777  0082' 0815'              	movf	??___flmul+3,w
  7778  0083' 009C'              	movwf	___flmul@grs+3
  7779  0084' 0814'              	movf	??___flmul+2,w
  7780  0085' 009B'              	movwf	___flmul@grs+2
  7781  0086' 0813'              	movf	??___flmul+1,w
  7782  0087' 009A'              	movwf	___flmul@grs+1
  7783  0088' 0812'              	movf	??___flmul,w
  7784  0089' 0099'              	movwf	___flmul@grs
  7785  008A'                    l4375:
  7786  008A' 0823'              	movf	___flmul@temp+1,w
  7787  008B' 0092'              	movwf	??___flmul
  7788  008C' 0193'              	clrf	??___flmul+1
  7789  008D' 0194'              	clrf	??___flmul+2
  7790  008E' 0195'              	clrf	??___flmul+3
  7791  008F' 0815'              	movf	??___flmul+3,w
  7792  0090' 00A1'              	movwf	___flmul@prod+3
  7793  0091' 0814'              	movf	??___flmul+2,w
  7794  0092' 00A0'              	movwf	___flmul@prod+2
  7795  0093' 0813'              	movf	??___flmul+1,w
  7796  0094' 009F'              	movwf	___flmul@prod+1
  7797  0095' 0812'              	movf	??___flmul,w
  7798  0096' 009E'              	movwf	___flmul@prod
  7799  0097' 080B'              	movf	___flmul@b+1,w
  7800  0098' 0092'              	movwf	??___flmul
  7801  0099' 0812'              	movf	??___flmul,w
  7802  009A' 0083'              	movwf	__Umul8_16@multiplicand
  7803  009B' 080F'              	movf	___flmul@a+1,w
  7804  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  7805  00A1' 0804'              	movf	?__Umul8_16+1,w
  7806  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  7807  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  7808  00A4' 00A3'              	movwf	___flmul@temp+1
  7809  00A5' 0803'              	movf	?__Umul8_16,w
  7810  00A6' 00A2'              	movwf	___flmul@temp
  7811  00A7'                    l4377:
  7812  00A7' 0822'              	movf	___flmul@temp,w
  7813  00A8' 0092'              	movwf	??___flmul
  7814  00A9' 0193'              	clrf	??___flmul+1
  7815  00AA' 0194'              	clrf	??___flmul+2
  7816  00AB' 0195'              	clrf	??___flmul+3
  7817  00AC' 0812'              	movf	??___flmul,w
  7818  00AD' 0799'              	addwf	___flmul@grs,f
  7819  00AE' 0813'              	movf	??___flmul+1,w
  7820  00AF' 1103               	clrz
  7821  00B0' 1803               	skipnc
  7822  00B1' 3E01               	addlw	1
  7823  00B2' 1903               	skipnz
  7824  00B3' 2800'              	goto	u7141
  7825  00B4' 079A'              	addwf	___flmul@grs+1,f
  7826  00B5'                    u7141:
  7827  00B5' 0814'              	movf	??___flmul+2,w
  7828  00B6' 1103               	clrz
  7829  00B7' 1803               	skipnc
  7830  00B8' 3E01               	addlw	1
  7831  00B9' 1903               	skipnz
  7832  00BA' 2800'              	goto	u7142
  7833  00BB' 079B'              	addwf	___flmul@grs+2,f
  7834  00BC'                    u7142:
  7835  00BC' 0815'              	movf	??___flmul+3,w
  7836  00BD' 1103               	clrz
  7837  00BE' 1803               	skipnc
  7838  00BF' 3E01               	addlw	1
  7839  00C0' 1903               	skipnz
  7840  00C1' 2800'              	goto	u7143
  7841  00C2' 079C'              	addwf	___flmul@grs+3,f
  7842  00C3'                    u7143:
  7843  00C3'                    l4379:
  7844  00C3' 0823'              	movf	___flmul@temp+1,w
  7845  00C4' 0092'              	movwf	??___flmul
  7846  00C5' 0193'              	clrf	??___flmul+1
  7847  00C6' 0194'              	clrf	??___flmul+2
  7848  00C7' 0195'              	clrf	??___flmul+3
  7849  00C8' 0812'              	movf	??___flmul,w
  7850  00C9' 079E'              	addwf	___flmul@prod,f
  7851  00CA' 0813'              	movf	??___flmul+1,w
  7852  00CB' 1103               	clrz
  7853  00CC' 1803               	skipnc
  7854  00CD' 3E01               	addlw	1
  7855  00CE' 1903               	skipnz
  7856  00CF' 2800'              	goto	u7151
  7857  00D0' 079F'              	addwf	___flmul@prod+1,f
  7858  00D1'                    u7151:
  7859  00D1' 0814'              	movf	??___flmul+2,w
  7860  00D2' 1103               	clrz
  7861  00D3' 1803               	skipnc
  7862  00D4' 3E01               	addlw	1
  7863  00D5' 1903               	skipnz
  7864  00D6' 2800'              	goto	u7152
  7865  00D7' 07A0'              	addwf	___flmul@prod+2,f
  7866  00D8'                    u7152:
  7867  00D8' 0815'              	movf	??___flmul+3,w
  7868  00D9' 1103               	clrz
  7869  00DA' 1803               	skipnc
  7870  00DB' 3E01               	addlw	1
  7871  00DC' 1903               	skipnz
  7872  00DD' 2800'              	goto	u7153
  7873  00DE' 07A1'              	addwf	___flmul@prod+3,f
  7874  00DF'                    u7153:
  7875  00DF' 080C'              	movf	___flmul@b+2,w
  7876  00E0' 0092'              	movwf	??___flmul
  7877  00E1' 0812'              	movf	??___flmul,w
  7878  00E2' 0083'              	movwf	__Umul8_16@multiplicand
  7879  00E3' 080E'              	movf	___flmul@a,w
  7880  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  7881  00E9' 0804'              	movf	?__Umul8_16+1,w
  7882  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  7883  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  7884  00EC' 00A3'              	movwf	___flmul@temp+1
  7885  00ED' 0803'              	movf	?__Umul8_16,w
  7886  00EE' 00A2'              	movwf	___flmul@temp
  7887  00EF'                    l4381:
  7888  00EF' 0822'              	movf	___flmul@temp,w
  7889  00F0' 0092'              	movwf	??___flmul
  7890  00F1' 0193'              	clrf	??___flmul+1
  7891  00F2' 0194'              	clrf	??___flmul+2
  7892  00F3' 0195'              	clrf	??___flmul+3
  7893  00F4' 0812'              	movf	??___flmul,w
  7894  00F5' 0799'              	addwf	___flmul@grs,f
  7895  00F6' 0813'              	movf	??___flmul+1,w
  7896  00F7' 1103               	clrz
  7897  00F8' 1803               	skipnc
  7898  00F9' 3E01               	addlw	1
  7899  00FA' 1903               	skipnz
  7900  00FB' 2800'              	goto	u7161
  7901  00FC' 079A'              	addwf	___flmul@grs+1,f
  7902  00FD'                    u7161:
  7903  00FD' 0814'              	movf	??___flmul+2,w
  7904  00FE' 1103               	clrz
  7905  00FF' 1803               	skipnc
  7906  0100' 3E01               	addlw	1
  7907  0101' 1903               	skipnz
  7908  0102' 2800'              	goto	u7162
  7909  0103' 079B'              	addwf	___flmul@grs+2,f
  7910  0104'                    u7162:
  7911  0104' 0815'              	movf	??___flmul+3,w
  7912  0105' 1103               	clrz
  7913  0106' 1803               	skipnc
  7914  0107' 3E01               	addlw	1
  7915  0108' 1903               	skipnz
  7916  0109' 2800'              	goto	u7163
  7917  010A' 079C'              	addwf	___flmul@grs+3,f
  7918  010B'                    u7163:
  7919  010B'                    l4383:
  7920  010B' 0823'              	movf	___flmul@temp+1,w
  7921  010C' 0092'              	movwf	??___flmul
  7922  010D' 0193'              	clrf	??___flmul+1
  7923  010E' 0194'              	clrf	??___flmul+2
  7924  010F' 0195'              	clrf	??___flmul+3
  7925  0110' 0812'              	movf	??___flmul,w
  7926  0111' 079E'              	addwf	___flmul@prod,f
  7927  0112' 0813'              	movf	??___flmul+1,w
  7928  0113' 1103               	clrz
  7929  0114' 1803               	skipnc
  7930  0115' 3E01               	addlw	1
  7931  0116' 1903               	skipnz
  7932  0117' 2800'              	goto	u7171
  7933  0118' 079F'              	addwf	___flmul@prod+1,f
  7934  0119'                    u7171:
  7935  0119' 0814'              	movf	??___flmul+2,w
  7936  011A' 1103               	clrz
  7937  011B' 1803               	skipnc
  7938  011C' 3E01               	addlw	1
  7939  011D' 1903               	skipnz
  7940  011E' 2800'              	goto	u7172
  7941  011F' 07A0'              	addwf	___flmul@prod+2,f
  7942  0120'                    u7172:
  7943  0120' 0815'              	movf	??___flmul+3,w
  7944  0121' 1103               	clrz
  7945  0122' 1803               	skipnc
  7946  0123' 3E01               	addlw	1
  7947  0124' 1903               	skipnz
  7948  0125' 2800'              	goto	u7173
  7949  0126' 07A1'              	addwf	___flmul@prod+3,f
  7950  0127'                    u7173:
  7951  0127'                    l4385:
  7952  0127' 3008               	movlw	8
  7953  0128' 0092'              	movwf	??___flmul
  7954  0129'                    u7185:
  7955  0129' 1003               	clrc
  7956  012A' 0D99'              	rlf	___flmul@grs,f
  7957  012B' 0D9A'              	rlf	___flmul@grs+1,f
  7958  012C' 0D9B'              	rlf	___flmul@grs+2,f
  7959  012D' 0D9C'              	rlf	___flmul@grs+3,f
  7960  012E' 0B92'              	decfsz	??___flmul,f
  7961  012F' 2800'              	goto	u7185
  7962  0130'                    l4387:
  7963  0130' 080B'              	movf	___flmul@b+1,w
  7964  0131' 0092'              	movwf	??___flmul
  7965  0132' 0812'              	movf	??___flmul,w
  7966  0133' 0083'              	movwf	__Umul8_16@multiplicand
  7967  0134' 080E'              	movf	___flmul@a,w
  7968  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  7969  013A' 0804'              	movf	?__Umul8_16+1,w
  7970  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  7971  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  7972  013D' 00A3'              	movwf	___flmul@temp+1
  7973  013E' 0803'              	movf	?__Umul8_16,w
  7974  013F' 00A2'              	movwf	___flmul@temp
  7975  0140'                    l4389:
  7976  0140' 0822'              	movf	___flmul@temp,w
  7977  0141' 0092'              	movwf	??___flmul
  7978  0142' 0823'              	movf	___flmul@temp+1,w
  7979  0143' 0093'              	movwf	??___flmul+1
  7980  0144' 0194'              	clrf	??___flmul+2
  7981  0145' 0195'              	clrf	??___flmul+3
  7982  0146' 0812'              	movf	??___flmul,w
  7983  0147' 0799'              	addwf	___flmul@grs,f
  7984  0148' 0813'              	movf	??___flmul+1,w
  7985  0149' 1103               	clrz
  7986  014A' 1803               	skipnc
  7987  014B' 3E01               	addlw	1
  7988  014C' 1903               	skipnz
  7989  014D' 2800'              	goto	u7191
  7990  014E' 079A'              	addwf	___flmul@grs+1,f
  7991  014F'                    u7191:
  7992  014F' 0814'              	movf	??___flmul+2,w
  7993  0150' 1103               	clrz
  7994  0151' 1803               	skipnc
  7995  0152' 3E01               	addlw	1
  7996  0153' 1903               	skipnz
  7997  0154' 2800'              	goto	u7192
  7998  0155' 079B'              	addwf	___flmul@grs+2,f
  7999  0156'                    u7192:
  8000  0156' 0815'              	movf	??___flmul+3,w
  8001  0157' 1103               	clrz
  8002  0158' 1803               	skipnc
  8003  0159' 3E01               	addlw	1
  8004  015A' 1903               	skipnz
  8005  015B' 2800'              	goto	u7193
  8006  015C' 079C'              	addwf	___flmul@grs+3,f
  8007  015D'                    u7193:
  8008  015D'                    l4391:
  8009  015D' 080A'              	movf	___flmul@b,w
  8010  015E' 0092'              	movwf	??___flmul
  8011  015F' 0812'              	movf	??___flmul,w
  8012  0160' 0083'              	movwf	__Umul8_16@multiplicand
  8013  0161' 080F'              	movf	___flmul@a+1,w
  8014  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8015  0167' 0804'              	movf	?__Umul8_16+1,w
  8016  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  8017  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  8018  016A' 00A3'              	movwf	___flmul@temp+1
  8019  016B' 0803'              	movf	?__Umul8_16,w
  8020  016C' 00A2'              	movwf	___flmul@temp
  8021  016D'                    l4393:
  8022  016D' 0822'              	movf	___flmul@temp,w
  8023  016E' 0092'              	movwf	??___flmul
  8024  016F' 0823'              	movf	___flmul@temp+1,w
  8025  0170' 0093'              	movwf	??___flmul+1
  8026  0171' 0194'              	clrf	??___flmul+2
  8027  0172' 0195'              	clrf	??___flmul+3
  8028  0173' 0812'              	movf	??___flmul,w
  8029  0174' 0799'              	addwf	___flmul@grs,f
  8030  0175' 0813'              	movf	??___flmul+1,w
  8031  0176' 1103               	clrz
  8032  0177' 1803               	skipnc
  8033  0178' 3E01               	addlw	1
  8034  0179' 1903               	skipnz
  8035  017A' 2800'              	goto	u7201
  8036  017B' 079A'              	addwf	___flmul@grs+1,f
  8037  017C'                    u7201:
  8038  017C' 0814'              	movf	??___flmul+2,w
  8039  017D' 1103               	clrz
  8040  017E' 1803               	skipnc
  8041  017F' 3E01               	addlw	1
  8042  0180' 1903               	skipnz
  8043  0181' 2800'              	goto	u7202
  8044  0182' 079B'              	addwf	___flmul@grs+2,f
  8045  0183'                    u7202:
  8046  0183' 0815'              	movf	??___flmul+3,w
  8047  0184' 1103               	clrz
  8048  0185' 1803               	skipnc
  8049  0186' 3E01               	addlw	1
  8050  0187' 1903               	skipnz
  8051  0188' 2800'              	goto	u7203
  8052  0189' 079C'              	addwf	___flmul@grs+3,f
  8053  018A'                    u7203:
  8054  018A'                    l4395:
  8055  018A' 3008               	movlw	8
  8056  018B' 0092'              	movwf	??___flmul
  8057  018C'                    u7215:
  8058  018C' 1003               	clrc
  8059  018D' 0D99'              	rlf	___flmul@grs,f
  8060  018E' 0D9A'              	rlf	___flmul@grs+1,f
  8061  018F' 0D9B'              	rlf	___flmul@grs+2,f
  8062  0190' 0D9C'              	rlf	___flmul@grs+3,f
  8063  0191' 0B92'              	decfsz	??___flmul,f
  8064  0192' 2800'              	goto	u7215
  8065  0193' 080A'              	movf	___flmul@b,w
  8066  0194' 0092'              	movwf	??___flmul
  8067  0195' 0812'              	movf	??___flmul,w
  8068  0196' 0083'              	movwf	__Umul8_16@multiplicand
  8069  0197' 080E'              	movf	___flmul@a,w
  8070  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8071  019D' 0804'              	movf	?__Umul8_16+1,w
  8072  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  8073  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  8074  01A0' 00A3'              	movwf	___flmul@temp+1
  8075  01A1' 0803'              	movf	?__Umul8_16,w
  8076  01A2' 00A2'              	movwf	___flmul@temp
  8077  01A3'                    l4397:
  8078  01A3' 0822'              	movf	___flmul@temp,w
  8079  01A4' 0092'              	movwf	??___flmul
  8080  01A5' 0823'              	movf	___flmul@temp+1,w
  8081  01A6' 0093'              	movwf	??___flmul+1
  8082  01A7' 0194'              	clrf	??___flmul+2
  8083  01A8' 0195'              	clrf	??___flmul+3
  8084  01A9' 0812'              	movf	??___flmul,w
  8085  01AA' 0799'              	addwf	___flmul@grs,f
  8086  01AB' 0813'              	movf	??___flmul+1,w
  8087  01AC' 1103               	clrz
  8088  01AD' 1803               	skipnc
  8089  01AE' 3E01               	addlw	1
  8090  01AF' 1903               	skipnz
  8091  01B0' 2800'              	goto	u7221
  8092  01B1' 079A'              	addwf	___flmul@grs+1,f
  8093  01B2'                    u7221:
  8094  01B2' 0814'              	movf	??___flmul+2,w
  8095  01B3' 1103               	clrz
  8096  01B4' 1803               	skipnc
  8097  01B5' 3E01               	addlw	1
  8098  01B6' 1903               	skipnz
  8099  01B7' 2800'              	goto	u7222
  8100  01B8' 079B'              	addwf	___flmul@grs+2,f
  8101  01B9'                    u7222:
  8102  01B9' 0815'              	movf	??___flmul+3,w
  8103  01BA' 1103               	clrz
  8104  01BB' 1803               	skipnc
  8105  01BC' 3E01               	addlw	1
  8106  01BD' 1903               	skipnz
  8107  01BE' 2800'              	goto	u7223
  8108  01BF' 079C'              	addwf	___flmul@grs+3,f
  8109  01C0'                    u7223:
  8110  01C0'                    l4399:
  8111  01C0' 080B'              	movf	___flmul@b+1,w
  8112  01C1' 0092'              	movwf	??___flmul
  8113  01C2' 0812'              	movf	??___flmul,w
  8114  01C3' 0083'              	movwf	__Umul8_16@multiplicand
  8115  01C4' 0810'              	movf	___flmul@a+2,w
  8116  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8117  01CA' 0804'              	movf	?__Umul8_16+1,w
  8118  01CB' 1283               	bcf	3,5	;RP0=0, select bank0
  8119  01CC' 1303               	bcf	3,6	;RP1=0, select bank0
  8120  01CD' 00A3'              	movwf	___flmul@temp+1
  8121  01CE' 0803'              	movf	?__Umul8_16,w
  8122  01CF' 00A2'              	movwf	___flmul@temp
  8123  01D0' 0822'              	movf	___flmul@temp,w
  8124  01D1' 0092'              	movwf	??___flmul
  8125  01D2' 0823'              	movf	___flmul@temp+1,w
  8126  01D3' 0093'              	movwf	??___flmul+1
  8127  01D4' 0194'              	clrf	??___flmul+2
  8128  01D5' 0195'              	clrf	??___flmul+3
  8129  01D6' 0812'              	movf	??___flmul,w
  8130  01D7' 079E'              	addwf	___flmul@prod,f
  8131  01D8' 0813'              	movf	??___flmul+1,w
  8132  01D9' 1103               	clrz
  8133  01DA' 1803               	skipnc
  8134  01DB' 3E01               	addlw	1
  8135  01DC' 1903               	skipnz
  8136  01DD' 2800'              	goto	u7231
  8137  01DE' 079F'              	addwf	___flmul@prod+1,f
  8138  01DF'                    u7231:
  8139  01DF' 0814'              	movf	??___flmul+2,w
  8140  01E0' 1103               	clrz
  8141  01E1' 1803               	skipnc
  8142  01E2' 3E01               	addlw	1
  8143  01E3' 1903               	skipnz
  8144  01E4' 2800'              	goto	u7232
  8145  01E5' 07A0'              	addwf	___flmul@prod+2,f
  8146  01E6'                    u7232:
  8147  01E6' 0815'              	movf	??___flmul+3,w
  8148  01E7' 1103               	clrz
  8149  01E8' 1803               	skipnc
  8150  01E9' 3E01               	addlw	1
  8151  01EA' 1903               	skipnz
  8152  01EB' 2800'              	goto	u7233
  8153  01EC' 07A1'              	addwf	___flmul@prod+3,f
  8154  01ED'                    u7233:
  8155  01ED'                    l4401:
  8156  01ED' 080C'              	movf	___flmul@b+2,w
  8157  01EE' 0092'              	movwf	??___flmul
  8158  01EF' 0812'              	movf	??___flmul,w
  8159  01F0' 0083'              	movwf	__Umul8_16@multiplicand
  8160  01F1' 080F'              	movf	___flmul@a+1,w
  8161  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8162  01F7' 0804'              	movf	?__Umul8_16+1,w
  8163  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
  8164  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
  8165  01FA' 00A3'              	movwf	___flmul@temp+1
  8166  01FB' 0803'              	movf	?__Umul8_16,w
  8167  01FC' 00A2'              	movwf	___flmul@temp
  8168  01FD'                    l4403:
  8169  01FD' 0822'              	movf	___flmul@temp,w
  8170  01FE' 0092'              	movwf	??___flmul
  8171  01FF' 0823'              	movf	___flmul@temp+1,w
  8172  0200' 0093'              	movwf	??___flmul+1
  8173  0201' 0194'              	clrf	??___flmul+2
  8174  0202' 0195'              	clrf	??___flmul+3
  8175  0203' 0812'              	movf	??___flmul,w
  8176  0204' 079E'              	addwf	___flmul@prod,f
  8177  0205' 0813'              	movf	??___flmul+1,w
  8178  0206' 1103               	clrz
  8179  0207' 1803               	skipnc
  8180  0208' 3E01               	addlw	1
  8181  0209' 1903               	skipnz
  8182  020A' 2800'              	goto	u7241
  8183  020B' 079F'              	addwf	___flmul@prod+1,f
  8184  020C'                    u7241:
  8185  020C' 0814'              	movf	??___flmul+2,w
  8186  020D' 1103               	clrz
  8187  020E' 1803               	skipnc
  8188  020F' 3E01               	addlw	1
  8189  0210' 1903               	skipnz
  8190  0211' 2800'              	goto	u7242
  8191  0212' 07A0'              	addwf	___flmul@prod+2,f
  8192  0213'                    u7242:
  8193  0213' 0815'              	movf	??___flmul+3,w
  8194  0214' 1103               	clrz
  8195  0215' 1803               	skipnc
  8196  0216' 3E01               	addlw	1
  8197  0217' 1903               	skipnz
  8198  0218' 2800'              	goto	u7243
  8199  0219' 07A1'              	addwf	___flmul@prod+3,f
  8200  021A'                    u7243:
  8201  021A' 080C'              	movf	___flmul@b+2,w
  8202  021B' 0092'              	movwf	??___flmul
  8203  021C' 0812'              	movf	??___flmul,w
  8204  021D' 0083'              	movwf	__Umul8_16@multiplicand
  8205  021E' 0810'              	movf	___flmul@a+2,w
  8206  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8207  0224' 0804'              	movf	?__Umul8_16+1,w
  8208  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  8209  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  8210  0227' 00A3'              	movwf	___flmul@temp+1
  8211  0228' 0803'              	movf	?__Umul8_16,w
  8212  0229' 00A2'              	movwf	___flmul@temp
  8213  022A'                    l4405:
  8214  022A' 0822'              	movf	___flmul@temp,w
  8215  022B' 0092'              	movwf	??___flmul
  8216  022C' 0823'              	movf	___flmul@temp+1,w
  8217  022D' 0093'              	movwf	??___flmul+1
  8218  022E' 0194'              	clrf	??___flmul+2
  8219  022F' 0195'              	clrf	??___flmul+3
  8220  0230' 3008               	movlw	8
  8221  0231'                    u7255:
  8222  0231' 1003               	clrc
  8223  0232' 0D92'              	rlf	??___flmul,f
  8224  0233' 0D93'              	rlf	??___flmul+1,f
  8225  0234' 0D94'              	rlf	??___flmul+2,f
  8226  0235' 0D95'              	rlf	??___flmul+3,f
  8227  0236'                    u7250:
  8228  0236' 3EFF               	addlw	-1
  8229  0237' 1D03               	skipz
  8230  0238' 2800'              	goto	u7255
  8231  0239' 0812'              	movf	??___flmul,w
  8232  023A' 079E'              	addwf	___flmul@prod,f
  8233  023B' 0813'              	movf	??___flmul+1,w
  8234  023C' 1103               	clrz
  8235  023D' 1803               	skipnc
  8236  023E' 3E01               	addlw	1
  8237  023F' 1903               	skipnz
  8238  0240' 2800'              	goto	u7261
  8239  0241' 079F'              	addwf	___flmul@prod+1,f
  8240  0242'                    u7261:
  8241  0242' 0814'              	movf	??___flmul+2,w
  8242  0243' 1103               	clrz
  8243  0244' 1803               	skipnc
  8244  0245' 3E01               	addlw	1
  8245  0246' 1903               	skipnz
  8246  0247' 2800'              	goto	u7262
  8247  0248' 07A0'              	addwf	___flmul@prod+2,f
  8248  0249'                    u7262:
  8249  0249' 0815'              	movf	??___flmul+3,w
  8250  024A' 1103               	clrz
  8251  024B' 1803               	skipnc
  8252  024C' 3E01               	addlw	1
  8253  024D' 1903               	skipnz
  8254  024E' 2800'              	goto	u7263
  8255  024F' 07A1'              	addwf	___flmul@prod+3,f
  8256  0250'                    u7263:
  8257  0250'                    l4407:
  8258  0250' 0819'              	movf	___flmul@grs,w
  8259  0251' 0092'              	movwf	??___flmul
  8260  0252' 081A'              	movf	___flmul@grs+1,w
  8261  0253' 0093'              	movwf	??___flmul+1
  8262  0254' 081B'              	movf	___flmul@grs+2,w
  8263  0255' 0094'              	movwf	??___flmul+2
  8264  0256' 081C'              	movf	___flmul@grs+3,w
  8265  0257' 0095'              	movwf	??___flmul+3
  8266  0258' 3018               	movlw	24
  8267  0259'                    u7275:
  8268  0259' 1003               	clrc
  8269  025A' 0C95'              	rrf	??___flmul+3,f
  8270  025B' 0C94'              	rrf	??___flmul+2,f
  8271  025C' 0C93'              	rrf	??___flmul+1,f
  8272  025D' 0C92'              	rrf	??___flmul,f
  8273  025E'                    u7270:
  8274  025E' 3EFF               	addlw	-1
  8275  025F' 1D03               	skipz
  8276  0260' 2800'              	goto	u7275
  8277  0261' 0812'              	movf	??___flmul,w
  8278  0262' 079E'              	addwf	___flmul@prod,f
  8279  0263' 0813'              	movf	??___flmul+1,w
  8280  0264' 1103               	clrz
  8281  0265' 1803               	skipnc
  8282  0266' 3E01               	addlw	1
  8283  0267' 1903               	skipnz
  8284  0268' 2800'              	goto	u7281
  8285  0269' 079F'              	addwf	___flmul@prod+1,f
  8286  026A'                    u7281:
  8287  026A' 0814'              	movf	??___flmul+2,w
  8288  026B' 1103               	clrz
  8289  026C' 1803               	skipnc
  8290  026D' 3E01               	addlw	1
  8291  026E' 1903               	skipnz
  8292  026F' 2800'              	goto	u7282
  8293  0270' 07A0'              	addwf	___flmul@prod+2,f
  8294  0271'                    u7282:
  8295  0271' 0815'              	movf	??___flmul+3,w
  8296  0272' 1103               	clrz
  8297  0273' 1803               	skipnc
  8298  0274' 3E01               	addlw	1
  8299  0275' 1903               	skipnz
  8300  0276' 2800'              	goto	u7283
  8301  0277' 07A1'              	addwf	___flmul@prod+3,f
  8302  0278'                    u7283:
  8303  0278'                    l4409:
  8304  0278' 3008               	movlw	8
  8305  0279' 0092'              	movwf	??___flmul
  8306  027A'                    u7295:
  8307  027A' 1003               	clrc
  8308  027B' 0D99'              	rlf	___flmul@grs,f
  8309  027C' 0D9A'              	rlf	___flmul@grs+1,f
  8310  027D' 0D9B'              	rlf	___flmul@grs+2,f
  8311  027E' 0D9C'              	rlf	___flmul@grs+3,f
  8312  027F' 0B92'              	decfsz	??___flmul,f
  8313  0280' 2800'              	goto	u7295
  8314  0281'                    l4411:
  8315  0281' 081D'              	movf	___flmul@bexp,w
  8316  0282' 0718'              	addwf	___flmul@aexp,w
  8317  0283' 0092'              	movwf	??___flmul
  8318  0284' 0193'              	clrf	??___flmul+1
  8319  0285' 0D93'              	rlf	??___flmul+1,f
  8320  0286' 0812'              	movf	??___flmul,w
  8321  0287' 3E82               	addlw	130
  8322  0288' 00A2'              	movwf	___flmul@temp
  8323  0289' 0813'              	movf	??___flmul+1,w
  8324  028A' 1803               	skipnc
  8325  028B' 3E01               	addlw	1
  8326  028C' 3EFF               	addlw	255
  8327  028D' 00A3'              	movwf	___flmul@temp+1
  8328  028E' 2800'              	goto	l4423
  8329  028F'                    l4413:
  8330  028F' 3001               	movlw	1
  8331  0290' 0092'              	movwf	??___flmul
  8332  0291'                    u7305:
  8333  0291' 1003               	clrc
  8334  0292' 0D9E'              	rlf	___flmul@prod,f
  8335  0293' 0D9F'              	rlf	___flmul@prod+1,f
  8336  0294' 0DA0'              	rlf	___flmul@prod+2,f
  8337  0295' 0DA1'              	rlf	___flmul@prod+3,f
  8338  0296' 0B92'              	decfsz	??___flmul,f
  8339  0297' 2800'              	goto	u7305
  8340  0298'                    l4415:
  8341  0298' 1F9C'              	btfss	___flmul@grs+3,7
  8342  0299' 2800'              	goto	u7311
  8343  029A' 2800'              	goto	u7310
  8344  029B'                    u7311:
  8345  029B' 2800'              	goto	l4419
  8346  029C'                    u7310:
  8347  029C'                    l4417:
  8348  029C' 141E'              	bsf	___flmul@prod,0
  8349  029D'                    l4419:
  8350  029D' 3001               	movlw	1
  8351  029E' 0092'              	movwf	??___flmul
  8352  029F'                    u7325:
  8353  029F' 1003               	clrc
  8354  02A0' 0D99'              	rlf	___flmul@grs,f
  8355  02A1' 0D9A'              	rlf	___flmul@grs+1,f
  8356  02A2' 0D9B'              	rlf	___flmul@grs+2,f
  8357  02A3' 0D9C'              	rlf	___flmul@grs+3,f
  8358  02A4' 0B92'              	decfsz	??___flmul,f
  8359  02A5' 2800'              	goto	u7325
  8360  02A6'                    l4421:
  8361  02A6' 30FF               	movlw	255
  8362  02A7' 07A2'              	addwf	___flmul@temp,f
  8363  02A8' 1803               	skipnc
  8364  02A9' 0AA3'              	incf	___flmul@temp+1,f
  8365  02AA' 30FF               	movlw	255
  8366  02AB' 07A3'              	addwf	___flmul@temp+1,f
  8367  02AC'                    l4423:
  8368  02AC' 1FA0'              	btfss	___flmul@prod+2,7
  8369  02AD' 2800'              	goto	u7331
  8370  02AE' 2800'              	goto	u7330
  8371  02AF'                    u7331:
  8372  02AF' 2800'              	goto	l4413
  8373  02B0'                    u7330:
  8374  02B0'                    l4425:
  8375  02B0' 0198'              	clrf	___flmul@aexp
  8376  02B1'                    l4427:
  8377  02B1' 1F9C'              	btfss	___flmul@grs+3,7
  8378  02B2' 2800'              	goto	u7341
  8379  02B3' 2800'              	goto	u7340
  8380  02B4'                    u7341:
  8381  02B4' 2800'              	goto	l4435
  8382  02B5'                    u7340:
  8383  02B5'                    l4429:
  8384  02B5' 30FF               	movlw	255
  8385  02B6' 0519'              	andwf	___flmul@grs,w
  8386  02B7' 0092'              	movwf	??___flmul
  8387  02B8' 30FF               	movlw	255
  8388  02B9' 051A'              	andwf	___flmul@grs+1,w
  8389  02BA' 0093'              	movwf	??___flmul+1
  8390  02BB' 30FF               	movlw	255
  8391  02BC' 051B'              	andwf	___flmul@grs+2,w
  8392  02BD' 0094'              	movwf	??___flmul+2
  8393  02BE' 307F               	movlw	127
  8394  02BF' 051C'              	andwf	___flmul@grs+3,w
  8395  02C0' 0095'              	movwf	??___flmul+3
  8396  02C1' 0815'              	movf	??___flmul+3,w
  8397  02C2' 0414'              	iorwf	??___flmul+2,w
  8398  02C3' 0413'              	iorwf	??___flmul+1,w
  8399  02C4' 0412'              	iorwf	??___flmul,w
  8400  02C5' 1903               	skipnz
  8401  02C6' 2800'              	goto	u7351
  8402  02C7' 2800'              	goto	u7350
  8403  02C8'                    u7351:
  8404  02C8' 2800'              	goto	l877
  8405  02C9'                    u7350:
  8406  02C9'                    l4431:
  8407  02C9' 0198'              	clrf	___flmul@aexp
  8408  02CA' 0A98'              	incf	___flmul@aexp,f
  8409  02CB' 2800'              	goto	l4435
  8410  02CC'                    l877:
  8411  02CC' 1C1E'              	btfss	___flmul@prod,0
  8412  02CD' 2800'              	goto	u7361
  8413  02CE' 2800'              	goto	u7360
  8414  02CF'                    u7361:
  8415  02CF' 2800'              	goto	l4435
  8416  02D0'                    u7360:
  8417  02D0' 2800'              	goto	l4431
  8418  02D1'                    l4435:
  8419  02D1' 0818'              	movf	___flmul@aexp,w
  8420  02D2' 1903               	btfsc	3,2
  8421  02D3' 2800'              	goto	u7371
  8422  02D4' 2800'              	goto	u7370
  8423  02D5'                    u7371:
  8424  02D5' 2800'              	goto	l4445
  8425  02D6'                    u7370:
  8426  02D6'                    l4437:
  8427  02D6' 3001               	movlw	1
  8428  02D7' 079E'              	addwf	___flmul@prod,f
  8429  02D8' 3000               	movlw	0
  8430  02D9' 1803               	skipnc
  8431  02DA' 3001               	movlw	1
  8432  02DB' 079F'              	addwf	___flmul@prod+1,f
  8433  02DC' 3000               	movlw	0
  8434  02DD' 1803               	skipnc
  8435  02DE' 3001               	movlw	1
  8436  02DF' 07A0'              	addwf	___flmul@prod+2,f
  8437  02E0' 3000               	movlw	0
  8438  02E1' 1803               	skipnc
  8439  02E2' 3001               	movlw	1
  8440  02E3' 07A1'              	addwf	___flmul@prod+3,f
  8441  02E4'                    l4439:
  8442  02E4' 1C21'              	btfss	___flmul@prod+3,0
  8443  02E5' 2800'              	goto	u7381
  8444  02E6' 2800'              	goto	u7380
  8445  02E7'                    u7381:
  8446  02E7' 2800'              	goto	l4445
  8447  02E8'                    u7380:
  8448  02E8'                    l4441:
  8449  02E8' 081E'              	movf	___flmul@prod,w
  8450  02E9' 0092'              	movwf	??___flmul
  8451  02EA' 081F'              	movf	___flmul@prod+1,w
  8452  02EB' 0093'              	movwf	??___flmul+1
  8453  02EC' 0820'              	movf	___flmul@prod+2,w
  8454  02ED' 0094'              	movwf	??___flmul+2
  8455  02EE' 0821'              	movf	___flmul@prod+3,w
  8456  02EF' 0095'              	movwf	??___flmul+3
  8457  02F0' 3001               	movlw	1
  8458  02F1' 0096'              	movwf	??___flmul+4
  8459  02F2'                    u7395:
  8460  02F2' 0D15'              	rlf	??___flmul+3,w
  8461  02F3' 0C95'              	rrf	??___flmul+3,f
  8462  02F4' 0C94'              	rrf	??___flmul+2,f
  8463  02F5' 0C93'              	rrf	??___flmul+1,f
  8464  02F6' 0C92'              	rrf	??___flmul,f
  8465  02F7'                    u7390:
  8466  02F7' 0B96'              	decfsz	??___flmul+4,f
  8467  02F8' 2800'              	goto	u7395
  8468  02F9' 0815'              	movf	??___flmul+3,w
  8469  02FA' 00A1'              	movwf	___flmul@prod+3
  8470  02FB' 0814'              	movf	??___flmul+2,w
  8471  02FC' 00A0'              	movwf	___flmul@prod+2
  8472  02FD' 0813'              	movf	??___flmul+1,w
  8473  02FE' 009F'              	movwf	___flmul@prod+1
  8474  02FF' 0812'              	movf	??___flmul,w
  8475  0300' 009E'              	movwf	___flmul@prod
  8476  0301'                    l4443:
  8477  0301' 3001               	movlw	1
  8478  0302' 07A2'              	addwf	___flmul@temp,f
  8479  0303' 1803               	skipnc
  8480  0304' 0AA3'              	incf	___flmul@temp+1,f
  8481  0305' 3000               	movlw	0
  8482  0306' 07A3'              	addwf	___flmul@temp+1,f
  8483  0307'                    l4445:
  8484  0307' 0823'              	movf	___flmul@temp+1,w
  8485  0308' 3A80               	xorlw	128
  8486  0309' 00FF               	movwf	btemp+1
  8487  030A' 3080               	movlw	128
  8488  030B' 027F               	subwf	btemp+1,w
  8489  030C' 1D03               	skipz
  8490  030D' 2800'              	goto	u7405
  8491  030E' 30FF               	movlw	255
  8492  030F' 0222'              	subwf	___flmul@temp,w
  8493  0310'                    u7405:
  8494  0310' 1C03               	skipc
  8495  0311' 2800'              	goto	u7401
  8496  0312' 2800'              	goto	u7400
  8497  0313'                    u7401:
  8498  0313' 2800'              	goto	l4449
  8499  0314'                    u7400:
  8500  0314'                    l4447:
  8501  0314' 307F               	movlw	127
  8502  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  8503  0316' 1303               	bcf	3,6	;RP1=0, select bank0
  8504  0317' 00A1'              	movwf	___flmul@prod+3
  8505  0318' 3080               	movlw	128
  8506  0319' 00A0'              	movwf	___flmul@prod+2
  8507  031A' 3000               	movlw	0
  8508  031B' 009F'              	movwf	___flmul@prod+1
  8509  031C' 3000               	movlw	0
  8510  031D' 009E'              	movwf	___flmul@prod
  8511  031E' 2800'              	goto	l883
  8512  031F'                    l4449:
  8513  031F' 1283               	bcf	3,5	;RP0=0, select bank0
  8514  0320' 1303               	bcf	3,6	;RP1=0, select bank0
  8515  0321' 0823'              	movf	___flmul@temp+1,w
  8516  0322' 3A80               	xorlw	128
  8517  0323' 00FF               	movwf	btemp+1
  8518  0324' 3080               	movlw	128
  8519  0325' 027F               	subwf	btemp+1,w
  8520  0326' 1D03               	skipz
  8521  0327' 2800'              	goto	u7415
  8522  0328' 3001               	movlw	1
  8523  0329' 0222'              	subwf	___flmul@temp,w
  8524  032A'                    u7415:
  8525  032A' 1803               	skipnc
  8526  032B' 2800'              	goto	u7411
  8527  032C' 2800'              	goto	u7410
  8528  032D'                    u7411:
  8529  032D' 2800'              	goto	l4455
  8530  032E'                    u7410:
  8531  032E'                    l4451:
  8532  032E' 3000               	movlw	0
  8533  032F' 1283               	bcf	3,5	;RP0=0, select bank0
  8534  0330' 1303               	bcf	3,6	;RP1=0, select bank0
  8535  0331' 00A1'              	movwf	___flmul@prod+3
  8536  0332' 3000               	movlw	0
  8537  0333' 00A0'              	movwf	___flmul@prod+2
  8538  0334' 3000               	movlw	0
  8539  0335' 009F'              	movwf	___flmul@prod+1
  8540  0336' 3000               	movlw	0
  8541  0337' 009E'              	movwf	___flmul@prod
  8542  0338'                    l4453:
  8543  0338' 0197'              	clrf	___flmul@sign
  8544  0339' 2800'              	goto	l883
  8545  033A'                    l4455:
  8546  033A' 1283               	bcf	3,5	;RP0=0, select bank0
  8547  033B' 1303               	bcf	3,6	;RP1=0, select bank0
  8548  033C' 0822'              	movf	___flmul@temp,w
  8549  033D' 0092'              	movwf	??___flmul
  8550  033E' 0812'              	movf	??___flmul,w
  8551  033F' 009D'              	movwf	___flmul@bexp
  8552  0340' 30FF               	movlw	255
  8553  0341' 059E'              	andwf	___flmul@prod,f
  8554  0342' 30FF               	movlw	255
  8555  0343' 059F'              	andwf	___flmul@prod+1,f
  8556  0344' 307F               	movlw	127
  8557  0345' 05A0'              	andwf	___flmul@prod+2,f
  8558  0346' 3000               	movlw	0
  8559  0347' 05A1'              	andwf	___flmul@prod+3,f
  8560  0348'                    l4457:
  8561  0348' 1C1D'              	btfss	___flmul@bexp,0
  8562  0349' 2800'              	goto	u7421
  8563  034A' 2800'              	goto	u7420
  8564  034B'                    u7421:
  8565  034B' 2800'              	goto	l4461
  8566  034C'                    u7420:
  8567  034C'                    l4459:
  8568  034C' 17A0'              	bsf	___flmul@prod+2,7
  8569  034D'                    l4461:
  8570  034D' 081D'              	movf	___flmul@bexp,w
  8571  034E' 0092'              	movwf	??___flmul
  8572  034F' 1003               	clrc
  8573  0350' 0C12'              	rrf	??___flmul,w
  8574  0351' 0093'              	movwf	??___flmul+1
  8575  0352' 0813'              	movf	??___flmul+1,w
  8576  0353' 00A1'              	movwf	___flmul@prod+3
  8577  0354'                    l883:
  8578  0354' 0817'              	movf	___flmul@sign,w
  8579  0355' 0092'              	movwf	??___flmul
  8580  0356' 0812'              	movf	??___flmul,w
  8581  0357' 04A1'              	iorwf	___flmul@prod+3,f
  8582  0358'                    l4463:
  8583  0358' 0821'              	movf	___flmul@prod+3,w
  8584  0359' 008D'              	movwf	?___flmul+3
  8585  035A' 0820'              	movf	___flmul@prod+2,w
  8586  035B' 008C'              	movwf	?___flmul+2
  8587  035C' 081F'              	movf	___flmul@prod+1,w
  8588  035D' 008B'              	movwf	?___flmul+1
  8589  035E' 081E'              	movf	___flmul@prod,w
  8590  035F' 008A'              	movwf	?___flmul
  8591  0360'                    l871:
  8592  0360' 0008               	return
  8593  0361'                    __end_of___flmul:
  8594                           
  8595                           	psect	text23
  8596  0000'                    __ptext23:	
  8597 ;; *************** function __Umul8_16 *****************
  8598 ;; Defined at:
  8599 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8600 ;; Parameters:    Size  Location     Type
  8601 ;;  multiplier      1    wreg     unsigned char 
  8602 ;;  multiplicand    1    3[COMMON] unsigned char 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8605 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8606 ;;  product         2    0[BANK0 ] unsigned int 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  2    3[COMMON] unsigned int 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8616 ;;      Params:         2       0       0       0       0
  8617 ;;      Locals:         0       5       0       0       0
  8618 ;;      Temps:          2       0       0       0       0
  8619 ;;      Totals:         4       5       0       0       0
  8620 ;;Total ram usage:        9 bytes
  8621 ;; Hardware stack levels used:    1
  8622 ;; Hardware stack levels required when called:    2
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		___flmul
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           
  8631                           ;psect for function __Umul8_16
  8632  0000'                    __Umul8_16:
  8633                           
  8634                           ;incstack = 0
  8635                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8636                           ;__Umul8_16@multiplier stored from wreg
  8637  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8638  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8639  0002' 0084'              	movwf	__Umul8_16@multiplier
  8640  0003'                    l3989:
  8641  0003' 0180'              	clrf	__Umul8_16@product
  8642  0004' 0181'              	clrf	__Umul8_16@product+1
  8643  0005'                    l3991:
  8644  0005' 0803'              	movf	__Umul8_16@multiplicand,w
  8645  0006' 0085'              	movwf	??__Umul8_16
  8646  0007' 0186'              	clrf	??__Umul8_16+1
  8647  0008' 0805'              	movf	??__Umul8_16,w
  8648  0009' 0082'              	movwf	__Umul8_16@word_mpld
  8649  000A' 0806'              	movf	??__Umul8_16+1,w
  8650  000B' 0083'              	movwf	__Umul8_16@word_mpld+1
  8651  000C'                    l3993:
  8652  000C' 1C04'              	btfss	__Umul8_16@multiplier,0
  8653  000D' 2800'              	goto	u6251
  8654  000E' 2800'              	goto	u6250
  8655  000F'                    u6251:
  8656  000F' 2800'              	goto	l890
  8657  0010'                    u6250:
  8658  0010'                    l3995:
  8659  0010' 0802'              	movf	__Umul8_16@word_mpld,w
  8660  0011' 0780'              	addwf	__Umul8_16@product,f
  8661  0012' 1803               	skipnc
  8662  0013' 0A81'              	incf	__Umul8_16@product+1,f
  8663  0014' 0803'              	movf	__Umul8_16@word_mpld+1,w
  8664  0015' 0781'              	addwf	__Umul8_16@product+1,f
  8665  0016'                    l890:
  8666  0016' 3001               	movlw	1
  8667  0017'                    u6265:
  8668  0017' 1003               	clrc
  8669  0018' 0D82'              	rlf	__Umul8_16@word_mpld,f
  8670  0019' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  8671  001A' 3EFF               	addlw	-1
  8672  001B' 1D03               	skipz
  8673  001C' 2800'              	goto	u6265
  8674  001D' 1003               	clrc
  8675  001E' 0C84'              	rrf	__Umul8_16@multiplier,f
  8676  001F'                    l3997:
  8677  001F' 0804'              	movf	__Umul8_16@multiplier,w
  8678  0020' 1D03               	btfss	3,2
  8679  0021' 2800'              	goto	u6271
  8680  0022' 2800'              	goto	u6270
  8681  0023'                    u6271:
  8682  0023' 2800'              	goto	l3993
  8683  0024'                    u6270:
  8684  0024'                    l3999:
  8685  0024' 0801'              	movf	__Umul8_16@product+1,w
  8686  0025' 0084'              	movwf	?__Umul8_16+1
  8687  0026' 0800'              	movf	__Umul8_16@product,w
  8688  0027' 0083'              	movwf	?__Umul8_16
  8689  0028'                    l892:
  8690  0028' 0008               	return
  8691  0029'                    __end_of__Umul8_16:
  8692                           
  8693                           	psect	text24
  8694  0000'                    __ptext24:	
  8695 ;; *************** function _config_ADC *****************
  8696 ;; Defined at:
  8697 ;;		line 15 in file "ADC.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;		None
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;		None
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         0       0       0       0       0
  8712 ;;      Locals:         0       0       0       0       0
  8713 ;;      Temps:          0       0       0       0       0
  8714 ;;      Totals:         0       0       0       0       0
  8715 ;;Total ram usage:        0 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; Hardware stack levels required when called:    2
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_main
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function _config_ADC
  8727  0000'                    _config_ADC:
  8728  0000'                    l3437:	
  8729                           ;incstack = 0
  8730                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  8731                           
  8732                           
  8733                           ;ADC.c: 16:     ADCON0bits.ADCS = 1;
  8734  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8735  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8736  0002' 081F               	movf	31,w	;volatile
  8737  0003' 393F               	andlw	-193
  8738  0004' 3840               	iorlw	64
  8739  0005' 009F               	movwf	31	;volatile
  8740  0006'                    l3439:
  8741                           
  8742                           ;ADC.c: 17:     ADCON1 = 1;
  8743  0006' 3001               	movlw	1
  8744  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  8745  0008' 1303               	bcf	3,6	;RP1=0, select bank1
  8746  0009' 009F               	movwf	31	;volatile
  8747  000A'                    l106:
  8748  000A' 0008               	return
  8749  000B'                    __end_of_config_ADC:
  8750                           
  8751                           	psect	text25
  8752  0000'                    __ptext25:	
  8753 ;; *************** function _Write_USART_String *****************
  8754 ;; Defined at:
  8755 ;;		line 34 in file "USART.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;  a               2    4[COMMON] PTR unsigned char 
  8758 ;;		 -> data(20), STR_1(22), 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  i               1    7[COMMON] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8770 ;;      Params:         2       0       0       0       0
  8771 ;;      Locals:         1       0       0       0       0
  8772 ;;      Temps:          1       0       0       0       0
  8773 ;;      Totals:         4       0       0       0       0
  8774 ;;Total ram usage:        4 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    3
  8777 ;; This function calls:
  8778 ;;		_Write_USART
  8779 ;; This function is called by:
  8780 ;;		_main
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _Write_USART_String
  8786  0000'                    _Write_USART_String:
  8787  0000'                    l3539:	
  8788                           ;incstack = 0
  8789                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8790                           
  8791  0000' 0187'              	clrf	Write_USART_String@i
  8792  0001' 2800'              	goto	l3545
  8793  0002'                    l3541:
  8794  0002' 0807'              	movf	Write_USART_String@i,w
  8795  0003' 0704'              	addwf	Write_USART_String@a,w
  8796  0004' 0084               	movwf	4
  8797  0005' 0805'              	movf	Write_USART_String@a+1,w
  8798  0006' 1803               	skipnc
  8799  0007' 0A05'              	incf	Write_USART_String@a+1,w
  8800  0008' 00FF               	movwf	btemp+1
  8801  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  8802  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Write_USART
  8803  0013'                    l3543:
  8804  0013' 3001               	movlw	1
  8805  0014' 0086'              	movwf	??_Write_USART_String
  8806  0015' 0806'              	movf	??_Write_USART_String,w
  8807  0016' 0787'              	addwf	Write_USART_String@i,f
  8808  0017'                    l3545:
  8809  0017' 0807'              	movf	Write_USART_String@i,w
  8810  0018' 0704'              	addwf	Write_USART_String@a,w
  8811  0019' 0084               	movwf	4
  8812  001A' 0805'              	movf	Write_USART_String@a+1,w
  8813  001B' 1803               	skipnc
  8814  001C' 0A05'              	incf	Write_USART_String@a+1,w
  8815  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  8816  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  8817  001F' 00FF               	movwf	btemp+1
  8818  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  8819  0025' 3A00               	xorlw	0
  8820  0026' 1D03               	skipz
  8821  0027' 2800'              	goto	u5651
  8822  0028' 2800'              	goto	u5650
  8823  0029'                    u5651:
  8824  0029' 2800'              	goto	l3541
  8825  002A'                    u5650:
  8826  002A'                    l237:
  8827  002A' 0008               	return
  8828  002B'                    __end_of_Write_USART_String:
  8829                           
  8830                           	psect	text26
  8831  0000'                    __ptext26:	
  8832 ;; *************** function _Write_USART *****************
  8833 ;; Defined at:
  8834 ;;		line 30 in file "USART.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  a               1    wreg     unsigned char 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  a               1    3[COMMON] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8848 ;;      Params:         0       0       0       0       0
  8849 ;;      Locals:         1       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0
  8851 ;;      Totals:         1       0       0       0       0
  8852 ;;Total ram usage:        1 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    2
  8855 ;; This function calls:
  8856 ;;		Nothing
  8857 ;; This function is called by:
  8858 ;;		_main
  8859 ;;		_Write_USART_String
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function _Write_USART
  8865  0000'                    _Write_USART:
  8866                           
  8867                           ;incstack = 0
  8868                           ; Regs used in _Write_USART: [wreg]
  8869                           ;Write_USART@a stored from wreg
  8870  0000' 0083'              	movwf	Write_USART@a
  8871  0001'                    l3001:
  8872  0001'                    l228:
  8873  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  8874  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  8875  0003' 1C98               	btfss	24,1	;volatile
  8876  0004' 2800'              	goto	u4391
  8877  0005' 2800'              	goto	u4390
  8878  0006'                    u4391:
  8879  0006' 2800'              	goto	l228
  8880  0007'                    u4390:
  8881  0007'                    l3003:
  8882  0007' 0803'              	movf	Write_USART@a,w
  8883  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  8884  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  8885  000A' 0099               	movwf	25	;volatile
  8886  000B'                    l231:
  8887  000B' 0008               	return
  8888  000C'                    __end_of_Write_USART:
  8889                           
  8890                           	psect	text27
  8891  0000'                    __ptext27:	
  8892 ;; *************** function _ValorADC *****************
  8893 ;; Defined at:
  8894 ;;		line 20 in file "ADC.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  x               1    wreg     unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  x               1    5[COMMON] unsigned char 
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      unsigned char 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8908 ;;      Params:         0       0       0       0       0
  8909 ;;      Locals:         1       0       0       0       0
  8910 ;;      Temps:          2       0       0       0       0
  8911 ;;      Totals:         3       0       0       0       0
  8912 ;;Total ram usage:        3 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    2
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_main
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           
  8923                           ;psect for function _ValorADC
  8924  0000'                    _ValorADC:
  8925                           
  8926                           ;incstack = 0
  8927                           ; Regs used in _ValorADC: [wreg-fsr0h+status,2+status,0]
  8928                           ;ValorADC@x stored from wreg
  8929  0000' 0085'              	movwf	ValorADC@x
  8930  0001'                    l3483:
  8931                           
  8932                           ;ADC.c: 21:     switch (x){
  8933  0001' 2800'              	goto	l3519
  8934  0002'                    l110:	
  8935                           ;ADC.c: 22:         case 0: TRISAbits.TRISA0 = 1; ANSELbits.ANS0 = 1; ADCON0bits.CHS = 0
      +                          ; break;
  8936                           
  8937  0002' 1683               	bsf	3,5	;RP0=1, select bank1
  8938  0003' 1303               	bcf	3,6	;RP1=0, select bank1
  8939  0004' 1405               	bsf	5,0	;volatile
  8940  0005' 1683               	bsf	3,5	;RP0=1, select bank3
  8941  0006' 1703               	bsf	3,6	;RP1=1, select bank3
  8942  0007' 1408               	bsf	8,0	;volatile
  8943  0008'                    l3485:
  8944  0008' 30C3               	movlw	-61
  8945  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  8946  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  8947  000B' 059F               	andwf	31,f	;volatile
  8948  000C' 2800'              	goto	l111
  8949  000D'                    l112:	
  8950                           ;ADC.c: 23:         case 1: TRISAbits.TRISA1 = 1; ANSELbits.ANS1 = 1; ADCON0bits.CHS = 1
      +                          ; break;
  8951                           
  8952  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  8953  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  8954  000F' 1485               	bsf	5,1	;volatile
  8955  0010' 1683               	bsf	3,5	;RP0=1, select bank3
  8956  0011' 1703               	bsf	3,6	;RP1=1, select bank3
  8957  0012' 1488               	bsf	8,1	;volatile
  8958  0013'                    l3487:
  8959  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  8960  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  8961  0015' 081F               	movf	31,w	;volatile
  8962  0016' 39C3               	andlw	-61
  8963  0017' 3804               	iorlw	4
  8964  0018' 009F               	movwf	31	;volatile
  8965  0019' 2800'              	goto	l111
  8966  001A'                    l113:	
  8967                           ;ADC.c: 24:         case 2: TRISAbits.TRISA2 = 1; ANSELbits.ANS2 = 1; ADCON0bits.CHS = 2
      +                          ; break;
  8968                           
  8969  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  8970  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  8971  001C' 1505               	bsf	5,2	;volatile
  8972  001D' 1683               	bsf	3,5	;RP0=1, select bank3
  8973  001E' 1703               	bsf	3,6	;RP1=1, select bank3
  8974  001F' 1508               	bsf	8,2	;volatile
  8975  0020'                    l3489:
  8976  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  8977  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  8978  0022' 081F               	movf	31,w	;volatile
  8979  0023' 39C3               	andlw	-61
  8980  0024' 3808               	iorlw	8
  8981  0025' 009F               	movwf	31	;volatile
  8982  0026' 2800'              	goto	l111
  8983  0027'                    l114:	
  8984                           ;ADC.c: 25:         case 3: TRISAbits.TRISA3 = 1; ANSELbits.ANS3 = 1; ADCON0bits.CHS = 3
      +                          ; break;
  8985                           
  8986  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  8987  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  8988  0029' 1585               	bsf	5,3	;volatile
  8989  002A' 1683               	bsf	3,5	;RP0=1, select bank3
  8990  002B' 1703               	bsf	3,6	;RP1=1, select bank3
  8991  002C' 1588               	bsf	8,3	;volatile
  8992  002D'                    l3491:
  8993  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  8994  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  8995  002F' 081F               	movf	31,w	;volatile
  8996  0030' 39C3               	andlw	-61
  8997  0031' 380C               	iorlw	12
  8998  0032' 009F               	movwf	31	;volatile
  8999  0033' 2800'              	goto	l111
  9000  0034'                    l115:	
  9001                           ;ADC.c: 26:         case 4: TRISAbits.TRISA5 = 1; ANSELbits.ANS4 = 1; ADCON0bits.CHS = 4
      +                          ; break;
  9002                           
  9003  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  9004  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  9005  0036' 1685               	bsf	5,5	;volatile
  9006  0037' 1683               	bsf	3,5	;RP0=1, select bank3
  9007  0038' 1703               	bsf	3,6	;RP1=1, select bank3
  9008  0039' 1608               	bsf	8,4	;volatile
  9009  003A'                    l3493:
  9010  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  9011  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  9012  003C' 081F               	movf	31,w	;volatile
  9013  003D' 39C3               	andlw	-61
  9014  003E' 3810               	iorlw	16
  9015  003F' 009F               	movwf	31	;volatile
  9016  0040' 2800'              	goto	l111
  9017  0041'                    l116:	
  9018                           ;ADC.c: 27:         case 5: TRISEbits.TRISE0 = 1; ANSELbits.ANS5 = 1; ADCON0bits.CHS = 5
      +                          ; break;
  9019                           
  9020  0041' 1683               	bsf	3,5	;RP0=1, select bank1
  9021  0042' 1303               	bcf	3,6	;RP1=0, select bank1
  9022  0043' 1409               	bsf	9,0	;volatile
  9023  0044' 1683               	bsf	3,5	;RP0=1, select bank3
  9024  0045' 1703               	bsf	3,6	;RP1=1, select bank3
  9025  0046' 1688               	bsf	8,5	;volatile
  9026  0047'                    l3495:
  9027  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  9028  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  9029  0049' 081F               	movf	31,w	;volatile
  9030  004A' 39C3               	andlw	-61
  9031  004B' 3814               	iorlw	20
  9032  004C' 009F               	movwf	31	;volatile
  9033  004D' 2800'              	goto	l111
  9034  004E'                    l117:	
  9035                           ;ADC.c: 28:         case 6: TRISEbits.TRISE2 = 1; ANSELbits.ANS6 = 1; ADCON0bits.CHS = 6
      +                          ; break;
  9036                           
  9037  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  9038  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  9039  0050' 1509               	bsf	9,2	;volatile
  9040  0051' 1683               	bsf	3,5	;RP0=1, select bank3
  9041  0052' 1703               	bsf	3,6	;RP1=1, select bank3
  9042  0053' 1708               	bsf	8,6	;volatile
  9043  0054'                    l3497:
  9044  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  9045  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  9046  0056' 081F               	movf	31,w	;volatile
  9047  0057' 39C3               	andlw	-61
  9048  0058' 3818               	iorlw	24
  9049  0059' 009F               	movwf	31	;volatile
  9050  005A' 2800'              	goto	l111
  9051  005B'                    l118:	
  9052                           ;ADC.c: 29:         case 7: TRISEbits.TRISE3 = 1; ANSELbits.ANS7 = 1; ADCON0bits.CHS = 7
      +                          ; break;
  9053                           
  9054  005B' 1683               	bsf	3,5	;RP0=1, select bank1
  9055  005C' 1303               	bcf	3,6	;RP1=0, select bank1
  9056  005D' 1589               	bsf	9,3	;volatile
  9057  005E' 1683               	bsf	3,5	;RP0=1, select bank3
  9058  005F' 1703               	bsf	3,6	;RP1=1, select bank3
  9059  0060' 1788               	bsf	8,7	;volatile
  9060  0061'                    l3499:
  9061  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  9062  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  9063  0063' 081F               	movf	31,w	;volatile
  9064  0064' 39C3               	andlw	-61
  9065  0065' 381C               	iorlw	28
  9066  0066' 009F               	movwf	31	;volatile
  9067  0067' 2800'              	goto	l111
  9068  0068'                    l119:	
  9069                           ;ADC.c: 30:         case 8: TRISBbits.TRISB2 = 1; ANSELHbits.ANS8 = 1; ADCON0bits.CHS = 
      +                          8; break;
  9070                           
  9071  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  9072  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  9073  006A' 1506               	bsf	6,2	;volatile
  9074  006B' 1683               	bsf	3,5	;RP0=1, select bank3
  9075  006C' 1703               	bsf	3,6	;RP1=1, select bank3
  9076  006D' 1409               	bsf	9,0	;volatile
  9077  006E'                    l3501:
  9078  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  9079  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  9080  0070' 081F               	movf	31,w	;volatile
  9081  0071' 39C3               	andlw	-61
  9082  0072' 3820               	iorlw	32
  9083  0073' 009F               	movwf	31	;volatile
  9084  0074' 2800'              	goto	l111
  9085  0075'                    l120:	
  9086                           ;ADC.c: 31:         case 9: TRISBbits.TRISB3 = 1; ANSELHbits.ANS9 = 1; ADCON0bits.CHS = 
      +                          9; break;
  9087                           
  9088  0075' 1683               	bsf	3,5	;RP0=1, select bank1
  9089  0076' 1303               	bcf	3,6	;RP1=0, select bank1
  9090  0077' 1586               	bsf	6,3	;volatile
  9091  0078' 1683               	bsf	3,5	;RP0=1, select bank3
  9092  0079' 1703               	bsf	3,6	;RP1=1, select bank3
  9093  007A' 1489               	bsf	9,1	;volatile
  9094  007B'                    l3503:
  9095  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  9096  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  9097  007D' 081F               	movf	31,w	;volatile
  9098  007E' 39C3               	andlw	-61
  9099  007F' 3824               	iorlw	36
  9100  0080' 009F               	movwf	31	;volatile
  9101  0081' 2800'              	goto	l111
  9102  0082'                    l121:	
  9103                           ;ADC.c: 32:         case 10: TRISBbits.TRISB1 = 1; ANSELHbits.ANS10 = 1; ADCON0bits.CHS 
      +                          = 10; break;
  9104                           
  9105  0082' 1683               	bsf	3,5	;RP0=1, select bank1
  9106  0083' 1303               	bcf	3,6	;RP1=0, select bank1
  9107  0084' 1486               	bsf	6,1	;volatile
  9108  0085' 1683               	bsf	3,5	;RP0=1, select bank3
  9109  0086' 1703               	bsf	3,6	;RP1=1, select bank3
  9110  0087' 1509               	bsf	9,2	;volatile
  9111  0088'                    l3505:
  9112  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  9113  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  9114  008A' 081F               	movf	31,w	;volatile
  9115  008B' 39C3               	andlw	-61
  9116  008C' 3828               	iorlw	40
  9117  008D' 009F               	movwf	31	;volatile
  9118  008E' 2800'              	goto	l111
  9119  008F'                    l122:	
  9120                           ;ADC.c: 33:         case 11: TRISBbits.TRISB4 = 1; ANSELHbits.ANS11= 1; ADCON0bits.CHS =
      +                           11; break;
  9121                           
  9122  008F' 1683               	bsf	3,5	;RP0=1, select bank1
  9123  0090' 1303               	bcf	3,6	;RP1=0, select bank1
  9124  0091' 1606               	bsf	6,4	;volatile
  9125  0092' 1683               	bsf	3,5	;RP0=1, select bank3
  9126  0093' 1703               	bsf	3,6	;RP1=1, select bank3
  9127  0094' 1589               	bsf	9,3	;volatile
  9128  0095'                    l3507:
  9129  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  9130  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  9131  0097' 081F               	movf	31,w	;volatile
  9132  0098' 39C3               	andlw	-61
  9133  0099' 382C               	iorlw	44
  9134  009A' 009F               	movwf	31	;volatile
  9135  009B' 2800'              	goto	l111
  9136  009C'                    l123:	
  9137                           ;ADC.c: 34:         case 12: TRISBbits.TRISB0 = 1; ANSELHbits.ANS12 = 1; ADCON0bits.CHS 
      +                          = 12; break;
  9138                           
  9139  009C' 1683               	bsf	3,5	;RP0=1, select bank1
  9140  009D' 1303               	bcf	3,6	;RP1=0, select bank1
  9141  009E' 1406               	bsf	6,0	;volatile
  9142  009F' 1683               	bsf	3,5	;RP0=1, select bank3
  9143  00A0' 1703               	bsf	3,6	;RP1=1, select bank3
  9144  00A1' 1609               	bsf	9,4	;volatile
  9145  00A2'                    l3509:
  9146  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  9147  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  9148  00A4' 081F               	movf	31,w	;volatile
  9149  00A5' 39C3               	andlw	-61
  9150  00A6' 3830               	iorlw	48
  9151  00A7' 009F               	movwf	31	;volatile
  9152  00A8' 2800'              	goto	l111
  9153  00A9'                    l124:	
  9154                           ;ADC.c: 35:         case 13: TRISBbits.TRISB5 = 1; ANSELHbits.ANS13 = 1; ADCON0bits.CHS 
      +                          = 13; break;
  9155                           
  9156  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  9157  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
  9158  00AB' 1686               	bsf	6,5	;volatile
  9159  00AC' 1683               	bsf	3,5	;RP0=1, select bank3
  9160  00AD' 1703               	bsf	3,6	;RP1=1, select bank3
  9161  00AE' 1689               	bsf	9,5	;volatile
  9162  00AF'                    l3511:
  9163  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
  9164  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
  9165  00B1' 081F               	movf	31,w	;volatile
  9166  00B2' 39C3               	andlw	-61
  9167  00B3' 3834               	iorlw	52
  9168  00B4' 009F               	movwf	31	;volatile
  9169  00B5' 2800'              	goto	l111
  9170  00B6'                    l3513:
  9171  00B6' 3000               	movlw	0
  9172  00B7' 2800'              	goto	l126
  9173  00B8'                    l3519:
  9174  00B8' 0805'              	movf	ValorADC@x,w
  9175  00B9' 0083'              	movwf	??_ValorADC
  9176  00BA' 0184'              	clrf	??_ValorADC+1
  9177                           
  9178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9179                           ; Switch size 1, requested type "simple"
  9180                           ; Number of cases is 1, Range of values is 0 to 0
  9181                           ; switch strategies available:
  9182                           ; Name         Instructions Cycles
  9183                           ; simple_byte            4     3 (average)
  9184                           ; direct_byte           11     8 (fixed)
  9185                           ; jumptable            260     6 (fixed)
  9186                           ;	Chosen strategy is simple_byte
  9187  00BB' 0804'              	movf	??_ValorADC+1,w
  9188  00BC' 3A00               	xorlw	0	; case 0
  9189  00BD' 1903               	skipnz
  9190  00BE' 2800'              	goto	l5281
  9191  00BF' 2800'              	goto	l3513
  9192  00C0'                    l5281:
  9193                           
  9194                           ; Switch size 1, requested type "simple"
  9195                           ; Number of cases is 14, Range of values is 0 to 13
  9196                           ; switch strategies available:
  9197                           ; Name         Instructions Cycles
  9198                           ; simple_byte           43    22 (average)
  9199                           ; direct_byte           50     8 (fixed)
  9200                           ; jumptable            260     6 (fixed)
  9201                           ;	Chosen strategy is simple_byte
  9202  00C0' 0803'              	movf	??_ValorADC,w
  9203  00C1' 3A00               	xorlw	0	; case 0
  9204  00C2' 1903               	skipnz
  9205  00C3' 2800'              	goto	l110
  9206  00C4' 3A01               	xorlw	1	; case 1
  9207  00C5' 1903               	skipnz
  9208  00C6' 2800'              	goto	l112
  9209  00C7' 3A03               	xorlw	3	; case 2
  9210  00C8' 1903               	skipnz
  9211  00C9' 2800'              	goto	l113
  9212  00CA' 3A01               	xorlw	1	; case 3
  9213  00CB' 1903               	skipnz
  9214  00CC' 2800'              	goto	l114
  9215  00CD' 3A07               	xorlw	7	; case 4
  9216  00CE' 1903               	skipnz
  9217  00CF' 2800'              	goto	l115
  9218  00D0' 3A01               	xorlw	1	; case 5
  9219  00D1' 1903               	skipnz
  9220  00D2' 2800'              	goto	l116
  9221  00D3' 3A03               	xorlw	3	; case 6
  9222  00D4' 1903               	skipnz
  9223  00D5' 2800'              	goto	l117
  9224  00D6' 3A01               	xorlw	1	; case 7
  9225  00D7' 1903               	skipnz
  9226  00D8' 2800'              	goto	l118
  9227  00D9' 3A0F               	xorlw	15	; case 8
  9228  00DA' 1903               	skipnz
  9229  00DB' 2800'              	goto	l119
  9230  00DC' 3A01               	xorlw	1	; case 9
  9231  00DD' 1903               	skipnz
  9232  00DE' 2800'              	goto	l120
  9233  00DF' 3A03               	xorlw	3	; case 10
  9234  00E0' 1903               	skipnz
  9235  00E1' 2800'              	goto	l121
  9236  00E2' 3A01               	xorlw	1	; case 11
  9237  00E3' 1903               	skipnz
  9238  00E4' 2800'              	goto	l122
  9239  00E5' 3A07               	xorlw	7	; case 12
  9240  00E6' 1903               	skipnz
  9241  00E7' 2800'              	goto	l123
  9242  00E8' 3A01               	xorlw	1	; case 13
  9243  00E9' 1903               	skipnz
  9244  00EA' 2800'              	goto	l124
  9245  00EB' 2800'              	goto	l3513
  9246  00EC'                    l111:
  9247                           
  9248                           ;ADC.c: 38:     ADCON0bits.ADON = 1;
  9249  00EC' 141F               	bsf	31,0	;volatile
  9250  00ED'                    l3521:
  9251                           
  9252                           ;ADC.c: 39:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  9253  00ED' 300D               	movlw	13
  9254  00EE' 0083'              	movwf	??_ValorADC
  9255  00EF'                    u9207:
  9256  00EF' 0B83'              	decfsz	??_ValorADC,f
  9257  00F0' 2800'              	goto	u9207
  9258  00F1'                    l3523:
  9259                           
  9260                           ;ADC.c: 40:     ADCON0bits.GO = 1;
  9261  00F1' 1283               	bcf	3,5	;RP0=0, select bank0
  9262  00F2' 1303               	bcf	3,6	;RP1=0, select bank0
  9263  00F3' 149F               	bsf	31,1	;volatile
  9264  00F4'                    l3525:
  9265                           
  9266                           ;ADC.c: 42:             if (ADCON0bits.GO_DONE ==1){goto resultado;}
  9267  00F4' 1C9F               	btfss	31,1	;volatile
  9268  00F5' 2800'              	goto	u5641
  9269  00F6' 2800'              	goto	u5640
  9270  00F7'                    u5641:
  9271  00F7' 2800'              	goto	l128
  9272  00F8'                    u5640:
  9273  00F8' 2800'              	goto	l3525
  9274  00F9'                    l128:	
  9275                           ;ADC.c: 43:             else {ADCON0bits.ADON=0; return ADRESH;}
  9276                           
  9277  00F9' 101F               	bcf	31,0	;volatile
  9278  00FA'                    l3531:
  9279  00FA' 081E               	movf	30,w	;volatile
  9280  00FB'                    l126:
  9281  00FB' 0008               	return
  9282  00FC'                    __end_of_ValorADC:
  9283                           
  9284                           	psect	text28
  9285  0000'                    __ptext28:	
  9286 ;; *************** function _USART_Init *****************
  9287 ;; Defined at:
  9288 ;;		line 9 in file "USART.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  baudrate        4    8[BANK0 ] const long 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  x               2   24[BANK0 ] unsigned int 
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      unsigned char 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0, pclath, cstack
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9302 ;;      Params:         0       4       0       0       0
  9303 ;;      Locals:         0       2       0       0       0
  9304 ;;      Temps:          0      12       0       0       0
  9305 ;;      Totals:         0      18       0       0       0
  9306 ;;Total ram usage:       18 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:    3
  9309 ;; This function calls:
  9310 ;;		___aldiv
  9311 ;; This function is called by:
  9312 ;;		_main
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           
  9317                           ;psect for function _USART_Init
  9318  0000'                    _USART_Init:
  9319  0000'                    l4869:	
  9320                           ;incstack = 0
  9321                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  9322                           
  9323  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9324  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9325  0002' 0808'              	movf	USART_Init@baudrate,w
  9326  0003' 008C'              	movwf	??_USART_Init
  9327  0004' 0809'              	movf	USART_Init@baudrate+1,w
  9328  0005' 008D'              	movwf	??_USART_Init+1
  9329  0006' 080A'              	movf	USART_Init@baudrate+2,w
  9330  0007' 008E'              	movwf	??_USART_Init+2
  9331  0008' 080B'              	movf	USART_Init@baudrate+3,w
  9332  0009' 008F'              	movwf	??_USART_Init+3
  9333  000A' 3006               	movlw	6
  9334  000B'                    u8585:
  9335  000B' 1003               	clrc
  9336  000C' 0D8C'              	rlf	??_USART_Init,f
  9337  000D' 0D8D'              	rlf	??_USART_Init+1,f
  9338  000E' 0D8E'              	rlf	??_USART_Init+2,f
  9339  000F' 0D8F'              	rlf	??_USART_Init+3,f
  9340  0010'                    u8580:
  9341  0010' 3EFF               	addlw	-1
  9342  0011' 1D03               	skipz
  9343  0012' 2800'              	goto	u8585
  9344  0013' 080F'              	movf	??_USART_Init+3,w
  9345  0014' 0083'              	movwf	___aldiv@divisor+3
  9346  0015' 080E'              	movf	??_USART_Init+2,w
  9347  0016' 0082'              	movwf	___aldiv@divisor+2
  9348  0017' 080D'              	movf	??_USART_Init+1,w
  9349  0018' 0081'              	movwf	___aldiv@divisor+1
  9350  0019' 080C'              	movf	??_USART_Init,w
  9351  001A' 0080'              	movwf	___aldiv@divisor
  9352  001B' 0808'              	movf	USART_Init@baudrate,w
  9353  001C' 0090'              	movwf	??_USART_Init+4
  9354  001D' 0809'              	movf	USART_Init@baudrate+1,w
  9355  001E' 0091'              	movwf	??_USART_Init+5
  9356  001F' 080A'              	movf	USART_Init@baudrate+2,w
  9357  0020' 0092'              	movwf	??_USART_Init+6
  9358  0021' 080B'              	movf	USART_Init@baudrate+3,w
  9359  0022' 0093'              	movwf	??_USART_Init+7
  9360  0023' 3006               	movlw	6
  9361  0024'                    u8595:
  9362  0024' 1003               	clrc
  9363  0025' 0D90'              	rlf	??_USART_Init+4,f
  9364  0026' 0D91'              	rlf	??_USART_Init+5,f
  9365  0027' 0D92'              	rlf	??_USART_Init+6,f
  9366  0028' 0D93'              	rlf	??_USART_Init+7,f
  9367  0029'                    u8590:
  9368  0029' 3EFF               	addlw	-1
  9369  002A' 1D03               	skipz
  9370  002B' 2800'              	goto	u8595
  9371  002C' 3000               	movlw	0
  9372  002D' 0094'              	movwf	??_USART_Init+8
  9373  002E' 3012               	movlw	18
  9374  002F' 0095'              	movwf	??_USART_Init+9
  9375  0030' 307A               	movlw	122
  9376  0031' 0096'              	movwf	??_USART_Init+10
  9377  0032' 3000               	movlw	0
  9378  0033' 0097'              	movwf	??_USART_Init+11
  9379  0034' 0810'              	movf	??_USART_Init+4,w
  9380  0035' 0294'              	subwf	??_USART_Init+8,f
  9381  0036' 0811'              	movf	??_USART_Init+5,w
  9382  0037' 1C03               	skipc
  9383  0038' 0F11'              	incfsz	??_USART_Init+5,w
  9384  0039' 2800'              	goto	u8601
  9385  003A' 2800'              	goto	u8602
  9386  003B'                    u8601:
  9387  003B' 0295'              	subwf	??_USART_Init+9,f
  9388  003C'                    u8602:
  9389  003C' 0812'              	movf	??_USART_Init+6,w
  9390  003D' 1C03               	skipc
  9391  003E' 0F12'              	incfsz	??_USART_Init+6,w
  9392  003F' 2800'              	goto	u8603
  9393  0040' 2800'              	goto	u8604
  9394  0041'                    u8603:
  9395  0041' 0296'              	subwf	??_USART_Init+10,f
  9396  0042'                    u8604:
  9397  0042' 0813'              	movf	??_USART_Init+7,w
  9398  0043' 1C03               	skipc
  9399  0044' 0F13'              	incfsz	??_USART_Init+7,w
  9400  0045' 2800'              	goto	u8605
  9401  0046' 2800'              	goto	u8606
  9402  0047'                    u8605:
  9403  0047' 0297'              	subwf	??_USART_Init+11,f
  9404  0048'                    u8606:
  9405  0048' 0817'              	movf	??_USART_Init+11,w
  9406  0049' 0087'              	movwf	___aldiv@dividend+3
  9407  004A' 0816'              	movf	??_USART_Init+10,w
  9408  004B' 0086'              	movwf	___aldiv@dividend+2
  9409  004C' 0815'              	movf	??_USART_Init+9,w
  9410  004D' 0085'              	movwf	___aldiv@dividend+1
  9411  004E' 0814'              	movf	??_USART_Init+8,w
  9412  004F' 0084'              	movwf	___aldiv@dividend
  9413  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
  9414  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  9415  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  9416  0057' 0801'              	movf	?___aldiv+1,w
  9417  0058' 0099'              	movwf	USART_Init@x+1
  9418  0059' 0800'              	movf	?___aldiv,w
  9419  005A' 0098'              	movwf	USART_Init@x
  9420  005B'                    l4871:
  9421  005B' 3001               	movlw	1
  9422  005C' 0219'              	subwf	USART_Init@x+1,w
  9423  005D' 3000               	movlw	0
  9424  005E' 1903               	skipnz
  9425  005F' 0218'              	subwf	USART_Init@x,w
  9426  0060' 1C03               	skipc
  9427  0061' 2800'              	goto	u8611
  9428  0062' 2800'              	goto	u8610
  9429  0063'                    u8611:
  9430  0063' 2800'              	goto	l4877
  9431  0064'                    u8610:
  9432  0064'                    l4873:
  9433  0064' 0808'              	movf	USART_Init@baudrate,w
  9434  0065' 008C'              	movwf	??_USART_Init
  9435  0066' 0809'              	movf	USART_Init@baudrate+1,w
  9436  0067' 008D'              	movwf	??_USART_Init+1
  9437  0068' 080A'              	movf	USART_Init@baudrate+2,w
  9438  0069' 008E'              	movwf	??_USART_Init+2
  9439  006A' 080B'              	movf	USART_Init@baudrate+3,w
  9440  006B' 008F'              	movwf	??_USART_Init+3
  9441  006C' 3004               	movlw	4
  9442  006D'                    u8625:
  9443  006D' 1003               	clrc
  9444  006E' 0D8C'              	rlf	??_USART_Init,f
  9445  006F' 0D8D'              	rlf	??_USART_Init+1,f
  9446  0070' 0D8E'              	rlf	??_USART_Init+2,f
  9447  0071' 0D8F'              	rlf	??_USART_Init+3,f
  9448  0072'                    u8620:
  9449  0072' 3EFF               	addlw	-1
  9450  0073' 1D03               	skipz
  9451  0074' 2800'              	goto	u8625
  9452  0075' 080F'              	movf	??_USART_Init+3,w
  9453  0076' 0083'              	movwf	___aldiv@divisor+3
  9454  0077' 080E'              	movf	??_USART_Init+2,w
  9455  0078' 0082'              	movwf	___aldiv@divisor+2
  9456  0079' 080D'              	movf	??_USART_Init+1,w
  9457  007A' 0081'              	movwf	___aldiv@divisor+1
  9458  007B' 080C'              	movf	??_USART_Init,w
  9459  007C' 0080'              	movwf	___aldiv@divisor
  9460  007D' 0808'              	movf	USART_Init@baudrate,w
  9461  007E' 0090'              	movwf	??_USART_Init+4
  9462  007F' 0809'              	movf	USART_Init@baudrate+1,w
  9463  0080' 0091'              	movwf	??_USART_Init+5
  9464  0081' 080A'              	movf	USART_Init@baudrate+2,w
  9465  0082' 0092'              	movwf	??_USART_Init+6
  9466  0083' 080B'              	movf	USART_Init@baudrate+3,w
  9467  0084' 0093'              	movwf	??_USART_Init+7
  9468  0085' 3004               	movlw	4
  9469  0086'                    u8635:
  9470  0086' 1003               	clrc
  9471  0087' 0D90'              	rlf	??_USART_Init+4,f
  9472  0088' 0D91'              	rlf	??_USART_Init+5,f
  9473  0089' 0D92'              	rlf	??_USART_Init+6,f
  9474  008A' 0D93'              	rlf	??_USART_Init+7,f
  9475  008B'                    u8630:
  9476  008B' 3EFF               	addlw	-1
  9477  008C' 1D03               	skipz
  9478  008D' 2800'              	goto	u8635
  9479  008E' 3000               	movlw	0
  9480  008F' 0094'              	movwf	??_USART_Init+8
  9481  0090' 3012               	movlw	18
  9482  0091' 0095'              	movwf	??_USART_Init+9
  9483  0092' 307A               	movlw	122
  9484  0093' 0096'              	movwf	??_USART_Init+10
  9485  0094' 3000               	movlw	0
  9486  0095' 0097'              	movwf	??_USART_Init+11
  9487  0096' 0810'              	movf	??_USART_Init+4,w
  9488  0097' 0294'              	subwf	??_USART_Init+8,f
  9489  0098' 0811'              	movf	??_USART_Init+5,w
  9490  0099' 1C03               	skipc
  9491  009A' 0F11'              	incfsz	??_USART_Init+5,w
  9492  009B' 2800'              	goto	u8641
  9493  009C' 2800'              	goto	u8642
  9494  009D'                    u8641:
  9495  009D' 0295'              	subwf	??_USART_Init+9,f
  9496  009E'                    u8642:
  9497  009E' 0812'              	movf	??_USART_Init+6,w
  9498  009F' 1C03               	skipc
  9499  00A0' 0F12'              	incfsz	??_USART_Init+6,w
  9500  00A1' 2800'              	goto	u8643
  9501  00A2' 2800'              	goto	u8644
  9502  00A3'                    u8643:
  9503  00A3' 0296'              	subwf	??_USART_Init+10,f
  9504  00A4'                    u8644:
  9505  00A4' 0813'              	movf	??_USART_Init+7,w
  9506  00A5' 1C03               	skipc
  9507  00A6' 0F13'              	incfsz	??_USART_Init+7,w
  9508  00A7' 2800'              	goto	u8645
  9509  00A8' 2800'              	goto	u8646
  9510  00A9'                    u8645:
  9511  00A9' 0297'              	subwf	??_USART_Init+11,f
  9512  00AA'                    u8646:
  9513  00AA' 0817'              	movf	??_USART_Init+11,w
  9514  00AB' 0087'              	movwf	___aldiv@dividend+3
  9515  00AC' 0816'              	movf	??_USART_Init+10,w
  9516  00AD' 0086'              	movwf	___aldiv@dividend+2
  9517  00AE' 0815'              	movf	??_USART_Init+9,w
  9518  00AF' 0085'              	movwf	___aldiv@dividend+1
  9519  00B0' 0814'              	movf	??_USART_Init+8,w
  9520  00B1' 0084'              	movwf	___aldiv@dividend
  9521  00B2' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
  9522  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  9523  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  9524  00B9' 0801'              	movf	?___aldiv+1,w
  9525  00BA' 0099'              	movwf	USART_Init@x+1
  9526  00BB' 0800'              	movf	?___aldiv,w
  9527  00BC' 0098'              	movwf	USART_Init@x
  9528  00BD'                    l4875:
  9529  00BD' 1683               	bsf	3,5	;RP0=1, select bank1
  9530  00BE' 1303               	bcf	3,6	;RP1=0, select bank1
  9531  00BF' 1518               	bsf	24,2	;volatile
  9532  00C0'                    l4877:
  9533  00C0' 3001               	movlw	1
  9534  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  9535  00C2' 0219'              	subwf	USART_Init@x+1,w
  9536  00C3' 3000               	movlw	0
  9537  00C4' 1903               	skipnz
  9538  00C5' 0218'              	subwf	USART_Init@x,w
  9539  00C6' 1803               	skipnc
  9540  00C7' 2800'              	goto	u8651
  9541  00C8' 2800'              	goto	u8650
  9542  00C9'                    u8651:
  9543  00C9' 2800'              	goto	l225
  9544  00CA'                    u8650:
  9545  00CA'                    l4879:
  9546  00CA' 0818'              	movf	USART_Init@x,w
  9547  00CB' 1683               	bsf	3,5	;RP0=1, select bank1
  9548  00CC' 1303               	bcf	3,6	;RP1=0, select bank1
  9549  00CD' 0099               	movwf	25	;volatile
  9550  00CE'                    l4881:
  9551  00CE' 1218               	bcf	24,4	;volatile
  9552  00CF'                    l4883:
  9553  00CF' 1283               	bcf	3,5	;RP0=0, select bank0
  9554  00D0' 1303               	bcf	3,6	;RP1=0, select bank0
  9555  00D1' 1798               	bsf	24,7	;volatile
  9556  00D2'                    l4885:
  9557  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
  9558  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
  9559  00D4' 1787               	bsf	7,7	;volatile
  9560  00D5'                    l4887:
  9561  00D5' 1307               	bcf	7,6	;volatile
  9562  00D6'                    l4889:
  9563  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  9564  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  9565  00D8' 1618               	bsf	24,4	;volatile
  9566  00D9'                    l4891:
  9567  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
  9568  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  9569  00DB' 1698               	bsf	24,5	;volatile
  9570  00DC'                    l225:
  9571  00DC' 0008               	return
  9572  00DD'                    __end_of_USART_Init:
  9573                           
  9574                           	psect	text29
  9575  0000'                    __ptext29:	
  9576 ;; *************** function ___aldiv *****************
  9577 ;; Defined at:
  9578 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  divisor         4    0[BANK0 ] long 
  9581 ;;  dividend        4    4[BANK0 ] long 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  quotient        4    6[COMMON] long 
  9584 ;;  sign            1    5[COMMON] unsigned char 
  9585 ;;  counter         1    4[COMMON] unsigned char 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  4    0[BANK0 ] long 
  9588 ;; Registers used:
  9589 ;;		wreg, status,2, status,0
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9595 ;;      Params:         0       8       0       0       0
  9596 ;;      Locals:         6       0       0       0       0
  9597 ;;      Temps:          1       0       0       0       0
  9598 ;;      Totals:         7       8       0       0       0
  9599 ;;Total ram usage:       15 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    2
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_USART_Init
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function ___aldiv
  9611  0000'                    ___aldiv:
  9612  0000'                    l4679:	
  9613                           ;incstack = 0
  9614                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9615                           
  9616  0000' 0185'              	clrf	___aldiv@sign
  9617  0001'                    l4681:
  9618  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9619  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9620  0003' 1F83'              	btfss	___aldiv@divisor+3,7
  9621  0004' 2800'              	goto	u8071
  9622  0005' 2800'              	goto	u8070
  9623  0006'                    u8071:
  9624  0006' 2800'              	goto	l513
  9625  0007'                    u8070:
  9626  0007'                    l4683:
  9627  0007' 0980'              	comf	___aldiv@divisor,f
  9628  0008' 0981'              	comf	___aldiv@divisor+1,f
  9629  0009' 0982'              	comf	___aldiv@divisor+2,f
  9630  000A' 0983'              	comf	___aldiv@divisor+3,f
  9631  000B' 0A80'              	incf	___aldiv@divisor,f
  9632  000C' 1903               	skipnz
  9633  000D' 0A81'              	incf	___aldiv@divisor+1,f
  9634  000E' 1903               	skipnz
  9635  000F' 0A82'              	incf	___aldiv@divisor+2,f
  9636  0010' 1903               	skipnz
  9637  0011' 0A83'              	incf	___aldiv@divisor+3,f
  9638  0012' 0185'              	clrf	___aldiv@sign
  9639  0013' 0A85'              	incf	___aldiv@sign,f
  9640  0014'                    l513:
  9641  0014' 1F87'              	btfss	___aldiv@dividend+3,7
  9642  0015' 2800'              	goto	u8081
  9643  0016' 2800'              	goto	u8080
  9644  0017'                    u8081:
  9645  0017' 2800'              	goto	l4689
  9646  0018'                    u8080:
  9647  0018'                    l4685:
  9648  0018' 0984'              	comf	___aldiv@dividend,f
  9649  0019' 0985'              	comf	___aldiv@dividend+1,f
  9650  001A' 0986'              	comf	___aldiv@dividend+2,f
  9651  001B' 0987'              	comf	___aldiv@dividend+3,f
  9652  001C' 0A84'              	incf	___aldiv@dividend,f
  9653  001D' 1903               	skipnz
  9654  001E' 0A85'              	incf	___aldiv@dividend+1,f
  9655  001F' 1903               	skipnz
  9656  0020' 0A86'              	incf	___aldiv@dividend+2,f
  9657  0021' 1903               	skipnz
  9658  0022' 0A87'              	incf	___aldiv@dividend+3,f
  9659  0023'                    l4687:
  9660  0023' 3001               	movlw	1
  9661  0024' 0083'              	movwf	??___aldiv
  9662  0025' 0803'              	movf	??___aldiv,w
  9663  0026' 0685'              	xorwf	___aldiv@sign,f
  9664  0027'                    l4689:
  9665  0027' 3000               	movlw	0
  9666  0028' 0089'              	movwf	___aldiv@quotient+3
  9667  0029' 3000               	movlw	0
  9668  002A' 0088'              	movwf	___aldiv@quotient+2
  9669  002B' 3000               	movlw	0
  9670  002C' 0087'              	movwf	___aldiv@quotient+1
  9671  002D' 3000               	movlw	0
  9672  002E' 0086'              	movwf	___aldiv@quotient
  9673  002F'                    l4691:
  9674  002F' 0803'              	movf	___aldiv@divisor+3,w
  9675  0030' 0402'              	iorwf	___aldiv@divisor+2,w
  9676  0031' 0401'              	iorwf	___aldiv@divisor+1,w
  9677  0032' 0400'              	iorwf	___aldiv@divisor,w
  9678  0033' 1903               	skipnz
  9679  0034' 2800'              	goto	u8091
  9680  0035' 2800'              	goto	u8090
  9681  0036'                    u8091:
  9682  0036' 2800'              	goto	l4711
  9683  0037'                    u8090:
  9684  0037'                    l4693:
  9685  0037' 0184'              	clrf	___aldiv@counter
  9686  0038' 0A84'              	incf	___aldiv@counter,f
  9687  0039' 2800'              	goto	l4697
  9688  003A'                    l4695:
  9689  003A' 3001               	movlw	1
  9690  003B' 0083'              	movwf	??___aldiv
  9691  003C'                    u8105:
  9692  003C' 1003               	clrc
  9693  003D' 0D80'              	rlf	___aldiv@divisor,f
  9694  003E' 0D81'              	rlf	___aldiv@divisor+1,f
  9695  003F' 0D82'              	rlf	___aldiv@divisor+2,f
  9696  0040' 0D83'              	rlf	___aldiv@divisor+3,f
  9697  0041' 0B83'              	decfsz	??___aldiv,f
  9698  0042' 2800'              	goto	u8105
  9699  0043' 3001               	movlw	1
  9700  0044' 0083'              	movwf	??___aldiv
  9701  0045' 0803'              	movf	??___aldiv,w
  9702  0046' 0784'              	addwf	___aldiv@counter,f
  9703  0047'                    l4697:
  9704  0047' 1F83'              	btfss	___aldiv@divisor+3,7
  9705  0048' 2800'              	goto	u8111
  9706  0049' 2800'              	goto	u8110
  9707  004A'                    u8111:
  9708  004A' 2800'              	goto	l4695
  9709  004B'                    u8110:
  9710  004B'                    l4699:
  9711  004B' 3001               	movlw	1
  9712  004C' 0083'              	movwf	??___aldiv
  9713  004D'                    u8125:
  9714  004D' 1003               	clrc
  9715  004E' 0D86'              	rlf	___aldiv@quotient,f
  9716  004F' 0D87'              	rlf	___aldiv@quotient+1,f
  9717  0050' 0D88'              	rlf	___aldiv@quotient+2,f
  9718  0051' 0D89'              	rlf	___aldiv@quotient+3,f
  9719  0052' 0B83'              	decfsz	??___aldiv,f
  9720  0053' 2800'              	goto	u8125
  9721  0054'                    l4701:
  9722  0054' 0803'              	movf	___aldiv@divisor+3,w
  9723  0055' 0207'              	subwf	___aldiv@dividend+3,w
  9724  0056' 1D03               	skipz
  9725  0057' 2800'              	goto	u8135
  9726  0058' 0802'              	movf	___aldiv@divisor+2,w
  9727  0059' 0206'              	subwf	___aldiv@dividend+2,w
  9728  005A' 1D03               	skipz
  9729  005B' 2800'              	goto	u8135
  9730  005C' 0801'              	movf	___aldiv@divisor+1,w
  9731  005D' 0205'              	subwf	___aldiv@dividend+1,w
  9732  005E' 1D03               	skipz
  9733  005F' 2800'              	goto	u8135
  9734  0060' 0800'              	movf	___aldiv@divisor,w
  9735  0061' 0204'              	subwf	___aldiv@dividend,w
  9736  0062'                    u8135:
  9737  0062' 1C03               	skipc
  9738  0063' 2800'              	goto	u8131
  9739  0064' 2800'              	goto	u8130
  9740  0065'                    u8131:
  9741  0065' 2800'              	goto	l4707
  9742  0066'                    u8130:
  9743  0066'                    l4703:
  9744  0066' 0800'              	movf	___aldiv@divisor,w
  9745  0067' 0284'              	subwf	___aldiv@dividend,f
  9746  0068' 0801'              	movf	___aldiv@divisor+1,w
  9747  0069' 1C03               	skipc
  9748  006A' 0F01'              	incfsz	___aldiv@divisor+1,w
  9749  006B' 0285'              	subwf	___aldiv@dividend+1,f
  9750  006C' 0802'              	movf	___aldiv@divisor+2,w
  9751  006D' 1C03               	skipc
  9752  006E' 0F02'              	incfsz	___aldiv@divisor+2,w
  9753  006F' 0286'              	subwf	___aldiv@dividend+2,f
  9754  0070' 0803'              	movf	___aldiv@divisor+3,w
  9755  0071' 1C03               	skipc
  9756  0072' 0F03'              	incfsz	___aldiv@divisor+3,w
  9757  0073' 0287'              	subwf	___aldiv@dividend+3,f
  9758  0074'                    l4705:
  9759  0074' 1406'              	bsf	___aldiv@quotient,0
  9760  0075'                    l4707:
  9761  0075' 3001               	movlw	1
  9762  0076'                    u8145:
  9763  0076' 1003               	clrc
  9764  0077' 0C83'              	rrf	___aldiv@divisor+3,f
  9765  0078' 0C82'              	rrf	___aldiv@divisor+2,f
  9766  0079' 0C81'              	rrf	___aldiv@divisor+1,f
  9767  007A' 0C80'              	rrf	___aldiv@divisor,f
  9768  007B' 3EFF               	addlw	-1
  9769  007C' 1D03               	skipz
  9770  007D' 2800'              	goto	u8145
  9771  007E'                    l4709:
  9772  007E' 3001               	movlw	1
  9773  007F' 0284'              	subwf	___aldiv@counter,f
  9774  0080' 1D03               	btfss	3,2
  9775  0081' 2800'              	goto	u8151
  9776  0082' 2800'              	goto	u8150
  9777  0083'                    u8151:
  9778  0083' 2800'              	goto	l4699
  9779  0084'                    u8150:
  9780  0084'                    l4711:
  9781  0084' 0805'              	movf	___aldiv@sign,w
  9782  0085' 1903               	btfsc	3,2
  9783  0086' 2800'              	goto	u8161
  9784  0087' 2800'              	goto	u8160
  9785  0088'                    u8161:
  9786  0088' 2800'              	goto	l4715
  9787  0089'                    u8160:
  9788  0089'                    l4713:
  9789  0089' 0986'              	comf	___aldiv@quotient,f
  9790  008A' 0987'              	comf	___aldiv@quotient+1,f
  9791  008B' 0988'              	comf	___aldiv@quotient+2,f
  9792  008C' 0989'              	comf	___aldiv@quotient+3,f
  9793  008D' 0A86'              	incf	___aldiv@quotient,f
  9794  008E' 1903               	skipnz
  9795  008F' 0A87'              	incf	___aldiv@quotient+1,f
  9796  0090' 1903               	skipnz
  9797  0091' 0A88'              	incf	___aldiv@quotient+2,f
  9798  0092' 1903               	skipnz
  9799  0093' 0A89'              	incf	___aldiv@quotient+3,f
  9800  0094'                    l4715:
  9801  0094' 0809'              	movf	___aldiv@quotient+3,w
  9802  0095' 0083'              	movwf	?___aldiv+3
  9803  0096' 0808'              	movf	___aldiv@quotient+2,w
  9804  0097' 0082'              	movwf	?___aldiv+2
  9805  0098' 0807'              	movf	___aldiv@quotient+1,w
  9806  0099' 0081'              	movwf	?___aldiv+1
  9807  009A' 0806'              	movf	___aldiv@quotient,w
  9808  009B' 0080'              	movwf	?___aldiv
  9809  009C'                    l523:
  9810  009C' 0008               	return
  9811  009D'                    __end_of___aldiv:
  9812                           
  9813                           	psect	text30
  9814  0000'                    __ptext30:	
  9815 ;; *************** function _Setup *****************
  9816 ;; Defined at:
  9817 ;;		line 64 in file "LAB3.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		status,2
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9831 ;;      Params:         0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    2
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _Setup
  9847  0000'                    _Setup:
  9848  0000'                    l3417:	
  9849                           ;incstack = 0
  9850                           ; Regs used in _Setup: [status,2]
  9851                           
  9852                           
  9853                           ;LAB3.c: 66:     ANSELH = 0;
  9854  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  9855  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  9856  0002' 0189               	clrf	9	;volatile
  9857                           
  9858                           ;LAB3.c: 67:     ANSEL = 0;
  9859  0003' 0188               	clrf	8	;volatile
  9860                           
  9861                           ;LAB3.c: 70:     TRISA = 0;
  9862  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  9863  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  9864  0006' 0185               	clrf	5	;volatile
  9865                           
  9866                           ;LAB3.c: 71:     PORTA = 0;
  9867  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  9868  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  9869  0009' 0185               	clrf	5	;volatile
  9870                           
  9871                           ;LAB3.c: 73:     TRISB = 0;
  9872  000A' 1683               	bsf	3,5	;RP0=1, select bank1
  9873  000B' 1303               	bcf	3,6	;RP1=0, select bank1
  9874  000C' 0186               	clrf	6	;volatile
  9875                           
  9876                           ;LAB3.c: 74:     PORTB = 0;
  9877  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  9878  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  9879  000F' 0186               	clrf	6	;volatile
  9880                           
  9881                           ;LAB3.c: 76:     TRISE = 0;
  9882  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  9883  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  9884  0012' 0189               	clrf	9	;volatile
  9885                           
  9886                           ;LAB3.c: 77:     PORTE = 0;
  9887  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  9888  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  9889  0015' 0189               	clrf	9	;volatile
  9890  0016'                    l3419:
  9891                           
  9892                           ;LAB3.c: 80:     INTCONbits.PEIE = 1;
  9893  0016' 170B               	bsf	11,6	;volatile
  9894  0017'                    l3421:
  9895                           
  9896                           ;LAB3.c: 81:     PIE1bits.RCIE = 1;
  9897  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  9898  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  9899  0019' 168C               	bsf	12,5	;volatile
  9900  001A'                    l3423:
  9901                           
  9902                           ;LAB3.c: 82:     PIR1bits.RCIF = 0;
  9903  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  9904  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  9905  001C' 128C               	bcf	12,5	;volatile
  9906  001D'                    l3425:
  9907                           
  9908                           ;LAB3.c: 83:     INTCONbits.GIE = 1;
  9909  001D' 178B               	bsf	11,7	;volatile
  9910  001E'                    l65:
  9911  001E' 0008               	return
  9912  001F'                    __end_of_Setup:
  9913                           
  9914                           	psect	text31
  9915  0000'                    __ptext31:	
  9916 ;; *************** function _LCD_ON *****************
  9917 ;; Defined at:
  9918 ;;		line 52 in file "LCD.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;		None
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;		None
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  1    wreg      void 
  9925 ;; Registers used:
  9926 ;;		wreg, status,2, status,0, pclath, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9932 ;;      Params:         0       0       0       0       0
  9933 ;;      Locals:         0       0       0       0       0
  9934 ;;      Temps:          2       0       0       0       0
  9935 ;;      Totals:         2       0       0       0       0
  9936 ;;Total ram usage:        2 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    4
  9939 ;; This function calls:
  9940 ;;		_PUERTO
  9941 ;;		_comandosLCD
  9942 ;; This function is called by:
  9943 ;;		_main
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           
  9948                           ;psect for function _LCD_ON
  9949  0000'                    _LCD_ON:
  9950  0000'                    l3467:	
  9951                           ;incstack = 0
  9952                           ; Regs used in _LCD_ON: [wreg+status,2+status,0+pclath+cstack]
  9953                           
  9954  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9955  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9956  0002' 1009               	bcf	9,0	;volatile
  9957  0003' 1089               	bcf	9,1	;volatile
  9958  0004'                    l3469:
  9959  0004' 3000               	movlw	0
  9960  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_PUERTO
  9961  000A'                    l3471:
  9962  000A' 3082               	movlw	130
  9963  000B' 0087'              	movwf	??_LCD_ON+1
  9964  000C' 30DD               	movlw	221
  9965  000D' 0086'              	movwf	??_LCD_ON
  9966  000E'                    u9217:
  9967  000E' 0B86'              	decfsz	??_LCD_ON,f
  9968  000F' 2800'              	goto	u9217
  9969  0010' 0B87'              	decfsz	??_LCD_ON+1,f
  9970  0011' 2800'              	goto	u9217
  9971  0012' 2800'              	nop2
  9972  0013'                    l3473:
  9973  0013' 3002               	movlw	2
  9974  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
  9975  0019'                    l3475:
  9976  0019' 3038               	movlw	56
  9977  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
  9978  001F'                    l3477:
  9979  001F' 300C               	movlw	12
  9980  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
  9981  0025'                    l3479:
  9982  0025' 3006               	movlw	6
  9983  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
  9984  002B'                    l184:
  9985  002B' 0008               	return
  9986  002C'                    __end_of_LCD_ON:
  9987                           
  9988                           	psect	text32
  9989  0000'                    __ptext32:	
  9990 ;; *************** function _LCD_Cursor *****************
  9991 ;; Defined at:
  9992 ;;		line 63 in file "LCD.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  x               1    wreg     unsigned char 
  9995 ;;  y               1    6[COMMON] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  x               1    8[COMMON] unsigned char 
  9998 ;;  a               1    9[COMMON] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      void 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0, pclath, cstack
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10008 ;;      Params:         1       0       0       0       0
 10009 ;;      Locals:         2       0       0       0       0
 10010 ;;      Temps:          1       0       0       0       0
 10011 ;;      Totals:         4       0       0       0       0
 10012 ;;Total ram usage:        4 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; Hardware stack levels required when called:    4
 10015 ;; This function calls:
 10016 ;;		_comandosLCD
 10017 ;; This function is called by:
 10018 ;;		_main
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           
 10023                           ;psect for function _LCD_Cursor
 10024  0000'                    _LCD_Cursor:
 10025                           
 10026                           ;incstack = 0
 10027                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10028                           ;LCD_Cursor@x stored from wreg
 10029  0000' 0088'              	movwf	LCD_Cursor@x
 10030  0001'                    l3841:
 10031  0001' 0308'              	decf	LCD_Cursor@x,w
 10032  0002' 1D03               	btfss	3,2
 10033  0003' 2800'              	goto	u6191
 10034  0004' 2800'              	goto	u6190
 10035  0005'                    u6191:
 10036  0005' 2800'              	goto	l3847
 10037  0006'                    u6190:
 10038  0006'                    l3843:
 10039  0006' 0806'              	movf	LCD_Cursor@y,w
 10040  0007' 3E80               	addlw	128
 10041  0008' 0087'              	movwf	??_LCD_Cursor
 10042  0009' 0807'              	movf	??_LCD_Cursor,w
 10043  000A' 0089'              	movwf	LCD_Cursor@a
 10044  000B'                    l3845:
 10045  000B' 0809'              	movf	LCD_Cursor@a,w
 10046  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
 10047  0011' 2800'              	goto	l190
 10048  0012'                    l3847:
 10049  0012' 3002               	movlw	2
 10050  0013' 0608'              	xorwf	LCD_Cursor@x,w
 10051  0014' 1D03               	btfss	3,2
 10052  0015' 2800'              	goto	u6201
 10053  0016' 2800'              	goto	u6200
 10054  0017'                    u6201:
 10055  0017' 2800'              	goto	l190
 10056  0018'                    u6200:
 10057  0018'                    l3849:
 10058  0018' 0806'              	movf	LCD_Cursor@y,w
 10059  0019' 3EC0               	addlw	192
 10060  001A' 0087'              	movwf	??_LCD_Cursor
 10061  001B' 0807'              	movf	??_LCD_Cursor,w
 10062  001C' 0089'              	movwf	LCD_Cursor@a
 10063  001D'                    l3851:
 10064  001D' 0809'              	movf	LCD_Cursor@a,w
 10065  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
 10066  0023'                    l190:
 10067  0023' 0008               	return
 10068  0024'                    __end_of_LCD_Cursor:
 10069                           
 10070                           	psect	text33
 10071  0000'                    __ptext33:	
 10072 ;; *************** function _LCD_Clear *****************
 10073 ;; Defined at:
 10074 ;;		line 47 in file "LCD.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, status,0, pclath, cstack
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         0       0       0       0       0
 10089 ;;      Locals:         0       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0
 10091 ;;      Totals:         0       0       0       0       0
 10092 ;;Total ram usage:        0 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; Hardware stack levels required when called:    4
 10095 ;; This function calls:
 10096 ;;		_comandosLCD
 10097 ;; This function is called by:
 10098 ;;		_main
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           
 10103                           ;psect for function _LCD_Clear
 10104  0000'                    _LCD_Clear:
 10105  0000'                    l3481:	
 10106                           ;incstack = 0
 10107                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 10108                           
 10109  0000' 3000               	movlw	0
 10110  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
 10111  0006' 3001               	movlw	1
 10112  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_comandosLCD
 10113  000C'                    l181:
 10114  000C' 0008               	return
 10115  000D'                    __end_of_LCD_Clear:
 10116                           
 10117                           	psect	text34
 10118  0000'                    __ptext34:	
 10119 ;; *************** function _comandosLCD *****************
 10120 ;; Defined at:
 10121 ;;		line 37 in file "LCD.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  x               1    wreg     unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  x               1    5[COMMON] unsigned char 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      void 
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0, pclath, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10135 ;;      Params:         0       0       0       0       0
 10136 ;;      Locals:         1       0       0       0       0
 10137 ;;      Temps:          1       0       0       0       0
 10138 ;;      Totals:         2       0       0       0       0
 10139 ;;Total ram usage:        2 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    3
 10142 ;; This function calls:
 10143 ;;		_PUERTO
 10144 ;; This function is called by:
 10145 ;;		_LCD_Clear
 10146 ;;		_LCD_ON
 10147 ;;		_LCD_Cursor
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           
 10152                           ;psect for function _comandosLCD
 10153  0000'                    _comandosLCD:
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
 10157                           ;comandosLCD@x stored from wreg
 10158  0000' 0085'              	movwf	comandosLCD@x
 10159  0001'                    l3005:
 10160  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10161  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10162  0003' 1009               	bcf	9,0	;volatile
 10163  0004'                    l3007:
 10164  0004' 0805'              	movf	comandosLCD@x,w
 10165  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_PUERTO
 10166  000A'                    l3009:
 10167  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10168  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10169  000C' 1489               	bsf	9,1	;volatile
 10170  000D'                    l3011:
 10171  000D' 3003               	movlw	3
 10172  000E' 0084'              	movwf	??_comandosLCD
 10173  000F'                    u9227:
 10174  000F' 0B84'              	decfsz	??_comandosLCD,f
 10175  0010' 2800'              	goto	u9227
 10176  0011'                    l3013:
 10177  0011' 1283               	bcf	3,5	;RP0=0, select bank0
 10178  0012' 1303               	bcf	3,6	;RP1=0, select bank0
 10179  0013' 1089               	bcf	9,1	;volatile
 10180  0014'                    l3015:
 10181  0014' 3003               	movlw	3
 10182  0015' 0084'              	movwf	??_comandosLCD
 10183  0016'                    u9237:
 10184  0016' 0B84'              	decfsz	??_comandosLCD,f
 10185  0017' 2800'              	goto	u9237
 10186  0018'                    l3017:
 10187  0018' 2800'              	nop2	;2 cycle nop
 10188  0019' 2800'              	nop2	;2 cycle nop
 10189  001A'                    l178:
 10190  001A' 0008               	return
 10191  001B'                    __end_of_comandosLCD:
 10192                           
 10193                           	psect	text35
 10194  0000'                    __ptext35:	
 10195 ;; *************** function _PUERTO *****************
 10196 ;; Defined at:
 10197 ;;		line 26 in file "LCD.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  x               1    wreg     unsigned char 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  x               1    3[COMMON] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  1    wreg      void 
 10204 ;; Registers used:
 10205 ;;		wreg
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10211 ;;      Params:         0       0       0       0       0
 10212 ;;      Locals:         1       0       0       0       0
 10213 ;;      Temps:          0       0       0       0       0
 10214 ;;      Totals:         1       0       0       0       0
 10215 ;;Total ram usage:        1 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    2
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_comandosLCD
 10222 ;;		_LCD_ON
 10223 ;;		_char_LCD
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           
 10228                           ;psect for function _PUERTO
 10229  0000'                    _PUERTO:
 10230                           
 10231                           ;incstack = 0
 10232                           ; Regs used in _PUERTO: [wreg]
 10233                           ;PUERTO@x stored from wreg
 10234  0000' 0083'              	movwf	PUERTO@x
 10235  0001'                    l2519:
 10236  0001' 1C03'              	btfss	PUERTO@x,0
 10237  0002' 2800'              	goto	u3161
 10238  0003' 2800'              	goto	u3160
 10239  0004'                    u3161:
 10240  0004' 2800'              	goto	l159
 10241  0005'                    u3160:
 10242  0005'                    l2521:
 10243  0005' 1283               	bcf	3,5	;RP0=0, select bank0
 10244  0006' 1303               	bcf	3,6	;RP1=0, select bank0
 10245  0007' 1406               	bsf	6,0	;volatile
 10246  0008' 2800'              	goto	l160
 10247  0009'                    l159:
 10248  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10249  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10250  000B' 1006               	bcf	6,0	;volatile
 10251  000C'                    l160:
 10252  000C' 1C83'              	btfss	PUERTO@x,1
 10253  000D' 2800'              	goto	u3171
 10254  000E' 2800'              	goto	u3170
 10255  000F'                    u3171:
 10256  000F' 2800'              	goto	l161
 10257  0010'                    u3170:
 10258  0010'                    l2523:
 10259  0010' 1486               	bsf	6,1	;volatile
 10260  0011' 2800'              	goto	l162
 10261  0012'                    l161:
 10262  0012' 1086               	bcf	6,1	;volatile
 10263  0013'                    l162:
 10264  0013' 1D03'              	btfss	PUERTO@x,2
 10265  0014' 2800'              	goto	u3181
 10266  0015' 2800'              	goto	u3180
 10267  0016'                    u3181:
 10268  0016' 2800'              	goto	l163
 10269  0017'                    u3180:
 10270  0017'                    l2525:
 10271  0017' 1506               	bsf	6,2	;volatile
 10272  0018' 2800'              	goto	l164
 10273  0019'                    l163:
 10274  0019' 1106               	bcf	6,2	;volatile
 10275  001A'                    l164:
 10276  001A' 1D83'              	btfss	PUERTO@x,3
 10277  001B' 2800'              	goto	u3191
 10278  001C' 2800'              	goto	u3190
 10279  001D'                    u3191:
 10280  001D' 2800'              	goto	l165
 10281  001E'                    u3190:
 10282  001E'                    l2527:
 10283  001E' 1586               	bsf	6,3	;volatile
 10284  001F' 2800'              	goto	l166
 10285  0020'                    l165:
 10286  0020' 1186               	bcf	6,3	;volatile
 10287  0021'                    l166:
 10288  0021' 1E03'              	btfss	PUERTO@x,4
 10289  0022' 2800'              	goto	u3201
 10290  0023' 2800'              	goto	u3200
 10291  0024'                    u3201:
 10292  0024' 2800'              	goto	l167
 10293  0025'                    u3200:
 10294  0025'                    l2529:
 10295  0025' 1606               	bsf	6,4	;volatile
 10296  0026' 2800'              	goto	l168
 10297  0027'                    l167:
 10298  0027' 1206               	bcf	6,4	;volatile
 10299  0028'                    l168:
 10300  0028' 1E83'              	btfss	PUERTO@x,5
 10301  0029' 2800'              	goto	u3211
 10302  002A' 2800'              	goto	u3210
 10303  002B'                    u3211:
 10304  002B' 2800'              	goto	l169
 10305  002C'                    u3210:
 10306  002C'                    l2531:
 10307  002C' 1686               	bsf	6,5	;volatile
 10308  002D' 2800'              	goto	l170
 10309  002E'                    l169:
 10310  002E' 1286               	bcf	6,5	;volatile
 10311  002F'                    l170:
 10312  002F' 1F03'              	btfss	PUERTO@x,6
 10313  0030' 2800'              	goto	u3221
 10314  0031' 2800'              	goto	u3220
 10315  0032'                    u3221:
 10316  0032' 2800'              	goto	l171
 10317  0033'                    u3220:
 10318  0033'                    l2533:
 10319  0033' 1706               	bsf	6,6	;volatile
 10320  0034' 2800'              	goto	l172
 10321  0035'                    l171:
 10322  0035' 1306               	bcf	6,6	;volatile
 10323  0036'                    l172:
 10324  0036' 1F83'              	btfss	PUERTO@x,7
 10325  0037' 2800'              	goto	u3231
 10326  0038' 2800'              	goto	u3230
 10327  0039'                    u3231:
 10328  0039' 2800'              	goto	l173
 10329  003A'                    u3230:
 10330  003A'                    l2535:
 10331  003A' 1786               	bsf	6,7	;volatile
 10332  003B' 2800'              	goto	l175
 10333  003C'                    l173:
 10334  003C' 1386               	bcf	6,7	;volatile
 10335  003D'                    l175:
 10336  003D' 0008               	return
 10337  003E'                    __end_of_PUERTO:
 10338                           
 10339                           	psect	text36
 10340  0000'                    __ptext36:	
 10341 ;; *************** function _ISR *****************
 10342 ;; Defined at:
 10343 ;;		line 97 in file "LAB3.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg, status,2, status,0, pclath, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10357 ;;      Params:         0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0
 10359 ;;      Temps:          3       0       0       0       0
 10360 ;;      Totals:         3       0       0       0       0
 10361 ;;Total ram usage:        3 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    1
 10364 ;; This function calls:
 10365 ;;		_Read_USART
 10366 ;; This function is called by:
 10367 ;;		Interrupt level 1
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _ISR
 10373  0000'                    _ISR:
 10374  0000'                    i1l3869:
 10375                           
 10376                           ;LAB3.c: 98:     if (RCIF == 1){
 10377  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10378  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10379  0002' 1E8C               	btfss	12,5	;volatile
 10380  0003' 2800'              	goto	u621_21
 10381  0004' 2800'              	goto	u621_20
 10382  0005'                    u621_21:
 10383  0005' 2800'              	goto	i1l77
 10384  0006'                    u621_20:
 10385  0006'                    i1l3871:
 10386                           
 10387                           ;LAB3.c: 99:         RCIF = 0;
 10388  0006' 128C               	bcf	12,5	;volatile
 10389  0007'                    i1l3873:
 10390                           
 10391                           ;LAB3.c: 100:         RUSART= Read_USART();
 10392  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Read_USART
 10393  000C' 0080'              	movwf	??_ISR
 10394  000D' 0800'              	movf	??_ISR,w
 10395  000E' 0080'              	movwf	_RUSART
 10396  000F'                    i1l3875:
 10397                           
 10398                           ;LAB3.c: 101:         if (RUSART == '+'){contador++;}
 10399  000F' 302B               	movlw	43
 10400  0010' 0600'              	xorwf	_RUSART,w
 10401  0011' 1D03               	btfss	3,2
 10402  0012' 2800'              	goto	u622_21
 10403  0013' 2800'              	goto	u622_20
 10404  0014'                    u622_21:
 10405  0014' 2800'              	goto	i1l3879
 10406  0015'                    u622_20:
 10407  0015'                    i1l3877:
 10408  0015' 3001               	movlw	1
 10409  0016' 0080'              	movwf	??_ISR
 10410  0017' 0800'              	movf	??_ISR,w
 10411  0018' 1683               	bsf	3,5	;RP0=1, select bank1
 10412  0019' 1303               	bcf	3,6	;RP1=0, select bank1
 10413  001A' 0780'              	addwf	_contador^(0+128),f
 10414  001B' 2800'              	goto	i1l77
 10415  001C'                    i1l3879:
 10416  001C' 302D               	movlw	45
 10417  001D' 0600'              	xorwf	_RUSART,w
 10418  001E' 1D03               	btfss	3,2
 10419  001F' 2800'              	goto	u623_21
 10420  0020' 2800'              	goto	u623_20
 10421  0021'                    u623_21:
 10422  0021' 2800'              	goto	i1l77
 10423  0022'                    u623_20:
 10424  0022'                    i1l3881:
 10425  0022' 3001               	movlw	1
 10426  0023' 1683               	bsf	3,5	;RP0=1, select bank1
 10427  0024' 1303               	bcf	3,6	;RP1=0, select bank1
 10428  0025' 0280'              	subwf	_contador^(0+128),f
 10429  0026'                    i1l77:
 10430  0026' 0802'              	movf	??_ISR+2,w
 10431  0027' 008A               	movwf	10
 10432  0028' 0E01'              	swapf	??_ISR+1,w
 10433  0029' 0083               	movwf	3
 10434  002A' 0EFE               	swapf	btemp,f
 10435  002B' 0E7E               	swapf	btemp,w
 10436  002C' 0009               	retfie
 10437  002D'                    __end_of_ISR:
 10438                           
 10439                           	psect	intentry
 10440  0000'                    __pintentry:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 10443                           
 10444  0000'                    interrupt_function:
 10445  007E                     saved_w	set	btemp
 10446  0000' 00FE               	movwf	btemp
 10447  0001' 0E03               	swapf	3,w
 10448  0002' 0081'              	movwf	??_ISR+1
 10449  0003' 080A               	movf	10,w
 10450  0004' 0082'              	movwf	??_ISR+2
 10451  0005' 120A' 118A' 2800'  	ljmp	_ISR
 10452                           
 10453                           	psect	text37
 10454  0000'                    __ptext37:	
 10455 ;; *************** function _Read_USART *****************
 10456 ;; Defined at:
 10457 ;;		line 40 in file "USART.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;		None
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;		None
 10462 ;; Return value:  Size  Location     Type
 10463 ;;                  1    wreg      unsigned char 
 10464 ;; Registers used:
 10465 ;;		wreg
 10466 ;; Tracked objects:
 10467 ;;		On entry : 0/0
 10468 ;;		On exit  : 0/0
 10469 ;;		Unchanged: 0/0
 10470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10471 ;;      Params:         0       0       0       0       0
 10472 ;;      Locals:         0       0       0       0       0
 10473 ;;      Temps:          0       0       0       0       0
 10474 ;;      Totals:         0       0       0       0       0
 10475 ;;Total ram usage:        0 bytes
 10476 ;; Hardware stack levels used:    1
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_ISR
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           
 10485                           ;psect for function _Read_USART
 10486  0000'                    _Read_USART:
 10487  0000'                    i1l3431:	
 10488                           ;incstack = 0
 10489                           ; Regs used in _Read_USART: [wreg]
 10490                           
 10491  0000'                    i1l240:
 10492  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10493  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10494  0002' 1E8C               	btfss	12,5	;volatile
 10495  0003' 2800'              	goto	u555_21
 10496  0004' 2800'              	goto	u555_20
 10497  0005'                    u555_21:
 10498  0005' 2800'              	goto	i1l240
 10499  0006'                    u555_20:
 10500  0006'                    i1l3433:
 10501  0006' 081A               	movf	26,w	;volatile
 10502  0007'                    i1l243:
 10503  0007' 0008               	return
 10504  0008'                    __end_of_Read_USART:
 10505  007E                     btemp	set	126	;btemp
 10506  007E                     wtemp0	set	126
 10507                           
 10508                           	psect	config
 10509                           
 10510                           ;Config register CONFIG1 @ 0x2007
 10511                           ;	Oscillator Selection bits
 10512                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10513                           ;	Watchdog Timer Enable bit
 10514                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10515                           ;	Power-up Timer Enable bit
 10516                           ;	PWRTE = OFF, PWRT disabled
 10517                           ;	RE3/MCLR pin function select bit
 10518                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10519                           ;	Code Protection bit
 10520                           ;	CP = OFF, Program memory code protection is disabled
 10521                           ;	Data Code Protection bit
 10522                           ;	CPD = OFF, Data memory code protection is disabled
 10523                           ;	Brown Out Reset Selection bits
 10524                           ;	BOREN = OFF, BOR disabled
 10525                           ;	Internal External Switchover bit
 10526                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10527                           ;	Fail-Safe Clock Monitor Enabled bit
 10528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10529                           ;	Low Voltage Programming Enable bit
 10530                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10531                           ;	In-Circuit Debugger Mode bit
 10532                           ;	DEBUG = 0x1, unprogrammed default
 10533  2007                     	org	8199
 10534  2007  20D1               	dw	8401
 10535                           
 10536                           ;Config register CONFIG2 @ 0x2008
 10537                           ;	Brown-out Reset Selection bit
 10538                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10539                           ;	Flash Program Memory Self Write Enable bits
 10540                           ;	WRT = OFF, Write protection off
 10541  2008                     	org	8200
 10542  2008  3FFF               	dw	16383
 10543                           
 10544                           	psect	text1_split_1
 10545  0000'                    u8790:
 10546  0000'                    l4991:
 10547  0000' 1683               	bsf	3,5	;RP0=1, select bank3
 10548  0001' 1703               	bsf	3,6	;RP1=1, select bank3
 10549  0002' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10550  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10551  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10552  0005' 0083'              	movwf	___fleq@ff1+3
 10553  0006' 1683               	bsf	3,5	;RP0=1, select bank3
 10554  0007' 1703               	bsf	3,6	;RP1=1, select bank3
 10555  0008' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10556  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10557  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10558  000B' 0082'              	movwf	___fleq@ff1+2
 10559  000C' 1683               	bsf	3,5	;RP0=1, select bank3
 10560  000D' 1703               	bsf	3,6	;RP1=1, select bank3
 10561  000E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10562  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10563  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10564  0011' 0081'              	movwf	___fleq@ff1+1
 10565  0012' 1683               	bsf	3,5	;RP0=1, select bank3
 10566  0013' 1703               	bsf	3,6	;RP1=1, select bank3
 10567  0014' 0800'              	movf	sprintf@fval^(0+384),w
 10568  0015' 1283               	bcf	3,5	;RP0=0, select bank0
 10569  0016' 1303               	bcf	3,6	;RP1=0, select bank0
 10570  0017' 0080'              	movwf	___fleq@ff1
 10571  0018' 3000               	movlw	0
 10572  0019' 0087'              	movwf	___fleq@ff2+3
 10573  001A' 3000               	movlw	0
 10574  001B' 0086'              	movwf	___fleq@ff2+2
 10575  001C' 3000               	movlw	0
 10576  001D' 0085'              	movwf	___fleq@ff2+1
 10577  001E' 3000               	movlw	0
 10578  001F' 0084'              	movwf	___fleq@ff2
 10579  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10580  0025' 1803               	btfsc	3,0
 10581  0026' 2800'              	goto	u8801
 10582  0027' 2800'              	goto	u8800
 10583  0028'                    u8801:
 10584  0028' 2800'              	goto	l5011
 10585  0029'                    u8800:
 10586  0029'                    l4993:
 10587  0029' 1683               	bsf	3,5	;RP0=1, select bank3
 10588  002A' 1703               	bsf	3,6	;RP1=1, select bank3
 10589  002B' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10590  002C' 1283               	bcf	3,5	;RP0=0, select bank0
 10591  002D' 1303               	bcf	3,6	;RP1=0, select bank0
 10592  002E' 00BA'              	movwf	___fltol@f1+3
 10593  002F' 1683               	bsf	3,5	;RP0=1, select bank3
 10594  0030' 1703               	bsf	3,6	;RP1=1, select bank3
 10595  0031' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10596  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10597  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10598  0034' 00B9'              	movwf	___fltol@f1+2
 10599  0035' 1683               	bsf	3,5	;RP0=1, select bank3
 10600  0036' 1703               	bsf	3,6	;RP1=1, select bank3
 10601  0037' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10602  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10603  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10604  003A' 00B8'              	movwf	___fltol@f1+1
 10605  003B' 1683               	bsf	3,5	;RP0=1, select bank3
 10606  003C' 1703               	bsf	3,6	;RP1=1, select bank3
 10607  003D' 0800'              	movf	sprintf@fval^(0+384),w
 10608  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10609  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10610  0040' 00B7'              	movwf	___fltol@f1
 10611  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10612  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 10613  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 10614  0048' 083A'              	movf	?___fltol+3,w
 10615  0049' 0439'              	iorwf	?___fltol+2,w
 10616  004A' 0438'              	iorwf	?___fltol+1,w
 10617  004B' 0437'              	iorwf	?___fltol,w
 10618  004C' 1D03               	skipz
 10619  004D' 2800'              	goto	u8811
 10620  004E' 2800'              	goto	u8810
 10621  004F'                    u8811:
 10622  004F' 2800'              	goto	l5011
 10623  0050'                    u8810:
 10624  0050'                    l4995:
 10625  0050' 1683               	bsf	3,5	;RP0=1, select bank3
 10626  0051' 1703               	bsf	3,6	;RP1=1, select bank3
 10627  0052' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 10628  0053' 3A80               	xorlw	128
 10629  0054' 00FF               	movwf	btemp+1
 10630  0055' 3080               	movlw	128
 10631  0056' 027F               	subwf	btemp+1,w
 10632  0057' 1D03               	skipz
 10633  0058' 2800'              	goto	u8825
 10634  0059' 3002               	movlw	2
 10635  005A' 0200'              	subwf	sprintf@eexp^(0+384),w
 10636  005B'                    u8825:
 10637  005B' 1C03               	skipc
 10638  005C' 2800'              	goto	u8821
 10639  005D' 2800'              	goto	u8820
 10640  005E'                    u8821:
 10641  005E' 2800'              	goto	l5011
 10642  005F'                    u8820:
 10643  005F'                    l4997:
 10644                           
 10645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10646  005F' 1683               	bsf	3,5	;RP0=1, select bank3
 10647  0060' 1703               	bsf	3,6	;RP1=1, select bank3
 10648  0061' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 10649  0062' 1283               	bcf	3,5	;RP0=0, select bank0
 10650  0063' 1303               	bcf	3,6	;RP1=0, select bank0
 10651  0064' 0083'              	movwf	___flge@ff1+3
 10652  0065' 1683               	bsf	3,5	;RP0=1, select bank3
 10653  0066' 1703               	bsf	3,6	;RP1=1, select bank3
 10654  0067' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 10655  0068' 1283               	bcf	3,5	;RP0=0, select bank0
 10656  0069' 1303               	bcf	3,6	;RP1=0, select bank0
 10657  006A' 0082'              	movwf	___flge@ff1+2
 10658  006B' 1683               	bsf	3,5	;RP0=1, select bank3
 10659  006C' 1703               	bsf	3,6	;RP1=1, select bank3
 10660  006D' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 10661  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 10662  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 10663  0070' 0081'              	movwf	___flge@ff1+1
 10664  0071' 1683               	bsf	3,5	;RP0=1, select bank3
 10665  0072' 1703               	bsf	3,6	;RP1=1, select bank3
 10666  0073' 0800'              	movf	sprintf@tmpval^(0+384),w
 10667  0074' 1283               	bcf	3,5	;RP0=0, select bank0
 10668  0075' 1303               	bcf	3,6	;RP1=0, select bank0
 10669  0076' 0080'              	movwf	___flge@ff1
 10670  0077' 3040               	movlw	64
 10671  0078' 0087'              	movwf	___flge@ff2+3
 10672  0079' 3089               	movlw	137
 10673  007A' 0086'              	movwf	___flge@ff2+2
 10674  007B' 3070               	movlw	112
 10675  007C' 0085'              	movwf	___flge@ff2+1
 10676  007D' 305F               	movlw	95
 10677  007E' 0084'              	movwf	___flge@ff2
 10678  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 10679  0084' 1803               	btfsc	3,0
 10680  0085' 2800'              	goto	u8831
 10681  0086' 2800'              	goto	u8830
 10682  0087'                    u8831:
 10683  0087' 2800'              	goto	l5001
 10684  0088'                    u8830:
 10685  0088'                    l4999:
 10686                           
 10687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10688  0088' 30F7               	movlw	247
 10689  0089' 1683               	bsf	3,5	;RP0=1, select bank3
 10690  008A' 1703               	bsf	3,6	;RP1=1, select bank3
 10691  008B' 0780'              	addwf	sprintf@eexp^(0+384),f
 10692  008C' 1803               	skipnc
 10693  008D' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 10694  008E' 30FF               	movlw	255
 10695  008F' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10698  0090' 2800'              	goto	l5003
 10699  0091'                    l5001:
 10700                           
 10701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10702  0091' 30F8               	movlw	248
 10703  0092' 1683               	bsf	3,5	;RP0=1, select bank3
 10704  0093' 1703               	bsf	3,6	;RP1=1, select bank3
 10705  0094' 0780'              	addwf	sprintf@eexp^(0+384),f
 10706  0095' 1803               	skipnc
 10707  0096' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 10708  0097' 30FF               	movlw	255
 10709  0098' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 10710  0099'                    l5003:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10713  0099' 0800'              	movf	sprintf@eexp^(0+384),w
 10714  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 10715  009F' 1283               	bcf	3,5	;RP0=0, select bank0
 10716  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
 10717  00A1' 0827'              	movf	?_scale+3,w
 10718  00A2' 1683               	bsf	3,5	;RP0=1, select bank3
 10719  00A3' 1703               	bsf	3,6	;RP1=1, select bank3
 10720  00A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 10721  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
 10722  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
 10723  00A7' 0826'              	movf	?_scale+2,w
 10724  00A8' 1683               	bsf	3,5	;RP0=1, select bank3
 10725  00A9' 1703               	bsf	3,6	;RP1=1, select bank3
 10726  00AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 10727  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
 10728  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
 10729  00AD' 0825'              	movf	?_scale+1,w
 10730  00AE' 1683               	bsf	3,5	;RP0=1, select bank3
 10731  00AF' 1703               	bsf	3,6	;RP1=1, select bank3
 10732  00B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 10733  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
 10734  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
 10735  00B3' 0824'              	movf	?_scale,w
 10736  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
 10737  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
 10738  00B6' 0080'              	movwf	sprintf@tmpval^(0+384)
 10739  00B7'                    l5005:
 10740  00B7' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10741  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
 10742  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
 10743  00BA' 0083'              	movwf	__div_to_l_@f1+3
 10744  00BB' 1683               	bsf	3,5	;RP0=1, select bank3
 10745  00BC' 1703               	bsf	3,6	;RP1=1, select bank3
 10746  00BD' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10747  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
 10748  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
 10749  00C0' 0082'              	movwf	__div_to_l_@f1+2
 10750  00C1' 1683               	bsf	3,5	;RP0=1, select bank3
 10751  00C2' 1703               	bsf	3,6	;RP1=1, select bank3
 10752  00C3' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10753  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
 10754  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
 10755  00C6' 0081'              	movwf	__div_to_l_@f1+1
 10756  00C7' 1683               	bsf	3,5	;RP0=1, select bank3
 10757  00C8' 1703               	bsf	3,6	;RP1=1, select bank3
 10758  00C9' 0800'              	movf	sprintf@fval^(0+384),w
 10759  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 10760  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 10761  00CC' 0080'              	movwf	__div_to_l_@f1
 10762  00CD' 1683               	bsf	3,5	;RP0=1, select bank3
 10763  00CE' 1703               	bsf	3,6	;RP1=1, select bank3
 10764  00CF' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 10765  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
 10766  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
 10767  00D2' 0087'              	movwf	__div_to_l_@f2+3
 10768  00D3' 1683               	bsf	3,5	;RP0=1, select bank3
 10769  00D4' 1703               	bsf	3,6	;RP1=1, select bank3
 10770  00D5' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 10771  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
 10772  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
 10773  00D8' 0086'              	movwf	__div_to_l_@f2+2
 10774  00D9' 1683               	bsf	3,5	;RP0=1, select bank3
 10775  00DA' 1703               	bsf	3,6	;RP1=1, select bank3
 10776  00DB' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 10777  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
 10778  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
 10779  00DE' 0085'              	movwf	__div_to_l_@f2+1
 10780  00DF' 1683               	bsf	3,5	;RP0=1, select bank3
 10781  00E0' 1703               	bsf	3,6	;RP1=1, select bank3
 10782  00E1' 0800'              	movf	sprintf@tmpval^(0+384),w
 10783  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
 10784  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
 10785  00E4' 0084'              	movwf	__div_to_l_@f2
 10786  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 10787  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 10788  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 10789  00EC' 0803'              	movf	?__div_to_l_+3,w
 10790  00ED' 1683               	bsf	3,5	;RP0=1, select bank3
 10791  00EE' 1703               	bsf	3,6	;RP1=1, select bank3
 10792  00EF' 0080'              	movwf	(sprintf@val+3)^(0+384)
 10793  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
 10794  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
 10795  00F2' 0802'              	movf	?__div_to_l_+2,w
 10796  00F3' 1683               	bsf	3,5	;RP0=1, select bank3
 10797  00F4' 1703               	bsf	3,6	;RP1=1, select bank3
 10798  00F5' 0080'              	movwf	(sprintf@val+2)^(0+384)
 10799  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
 10800  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
 10801  00F8' 0801'              	movf	?__div_to_l_+1,w
 10802  00F9' 1683               	bsf	3,5	;RP0=1, select bank3
 10803  00FA' 1703               	bsf	3,6	;RP1=1, select bank3
 10804  00FB' 0080'              	movwf	(sprintf@val+1)^(0+384)
 10805  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
 10806  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
 10807  00FE' 0800'              	movf	?__div_to_l_,w
 10808  00FF' 1683               	bsf	3,5	;RP0=1, select bank3
 10809  0100' 1703               	bsf	3,6	;RP1=1, select bank3
 10810  0101' 0080'              	movwf	sprintf@val^(0+384)
 10811  0102'                    l5009:
 10812                           
 10813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10814  0102' 3000               	movlw	0
 10815  0103' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 10816  0104' 3000               	movlw	0
 10817  0105' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 10818  0106' 3000               	movlw	0
 10819  0107' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 10820  0108' 3000               	movlw	0
 10821  0109' 0080'              	movwf	sprintf@fval^(0+384)
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10824  010A' 2800'              	goto	l5017
 10825  010B'                    l5011:
 10826                           
 10827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10828  010B' 1683               	bsf	3,5	;RP0=1, select bank3
 10829  010C' 1703               	bsf	3,6	;RP1=1, select bank3
 10830  010D' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10831  010E' 1283               	bcf	3,5	;RP0=0, select bank0
 10832  010F' 1303               	bcf	3,6	;RP1=0, select bank0
 10833  0110' 00BA'              	movwf	___fltol@f1+3
 10834  0111' 1683               	bsf	3,5	;RP0=1, select bank3
 10835  0112' 1703               	bsf	3,6	;RP1=1, select bank3
 10836  0113' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10837  0114' 1283               	bcf	3,5	;RP0=0, select bank0
 10838  0115' 1303               	bcf	3,6	;RP1=0, select bank0
 10839  0116' 00B9'              	movwf	___fltol@f1+2
 10840  0117' 1683               	bsf	3,5	;RP0=1, select bank3
 10841  0118' 1703               	bsf	3,6	;RP1=1, select bank3
 10842  0119' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10843  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 10844  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 10845  011C' 00B8'              	movwf	___fltol@f1+1
 10846  011D' 1683               	bsf	3,5	;RP0=1, select bank3
 10847  011E' 1703               	bsf	3,6	;RP1=1, select bank3
 10848  011F' 0800'              	movf	sprintf@fval^(0+384),w
 10849  0120' 1283               	bcf	3,5	;RP0=0, select bank0
 10850  0121' 1303               	bcf	3,6	;RP1=0, select bank0
 10851  0122' 00B7'              	movwf	___fltol@f1
 10852  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10853  0128' 1283               	bcf	3,5	;RP0=0, select bank0
 10854  0129' 1303               	bcf	3,6	;RP1=0, select bank0
 10855  012A' 083A'              	movf	?___fltol+3,w
 10856  012B' 1683               	bsf	3,5	;RP0=1, select bank3
 10857  012C' 1703               	bsf	3,6	;RP1=1, select bank3
 10858  012D' 0080'              	movwf	(sprintf@val+3)^(0+384)
 10859  012E' 1283               	bcf	3,5	;RP0=0, select bank0
 10860  012F' 1303               	bcf	3,6	;RP1=0, select bank0
 10861  0130' 0839'              	movf	?___fltol+2,w
 10862  0131' 1683               	bsf	3,5	;RP0=1, select bank3
 10863  0132' 1703               	bsf	3,6	;RP1=1, select bank3
 10864  0133' 0080'              	movwf	(sprintf@val+2)^(0+384)
 10865  0134' 1283               	bcf	3,5	;RP0=0, select bank0
 10866  0135' 1303               	bcf	3,6	;RP1=0, select bank0
 10867  0136' 0838'              	movf	?___fltol+1,w
 10868  0137' 1683               	bsf	3,5	;RP0=1, select bank3
 10869  0138' 1703               	bsf	3,6	;RP1=1, select bank3
 10870  0139' 0080'              	movwf	(sprintf@val+1)^(0+384)
 10871  013A' 1283               	bcf	3,5	;RP0=0, select bank0
 10872  013B' 1303               	bcf	3,6	;RP1=0, select bank0
 10873  013C' 0837'              	movf	?___fltol,w
 10874  013D' 1683               	bsf	3,5	;RP0=1, select bank3
 10875  013E' 1703               	bsf	3,6	;RP1=1, select bank3
 10876  013F' 0080'              	movwf	sprintf@val^(0+384)
 10877  0140'                    l5013:
 10878                           
 10879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10880  0140' 0800'              	movf	(sprintf@val+3)^(0+384),w
 10881  0141' 0086'              	movwf	___xxtofl@val+3
 10882  0142' 0800'              	movf	(sprintf@val+2)^(0+384),w
 10883  0143' 0085'              	movwf	___xxtofl@val+2
 10884  0144' 0800'              	movf	(sprintf@val+1)^(0+384),w
 10885  0145' 0084'              	movwf	___xxtofl@val+1
 10886  0146' 0800'              	movf	sprintf@val^(0+384),w
 10887  0147' 0083'              	movwf	___xxtofl@val
 10888  0148' 3000               	movlw	0
 10889  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 10890  014E' 0806'              	movf	?___xxtofl+3,w
 10891  014F' 1683               	bsf	3,5	;RP0=1, select bank1
 10892  0150' 1303               	bcf	3,6	;RP1=0, select bank1
 10893  0151' 0080'              	movwf	(___flsub@a+3)^(0+128)
 10894  0152' 0805'              	movf	?___xxtofl+2,w
 10895  0153' 0080'              	movwf	(___flsub@a+2)^(0+128)
 10896  0154' 0804'              	movf	?___xxtofl+1,w
 10897  0155' 0080'              	movwf	(___flsub@a+1)^(0+128)
 10898  0156' 0803'              	movf	?___xxtofl,w
 10899  0157' 0080'              	movwf	___flsub@a^(0+128)
 10900  0158' 1683               	bsf	3,5	;RP0=1, select bank3
 10901  0159' 1703               	bsf	3,6	;RP1=1, select bank3
 10902  015A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10903  015B' 1683               	bsf	3,5	;RP0=1, select bank1
 10904  015C' 1303               	bcf	3,6	;RP1=0, select bank1
 10905  015D' 0080'              	movwf	(___flsub@b+3)^(0+128)
 10906  015E' 1683               	bsf	3,5	;RP0=1, select bank3
 10907  015F' 1703               	bsf	3,6	;RP1=1, select bank3
 10908  0160' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10909  0161' 1683               	bsf	3,5	;RP0=1, select bank1
 10910  0162' 1303               	bcf	3,6	;RP1=0, select bank1
 10911  0163' 0080'              	movwf	(___flsub@b+2)^(0+128)
 10912  0164' 1683               	bsf	3,5	;RP0=1, select bank3
 10913  0165' 1703               	bsf	3,6	;RP1=1, select bank3
 10914  0166' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10915  0167' 1683               	bsf	3,5	;RP0=1, select bank1
 10916  0168' 1303               	bcf	3,6	;RP1=0, select bank1
 10917  0169' 0080'              	movwf	(___flsub@b+1)^(0+128)
 10918  016A' 1683               	bsf	3,5	;RP0=1, select bank3
 10919  016B' 1703               	bsf	3,6	;RP1=1, select bank3
 10920  016C' 0800'              	movf	sprintf@fval^(0+384),w
 10921  016D' 1683               	bsf	3,5	;RP0=1, select bank1
 10922  016E' 1303               	bcf	3,6	;RP1=0, select bank1
 10923  016F' 0080'              	movwf	___flsub@b^(0+128)
 10924  0170' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 10925  0175' 1683               	bsf	3,5	;RP0=1, select bank1
 10926  0176' 1303               	bcf	3,6	;RP1=0, select bank1
 10927  0177' 0800'              	movf	(?___flsub+3)^(0+128),w
 10928  0178' 1683               	bsf	3,5	;RP0=1, select bank3
 10929  0179' 1703               	bsf	3,6	;RP1=1, select bank3
 10930  017A' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 10931  017B' 1683               	bsf	3,5	;RP0=1, select bank1
 10932  017C' 1303               	bcf	3,6	;RP1=0, select bank1
 10933  017D' 0800'              	movf	(?___flsub+2)^(0+128),w
 10934  017E' 1683               	bsf	3,5	;RP0=1, select bank3
 10935  017F' 1703               	bsf	3,6	;RP1=1, select bank3
 10936  0180' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 10937  0181' 1683               	bsf	3,5	;RP0=1, select bank1
 10938  0182' 1303               	bcf	3,6	;RP1=0, select bank1
 10939  0183' 0800'              	movf	(?___flsub+1)^(0+128),w
 10940  0184' 1683               	bsf	3,5	;RP0=1, select bank3
 10941  0185' 1703               	bsf	3,6	;RP1=1, select bank3
 10942  0186' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 10943  0187' 1683               	bsf	3,5	;RP0=1, select bank1
 10944  0188' 1303               	bcf	3,6	;RP1=0, select bank1
 10945  0189' 0800'              	movf	?___flsub^(0+128),w
 10946  018A' 1683               	bsf	3,5	;RP0=1, select bank3
 10947  018B' 1703               	bsf	3,6	;RP1=1, select bank3
 10948  018C' 0080'              	movwf	sprintf@fval^(0+384)
 10949  018D'                    l5015:
 10950                           
 10951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10952  018D' 0180'              	clrf	sprintf@eexp^(0+384)
 10953  018E' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
 10954  018F'                    l5017:
 10955                           
 10956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10957  018F' 0180'              	clrf	sprintf@c^(0+384)
 10958  0190' 0A80'              	incf	sprintf@c^(0+384),f
 10959  0191'                    l5023:
 10960                           
 10961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10962  0191' 0800'              	movf	sprintf@c^(0+384),w
 10963  0192' 1683               	bsf	3,5	;RP0=1, select bank1
 10964  0193' 1303               	bcf	3,6	;RP1=0, select bank1
 10965  0194' 0080'              	movwf	??_sprintf^(0+128)
 10966  0195' 3001               	movlw	1
 10967  0196'                    u8845:
 10968  0196' 1003               	clrc
 10969  0197' 0D80'              	rlf	??_sprintf^(0+128),f
 10970  0198' 3EFF               	addlw	-1
 10971  0199' 1D03               	skipz
 10972  019A' 2800'              	goto	u8845
 10973  019B' 1003               	clrc
 10974  019C' 0D00'              	rlf	??_sprintf^(0+128),w
 10975  019D' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10976  019E' 0084               	movwf	4
 10977  019F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10978  01A4' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10979  01A5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10980  01AA' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 10981  01AB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10982  01B0' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 10983  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10984  01B6' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 10985  01B7' 0800'              	movf	(??_sprintf+4)^(0+128),w
 10986  01B8' 1683               	bsf	3,5	;RP0=1, select bank3
 10987  01B9' 1703               	bsf	3,6	;RP1=1, select bank3
 10988  01BA' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 10989  01BB' 1D03               	skipz
 10990  01BC' 2800'              	goto	u8855
 10991  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
 10992  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
 10993  01BF' 0800'              	movf	(??_sprintf+3)^(0+128),w
 10994  01C0' 1683               	bsf	3,5	;RP0=1, select bank3
 10995  01C1' 1703               	bsf	3,6	;RP1=1, select bank3
 10996  01C2' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 10997  01C3' 1D03               	skipz
 10998  01C4' 2800'              	goto	u8855
 10999  01C5' 1683               	bsf	3,5	;RP0=1, select bank1
 11000  01C6' 1303               	bcf	3,6	;RP1=0, select bank1
 11001  01C7' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11002  01C8' 1683               	bsf	3,5	;RP0=1, select bank3
 11003  01C9' 1703               	bsf	3,6	;RP1=1, select bank3
 11004  01CA' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 11005  01CB' 1D03               	skipz
 11006  01CC' 2800'              	goto	u8855
 11007  01CD' 1683               	bsf	3,5	;RP0=1, select bank1
 11008  01CE' 1303               	bcf	3,6	;RP1=0, select bank1
 11009  01CF' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11010  01D0' 1683               	bsf	3,5	;RP0=1, select bank3
 11011  01D1' 1703               	bsf	3,6	;RP1=1, select bank3
 11012  01D2' 0200'              	subwf	sprintf@val^(0+384),w
 11013  01D3'                    u8855:
 11014  01D3' 1803               	skipnc
 11015  01D4' 2800'              	goto	u8851
 11016  01D5' 2800'              	goto	u8850
 11017  01D6'                    u8851:
 11018  01D6' 2800'              	goto	l5027
 11019  01D7'                    u8850:
 11020  01D7' 2800'              	goto	l5029
 11021  01D8'                    l5027:
 11022  01D8' 3001               	movlw	1
 11023  01D9' 1683               	bsf	3,5	;RP0=1, select bank1
 11024  01DA' 1303               	bcf	3,6	;RP1=0, select bank1
 11025  01DB' 0080'              	movwf	??_sprintf^(0+128)
 11026  01DC' 0800'              	movf	??_sprintf^(0+128),w
 11027  01DD' 1683               	bsf	3,5	;RP0=1, select bank3
 11028  01DE' 1703               	bsf	3,6	;RP1=1, select bank3
 11029  01DF' 0780'              	addwf	sprintf@c^(0+384),f
 11030  01E0' 300A               	movlw	10
 11031  01E1' 0600'              	xorwf	sprintf@c^(0+384),w
 11032  01E2' 1D03               	btfss	3,2
 11033  01E3' 2800'              	goto	u8861
 11034  01E4' 2800'              	goto	u8860
 11035  01E5'                    u8861:
 11036  01E5' 2800'              	goto	l5023
 11037  01E6'                    u8860:
 11038  01E6'                    l5029:
 11039                           
 11040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11041  01E6' 0800'              	movf	sprintf@c^(0+384),w
 11042  01E7' 0700'              	addwf	sprintf@prec^(0+384),w
 11043  01E8' 1683               	bsf	3,5	;RP0=1, select bank1
 11044  01E9' 1303               	bcf	3,6	;RP1=0, select bank1
 11045  01EA' 0080'              	movwf	??_sprintf^(0+128)
 11046  01EB' 1683               	bsf	3,5	;RP0=1, select bank3
 11047  01EC' 1703               	bsf	3,6	;RP1=1, select bank3
 11048  01ED' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 11049  01EE' 1803               	skipnc
 11050  01EF' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 11051  01F0' 1683               	bsf	3,5	;RP0=1, select bank1
 11052  01F1' 1303               	bcf	3,6	;RP1=0, select bank1
 11053  01F2' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11054  01F3' 1683               	bsf	3,5	;RP0=1, select bank3
 11055  01F4' 1703               	bsf	3,6	;RP1=1, select bank3
 11056  01F5' 0800'              	movf	sprintf@eexp^(0+384),w
 11057  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
 11058  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
 11059  01F8' 0700'              	addwf	??_sprintf^(0+128),w
 11060  01F9' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11061  01FA' 1683               	bsf	3,5	;RP0=1, select bank3
 11062  01FB' 1703               	bsf	3,6	;RP1=1, select bank3
 11063  01FC' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 11064  01FD' 1803               	skipnc
 11065  01FE' 0A00'              	incf	(sprintf@eexp+1)^(0+384),w
 11066  01FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11067  0200' 1303               	bcf	3,6	;RP1=0, select bank1
 11068  0201' 0700'              	addwf	(??_sprintf+1)^(0+128),w
 11069  0202' 0080'              	movwf	(??_sprintf+3)^(0+128)
 11070  0203' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11071  0204' 1683               	bsf	3,5	;RP0=1, select bank3
 11072  0205' 1703               	bsf	3,6	;RP1=1, select bank3
 11073  0206' 0280'              	subwf	sprintf@width^(0+384),f
 11074  0207' 1683               	bsf	3,5	;RP0=1, select bank1
 11075  0208' 1303               	bcf	3,6	;RP1=0, select bank1
 11076  0209' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11077  020A' 1683               	bsf	3,5	;RP0=1, select bank3
 11078  020B' 1703               	bsf	3,6	;RP1=1, select bank3
 11079  020C' 1C03               	skipc
 11080  020D' 0380'              	decf	(sprintf@width+1)^(0+384),f
 11081  020E' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 11084  020F' 0800'              	movf	sprintf@prec^(0+384),w
 11085  0210' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 11086  0211' 1903               	btfsc	3,2
 11087  0212' 2800'              	goto	u8871
 11088  0213' 2800'              	goto	u8870
 11089  0214'                    u8871:
 11090  0214' 2800'              	goto	l5033
 11091  0215'                    u8870:
 11092  0215'                    l5031:
 11093                           
 11094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11095  0215' 30FF               	movlw	255
 11096  0216' 0780'              	addwf	sprintf@width^(0+384),f
 11097  0217' 1803               	skipnc
 11098  0218' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 11099  0219' 30FF               	movlw	255
 11100  021A' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 11101  021B'                    l5033:
 11102                           
 11103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11104  021B' 3003               	movlw	3
 11105  021C' 0500'              	andwf	sprintf@flag^(0+384),w
 11106  021D' 1683               	bsf	3,5	;RP0=1, select bank1
 11107  021E' 1303               	bcf	3,6	;RP1=0, select bank1
 11108  021F' 0080'              	movwf	??_sprintf^(0+128)
 11109  0220' 3000               	movlw	0
 11110  0221' 1683               	bsf	3,5	;RP0=1, select bank3
 11111  0222' 1703               	bsf	3,6	;RP1=1, select bank3
 11112  0223' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11113  0224' 1683               	bsf	3,5	;RP0=1, select bank1
 11114  0225' 1303               	bcf	3,6	;RP1=0, select bank1
 11115  0226' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11116  0227' 0800'              	movf	??_sprintf^(0+128),w
 11117  0228' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11118  0229' 1903               	btfsc	3,2
 11119  022A' 2800'              	goto	u8881
 11120  022B' 2800'              	goto	u8880
 11121  022C'                    u8881:
 11122  022C' 2800'              	goto	l5043
 11123  022D'                    u8880:
 11124  022D'                    l5035:
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11127  022D' 30FF               	movlw	255
 11128  022E' 1683               	bsf	3,5	;RP0=1, select bank3
 11129  022F' 1703               	bsf	3,6	;RP1=1, select bank3
 11130  0230' 0780'              	addwf	sprintf@width^(0+384),f
 11131  0231' 1803               	skipnc
 11132  0232' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 11133  0233' 30FF               	movlw	255
 11134  0234' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 11135  0235' 2800'              	goto	l5043
 11136  0236'                    l5037:
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11139  0236' 3020               	movlw	32
 11140  0237' 1683               	bsf	3,5	;RP0=1, select bank1
 11141  0238' 1303               	bcf	3,6	;RP1=0, select bank1
 11142  0239' 0080'              	movwf	??_sprintf^(0+128)
 11143  023A' 1683               	bsf	3,5	;RP0=1, select bank3
 11144  023B' 1703               	bsf	3,6	;RP1=1, select bank3
 11145  023C' 0800'              	movf	sprintf@sp^(0+384),w
 11146  023D' 0084               	movwf	4
 11147  023E' 1683               	bsf	3,5	;RP0=1, select bank1
 11148  023F' 1303               	bcf	3,6	;RP1=0, select bank1
 11149  0240' 0800'              	movf	??_sprintf^(0+128),w
 11150  0241' 1383               	bcf	3,7	;select IRP bank0
 11151  0242' 0080               	movwf	0
 11152  0243'                    l5039:
 11153  0243' 3001               	movlw	1
 11154  0244' 0080'              	movwf	??_sprintf^(0+128)
 11155  0245' 0800'              	movf	??_sprintf^(0+128),w
 11156  0246' 1683               	bsf	3,5	;RP0=1, select bank3
 11157  0247' 1703               	bsf	3,6	;RP1=1, select bank3
 11158  0248' 0780'              	addwf	sprintf@sp^(0+384),f
 11159  0249' 2800'              	goto	l5035
 11160  024A'                    l5043:
 11161                           
 11162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11163  024A' 1683               	bsf	3,5	;RP0=1, select bank3
 11164  024B' 1703               	bsf	3,6	;RP1=1, select bank3
 11165  024C' 0800'              	movf	(sprintf@width+1)^(0+384),w
 11166  024D' 3A80               	xorlw	128
 11167  024E' 00FF               	movwf	btemp+1
 11168  024F' 3080               	movlw	128
 11169  0250' 027F               	subwf	btemp+1,w
 11170  0251' 1D03               	skipz
 11171  0252' 2800'              	goto	u8895
 11172  0253' 3001               	movlw	1
 11173  0254' 0200'              	subwf	sprintf@width^(0+384),w
 11174  0255'                    u8895:
 11175  0255' 1803               	skipnc
 11176  0256' 2800'              	goto	u8891
 11177  0257' 2800'              	goto	u8890
 11178  0258'                    u8891:
 11179  0258' 2800'              	goto	l5037
 11180  0259'                    u8890:
 11181  0259'                    l5045:
 11182                           
 11183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11184  0259' 3003               	movlw	3
 11185  025A' 1683               	bsf	3,5	;RP0=1, select bank3
 11186  025B' 1703               	bsf	3,6	;RP1=1, select bank3
 11187  025C' 0500'              	andwf	sprintf@flag^(0+384),w
 11188  025D' 1683               	bsf	3,5	;RP0=1, select bank1
 11189  025E' 1303               	bcf	3,6	;RP1=0, select bank1
 11190  025F' 0080'              	movwf	??_sprintf^(0+128)
 11191  0260' 3000               	movlw	0
 11192  0261' 1683               	bsf	3,5	;RP0=1, select bank3
 11193  0262' 1703               	bsf	3,6	;RP1=1, select bank3
 11194  0263' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11195  0264' 1683               	bsf	3,5	;RP0=1, select bank1
 11196  0265' 1303               	bcf	3,6	;RP1=0, select bank1
 11197  0266' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11198  0267' 0800'              	movf	??_sprintf^(0+128),w
 11199  0268' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11200  0269' 1903               	btfsc	3,2
 11201  026A' 2800'              	goto	u8901
 11202  026B' 2800'              	goto	u8900
 11203  026C'                    u8901:
 11204  026C' 2800'              	goto	l407
 11205  026D'                    u8900:
 11206  026D'                    l5047:
 11207                           
 11208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11209  026D' 302D               	movlw	45
 11210  026E' 0080'              	movwf	??_sprintf^(0+128)
 11211  026F' 1683               	bsf	3,5	;RP0=1, select bank3
 11212  0270' 1703               	bsf	3,6	;RP1=1, select bank3
 11213  0271' 0800'              	movf	sprintf@sp^(0+384),w
 11214  0272' 0084               	movwf	4
 11215  0273' 1683               	bsf	3,5	;RP0=1, select bank1
 11216  0274' 1303               	bcf	3,6	;RP1=0, select bank1
 11217  0275' 0800'              	movf	??_sprintf^(0+128),w
 11218  0276' 1383               	bcf	3,7	;select IRP bank0
 11219  0277' 0080               	movwf	0
 11220  0278'                    l5049:
 11221  0278' 3001               	movlw	1
 11222  0279' 0080'              	movwf	??_sprintf^(0+128)
 11223  027A' 0800'              	movf	??_sprintf^(0+128),w
 11224  027B' 1683               	bsf	3,5	;RP0=1, select bank3
 11225  027C' 1703               	bsf	3,6	;RP1=1, select bank3
 11226  027D' 0780'              	addwf	sprintf@sp^(0+384),f
 11227  027E' 2800'              	goto	l407
 11228  027F'                    l5051:
 11229                           
 11230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11231  027F' 0800'              	movf	sprintf@c^(0+384),w
 11232  0280' 1683               	bsf	3,5	;RP0=1, select bank1
 11233  0281' 1303               	bcf	3,6	;RP1=0, select bank1
 11234  0282' 0080'              	movwf	??_sprintf^(0+128)
 11235  0283' 3001               	movlw	1
 11236  0284'                    u8915:
 11237  0284' 1003               	clrc
 11238  0285' 0D80'              	rlf	??_sprintf^(0+128),f
 11239  0286' 3EFF               	addlw	-1
 11240  0287' 1D03               	skipz
 11241  0288' 2800'              	goto	u8915
 11242  0289' 1003               	clrc
 11243  028A' 0D00'              	rlf	??_sprintf^(0+128),w
 11244  028B' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11245  028C' 0084               	movwf	4
 11246  028D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11247  0292' 1283               	bcf	3,5	;RP0=0, select bank0
 11248  0293' 1303               	bcf	3,6	;RP1=0, select bank0
 11249  0294' 0080'              	movwf	___lldiv@divisor
 11250  0295' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11251  029A' 0081'              	movwf	___lldiv@divisor+1
 11252  029B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11253  02A0' 0082'              	movwf	___lldiv@divisor+2
 11254  02A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11255  02A6' 0083'              	movwf	___lldiv@divisor+3
 11256  02A7' 1683               	bsf	3,5	;RP0=1, select bank3
 11257  02A8' 1703               	bsf	3,6	;RP1=1, select bank3
 11258  02A9' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11259  02AA' 1283               	bcf	3,5	;RP0=0, select bank0
 11260  02AB' 1303               	bcf	3,6	;RP1=0, select bank0
 11261  02AC' 0087'              	movwf	___lldiv@dividend+3
 11262  02AD' 1683               	bsf	3,5	;RP0=1, select bank3
 11263  02AE' 1703               	bsf	3,6	;RP1=1, select bank3
 11264  02AF' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11265  02B0' 1283               	bcf	3,5	;RP0=0, select bank0
 11266  02B1' 1303               	bcf	3,6	;RP1=0, select bank0
 11267  02B2' 0086'              	movwf	___lldiv@dividend+2
 11268  02B3' 1683               	bsf	3,5	;RP0=1, select bank3
 11269  02B4' 1703               	bsf	3,6	;RP1=1, select bank3
 11270  02B5' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11271  02B6' 1283               	bcf	3,5	;RP0=0, select bank0
 11272  02B7' 1303               	bcf	3,6	;RP1=0, select bank0
 11273  02B8' 0085'              	movwf	___lldiv@dividend+1
 11274  02B9' 1683               	bsf	3,5	;RP0=1, select bank3
 11275  02BA' 1703               	bsf	3,6	;RP1=1, select bank3
 11276  02BB' 0800'              	movf	sprintf@val^(0+384),w
 11277  02BC' 1283               	bcf	3,5	;RP0=0, select bank0
 11278  02BD' 1303               	bcf	3,6	;RP1=0, select bank0
 11279  02BE' 0084'              	movwf	___lldiv@dividend
 11280  02BF' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11281  02C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11282  02C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11283  02C6' 0803'              	movf	?___lldiv+3,w
 11284  02C7' 1683               	bsf	3,5	;RP0=1, select bank3
 11285  02C8' 1703               	bsf	3,6	;RP1=1, select bank3
 11286  02C9' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11287  02CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11288  02CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11289  02CC' 0802'              	movf	?___lldiv+2,w
 11290  02CD' 1683               	bsf	3,5	;RP0=1, select bank3
 11291  02CE' 1703               	bsf	3,6	;RP1=1, select bank3
 11292  02CF' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11293  02D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11294  02D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11295  02D2' 0801'              	movf	?___lldiv+1,w
 11296  02D3' 1683               	bsf	3,5	;RP0=1, select bank3
 11297  02D4' 1703               	bsf	3,6	;RP1=1, select bank3
 11298  02D5' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11299  02D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11300  02D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11301  02D8' 0800'              	movf	?___lldiv,w
 11302  02D9' 1683               	bsf	3,5	;RP0=1, select bank3
 11303  02DA' 1703               	bsf	3,6	;RP1=1, select bank3
 11304  02DB' 0080'              	movwf	sprintf@tmpval^(0+384)
 11305  02DC'                    l5053:
 11306                           
 11307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11308  02DC' 3000               	movlw	0
 11309  02DD' 1283               	bcf	3,5	;RP0=0, select bank0
 11310  02DE' 1303               	bcf	3,6	;RP1=0, select bank0
 11311  02DF' 008B'              	movwf	___llmod@divisor+3
 11312  02E0' 3000               	movlw	0
 11313  02E1' 008A'              	movwf	___llmod@divisor+2
 11314  02E2' 3000               	movlw	0
 11315  02E3' 0089'              	movwf	___llmod@divisor+1
 11316  02E4' 300A               	movlw	10
 11317  02E5' 0088'              	movwf	___llmod@divisor
 11318  02E6' 1683               	bsf	3,5	;RP0=1, select bank3
 11319  02E7' 1703               	bsf	3,6	;RP1=1, select bank3
 11320  02E8' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11321  02E9' 1283               	bcf	3,5	;RP0=0, select bank0
 11322  02EA' 1303               	bcf	3,6	;RP1=0, select bank0
 11323  02EB' 008F'              	movwf	___llmod@dividend+3
 11324  02EC' 1683               	bsf	3,5	;RP0=1, select bank3
 11325  02ED' 1703               	bsf	3,6	;RP1=1, select bank3
 11326  02EE' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11327  02EF' 1283               	bcf	3,5	;RP0=0, select bank0
 11328  02F0' 1303               	bcf	3,6	;RP1=0, select bank0
 11329  02F1' 008E'              	movwf	___llmod@dividend+2
 11330  02F2' 1683               	bsf	3,5	;RP0=1, select bank3
 11331  02F3' 1703               	bsf	3,6	;RP1=1, select bank3
 11332  02F4' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11333  02F5' 1283               	bcf	3,5	;RP0=0, select bank0
 11334  02F6' 1303               	bcf	3,6	;RP1=0, select bank0
 11335  02F7' 008D'              	movwf	___llmod@dividend+1
 11336  02F8' 1683               	bsf	3,5	;RP0=1, select bank3
 11337  02F9' 1703               	bsf	3,6	;RP1=1, select bank3
 11338  02FA' 0800'              	movf	sprintf@tmpval^(0+384),w
 11339  02FB' 1283               	bcf	3,5	;RP0=0, select bank0
 11340  02FC' 1303               	bcf	3,6	;RP1=0, select bank0
 11341  02FD' 008C'              	movwf	___llmod@dividend
 11342  02FE' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11343  0303' 1283               	bcf	3,5	;RP0=0, select bank0
 11344  0304' 1303               	bcf	3,6	;RP1=0, select bank0
 11345  0305' 080B'              	movf	?___llmod+3,w
 11346  0306' 1683               	bsf	3,5	;RP0=1, select bank3
 11347  0307' 1703               	bsf	3,6	;RP1=1, select bank3
 11348  0308' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11349  0309' 1283               	bcf	3,5	;RP0=0, select bank0
 11350  030A' 1303               	bcf	3,6	;RP1=0, select bank0
 11351  030B' 080A'              	movf	?___llmod+2,w
 11352  030C' 1683               	bsf	3,5	;RP0=1, select bank3
 11353  030D' 1703               	bsf	3,6	;RP1=1, select bank3
 11354  030E' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11355  030F' 1283               	bcf	3,5	;RP0=0, select bank0
 11356  0310' 1303               	bcf	3,6	;RP1=0, select bank0
 11357  0311' 0809'              	movf	?___llmod+1,w
 11358  0312' 1683               	bsf	3,5	;RP0=1, select bank3
 11359  0313' 1703               	bsf	3,6	;RP1=1, select bank3
 11360  0314' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11361  0315' 1283               	bcf	3,5	;RP0=0, select bank0
 11362  0316' 1303               	bcf	3,6	;RP1=0, select bank0
 11363  0317' 0808'              	movf	?___llmod,w
 11364  0318' 1683               	bsf	3,5	;RP0=1, select bank3
 11365  0319' 1703               	bsf	3,6	;RP1=1, select bank3
 11366  031A' 0080'              	movwf	sprintf@tmpval^(0+384)
 11367  031B'                    l5055:
 11368                           
 11369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11370  031B' 0800'              	movf	sprintf@tmpval^(0+384),w
 11371  031C' 3E30               	addlw	48
 11372  031D' 1683               	bsf	3,5	;RP0=1, select bank1
 11373  031E' 1303               	bcf	3,6	;RP1=0, select bank1
 11374  031F' 0080'              	movwf	??_sprintf^(0+128)
 11375  0320' 1683               	bsf	3,5	;RP0=1, select bank3
 11376  0321' 1703               	bsf	3,6	;RP1=1, select bank3
 11377  0322' 0800'              	movf	sprintf@sp^(0+384),w
 11378  0323' 0084               	movwf	4
 11379  0324' 1683               	bsf	3,5	;RP0=1, select bank1
 11380  0325' 1303               	bcf	3,6	;RP1=0, select bank1
 11381  0326' 0800'              	movf	??_sprintf^(0+128),w
 11382  0327' 1383               	bcf	3,7	;select IRP bank0
 11383  0328' 0080               	movwf	0
 11384  0329' 3001               	movlw	1
 11385  032A' 0080'              	movwf	??_sprintf^(0+128)
 11386  032B' 0800'              	movf	??_sprintf^(0+128),w
 11387  032C' 1683               	bsf	3,5	;RP0=1, select bank3
 11388  032D' 1703               	bsf	3,6	;RP1=1, select bank3
 11389  032E' 0780'              	addwf	sprintf@sp^(0+384),f
 11390  032F'                    l407:	
 11391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11392                           
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11395  032F' 3001               	movlw	1
 11396  0330' 1683               	bsf	3,5	;RP0=1, select bank3
 11397  0331' 1703               	bsf	3,6	;RP1=1, select bank3
 11398  0332' 0280'              	subwf	sprintf@c^(0+384),f
 11399  0333' 0A00'              	incf	sprintf@c^(0+384),w
 11400  0334' 1D03               	btfss	3,2
 11401  0335' 2800'              	goto	u8921
 11402  0336' 2800'              	goto	u8920
 11403  0337'                    u8921:
 11404  0337' 2800'              	goto	l5051
 11405  0338'                    u8920:
 11406  0338' 2800'              	goto	l5063
 11407  0339'                    l5057:
 11408                           
 11409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11410  0339' 3030               	movlw	48
 11411  033A' 1683               	bsf	3,5	;RP0=1, select bank1
 11412  033B' 1303               	bcf	3,6	;RP1=0, select bank1
 11413  033C' 0080'              	movwf	??_sprintf^(0+128)
 11414  033D' 1683               	bsf	3,5	;RP0=1, select bank3
 11415  033E' 1703               	bsf	3,6	;RP1=1, select bank3
 11416  033F' 0800'              	movf	sprintf@sp^(0+384),w
 11417  0340' 0084               	movwf	4
 11418  0341' 1683               	bsf	3,5	;RP0=1, select bank1
 11419  0342' 1303               	bcf	3,6	;RP1=0, select bank1
 11420  0343' 0800'              	movf	??_sprintf^(0+128),w
 11421  0344' 1383               	bcf	3,7	;select IRP bank0
 11422  0345' 0080               	movwf	0
 11423  0346'                    l5059:
 11424  0346' 3001               	movlw	1
 11425  0347' 0080'              	movwf	??_sprintf^(0+128)
 11426  0348' 0800'              	movf	??_sprintf^(0+128),w
 11427  0349' 1683               	bsf	3,5	;RP0=1, select bank3
 11428  034A' 1703               	bsf	3,6	;RP1=1, select bank3
 11429  034B' 0780'              	addwf	sprintf@sp^(0+384),f
 11430  034C'                    l5061:
 11431                           
 11432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11433  034C' 30FF               	movlw	255
 11434  034D' 0780'              	addwf	sprintf@eexp^(0+384),f
 11435  034E' 1803               	skipnc
 11436  034F' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 11437  0350' 30FF               	movlw	255
 11438  0351' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 11439  0352'                    l5063:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11442  0352' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 11443  0353' 3A80               	xorlw	128
 11444  0354' 00FF               	movwf	btemp+1
 11445  0355' 3080               	movlw	128
 11446  0356' 027F               	subwf	btemp+1,w
 11447  0357' 1D03               	skipz
 11448  0358' 2800'              	goto	u8935
 11449  0359' 3001               	movlw	1
 11450  035A' 0200'              	subwf	sprintf@eexp^(0+384),w
 11451  035B'                    u8935:
 11452  035B' 1803               	skipnc
 11453  035C' 2800'              	goto	u8931
 11454  035D' 2800'              	goto	u8930
 11455  035E'                    u8931:
 11456  035E' 2800'              	goto	l5057
 11457  035F'                    u8930:
 11458  035F'                    l5065:
 11459                           
 11460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11461  035F' 1683               	bsf	3,5	;RP0=1, select bank3
 11462  0360' 1703               	bsf	3,6	;RP1=1, select bank3
 11463  0361' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 11464  0362' 3A80               	xorlw	128
 11465  0363' 00FF               	movwf	btemp+1
 11466  0364' 3080               	movlw	128
 11467  0365' 027F               	subwf	btemp+1,w
 11468  0366' 1D03               	skipz
 11469  0367' 2800'              	goto	u8945
 11470  0368' 3009               	movlw	9
 11471  0369' 0200'              	subwf	sprintf@prec^(0+384),w
 11472  036A'                    u8945:
 11473  036A' 1C03               	skipc
 11474  036B' 2800'              	goto	u8941
 11475  036C' 2800'              	goto	u8940
 11476  036D'                    u8941:
 11477  036D' 2800'              	goto	l5069
 11478  036E'                    u8940:
 11479  036E'                    l5067:
 11480                           
 11481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11482  036E' 3008               	movlw	8
 11483  036F' 1683               	bsf	3,5	;RP0=1, select bank1
 11484  0370' 1303               	bcf	3,6	;RP1=0, select bank1
 11485  0371' 0080'              	movwf	??_sprintf^(0+128)
 11486  0372' 0800'              	movf	??_sprintf^(0+128),w
 11487  0373' 1683               	bsf	3,5	;RP0=1, select bank3
 11488  0374' 1703               	bsf	3,6	;RP1=1, select bank3
 11489  0375' 0080'              	movwf	sprintf@c^(0+384)
 11490  0376' 2800'              	goto	l414
 11491  0377'                    l5069:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11494  0377' 1683               	bsf	3,5	;RP0=1, select bank3
 11495  0378' 1703               	bsf	3,6	;RP1=1, select bank3
 11496  0379' 0800'              	movf	sprintf@prec^(0+384),w
 11497  037A' 1683               	bsf	3,5	;RP0=1, select bank1
 11498  037B' 1303               	bcf	3,6	;RP1=0, select bank1
 11499  037C' 0080'              	movwf	??_sprintf^(0+128)
 11500  037D' 0800'              	movf	??_sprintf^(0+128),w
 11501  037E' 1683               	bsf	3,5	;RP0=1, select bank3
 11502  037F' 1703               	bsf	3,6	;RP1=1, select bank3
 11503  0380' 0080'              	movwf	sprintf@c^(0+384)
 11504  0381'                    l414:
 11505                           
 11506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11507  0381' 0800'              	movf	sprintf@c^(0+384),w
 11508  0382' 1683               	bsf	3,5	;RP0=1, select bank1
 11509  0383' 1303               	bcf	3,6	;RP1=0, select bank1
 11510  0384' 0080'              	movwf	??_sprintf^(0+128)
 11511  0385' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11512  0386' 0800'              	movf	??_sprintf^(0+128),w
 11513  0387' 1683               	bsf	3,5	;RP0=1, select bank3
 11514  0388' 1703               	bsf	3,6	;RP1=1, select bank3
 11515  0389' 0280'              	subwf	sprintf@prec^(0+384),f
 11516  038A' 1683               	bsf	3,5	;RP0=1, select bank1
 11517  038B' 1303               	bcf	3,6	;RP1=0, select bank1
 11518  038C' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11519  038D' 1683               	bsf	3,5	;RP0=1, select bank3
 11520  038E' 1703               	bsf	3,6	;RP1=1, select bank3
 11521  038F' 1C03               	skipc
 11522  0390' 0380'              	decf	(sprintf@prec+1)^(0+384),f
 11523  0391' 0280'              	subwf	(sprintf@prec+1)^(0+384),f
 11524  0392'                    l5071:
 11525                           
 11526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11527  0392' 0800'              	movf	sprintf@c^(0+384),w
 11528  0393' 1903               	btfsc	3,2
 11529  0394' 2800'              	goto	u8951
 11530  0395' 2800'              	goto	u8950
 11531  0396'                    u8951:
 11532  0396' 2800'              	goto	l5077
 11533  0397'                    u8950:
 11534  0397'                    l5073:
 11535                           
 11536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11537  0397' 302E               	movlw	46
 11538  0398' 1683               	bsf	3,5	;RP0=1, select bank1
 11539  0399' 1303               	bcf	3,6	;RP1=0, select bank1
 11540  039A' 0080'              	movwf	??_sprintf^(0+128)
 11541  039B' 1683               	bsf	3,5	;RP0=1, select bank3
 11542  039C' 1703               	bsf	3,6	;RP1=1, select bank3
 11543  039D' 0800'              	movf	sprintf@sp^(0+384),w
 11544  039E' 0084               	movwf	4
 11545  039F' 1683               	bsf	3,5	;RP0=1, select bank1
 11546  03A0' 1303               	bcf	3,6	;RP1=0, select bank1
 11547  03A1' 0800'              	movf	??_sprintf^(0+128),w
 11548  03A2' 1383               	bcf	3,7	;select IRP bank0
 11549  03A3' 0080               	movwf	0
 11550  03A4'                    l5075:
 11551  03A4' 3001               	movlw	1
 11552  03A5' 0080'              	movwf	??_sprintf^(0+128)
 11553  03A6' 0800'              	movf	??_sprintf^(0+128),w
 11554  03A7' 1683               	bsf	3,5	;RP0=1, select bank3
 11555  03A8' 1703               	bsf	3,6	;RP1=1, select bank3
 11556  03A9' 0780'              	addwf	sprintf@sp^(0+384),f
 11557  03AA'                    l5077:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11560  03AA' 0800'              	movf	sprintf@c^(0+384),w
 11561  03AB' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11562  03B0' 1283               	bcf	3,5	;RP0=0, select bank0
 11563  03B1' 1303               	bcf	3,6	;RP1=0, select bank0
 11564  03B2' 0827'              	movf	?_scale+3,w
 11565  03B3' 1683               	bsf	3,5	;RP0=1, select bank3
 11566  03B4' 1703               	bsf	3,6	;RP1=1, select bank3
 11567  03B5' 0080'              	movwf	(_sprintf$1127+3)^(0+384)
 11568  03B6' 1283               	bcf	3,5	;RP0=0, select bank0
 11569  03B7' 1303               	bcf	3,6	;RP1=0, select bank0
 11570  03B8' 0826'              	movf	?_scale+2,w
 11571  03B9' 1683               	bsf	3,5	;RP0=1, select bank3
 11572  03BA' 1703               	bsf	3,6	;RP1=1, select bank3
 11573  03BB' 0080'              	movwf	(_sprintf$1127+2)^(0+384)
 11574  03BC' 1283               	bcf	3,5	;RP0=0, select bank0
 11575  03BD' 1303               	bcf	3,6	;RP1=0, select bank0
 11576  03BE' 0825'              	movf	?_scale+1,w
 11577  03BF' 1683               	bsf	3,5	;RP0=1, select bank3
 11578  03C0' 1703               	bsf	3,6	;RP1=1, select bank3
 11579  03C1' 0080'              	movwf	(_sprintf$1127+1)^(0+384)
 11580  03C2' 1283               	bcf	3,5	;RP0=0, select bank0
 11581  03C3' 1303               	bcf	3,6	;RP1=0, select bank0
 11582  03C4' 0824'              	movf	?_scale,w
 11583  03C5' 1683               	bsf	3,5	;RP0=1, select bank3
 11584  03C6' 1703               	bsf	3,6	;RP1=1, select bank3
 11585  03C7' 0080'              	movwf	_sprintf$1127^(0+384)
 11586  03C8'                    l5079:
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11589  03C8' 0800'              	movf	(_sprintf$1127+3)^(0+384),w
 11590  03C9' 1283               	bcf	3,5	;RP0=0, select bank0
 11591  03CA' 1303               	bcf	3,6	;RP1=0, select bank0
 11592  03CB' 0091'              	movwf	___flmul@a+3
 11593  03CC' 1683               	bsf	3,5	;RP0=1, select bank3
 11594  03CD' 1703               	bsf	3,6	;RP1=1, select bank3
 11595  03CE' 0800'              	movf	(_sprintf$1127+2)^(0+384),w
 11596  03CF' 1283               	bcf	3,5	;RP0=0, select bank0
 11597  03D0' 1303               	bcf	3,6	;RP1=0, select bank0
 11598  03D1' 0090'              	movwf	___flmul@a+2
 11599  03D2' 1683               	bsf	3,5	;RP0=1, select bank3
 11600  03D3' 1703               	bsf	3,6	;RP1=1, select bank3
 11601  03D4' 0800'              	movf	(_sprintf$1127+1)^(0+384),w
 11602  03D5' 1283               	bcf	3,5	;RP0=0, select bank0
 11603  03D6' 1303               	bcf	3,6	;RP1=0, select bank0
 11604  03D7' 008F'              	movwf	___flmul@a+1
 11605  03D8' 1683               	bsf	3,5	;RP0=1, select bank3
 11606  03D9' 1703               	bsf	3,6	;RP1=1, select bank3
 11607  03DA' 0800'              	movf	_sprintf$1127^(0+384),w
 11608  03DB' 1283               	bcf	3,5	;RP0=0, select bank0
 11609  03DC' 1303               	bcf	3,6	;RP1=0, select bank0
 11610  03DD' 008E'              	movwf	___flmul@a
 11611  03DE' 1683               	bsf	3,5	;RP0=1, select bank3
 11612  03DF' 1703               	bsf	3,6	;RP1=1, select bank3
 11613  03E0' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11614  03E1' 1283               	bcf	3,5	;RP0=0, select bank0
 11615  03E2' 1303               	bcf	3,6	;RP1=0, select bank0
 11616  03E3' 008D'              	movwf	___flmul@b+3
 11617  03E4' 1683               	bsf	3,5	;RP0=1, select bank3
 11618  03E5' 1703               	bsf	3,6	;RP1=1, select bank3
 11619  03E6' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11620  03E7' 1283               	bcf	3,5	;RP0=0, select bank0
 11621  03E8' 1303               	bcf	3,6	;RP1=0, select bank0
 11622  03E9' 008C'              	movwf	___flmul@b+2
 11623  03EA' 1683               	bsf	3,5	;RP0=1, select bank3
 11624  03EB' 1703               	bsf	3,6	;RP1=1, select bank3
 11625  03EC' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11626  03ED' 1283               	bcf	3,5	;RP0=0, select bank0
 11627  03EE' 1303               	bcf	3,6	;RP1=0, select bank0
 11628  03EF' 008B'              	movwf	___flmul@b+1
 11629  03F0' 1683               	bsf	3,5	;RP0=1, select bank3
 11630  03F1' 1703               	bsf	3,6	;RP1=1, select bank3
 11631  03F2' 0800'              	movf	sprintf@fval^(0+384),w
 11632  03F3' 1283               	bcf	3,5	;RP0=0, select bank0
 11633  03F4' 1303               	bcf	3,6	;RP1=0, select bank0
 11634  03F5' 008A'              	movwf	___flmul@b
 11635  03F6' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11636  03FB' 1283               	bcf	3,5	;RP0=0, select bank0
 11637  03FC' 1303               	bcf	3,6	;RP1=0, select bank0
 11638  03FD' 080D'              	movf	?___flmul+3,w
 11639  03FE' 00BA'              	movwf	___fltol@f1+3
 11640  03FF' 080C'              	movf	?___flmul+2,w
 11641  0400' 00B9'              	movwf	___fltol@f1+2
 11642  0401' 080B'              	movf	?___flmul+1,w
 11643  0402' 00B8'              	movwf	___fltol@f1+1
 11644  0403' 080A'              	movf	?___flmul,w
 11645  0404' 00B7'              	movwf	___fltol@f1
 11646  0405' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11647  040A' 1283               	bcf	3,5	;RP0=0, select bank0
 11648  040B' 1303               	bcf	3,6	;RP1=0, select bank0
 11649  040C' 083A'              	movf	?___fltol+3,w
 11650  040D' 1683               	bsf	3,5	;RP0=1, select bank3
 11651  040E' 1703               	bsf	3,6	;RP1=1, select bank3
 11652  040F' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11653  0410' 1283               	bcf	3,5	;RP0=0, select bank0
 11654  0411' 1303               	bcf	3,6	;RP1=0, select bank0
 11655  0412' 0839'              	movf	?___fltol+2,w
 11656  0413' 1683               	bsf	3,5	;RP0=1, select bank3
 11657  0414' 1703               	bsf	3,6	;RP1=1, select bank3
 11658  0415' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11659  0416' 1283               	bcf	3,5	;RP0=0, select bank0
 11660  0417' 1303               	bcf	3,6	;RP1=0, select bank0
 11661  0418' 0838'              	movf	?___fltol+1,w
 11662  0419' 1683               	bsf	3,5	;RP0=1, select bank3
 11663  041A' 1703               	bsf	3,6	;RP1=1, select bank3
 11664  041B' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11665  041C' 1283               	bcf	3,5	;RP0=0, select bank0
 11666  041D' 1303               	bcf	3,6	;RP1=0, select bank0
 11667  041E' 0837'              	movf	?___fltol,w
 11668  041F' 1683               	bsf	3,5	;RP0=1, select bank3
 11669  0420' 1703               	bsf	3,6	;RP1=1, select bank3
 11670  0421' 0080'              	movwf	sprintf@val^(0+384)
 11671                           
 11672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11673  0422' 2800'              	goto	l5089
 11674  0423'                    l5081:
 11675                           
 11676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11677  0423' 0800'              	movf	sprintf@c^(0+384),w
 11678  0424' 1683               	bsf	3,5	;RP0=1, select bank1
 11679  0425' 1303               	bcf	3,6	;RP1=0, select bank1
 11680  0426' 0080'              	movwf	??_sprintf^(0+128)
 11681  0427' 3001               	movlw	1
 11682  0428'                    u8965:
 11683  0428' 1003               	clrc
 11684  0429' 0D80'              	rlf	??_sprintf^(0+128),f
 11685  042A' 3EFF               	addlw	-1
 11686  042B' 1D03               	skipz
 11687  042C' 2800'              	goto	u8965
 11688  042D' 1003               	clrc
 11689  042E' 0D00'              	rlf	??_sprintf^(0+128),w
 11690  042F' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11691  0430' 0084               	movwf	4
 11692  0431' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11693  0436' 1283               	bcf	3,5	;RP0=0, select bank0
 11694  0437' 1303               	bcf	3,6	;RP1=0, select bank0
 11695  0438' 0080'              	movwf	___lldiv@divisor
 11696  0439' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11697  043E' 0081'              	movwf	___lldiv@divisor+1
 11698  043F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11699  0444' 0082'              	movwf	___lldiv@divisor+2
 11700  0445' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11701  044A' 0083'              	movwf	___lldiv@divisor+3
 11702  044B' 1683               	bsf	3,5	;RP0=1, select bank3
 11703  044C' 1703               	bsf	3,6	;RP1=1, select bank3
 11704  044D' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11705  044E' 1283               	bcf	3,5	;RP0=0, select bank0
 11706  044F' 1303               	bcf	3,6	;RP1=0, select bank0
 11707  0450' 0087'              	movwf	___lldiv@dividend+3
 11708  0451' 1683               	bsf	3,5	;RP0=1, select bank3
 11709  0452' 1703               	bsf	3,6	;RP1=1, select bank3
 11710  0453' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11711  0454' 1283               	bcf	3,5	;RP0=0, select bank0
 11712  0455' 1303               	bcf	3,6	;RP1=0, select bank0
 11713  0456' 0086'              	movwf	___lldiv@dividend+2
 11714  0457' 1683               	bsf	3,5	;RP0=1, select bank3
 11715  0458' 1703               	bsf	3,6	;RP1=1, select bank3
 11716  0459' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11717  045A' 1283               	bcf	3,5	;RP0=0, select bank0
 11718  045B' 1303               	bcf	3,6	;RP1=0, select bank0
 11719  045C' 0085'              	movwf	___lldiv@dividend+1
 11720  045D' 1683               	bsf	3,5	;RP0=1, select bank3
 11721  045E' 1703               	bsf	3,6	;RP1=1, select bank3
 11722  045F' 0800'              	movf	sprintf@val^(0+384),w
 11723  0460' 1283               	bcf	3,5	;RP0=0, select bank0
 11724  0461' 1303               	bcf	3,6	;RP1=0, select bank0
 11725  0462' 0084'              	movwf	___lldiv@dividend
 11726  0463' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11727  0468' 1283               	bcf	3,5	;RP0=0, select bank0
 11728  0469' 1303               	bcf	3,6	;RP1=0, select bank0
 11729  046A' 0803'              	movf	?___lldiv+3,w
 11730  046B' 1683               	bsf	3,5	;RP0=1, select bank3
 11731  046C' 1703               	bsf	3,6	;RP1=1, select bank3
 11732  046D' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11733  046E' 1283               	bcf	3,5	;RP0=0, select bank0
 11734  046F' 1303               	bcf	3,6	;RP1=0, select bank0
 11735  0470' 0802'              	movf	?___lldiv+2,w
 11736  0471' 1683               	bsf	3,5	;RP0=1, select bank3
 11737  0472' 1703               	bsf	3,6	;RP1=1, select bank3
 11738  0473' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11739  0474' 1283               	bcf	3,5	;RP0=0, select bank0
 11740  0475' 1303               	bcf	3,6	;RP1=0, select bank0
 11741  0476' 0801'              	movf	?___lldiv+1,w
 11742  0477' 1683               	bsf	3,5	;RP0=1, select bank3
 11743  0478' 1703               	bsf	3,6	;RP1=1, select bank3
 11744  0479' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11745  047A' 1283               	bcf	3,5	;RP0=0, select bank0
 11746  047B' 1303               	bcf	3,6	;RP1=0, select bank0
 11747  047C' 0800'              	movf	?___lldiv,w
 11748  047D' 1683               	bsf	3,5	;RP0=1, select bank3
 11749  047E' 1703               	bsf	3,6	;RP1=1, select bank3
 11750  047F' 0080'              	movwf	sprintf@tmpval^(0+384)
 11751  0480'                    l5083:
 11752                           
 11753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11754  0480' 3000               	movlw	0
 11755  0481' 1283               	bcf	3,5	;RP0=0, select bank0
 11756  0482' 1303               	bcf	3,6	;RP1=0, select bank0
 11757  0483' 008B'              	movwf	___llmod@divisor+3
 11758  0484' 3000               	movlw	0
 11759  0485' 008A'              	movwf	___llmod@divisor+2
 11760  0486' 3000               	movlw	0
 11761  0487' 0089'              	movwf	___llmod@divisor+1
 11762  0488' 300A               	movlw	10
 11763  0489' 0088'              	movwf	___llmod@divisor
 11764  048A' 1683               	bsf	3,5	;RP0=1, select bank3
 11765  048B' 1703               	bsf	3,6	;RP1=1, select bank3
 11766  048C' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11767  048D' 1283               	bcf	3,5	;RP0=0, select bank0
 11768  048E' 1303               	bcf	3,6	;RP1=0, select bank0
 11769  048F' 008F'              	movwf	___llmod@dividend+3
 11770  0490' 1683               	bsf	3,5	;RP0=1, select bank3
 11771  0491' 1703               	bsf	3,6	;RP1=1, select bank3
 11772  0492' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11773  0493' 1283               	bcf	3,5	;RP0=0, select bank0
 11774  0494' 1303               	bcf	3,6	;RP1=0, select bank0
 11775  0495' 008E'              	movwf	___llmod@dividend+2
 11776  0496' 1683               	bsf	3,5	;RP0=1, select bank3
 11777  0497' 1703               	bsf	3,6	;RP1=1, select bank3
 11778  0498' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11779  0499' 1283               	bcf	3,5	;RP0=0, select bank0
 11780  049A' 1303               	bcf	3,6	;RP1=0, select bank0
 11781  049B' 008D'              	movwf	___llmod@dividend+1
 11782  049C' 1683               	bsf	3,5	;RP0=1, select bank3
 11783  049D' 1703               	bsf	3,6	;RP1=1, select bank3
 11784  049E' 0800'              	movf	sprintf@tmpval^(0+384),w
 11785  049F' 1283               	bcf	3,5	;RP0=0, select bank0
 11786  04A0' 1303               	bcf	3,6	;RP1=0, select bank0
 11787  04A1' 008C'              	movwf	___llmod@dividend
 11788  04A2' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11789  04A7' 1283               	bcf	3,5	;RP0=0, select bank0
 11790  04A8' 1303               	bcf	3,6	;RP1=0, select bank0
 11791  04A9' 080B'              	movf	?___llmod+3,w
 11792  04AA' 1683               	bsf	3,5	;RP0=1, select bank3
 11793  04AB' 1703               	bsf	3,6	;RP1=1, select bank3
 11794  04AC' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11795  04AD' 1283               	bcf	3,5	;RP0=0, select bank0
 11796  04AE' 1303               	bcf	3,6	;RP1=0, select bank0
 11797  04AF' 080A'              	movf	?___llmod+2,w
 11798  04B0' 1683               	bsf	3,5	;RP0=1, select bank3
 11799  04B1' 1703               	bsf	3,6	;RP1=1, select bank3
 11800  04B2' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11801  04B3' 1283               	bcf	3,5	;RP0=0, select bank0
 11802  04B4' 1303               	bcf	3,6	;RP1=0, select bank0
 11803  04B5' 0809'              	movf	?___llmod+1,w
 11804  04B6' 1683               	bsf	3,5	;RP0=1, select bank3
 11805  04B7' 1703               	bsf	3,6	;RP1=1, select bank3
 11806  04B8' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11807  04B9' 1283               	bcf	3,5	;RP0=0, select bank0
 11808  04BA' 1303               	bcf	3,6	;RP1=0, select bank0
 11809  04BB' 0808'              	movf	?___llmod,w
 11810  04BC' 1683               	bsf	3,5	;RP0=1, select bank3
 11811  04BD' 1703               	bsf	3,6	;RP1=1, select bank3
 11812  04BE' 0080'              	movwf	sprintf@tmpval^(0+384)
 11813  04BF'                    l5085:
 11814                           
 11815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11816  04BF' 0800'              	movf	sprintf@tmpval^(0+384),w
 11817  04C0' 3E30               	addlw	48
 11818  04C1' 1683               	bsf	3,5	;RP0=1, select bank1
 11819  04C2' 1303               	bcf	3,6	;RP1=0, select bank1
 11820  04C3' 0080'              	movwf	??_sprintf^(0+128)
 11821  04C4' 1683               	bsf	3,5	;RP0=1, select bank3
 11822  04C5' 1703               	bsf	3,6	;RP1=1, select bank3
 11823  04C6' 0800'              	movf	sprintf@sp^(0+384),w
 11824  04C7' 0084               	movwf	4
 11825  04C8' 1683               	bsf	3,5	;RP0=1, select bank1
 11826  04C9' 1303               	bcf	3,6	;RP1=0, select bank1
 11827  04CA' 0800'              	movf	??_sprintf^(0+128),w
 11828  04CB' 1383               	bcf	3,7	;select IRP bank0
 11829  04CC' 0080               	movwf	0
 11830  04CD' 3001               	movlw	1
 11831  04CE' 0080'              	movwf	??_sprintf^(0+128)
 11832  04CF' 0800'              	movf	??_sprintf^(0+128),w
 11833  04D0' 1683               	bsf	3,5	;RP0=1, select bank3
 11834  04D1' 1703               	bsf	3,6	;RP1=1, select bank3
 11835  04D2' 0780'              	addwf	sprintf@sp^(0+384),f
 11836  04D3'                    l5087:
 11837                           
 11838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11839  04D3' 0800'              	movf	sprintf@c^(0+384),w
 11840  04D4' 1683               	bsf	3,5	;RP0=1, select bank1
 11841  04D5' 1303               	bcf	3,6	;RP1=0, select bank1
 11842  04D6' 0080'              	movwf	??_sprintf^(0+128)
 11843  04D7' 3001               	movlw	1
 11844  04D8'                    u8975:
 11845  04D8' 1003               	clrc
 11846  04D9' 0D80'              	rlf	??_sprintf^(0+128),f
 11847  04DA' 3EFF               	addlw	-1
 11848  04DB' 1D03               	skipz
 11849  04DC' 2800'              	goto	u8975
 11850  04DD' 1003               	clrc
 11851  04DE' 0D00'              	rlf	??_sprintf^(0+128),w
 11852  04DF' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11853  04E0' 0084               	movwf	4
 11854  04E1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11855  04E6' 1283               	bcf	3,5	;RP0=0, select bank0
 11856  04E7' 1303               	bcf	3,6	;RP1=0, select bank0
 11857  04E8' 0088'              	movwf	___llmod@divisor
 11858  04E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11859  04EE' 0089'              	movwf	___llmod@divisor+1
 11860  04EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11861  04F4' 008A'              	movwf	___llmod@divisor+2
 11862  04F5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11863  04FA' 008B'              	movwf	___llmod@divisor+3
 11864  04FB' 1683               	bsf	3,5	;RP0=1, select bank3
 11865  04FC' 1703               	bsf	3,6	;RP1=1, select bank3
 11866  04FD' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11867  04FE' 1283               	bcf	3,5	;RP0=0, select bank0
 11868  04FF' 1303               	bcf	3,6	;RP1=0, select bank0
 11869  0500' 008F'              	movwf	___llmod@dividend+3
 11870  0501' 1683               	bsf	3,5	;RP0=1, select bank3
 11871  0502' 1703               	bsf	3,6	;RP1=1, select bank3
 11872  0503' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11873  0504' 1283               	bcf	3,5	;RP0=0, select bank0
 11874  0505' 1303               	bcf	3,6	;RP1=0, select bank0
 11875  0506' 008E'              	movwf	___llmod@dividend+2
 11876  0507' 1683               	bsf	3,5	;RP0=1, select bank3
 11877  0508' 1703               	bsf	3,6	;RP1=1, select bank3
 11878  0509' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11879  050A' 1283               	bcf	3,5	;RP0=0, select bank0
 11880  050B' 1303               	bcf	3,6	;RP1=0, select bank0
 11881  050C' 008D'              	movwf	___llmod@dividend+1
 11882  050D' 1683               	bsf	3,5	;RP0=1, select bank3
 11883  050E' 1703               	bsf	3,6	;RP1=1, select bank3
 11884  050F' 0800'              	movf	sprintf@val^(0+384),w
 11885  0510' 1283               	bcf	3,5	;RP0=0, select bank0
 11886  0511' 1303               	bcf	3,6	;RP1=0, select bank0
 11887  0512' 008C'              	movwf	___llmod@dividend
 11888  0513' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11889  0518' 1283               	bcf	3,5	;RP0=0, select bank0
 11890  0519' 1303               	bcf	3,6	;RP1=0, select bank0
 11891  051A' 080B'              	movf	?___llmod+3,w
 11892  051B' 1683               	bsf	3,5	;RP0=1, select bank3
 11893  051C' 1703               	bsf	3,6	;RP1=1, select bank3
 11894  051D' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11895  051E' 1283               	bcf	3,5	;RP0=0, select bank0
 11896  051F' 1303               	bcf	3,6	;RP1=0, select bank0
 11897  0520' 080A'              	movf	?___llmod+2,w
 11898  0521' 1683               	bsf	3,5	;RP0=1, select bank3
 11899  0522' 1703               	bsf	3,6	;RP1=1, select bank3
 11900  0523' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11901  0524' 1283               	bcf	3,5	;RP0=0, select bank0
 11902  0525' 1303               	bcf	3,6	;RP1=0, select bank0
 11903  0526' 0809'              	movf	?___llmod+1,w
 11904  0527' 1683               	bsf	3,5	;RP0=1, select bank3
 11905  0528' 1703               	bsf	3,6	;RP1=1, select bank3
 11906  0529' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11907  052A' 1283               	bcf	3,5	;RP0=0, select bank0
 11908  052B' 1303               	bcf	3,6	;RP1=0, select bank0
 11909  052C' 0808'              	movf	?___llmod,w
 11910  052D' 1683               	bsf	3,5	;RP0=1, select bank3
 11911  052E' 1703               	bsf	3,6	;RP1=1, select bank3
 11912  052F' 0080'              	movwf	sprintf@val^(0+384)
 11913  0530'                    l5089:
 11914                           
 11915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11916  0530' 3001               	movlw	1
 11917  0531' 0280'              	subwf	sprintf@c^(0+384),f
 11918  0532' 0A00'              	incf	sprintf@c^(0+384),w
 11919  0533' 1D03               	btfss	3,2
 11920  0534' 2800'              	goto	u8981
 11921  0535' 2800'              	goto	u8980
 11922  0536'                    u8981:
 11923  0536' 2800'              	goto	l5081
 11924  0537'                    u8980:
 11925  0537' 2800'              	goto	l5097
 11926  0538'                    l5091:
 11927                           
 11928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11929  0538' 3030               	movlw	48
 11930  0539' 1683               	bsf	3,5	;RP0=1, select bank1
 11931  053A' 1303               	bcf	3,6	;RP1=0, select bank1
 11932  053B' 0080'              	movwf	??_sprintf^(0+128)
 11933  053C' 1683               	bsf	3,5	;RP0=1, select bank3
 11934  053D' 1703               	bsf	3,6	;RP1=1, select bank3
 11935  053E' 0800'              	movf	sprintf@sp^(0+384),w
 11936  053F' 0084               	movwf	4
 11937  0540' 1683               	bsf	3,5	;RP0=1, select bank1
 11938  0541' 1303               	bcf	3,6	;RP1=0, select bank1
 11939  0542' 0800'              	movf	??_sprintf^(0+128),w
 11940  0543' 1383               	bcf	3,7	;select IRP bank0
 11941  0544' 0080               	movwf	0
 11942  0545'                    l5093:
 11943  0545' 3001               	movlw	1
 11944  0546' 0080'              	movwf	??_sprintf^(0+128)
 11945  0547' 0800'              	movf	??_sprintf^(0+128),w
 11946  0548' 1683               	bsf	3,5	;RP0=1, select bank3
 11947  0549' 1703               	bsf	3,6	;RP1=1, select bank3
 11948  054A' 0780'              	addwf	sprintf@sp^(0+384),f
 11949  054B'                    l5095:
 11950                           
 11951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11952  054B' 30FF               	movlw	255
 11953  054C' 0780'              	addwf	sprintf@prec^(0+384),f
 11954  054D' 1803               	skipnc
 11955  054E' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 11956  054F' 30FF               	movlw	255
 11957  0550' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 11958  0551'                    l5097:
 11959                           
 11960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11961  0551' 0800'              	movf	sprintf@prec^(0+384),w
 11962  0552' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 11963  0553' 1D03               	btfss	3,2
 11964  0554' 2800'              	goto	u8991
 11965  0555' 2800'              	goto	u8990
 11966  0556'                    u8991:
 11967  0556' 2800'              	goto	l5091
 11968  0557'                    u8990:
 11969  0557' 2800'              	goto	l5177
 11970  0558'                    l5099:
 11971                           
 11972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11973  0558' 1683               	bsf	3,5	;RP0=1, select bank3
 11974  0559' 1703               	bsf	3,6	;RP1=1, select bank3
 11975  055A' 0800'              	movf	sprintf@ap^(0+384),w
 11976  055B' 0084               	movwf	4
 11977  055C' 1383               	bcf	3,7	;select IRP bank0
 11978  055D' 0800               	movf	0,w
 11979  055E' 1683               	bsf	3,5	;RP0=1, select bank1
 11980  055F' 1303               	bcf	3,6	;RP1=0, select bank1
 11981  0560' 0080'              	movwf	??_sprintf^(0+128)
 11982  0561' 0A84               	incf	4,f
 11983  0562' 0800               	movf	0,w
 11984  0563' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11985  0564' 0800'              	movf	??_sprintf^(0+128),w
 11986  0565' 1683               	bsf	3,5	;RP0=1, select bank3
 11987  0566' 1703               	bsf	3,6	;RP1=1, select bank3
 11988  0567' 0080'              	movwf	sprintf@val^(0+384)
 11989  0568' 1683               	bsf	3,5	;RP0=1, select bank1
 11990  0569' 1303               	bcf	3,6	;RP1=0, select bank1
 11991  056A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11992  056B' 1683               	bsf	3,5	;RP0=1, select bank3
 11993  056C' 1703               	bsf	3,6	;RP1=1, select bank3
 11994  056D' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11995  056E' 3000               	movlw	0
 11996  056F' 1B80'              	btfsc	(sprintf@val+1)^(0+384),7
 11997  0570' 30FF               	movlw	255
 11998  0571' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11999  0572' 0080'              	movwf	(sprintf@val+3)^(0+384)
 12000  0573'                    l5101:
 12001  0573' 3002               	movlw	2
 12002  0574' 1683               	bsf	3,5	;RP0=1, select bank1
 12003  0575' 1303               	bcf	3,6	;RP1=0, select bank1
 12004  0576' 0080'              	movwf	??_sprintf^(0+128)
 12005  0577' 0800'              	movf	??_sprintf^(0+128),w
 12006  0578' 1683               	bsf	3,5	;RP0=1, select bank3
 12007  0579' 1703               	bsf	3,6	;RP1=1, select bank3
 12008  057A' 0780'              	addwf	sprintf@ap^(0+384),f
 12009  057B'                    l5103:
 12010                           
 12011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 12012  057B' 1F80'              	btfss	(sprintf@val+3)^(0+384),7
 12013  057C' 2800'              	goto	u9001
 12014  057D' 2800'              	goto	u9000
 12015  057E'                    u9001:
 12016  057E' 2800'              	goto	l5109
 12017  057F'                    u9000:
 12018  057F'                    l5105:
 12019                           
 12020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 12021  057F' 3003               	movlw	3
 12022  0580' 0480'              	iorwf	sprintf@flag^(0+384),f
 12023  0581' 3000               	movlw	0
 12024  0582' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
 12025  0583'                    l5107:
 12026                           
 12027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 12028  0583' 0980'              	comf	sprintf@val^(0+384),f
 12029  0584' 0980'              	comf	(sprintf@val+1)^(0+384),f
 12030  0585' 0980'              	comf	(sprintf@val+2)^(0+384),f
 12031  0586' 0980'              	comf	(sprintf@val+3)^(0+384),f
 12032  0587' 0A80'              	incf	sprintf@val^(0+384),f
 12033  0588' 1903               	skipnz
 12034  0589' 0A80'              	incf	(sprintf@val+1)^(0+384),f
 12035  058A' 1903               	skipnz
 12036  058B' 0A80'              	incf	(sprintf@val+2)^(0+384),f
 12037  058C' 1903               	skipnz
 12038  058D' 0A80'              	incf	(sprintf@val+3)^(0+384),f
 12039  058E'                    l5109:
 12040                           
 12041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 12042  058E' 0800'              	movf	sprintf@prec^(0+384),w
 12043  058F' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 12044  0590' 1D03               	btfss	3,2
 12045  0591' 2800'              	goto	u9011
 12046  0592' 2800'              	goto	u9010
 12047  0593'                    u9011:
 12048  0593' 2800'              	goto	l5115
 12049  0594'                    u9010:
 12050  0594'                    l5111:
 12051  0594' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12052  0595' 0400'              	iorwf	(sprintf@val+2)^(0+384),w
 12053  0596' 0400'              	iorwf	(sprintf@val+1)^(0+384),w
 12054  0597' 0400'              	iorwf	sprintf@val^(0+384),w
 12055  0598' 1D03               	skipz
 12056  0599' 2800'              	goto	u9021
 12057  059A' 2800'              	goto	u9020
 12058  059B'                    u9021:
 12059  059B' 2800'              	goto	l5115
 12060  059C'                    u9020:
 12061  059C'                    l5113:
 12062                           
 12063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 12064  059C' 3001               	movlw	1
 12065  059D' 0780'              	addwf	sprintf@prec^(0+384),f
 12066  059E' 1803               	skipnc
 12067  059F' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12068  05A0' 3000               	movlw	0
 12069  05A1' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12070  05A2'                    l5115:
 12071                           
 12072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12073  05A2' 0180'              	clrf	sprintf@c^(0+384)
 12074  05A3' 0A80'              	incf	sprintf@c^(0+384),f
 12075  05A4'                    l5121:
 12076                           
 12077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 12078  05A4' 0800'              	movf	sprintf@c^(0+384),w
 12079  05A5' 1683               	bsf	3,5	;RP0=1, select bank1
 12080  05A6' 1303               	bcf	3,6	;RP1=0, select bank1
 12081  05A7' 0080'              	movwf	??_sprintf^(0+128)
 12082  05A8' 3001               	movlw	1
 12083  05A9'                    u9035:
 12084  05A9' 1003               	clrc
 12085  05AA' 0D80'              	rlf	??_sprintf^(0+128),f
 12086  05AB' 3EFF               	addlw	-1
 12087  05AC' 1D03               	skipz
 12088  05AD' 2800'              	goto	u9035
 12089  05AE' 1003               	clrc
 12090  05AF' 0D00'              	rlf	??_sprintf^(0+128),w
 12091  05B0' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12092  05B1' 0084               	movwf	4
 12093  05B2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12094  05B7' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12095  05B8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12096  05BD' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 12097  05BE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12098  05C3' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 12099  05C4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12100  05C9' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 12101  05CA' 0800'              	movf	(??_sprintf+4)^(0+128),w
 12102  05CB' 1683               	bsf	3,5	;RP0=1, select bank3
 12103  05CC' 1703               	bsf	3,6	;RP1=1, select bank3
 12104  05CD' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 12105  05CE' 1D03               	skipz
 12106  05CF' 2800'              	goto	u9045
 12107  05D0' 1683               	bsf	3,5	;RP0=1, select bank1
 12108  05D1' 1303               	bcf	3,6	;RP1=0, select bank1
 12109  05D2' 0800'              	movf	(??_sprintf+3)^(0+128),w
 12110  05D3' 1683               	bsf	3,5	;RP0=1, select bank3
 12111  05D4' 1703               	bsf	3,6	;RP1=1, select bank3
 12112  05D5' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 12113  05D6' 1D03               	skipz
 12114  05D7' 2800'              	goto	u9045
 12115  05D8' 1683               	bsf	3,5	;RP0=1, select bank1
 12116  05D9' 1303               	bcf	3,6	;RP1=0, select bank1
 12117  05DA' 0800'              	movf	(??_sprintf+2)^(0+128),w
 12118  05DB' 1683               	bsf	3,5	;RP0=1, select bank3
 12119  05DC' 1703               	bsf	3,6	;RP1=1, select bank3
 12120  05DD' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 12121  05DE' 1D03               	skipz
 12122  05DF' 2800'              	goto	u9045
 12123  05E0' 1683               	bsf	3,5	;RP0=1, select bank1
 12124  05E1' 1303               	bcf	3,6	;RP1=0, select bank1
 12125  05E2' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12126  05E3' 1683               	bsf	3,5	;RP0=1, select bank3
 12127  05E4' 1703               	bsf	3,6	;RP1=1, select bank3
 12128  05E5' 0200'              	subwf	sprintf@val^(0+384),w
 12129  05E6'                    u9045:
 12130  05E6' 1803               	skipnc
 12131  05E7' 2800'              	goto	u9041
 12132  05E8' 2800'              	goto	u9040
 12133  05E9'                    u9041:
 12134  05E9' 2800'              	goto	l5125
 12135  05EA'                    u9040:
 12136  05EA' 2800'              	goto	l5127
 12137  05EB'                    l5125:
 12138  05EB' 3001               	movlw	1
 12139  05EC' 1683               	bsf	3,5	;RP0=1, select bank1
 12140  05ED' 1303               	bcf	3,6	;RP1=0, select bank1
 12141  05EE' 0080'              	movwf	??_sprintf^(0+128)
 12142  05EF' 0800'              	movf	??_sprintf^(0+128),w
 12143  05F0' 1683               	bsf	3,5	;RP0=1, select bank3
 12144  05F1' 1703               	bsf	3,6	;RP1=1, select bank3
 12145  05F2' 0780'              	addwf	sprintf@c^(0+384),f
 12146  05F3' 300A               	movlw	10
 12147  05F4' 0600'              	xorwf	sprintf@c^(0+384),w
 12148  05F5' 1D03               	btfss	3,2
 12149  05F6' 2800'              	goto	u9051
 12150  05F7' 2800'              	goto	u9050
 12151  05F8'                    u9051:
 12152  05F8' 2800'              	goto	l5121
 12153  05F9'                    u9050:
 12154  05F9'                    l5127:
 12155                           
 12156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12157  05F9' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12158  05FA' 3A80               	xorlw	128
 12159  05FB' 3C80               	sublw	128
 12160  05FC' 1D03               	skipz
 12161  05FD' 2800'              	goto	u9065
 12162  05FE' 0800'              	movf	sprintf@prec^(0+384),w
 12163  05FF' 0200'              	subwf	sprintf@c^(0+384),w
 12164  0600'                    u9065:
 12165  0600' 1803               	skipnc
 12166  0601' 2800'              	goto	u9061
 12167  0602' 2800'              	goto	u9060
 12168  0603'                    u9061:
 12169  0603' 2800'              	goto	l5131
 12170  0604'                    u9060:
 12171  0604'                    l5129:
 12172                           
 12173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 12174  0604' 1683               	bsf	3,5	;RP0=1, select bank3
 12175  0605' 1703               	bsf	3,6	;RP1=1, select bank3
 12176  0606' 0800'              	movf	sprintf@prec^(0+384),w
 12177  0607' 1683               	bsf	3,5	;RP0=1, select bank1
 12178  0608' 1303               	bcf	3,6	;RP1=0, select bank1
 12179  0609' 0080'              	movwf	??_sprintf^(0+128)
 12180  060A' 0800'              	movf	??_sprintf^(0+128),w
 12181  060B' 1683               	bsf	3,5	;RP0=1, select bank3
 12182  060C' 1703               	bsf	3,6	;RP1=1, select bank3
 12183  060D' 0080'              	movwf	sprintf@c^(0+384)
 12184  060E' 2800'              	goto	l5135
 12185  060F'                    l5131:
 12186  060F' 1683               	bsf	3,5	;RP0=1, select bank3
 12187  0610' 1703               	bsf	3,6	;RP1=1, select bank3
 12188  0611' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12189  0612' 3A80               	xorlw	128
 12190  0613' 1683               	bsf	3,5	;RP0=1, select bank1
 12191  0614' 1303               	bcf	3,6	;RP1=0, select bank1
 12192  0615' 0080'              	movwf	??_sprintf^(0+128)
 12193  0616' 3080               	movlw	128
 12194  0617' 0200'              	subwf	??_sprintf^(0+128),w
 12195  0618' 1D03               	skipz
 12196  0619' 2800'              	goto	u9075
 12197  061A' 1683               	bsf	3,5	;RP0=1, select bank3
 12198  061B' 1703               	bsf	3,6	;RP1=1, select bank3
 12199  061C' 0800'              	movf	sprintf@c^(0+384),w
 12200  061D' 0200'              	subwf	sprintf@prec^(0+384),w
 12201  061E'                    u9075:
 12202  061E' 1803               	skipnc
 12203  061F' 2800'              	goto	u9071
 12204  0620' 2800'              	goto	u9070
 12205  0621'                    u9071:
 12206  0621' 2800'              	goto	l5135
 12207  0622'                    u9070:
 12208  0622'                    l5133:
 12209                           
 12210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12211  0622' 1683               	bsf	3,5	;RP0=1, select bank3
 12212  0623' 1703               	bsf	3,6	;RP1=1, select bank3
 12213  0624' 0800'              	movf	sprintf@c^(0+384),w
 12214  0625' 1683               	bsf	3,5	;RP0=1, select bank1
 12215  0626' 1303               	bcf	3,6	;RP1=0, select bank1
 12216  0627' 0080'              	movwf	??_sprintf^(0+128)
 12217  0628' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12218  0629' 0800'              	movf	??_sprintf^(0+128),w
 12219  062A' 1683               	bsf	3,5	;RP0=1, select bank3
 12220  062B' 1703               	bsf	3,6	;RP1=1, select bank3
 12221  062C' 0080'              	movwf	sprintf@prec^(0+384)
 12222  062D' 1683               	bsf	3,5	;RP0=1, select bank1
 12223  062E' 1303               	bcf	3,6	;RP1=0, select bank1
 12224  062F' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12225  0630' 1683               	bsf	3,5	;RP0=1, select bank3
 12226  0631' 1703               	bsf	3,6	;RP1=1, select bank3
 12227  0632' 0080'              	movwf	(sprintf@prec+1)^(0+384)
 12228  0633'                    l5135:
 12229                           
 12230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 12231  0633' 1683               	bsf	3,5	;RP0=1, select bank3
 12232  0634' 1703               	bsf	3,6	;RP1=1, select bank3
 12233  0635' 0800'              	movf	sprintf@width^(0+384),w
 12234  0636' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12235  0637' 1903               	btfsc	3,2
 12236  0638' 2800'              	goto	u9081
 12237  0639' 2800'              	goto	u9080
 12238  063A'                    u9081:
 12239  063A' 2800'              	goto	l5141
 12240  063B'                    u9080:
 12241  063B'                    l5137:
 12242  063B' 3003               	movlw	3
 12243  063C' 0500'              	andwf	sprintf@flag^(0+384),w
 12244  063D' 1683               	bsf	3,5	;RP0=1, select bank1
 12245  063E' 1303               	bcf	3,6	;RP1=0, select bank1
 12246  063F' 0080'              	movwf	??_sprintf^(0+128)
 12247  0640' 3000               	movlw	0
 12248  0641' 1683               	bsf	3,5	;RP0=1, select bank3
 12249  0642' 1703               	bsf	3,6	;RP1=1, select bank3
 12250  0643' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 12251  0644' 1683               	bsf	3,5	;RP0=1, select bank1
 12252  0645' 1303               	bcf	3,6	;RP1=0, select bank1
 12253  0646' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12254  0647' 0800'              	movf	??_sprintf^(0+128),w
 12255  0648' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12256  0649' 1903               	btfsc	3,2
 12257  064A' 2800'              	goto	u9091
 12258  064B' 2800'              	goto	u9090
 12259  064C'                    u9091:
 12260  064C' 2800'              	goto	l5141
 12261  064D'                    u9090:
 12262  064D'                    l5139:
 12263                           
 12264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 12265  064D' 30FF               	movlw	255
 12266  064E' 1683               	bsf	3,5	;RP0=1, select bank3
 12267  064F' 1703               	bsf	3,6	;RP1=1, select bank3
 12268  0650' 0780'              	addwf	sprintf@width^(0+384),f
 12269  0651' 1803               	skipnc
 12270  0652' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 12271  0653' 30FF               	movlw	255
 12272  0654' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 12273  0655'                    l5141:
 12274                           
 12275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 12276  0655' 1683               	bsf	3,5	;RP0=1, select bank3
 12277  0656' 1703               	bsf	3,6	;RP1=1, select bank3
 12278  0657' 1F00'              	btfss	(sprintf@flag+1)^(0+384),6
 12279  0658' 2800'              	goto	u9101
 12280  0659' 2800'              	goto	u9100
 12281  065A'                    u9101:
 12282  065A' 2800'              	goto	l5149
 12283  065B'                    u9100:
 12284  065B'                    l5143:
 12285                           
 12286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 12287  065B' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12288  065C' 3A80               	xorlw	128
 12289  065D' 1683               	bsf	3,5	;RP0=1, select bank1
 12290  065E' 1303               	bcf	3,6	;RP1=0, select bank1
 12291  065F' 0080'              	movwf	??_sprintf^(0+128)
 12292  0660' 1683               	bsf	3,5	;RP0=1, select bank3
 12293  0661' 1703               	bsf	3,6	;RP1=1, select bank3
 12294  0662' 0800'              	movf	(sprintf@width+1)^(0+384),w
 12295  0663' 3A80               	xorlw	128
 12296  0664' 1683               	bsf	3,5	;RP0=1, select bank1
 12297  0665' 1303               	bcf	3,6	;RP1=0, select bank1
 12298  0666' 0200'              	subwf	??_sprintf^(0+128),w
 12299  0667' 1D03               	skipz
 12300  0668' 2800'              	goto	u9115
 12301  0669' 1683               	bsf	3,5	;RP0=1, select bank3
 12302  066A' 1703               	bsf	3,6	;RP1=1, select bank3
 12303  066B' 0800'              	movf	sprintf@width^(0+384),w
 12304  066C' 0200'              	subwf	sprintf@prec^(0+384),w
 12305  066D'                    u9115:
 12306  066D' 1803               	skipnc
 12307  066E' 2800'              	goto	u9111
 12308  066F' 2800'              	goto	u9110
 12309  0670'                    u9111:
 12310  0670' 2800'              	goto	l5147
 12311  0671'                    u9110:
 12312  0671'                    l5145:
 12313                           
 12314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12315  0671' 1683               	bsf	3,5	;RP0=1, select bank3
 12316  0672' 1703               	bsf	3,6	;RP1=1, select bank3
 12317  0673' 0800'              	movf	sprintf@prec^(0+384),w
 12318  0674' 0280'              	subwf	sprintf@width^(0+384),f
 12319  0675' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12320  0676' 1C03               	skipc
 12321  0677' 0380'              	decf	(sprintf@width+1)^(0+384),f
 12322  0678' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 12323  0679' 2800'              	goto	l5149
 12324  067A'                    l5147:
 12325                           
 12326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12327  067A' 1683               	bsf	3,5	;RP0=1, select bank3
 12328  067B' 1703               	bsf	3,6	;RP1=1, select bank3
 12329  067C' 0180'              	clrf	sprintf@width^(0+384)
 12330  067D' 0180'              	clrf	(sprintf@width+1)^(0+384)
 12331  067E'                    l5149:
 12332                           
 12333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12334  067E' 0800'              	movf	(sprintf@width+1)^(0+384),w
 12335  067F' 3A80               	xorlw	128
 12336  0680' 3C80               	sublw	128
 12337  0681' 1D03               	skipz
 12338  0682' 2800'              	goto	u9125
 12339  0683' 0800'              	movf	sprintf@width^(0+384),w
 12340  0684' 0200'              	subwf	sprintf@c^(0+384),w
 12341  0685'                    u9125:
 12342  0685' 1803               	skipnc
 12343  0686' 2800'              	goto	u9121
 12344  0687' 2800'              	goto	u9120
 12345  0688'                    u9121:
 12346  0688' 2800'              	goto	l5153
 12347  0689'                    u9120:
 12348  0689'                    l5151:
 12349                           
 12350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12351  0689' 1683               	bsf	3,5	;RP0=1, select bank3
 12352  068A' 1703               	bsf	3,6	;RP1=1, select bank3
 12353  068B' 0800'              	movf	sprintf@c^(0+384),w
 12354  068C' 1683               	bsf	3,5	;RP0=1, select bank1
 12355  068D' 1303               	bcf	3,6	;RP1=0, select bank1
 12356  068E' 0080'              	movwf	??_sprintf^(0+128)
 12357  068F' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12358  0690' 0800'              	movf	??_sprintf^(0+128),w
 12359  0691' 1683               	bsf	3,5	;RP0=1, select bank3
 12360  0692' 1703               	bsf	3,6	;RP1=1, select bank3
 12361  0693' 0280'              	subwf	sprintf@width^(0+384),f
 12362  0694' 1683               	bsf	3,5	;RP0=1, select bank1
 12363  0695' 1303               	bcf	3,6	;RP1=0, select bank1
 12364  0696' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12365  0697' 1683               	bsf	3,5	;RP0=1, select bank3
 12366  0698' 1703               	bsf	3,6	;RP1=1, select bank3
 12367  0699' 1C03               	skipc
 12368  069A' 0380'              	decf	(sprintf@width+1)^(0+384),f
 12369  069B' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 12370  069C' 2800'              	goto	l5155
 12371  069D'                    l5153:
 12372                           
 12373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12374  069D' 1683               	bsf	3,5	;RP0=1, select bank3
 12375  069E' 1703               	bsf	3,6	;RP1=1, select bank3
 12376  069F' 0180'              	clrf	sprintf@width^(0+384)
 12377  06A0' 0180'              	clrf	(sprintf@width+1)^(0+384)
 12378  06A1'                    l5155:
 12379                           
 12380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12381  06A1' 0800'              	movf	sprintf@width^(0+384),w
 12382  06A2' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12383  06A3' 1903               	btfsc	3,2
 12384  06A4' 2800'              	goto	u9131
 12385  06A5' 2800'              	goto	u9130
 12386  06A6'                    u9131:
 12387  06A6' 2800'              	goto	l5163
 12388  06A7'                    u9130:
 12389  06A7'                    l5157:
 12390                           
 12391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12392  06A7' 3020               	movlw	32
 12393  06A8' 1683               	bsf	3,5	;RP0=1, select bank1
 12394  06A9' 1303               	bcf	3,6	;RP1=0, select bank1
 12395  06AA' 0080'              	movwf	??_sprintf^(0+128)
 12396  06AB' 1683               	bsf	3,5	;RP0=1, select bank3
 12397  06AC' 1703               	bsf	3,6	;RP1=1, select bank3
 12398  06AD' 0800'              	movf	sprintf@sp^(0+384),w
 12399  06AE' 0084               	movwf	4
 12400  06AF' 1683               	bsf	3,5	;RP0=1, select bank1
 12401  06B0' 1303               	bcf	3,6	;RP1=0, select bank1
 12402  06B1' 0800'              	movf	??_sprintf^(0+128),w
 12403  06B2' 1383               	bcf	3,7	;select IRP bank0
 12404  06B3' 0080               	movwf	0
 12405  06B4'                    l5159:
 12406  06B4' 3001               	movlw	1
 12407  06B5' 0080'              	movwf	??_sprintf^(0+128)
 12408  06B6' 0800'              	movf	??_sprintf^(0+128),w
 12409  06B7' 1683               	bsf	3,5	;RP0=1, select bank3
 12410  06B8' 1703               	bsf	3,6	;RP1=1, select bank3
 12411  06B9' 0780'              	addwf	sprintf@sp^(0+384),f
 12412  06BA'                    l5161:
 12413  06BA' 30FF               	movlw	255
 12414  06BB' 0780'              	addwf	sprintf@width^(0+384),f
 12415  06BC' 1803               	skipnc
 12416  06BD' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 12417  06BE' 30FF               	movlw	255
 12418  06BF' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 12419  06C0' 0800'              	movf	sprintf@width^(0+384),w
 12420  06C1' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12421  06C2' 1D03               	btfss	3,2
 12422  06C3' 2800'              	goto	u9141
 12423  06C4' 2800'              	goto	u9140
 12424  06C5'                    u9141:
 12425  06C5' 2800'              	goto	l5157
 12426  06C6'                    u9140:
 12427  06C6'                    l5163:
 12428                           
 12429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12430  06C6' 3003               	movlw	3
 12431  06C7' 0500'              	andwf	sprintf@flag^(0+384),w
 12432  06C8' 1683               	bsf	3,5	;RP0=1, select bank1
 12433  06C9' 1303               	bcf	3,6	;RP1=0, select bank1
 12434  06CA' 0080'              	movwf	??_sprintf^(0+128)
 12435  06CB' 3000               	movlw	0
 12436  06CC' 1683               	bsf	3,5	;RP0=1, select bank3
 12437  06CD' 1703               	bsf	3,6	;RP1=1, select bank3
 12438  06CE' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 12439  06CF' 1683               	bsf	3,5	;RP0=1, select bank1
 12440  06D0' 1303               	bcf	3,6	;RP1=0, select bank1
 12441  06D1' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12442  06D2' 0800'              	movf	??_sprintf^(0+128),w
 12443  06D3' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12444  06D4' 1903               	btfsc	3,2
 12445  06D5' 2800'              	goto	u9151
 12446  06D6' 2800'              	goto	u9150
 12447  06D7'                    u9151:
 12448  06D7' 2800'              	goto	l5175
 12449  06D8'                    u9150:
 12450  06D8'                    l5165:
 12451                           
 12452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12453  06D8' 302D               	movlw	45
 12454  06D9' 0080'              	movwf	??_sprintf^(0+128)
 12455  06DA' 1683               	bsf	3,5	;RP0=1, select bank3
 12456  06DB' 1703               	bsf	3,6	;RP1=1, select bank3
 12457  06DC' 0800'              	movf	sprintf@sp^(0+384),w
 12458  06DD' 0084               	movwf	4
 12459  06DE' 1683               	bsf	3,5	;RP0=1, select bank1
 12460  06DF' 1303               	bcf	3,6	;RP1=0, select bank1
 12461  06E0' 0800'              	movf	??_sprintf^(0+128),w
 12462  06E1' 1383               	bcf	3,7	;select IRP bank0
 12463  06E2' 0080               	movwf	0
 12464  06E3'                    l5167:
 12465  06E3' 3001               	movlw	1
 12466  06E4' 0080'              	movwf	??_sprintf^(0+128)
 12467  06E5' 0800'              	movf	??_sprintf^(0+128),w
 12468  06E6' 1683               	bsf	3,5	;RP0=1, select bank3
 12469  06E7' 1703               	bsf	3,6	;RP1=1, select bank3
 12470  06E8' 0780'              	addwf	sprintf@sp^(0+384),f
 12471  06E9' 2800'              	goto	l5175
 12472  06EA'                    l5169:
 12473                           
 12474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12475  06EA' 3000               	movlw	0
 12476  06EB' 1283               	bcf	3,5	;RP0=0, select bank0
 12477  06EC' 1303               	bcf	3,6	;RP1=0, select bank0
 12478  06ED' 008B'              	movwf	___llmod@divisor+3
 12479  06EE' 3000               	movlw	0
 12480  06EF' 008A'              	movwf	___llmod@divisor+2
 12481  06F0' 3000               	movlw	0
 12482  06F1' 0089'              	movwf	___llmod@divisor+1
 12483  06F2' 300A               	movlw	10
 12484  06F3' 0088'              	movwf	___llmod@divisor
 12485  06F4' 1683               	bsf	3,5	;RP0=1, select bank3
 12486  06F5' 1703               	bsf	3,6	;RP1=1, select bank3
 12487  06F6' 0800'              	movf	sprintf@prec^(0+384),w
 12488  06F7' 1683               	bsf	3,5	;RP0=1, select bank1
 12489  06F8' 1303               	bcf	3,6	;RP1=0, select bank1
 12490  06F9' 0080'              	movwf	??_sprintf^(0+128)
 12491  06FA' 3001               	movlw	1
 12492  06FB'                    u9165:
 12493  06FB' 1003               	clrc
 12494  06FC' 0D80'              	rlf	??_sprintf^(0+128),f
 12495  06FD' 3EFF               	addlw	-1
 12496  06FE' 1D03               	skipz
 12497  06FF' 2800'              	goto	u9165
 12498  0700' 1003               	clrc
 12499  0701' 0D00'              	rlf	??_sprintf^(0+128),w
 12500  0702' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12501  0703' 0084               	movwf	4
 12502  0704' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12503  0709' 1283               	bcf	3,5	;RP0=0, select bank0
 12504  070A' 1303               	bcf	3,6	;RP1=0, select bank0
 12505  070B' 0080'              	movwf	___lldiv@divisor
 12506  070C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12507  0711' 0081'              	movwf	___lldiv@divisor+1
 12508  0712' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12509  0717' 0082'              	movwf	___lldiv@divisor+2
 12510  0718' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12511  071D' 0083'              	movwf	___lldiv@divisor+3
 12512  071E' 1683               	bsf	3,5	;RP0=1, select bank3
 12513  071F' 1703               	bsf	3,6	;RP1=1, select bank3
 12514  0720' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12515  0721' 1283               	bcf	3,5	;RP0=0, select bank0
 12516  0722' 1303               	bcf	3,6	;RP1=0, select bank0
 12517  0723' 0087'              	movwf	___lldiv@dividend+3
 12518  0724' 1683               	bsf	3,5	;RP0=1, select bank3
 12519  0725' 1703               	bsf	3,6	;RP1=1, select bank3
 12520  0726' 0800'              	movf	(sprintf@val+2)^(0+384),w
 12521  0727' 1283               	bcf	3,5	;RP0=0, select bank0
 12522  0728' 1303               	bcf	3,6	;RP1=0, select bank0
 12523  0729' 0086'              	movwf	___lldiv@dividend+2
 12524  072A' 1683               	bsf	3,5	;RP0=1, select bank3
 12525  072B' 1703               	bsf	3,6	;RP1=1, select bank3
 12526  072C' 0800'              	movf	(sprintf@val+1)^(0+384),w
 12527  072D' 1283               	bcf	3,5	;RP0=0, select bank0
 12528  072E' 1303               	bcf	3,6	;RP1=0, select bank0
 12529  072F' 0085'              	movwf	___lldiv@dividend+1
 12530  0730' 1683               	bsf	3,5	;RP0=1, select bank3
 12531  0731' 1703               	bsf	3,6	;RP1=1, select bank3
 12532  0732' 0800'              	movf	sprintf@val^(0+384),w
 12533  0733' 1283               	bcf	3,5	;RP0=0, select bank0
 12534  0734' 1303               	bcf	3,6	;RP1=0, select bank0
 12535  0735' 0084'              	movwf	___lldiv@dividend
 12536  0736' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12537  073B' 1283               	bcf	3,5	;RP0=0, select bank0
 12538  073C' 1303               	bcf	3,6	;RP1=0, select bank0
 12539  073D' 0803'              	movf	?___lldiv+3,w
 12540  073E' 008F'              	movwf	___llmod@dividend+3
 12541  073F' 0802'              	movf	?___lldiv+2,w
 12542  0740' 008E'              	movwf	___llmod@dividend+2
 12543  0741' 0801'              	movf	?___lldiv+1,w
 12544  0742' 008D'              	movwf	___llmod@dividend+1
 12545  0743' 0800'              	movf	?___lldiv,w
 12546  0744' 008C'              	movwf	___llmod@dividend
 12547  0745' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12548  074A' 1283               	bcf	3,5	;RP0=0, select bank0
 12549  074B' 1303               	bcf	3,6	;RP1=0, select bank0
 12550  074C' 0808'              	movf	?___llmod,w
 12551  074D' 3E30               	addlw	48
 12552  074E' 1683               	bsf	3,5	;RP0=1, select bank1
 12553  074F' 1303               	bcf	3,6	;RP1=0, select bank1
 12554  0750' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12555  0751' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12556  0752' 1683               	bsf	3,5	;RP0=1, select bank3
 12557  0753' 1703               	bsf	3,6	;RP1=1, select bank3
 12558  0754' 0080'              	movwf	sprintf@c^(0+384)
 12559  0755'                    l5171:
 12560                           
 12561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12562  0755' 0800'              	movf	sprintf@c^(0+384),w
 12563  0756' 1683               	bsf	3,5	;RP0=1, select bank1
 12564  0757' 1303               	bcf	3,6	;RP1=0, select bank1
 12565  0758' 0080'              	movwf	??_sprintf^(0+128)
 12566  0759' 1683               	bsf	3,5	;RP0=1, select bank3
 12567  075A' 1703               	bsf	3,6	;RP1=1, select bank3
 12568  075B' 0800'              	movf	sprintf@sp^(0+384),w
 12569  075C' 0084               	movwf	4
 12570  075D' 1683               	bsf	3,5	;RP0=1, select bank1
 12571  075E' 1303               	bcf	3,6	;RP1=0, select bank1
 12572  075F' 0800'              	movf	??_sprintf^(0+128),w
 12573  0760' 1383               	bcf	3,7	;select IRP bank0
 12574  0761' 0080               	movwf	0
 12575  0762' 2800'              	goto	l5167
 12576  0763'                    l5175:
 12577                           
 12578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12579  0763' 30FF               	movlw	255
 12580  0764' 1683               	bsf	3,5	;RP0=1, select bank3
 12581  0765' 1703               	bsf	3,6	;RP1=1, select bank3
 12582  0766' 0780'              	addwf	sprintf@prec^(0+384),f
 12583  0767' 1803               	skipnc
 12584  0768' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12585  0769' 30FF               	movlw	255
 12586  076A' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12587  076B' 0A00'              	incf	sprintf@prec^(0+384),w
 12588  076C' 1D03               	skipz
 12589  076D' 2800'              	goto	u9171
 12590  076E' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 12591  076F' 1D03               	btfss	3,2
 12592  0770' 2800'              	goto	u9171
 12593  0771' 2800'              	goto	u9170
 12594  0772'                    u9171:
 12595  0772' 2800'              	goto	l5169
 12596  0773'                    u9170:
 12597  0773'                    l5177:
 12598                           
 12599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12600  0773' 3001               	movlw	1
 12601  0774' 1303               	bcf	3,6	;RP1=0, select bank1
 12602  0775' 0780'              	addwf	sprintf@f^(0+128),f
 12603  0776' 30FF               	movlw	-1
 12604  0777' 0700'              	addwf	sprintf@f^(0+128),w
 12605  0778' 0084               	movwf	4
 12606  0779' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12607  077E' 0080'              	movwf	??_sprintf^(0+128)
 12608  077F' 0800'              	movf	??_sprintf^(0+128),w
 12609  0780' 1683               	bsf	3,5	;RP0=1, select bank3
 12610  0781' 1703               	bsf	3,6	;RP1=1, select bank3
 12611  0782' 0080'              	movwf	sprintf@c^(0+384)
 12612  0783' 0800'              	movf	sprintf@c^(0+384),w
 12613  0784' 1D03               	btfss	3,2
 12614  0785' 2800'              	goto	u9181
 12615  0786' 2800'              	goto	u9180
 12616  0787'                    u9181:
 12617  0787' 120A' 118A' 2800'  	goto	l4897
 12618  078A'                    u9180:
 12619  078A'                    l5179:
 12620                           
 12621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12622  078A' 1683               	bsf	3,5	;RP0=1, select bank3
 12623  078B' 1703               	bsf	3,6	;RP1=1, select bank3
 12624  078C' 0800'              	movf	sprintf@sp^(0+384),w
 12625  078D' 0084               	movwf	4
 12626  078E' 1383               	bcf	3,7	;select IRP bank0
 12627  078F' 0180               	clrf	0
 12628  0790'                    l444:
 12629  0790' 0008               	return
 12630  0791'                    __end_of_sprintf:

Data Sizes:
    Strings     58
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     79      79
    BANK1            80     24      55
    BANK3            96     27      27
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Print$0	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[18]), data(BANK1[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 22
		 -> data(BANK1[20]), STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    _main->_LCD_Cursor
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->___awmod
    ___flmul->___lwdiv
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _LCD_ON->_comandosLCD
    _LCD_Cursor->_comandosLCD
    _LCD_Clear->_comandosLCD
    _comandosLCD->_PUERTO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversion->___flmul
    ___flmul->___xxtofl
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   51704
                                             76 BANK0      3     3      0
                          _LCD_Clear
                         _LCD_Cursor
                             _LCD_ON
                          _LCD_Print
                              _Setup
                         _USART_Init
                           _ValorADC
                        _Write_USART
                 _Write_USART_String
                         _config_ADC
                         _conversion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   42638
                                              8 BANK1     16     5     11
                                              0 BANK3     27    27      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9720
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7776
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _conversion                                           9     5      4    6560
                                             36 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ValorADC                                             3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4    1118
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            2     0      2      24
 ---------------------------------------------------------------------------------
 (1) _LCD_ON                                               2     2      0     374
                                              6 COMMON     2     2      0
                             _PUERTO
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           4     3      1     484
                                              6 COMMON     4     3      1
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     198
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          2     2      0     198
                                              4 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _comandosLCD
       _PUERTO
   _LCD_Cursor
     _comandosLCD
       _PUERTO
   _LCD_ON
     _PUERTO
     _comandosLCD
       _PUERTO
   _LCD_Print
   _Setup
   _USART_Init
     ___aldiv
   _ValorADC
   _Write_USART
   _Write_USART_String
     _Write_USART
   _config_ADC
   _conversion
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     18      37       7       68.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1B      1B       9       28.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 03:22:40 2021

                          pc 0002                  ?_LCD_Cursor 0006                           l65 001E  
                         l68 0037                           _V1 0004                           _V2 0000  
               ___awdiv@sign 0006                           fsr 0004          ___wmul@multiplicand 0005  
        __Umul8_16@word_mpld 0002         __size_of_Write_USART 000C                          l110 0002  
                        l111 00EC                          l120 0075                          l112 000D  
                        l121 0082                          l113 001A                          l122 008F  
                        l114 0027                          l106 000A                          l123 009C  
                        l115 0034                          l124 00A9                          l116 0041  
                        l117 004E                          l126 00FB                          l118 005B  
                        l119 0068                          l231 000B                          l160 000C  
                        l128 00F9                          l161 0012                          l225 00DC  
                        l170 002F                          l162 0013                          l171 0035  
                        l163 0019                          l172 0036                          l164 001A  
                        l228 0001                          l173 003C                          l165 0020  
                        l181 000C                          l237 002A                          l166 0021  
                        l190 0023                          l414 0381                          l175 003D  
                        l167 0027                          l159 0009                          l407 032F  
                        l168 0028                          l184 002B                          l352 0362  
                        l169 002E                          l513 0014                          l345 020C  
                        l601 0068                          l178 001A                          l450 0024  
               comandosLCD@x 0005                          l523 009C                          l444 0790  
                        l622 0080                          l614 0058                          l374 00F2  
                        l800 01F9                          l704 0055                          l448 000C  
                        l634 001E                          l642 008A                          l618 00BF  
                        l635 003A                          l643 00A3                          l651 007B  
                        l619 0022                          l636 004F                          l484 0067  
                        l821 004F                          l661 007B                          l629 00B0  
                        l806 021B                          l639 001E                          l647 000A  
                        l921 0069                          l817 027B                          l809 0259  
                        l665 00BC                          l818 0287                          l658 0066  
                        l666 002E                          l754 0045                          l915 0024  
                        l676 00AF                          l764 0039                          l917 00BB  
                        l781 00E1                          l669 007F                          l871 0360  
                        l775 0063                          l935 0011                          l928 0085  
                        l929 0091                          l890 0016                          l883 0354  
                        l779 010A                          l892 0028                          l796 01D5  
                        l788 0287                          l877 02CC                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RE0 0048  
                        _RB6 0036                          _RE1 0049                          _RB7 0037  
                        _ISR 0000                          fsr0 0004                          indf 0000  
               ___awmod@sign 0009                 ___flmul@aexp 0018                 ___flmul@bexp 001D  
               ___flmul@sign 0017                 ___flmul@temp 0022                 ___flmul@prod 001E  
__size_of_Write_USART_String 002B                         ?_ISR 0000                 ___fltol@exp1 0041  
                       l3001 0001                         l3011 000D                         l3003 0007  
                       l3013 0011                         l3005 0001                         l3015 0014  
                       l3007 0004                         l3017 0018                         l3009 000A  
                       l4011 000E                         l4003 0000                         l4101 0033  
                       l4021 0023                         l4013 0012                         l4005 0003  
                       l4103 0034                         l4111 0000                         l4031 0046  
                       l4023 0026                         l4015 0017                         l4007 0007  
                       l2521 0005                         l4201 0099                         l4105 003B  
                       l4121 0018                         l4113 0006                         l4041 005F  
                       l4033 004C                         l4025 002D                         l4017 001B  
                       l4009 000C                         l5001 0091                         l2531 002C  
                       l2523 0010                         l4203 009D                         l4211 00AD  
                       l4107 0041                         l4123 0022                         l4115 0009  
                       l4043 0064                         l4035 004D                         l4027 0031  
                       l4019 001D                         l4051 0005                         l5003 0099  
                       l5011 010B                         l2533 0033                         l2525 0017  
                       l3421 0017                         l3501 006E                         l4301 0225  
                       l4221 00F0                         l4213 00AE                         l4205 00A1  
                       l4141 0012                         l4133 0000                         l4125 0028  
                       l4117 0010                         l4037 0054                         l4029 0035  
                       l4061 001B                         l4053 000A                         l5101 0573  
                       l5013 0140                         l5005 00B7                         l2535 003A  
                       l2527 001E                         l2519 0001                         l3423 001A  
                       l3511 00AF                         l3503 007B                         l4311 0263  
                       l4303 0233                         l4231 010E                         l4223 00F4  
                       l4215 00C5                         l4207 00A5                         l4143 0017  
                       l4151 0027                         l4135 0007                         l4127 002F  
                       l4119 0014                         l4039 005A                         l4071 0037  
                       l4063 001E                         l4055 000C                         l4047 0000  
                       l5111 0594                         l5103 057B                         l5031 0215  
                       l5023 0191                         l5015 018D                         l2529 0025  
                       l3425 001D                         l3417 0000                         l3521 00ED  
                       l3513 00B6                         l3505 0088                         l4401 01ED  
                       l4321 0277                         l4313 026B                         l4305 0237  
                       l4241 0137                         l4233 0113                         l4225 00F5  
                       l4217 00E5                         l4209 00A9                         l4161 0041  
                       l4153 002F                         l4145 001C                         l4137 000D  
                       l4129 0035                         l4081 0054                         l4073 003D  
                       l4065 0025                         l4057 0010                         l4049 0001  
                       l5121 05A4                         l5113 059C                         l5105 057F  
                       l5033 021B                         l5017 018F                         l5009 0102  
                       l5201 0030                         l3419 0016                         l3531 00FA  
                       l3523 00F1                         l3507 0095                         l4411 0281  
                       l4403 01FD                         l4331 000D                         l4323 0282  
                       l4315 0270                         l4307 0255                         l4251 014B  
                       l4243 013B                         l4227 00FE                         l4219 00EE  
                       l4171 0058                         l4163 0045                         l4155 0034  
                       l4147 0024                         l4139 0011                         l4091 000D  
                       l4075 0044                         l4067 0029                         l4059 0015  
                       l5131 060F                         l5115 05A2                         l5107 0583  
                       l5051 027F                         l5035 022D                         l5043 024A  
                       l5027 01D8                         l5211 00AF                         l5203 003D  
                       l3525 00F4                         l3509 00A2                         l3541 0002  
                       l3437 0000                         l4421 02A6                         l4413 028F  
                       l4405 022A                         l4341 0024                         l4333 0011  
                       l4325 0286                         l4317 0271                         l4309 025E  
                       l4261 01B3                         l4253 0154                         l4245 0144  
                       l4237 011C                         l4229 0102                         l4181 0071  
                       l4173 0059                         l4165 0046                         l4157 003A  
                       l4149 0025                         l4093 0014                         l4085 0000  
                       l4069 002D                         l4077 004A                         l5141 0655  
                       l5133 0622                         l5125 05EB                         l5109 058E  
                       l5061 034C                         l5053 02DC                         l5045 0259  
                       l5037 0236                         l5029 01E6                         l5221 00D1  
                       l5213 00B8                         l5205 005B                         l3471 000A  
                       l3519 00B8                         l3543 0013                         l3439 0006  
                       l4431 02C9                         l4415 0298                         l4423 02AC  
                       l4407 0250                         l4351 003D                         l4343 0026  
                       l4335 0012                         l4327 0000                         l4319 0275  
                       l4263 01B8                         l4247 0146                         l4239 0133  
                       l4255 0159                         l4191 0085                         l4183 0075  
                       l4167 004B                         l4175 005B                         l4159 003B  
                       l4095 0018                         l4087 0004                         l4079 004F  
                       l4503 0189                         l5151 0689                         l5143 065B  
                       l5135 0633                         l5127 05F9                         l5071 0392  
                       l5063 0352                         l5055 031B                         l5047 026D  
                       l5039 0243                         l5223 00DA                         l5215 00BE  
                       l5207 0079                         l3481 0000                         l3473 0013  
                       l3545 0017                         l4441 02E8                         l4425 02B0  
                       l4417 029C                         l4409 0278                         l4361 0052  
                       l4353 003E                         l4345 002E                         l4337 0017  
                       l4329 0007                         l4281 0200                         l4273 01EB  
                       l4257 016F                         l4265 01C7                         l4249 014A  
                       l4193 0089                         l4185 0079                         l4177 0069  
                       l4169 0050                         l4601 0023                         l4097 001C  
                       l4089 000A                         l4521 0336                         l5161 06BA  
                       l5153 069D                         l5145 0671                         l5137 063B  
                       l5129 0604                         l5081 0423                         l5073 0397  
                       l5065 035F                         l5057 0339                         l5049 0278  
                       l5225 00E1                         l5217 00C4                         l5209 0082  
                       l3475 0019                         l3467 0000                         l3491 002D  
                       l3483 0001                         l3539 0000                         l4451 032E  
                       l4443 0301                         l4435 02D1                         l4427 02B1  
                       l4419 029D                         l4371 006D                         l4363 005A  
                       l4355 0043                         l4347 0033                         l4339 001C  
                       l4291 020E                         l4283 0202                         l4275 01F4  
                       l4267 01DD                         l4259 01AD                         l4195 008D  
                       l4187 007D                         l4179 006D                         l4611 0050  
                       l4603 002B                         l4099 002D                         l4531 000E  
                       l4515 02A7                         l4507 01B6                         l5171 0755  
                       l5163 06C6                         l5155 06A1                         l5147 067A  
                       l5139 064D                         l5091 0538                         l5083 0480  
                       l5075 03A4                         l5067 036E                         l5059 0346  
                       l5227 00EA                         l5219 00C9                         l3477 001F  
                       l3469 0004                         l4701 0054                         l3493 003A  
                       l3485 0008                         l4461 034D                         l4453 0338  
                       l4437 02D6                         l4445 0307                         l4429 02B5  
                       l4381 00EF                         l4373 007D                         l4365 005F  
                       l4357 0048                         l4349 0039                         l4293 0212  
                       l4285 0207                         l4277 01F8                         l4269 01E2  
                       l4197 0091                         l4189 0081                         l4621 0084  
                       l4613 0062                         l4605 003C                         l4533 0010  
                       l4525 0001                         l4517 02AE                         l4509 01BD  
                       l5165 06D8                         l5157 06A7                         l5149 067E  
                       l5093 0545                         l5085 04BF                         l5077 03AA  
                       l5069 0377                         l3479 0025                         l4703 0066  
                       l4711 0084                         l3495 0047                         l3487 0013  
                       l4463 0358                         l4455 033A                         l4447 0314  
                       l4439 02E4                         l4391 015D                         l4383 010B  
                       l4375 008A                         l4367 0064                         l4359 0050  
                       l4295 0218                         l4279 01FD                         l4287 0209  
                       l4199 0095                         l4615 0070                         l4607 003E  
                       l4551 0035                         l4543 001C                         l4527 0002  
                       l5167 06E3                         l5175 0763                         l5159 06B4  
                       l5095 054B                         l5087 04D3                         l5079 03C8  
                       l5191 0005                         l3841 0001                         l4713 0089  
                       l4705 0074                         l5281 00C0                         l3497 0054  
                       l3489 0020                         l4457 0348                         l4449 031F  
                       l4393 016D                         l4385 0127                         l4377 00A7  
                       l4721 0016                         l4289 020D                         l4801 001A  
                       l4641 0000                         l4617 0071                         l4609 0047  
                       l4561 0066                         l4553 0044                         l4537 0000  
                       l4481 01C9                         l4529 0008                         l5169 06EA  
                       l5097 0551                         l5089 0530                         l5177 0773  
                       l5193 000A                         l3851 001D                         l3843 0006  
                       l4715 0094                         l4707 0075                         l3499 0061  
                       l4459 034C                         l4395 018A                         l4387 0130  
                       l4379 00C3                         l4723 0032                         l4731 0000  
                       l4299 0220                         l4803 001E                         l4811 004D  
                       l4651 0020                         l4643 0002                         l4635 00A5  
                       l4627 008C                         l4619 007A                         l4563 0070  
                       l4555 0046                         l4539 0013                         l4475 0118  
                       l4467 0003                         l4491 0010                         l5099 0558  
                       l5179 078A                         l5195 0019                         l3845 000B  
                       l4709 007E                         l4397 01A3                         l4389 0140  
                       l4821 0003                         l4725 004C                         l4741 0062  
                       l4733 0016                         l4661 0022                         l4805 0030  
                       l4645 0006                         l4637 00B5                         l4629 009E  
                       l4565 0071                         l4557 004F                         l4549 002F  
                       l4477 011E                         l4469 0009                         l4485 0003  
                       l4901 0021                         l5197 001E                         l5189 0000  
                       l3847 0012                         l4399 01C0                         l4823 0008  
                       l4727 004E                         l4719 0000                         l4743 0066  
                       l4735 0032                         l4751 0000                         l4815 0000  
                       l4671 0050                         l4663 0026                         l4655 0000  
                       l4807 003E                         l4647 0013                         l4591 000D  
                       l4583 00A4                         l4575 008B                         l4567 0079  
                       l4559 0058                         l4487 0007                         l5279 010E  
                       l4911 0057                         l4903 0028                         l5199 0023  
                       l3849 0018                         l4681 0001                         l4841 0052  
                       l4833 0035                         l4825 000C                         l4745 00A0  
                       l4737 003A                         l4753 0008                         l4817 0004  
                       l4761 000D                         l4673 0059                         l4665 002F  
                       l4657 0012                         l4809 0047                         l4649 001A  
                       l4585 00B4                         l4569 0083                         l4577 009D  
                       l4497 00FA                         l4489 0009                         l4921 0099  
                       l4913 0072                         l4905 002C                         l4691 002F  
                       l4683 0007                         l4851 0089                         l4843 0060  
                       l4835 003A                         l4827 001C                         l4747 00A2  
                       l4739 003E                         l4755 000A                         l4771 0034  
                       l4667 0041                         l4659 0015                         l4675 005F  
                       l4595 0016                         l4499 0101                         l4931 00DA  
                       l4923 009F                         l4915 0078                         l4907 003E  
                       l4693 0037                         l4685 0018                         l4861 00B3  
                       l4853 0093                         l4845 0070                         l4837 0047  
                       l4829 002C                         l4781 0042                         l4773 0036  
                       l4765 0016                         l4669 004F                         l4589 0000  
                       l4941 011C                         l4925 00A4                         l4933 00EC  
                       l4909 0042                         l4917 0088                         l4695 003A  
                       l4687 0023                         l4679 0000                         l4871 005B  
                       l3991 0005                         l4855 00A9                         l4847 007B  
                       l4839 004E                         l4791 006B                         l4775 003A  
                       l4783 0054                         l4767 002B                         l4759 0000  
                       l4951 0152                         l4943 0132                         l4935 00F0  
                       l4927 00B9                         l4919 0096                         l4697 0047  
                       l4689 0027                         l4881 00CE                         l4873 0064  
                       l3993 000C                         l4857 00AE                         l4849 007F  
                       l4865 0003                         l4793 0070                         l4769 002C  
                       l4961 01C1                         l4953 0179                         l4945 0138  
                       l4929 00D4                         l4699 004B                         l4891 00D9  
                       l4883 00CF                         l4875 00BD                         l3995 0010  
                       l4859 00B2                         l4795 0000                         l4971 020C  
                       l4963 01CC                         l4955 0192                         l4947 013C  
                       l4939 00F6                         l4885 00D2                         l4877 00C0  
                       l4869 0000                         l3997 001F                         l3989 0003  
                       l4789 005B                         l4797 000A                         l4981 02AC  
                       l4973 0212                         l4965 01D2                         l4957 0196  
                       l4949 014A                         l4887 00D5                         l4879 00CA  
                       l3999 0024                         l4799 000D                         l4991 0000  
                       l4983 02D5                         l4975 0231                         l4967 01E5  
                       l4959 019A                         l4895 0003                         l4889 00D6  
                       l4993 0029                         l4977 027C                         l4969 0208  
                       l4985 02DD                         l4897 000E                         l4995 0050  
                       l4987 02EC                         l4979 02A3                         l4899 0014  
                       l4997 005F                         l4989 0333                         l4999 0088  
                       STR_1 00A0                         STR_2 00C8                         STR_3 00B6  
                       _BRGH 04C2                         _CREN 00C4                         u3200 0025  
                       u3201 0024                         u3210 002C                         u3211 002B  
                       u3220 0033                         u3221 0032                         u3230 003A  
                       u3231 0039                         u3160 0005                         u3161 0004  
                       u3170 0010                         u3171 000F                         u3180 0017  
                       u3181 0016                         u3190 001E                         u3191 001D  
                       u6200 0018                         u7000 0255                         u6201 0017  
                       u7001 0254                         u7010 025E                         u7011 025D  
                       u7100 0043                         u7020 0263                         u6300 0023  
                       u7101 0042                         u7021 0262                         u6301 0022  
                       u4390 0007                         u7110 0048                         u7030 0270  
                       u4391 0006                         u7111 0047                         u7031 026F  
                       u7120 005F                         u7040 0275                         u8000 0012  
                       u6320 0035                         u6400 001B                         u7201 017C  
                       u7121 005E                         u7041 0274                         u8001 0011  
                       u6321 0034                         u6401 001A                         u6250 0010  
                       u7202 0183                         u7130 0064                         u7050 0286  
                       u6251 000F                         u7203 018A                         u7131 0063  
                       u7051 0285                         u6315 0027                         u7060 0011  
                       u8020 0026                         u6340 0046                         u6420 002D  
                       _RCIF 0065                         u7221 01B2                         u7141 00B5  
                       u7061 0010                         u8021 0025                         u6341 0045  
                       u6421 002C                         u6190 0006                         u8110 004B  
                       u6270 0024                         u7310 029C                         u7222 01B9  
                       u7142 00BC                         u7070 0017                         u6510 002D  
                       u6430 0037                         u6191 0005                         u8111 004A  
                       u6271 0023                         u7311 029B                         u7231 01DF  
                       u7223 01C0                         u7215 018C                         u7151 00D1  
                       u7143 00C3                         u7071 0016                         u8015 0017  
                       u6511 002C                         u6335 0036                         u6431 0036  
                       u6415 001F                         u5640 00F8                         u7400 0314  
                       u7232 01E6                         u7152 00D8                         u7080 001C  
                       u8200 0016                         u6600 0011                         u8040 0041  
                       u6360 005A                         u6280 0007                         u9000 057F  
                       u8105 003C                         u5641 00F7                         u6265 0017  
                       u7401 0313                         u7305 0291                         u7241 020C  
                       u7233 01ED                         u7161 00FD                         u7153 00DF  
                       u7081 001B                         u8201 0015                         u6601 0010  
                       u8041 0040                         u6505 001D                         u6361 0059  
                       u6345 0042                         u6281 0006                         u9001 057E  
                       u8130 0066                         u5650 002A                         u7410 032E  
                       u7330 02B0                         u7250 0236                         u7242 0213  
                       u7162 0104                         u7090 003D                         u8210 0032  
                       u6610 0017                         u6530 0041                         u6370 005F  
                       u6290 0012                         u6450 004A                         u9010 0594  
                       u8131 0065                         u5651 0029                         u7411 032D  
                       u7331 02AF                         u7243 021A                         u7171 0119  
                       u7163 010B                         u7091 003C                         u8211 0031  
                       u6611 0016                         u8035 0028                         u6531 0040  
                       u6515 0029                         u6371 005E                         u6355 004E  
                       u6291 0011                         u6451 0049                         u6435 0033  
                       u9011 0593                         u7420 034C                         u7340 02B5  
                       u7172 0120                         u8220 003E                         u6700 00D0  
                       u6620 001C                         u8300 003A                         u8060 005F  
                       u6540 0006                         u6460 004F                         u6380 0005  
                       u9100 065B                         u9020 059C                         i1l77 0026  
                       u8125 004D                         u7421 034B                         u7405 0310  
                       u7341 02B4                         u7325 029F                         u7261 0242  
                       u7173 0127                         u8221 003D                         u6701 00CE  
                       u6621 001B                         u8301 0039                         u8061 005E  
                       u8045 003D                         u6525 0035                         u6541 0005  
                       u6461 004E                         u6445 003E                         u6381 0004  
                       u9101 065A                         u9021 059B                         u8150 0084  
                       u8070 0007                         u7350 02C9                         u7270 025E  
                       u7262 0249                         u6710 00D1                         u6630 003A  
                       u8310 0041                         u6470 000A                         u7430 0009  
                       u6390 0010                         u7510 0007                         u9110 0671  
                       u8151 0083                         u8135 0062                         u8071 0006  
                       u7415 032A                         u7351 02C8                         u7263 0250  
                       u7255 0231                         u7191 014F                         u8231 004D  
                       u6631 0039                         u8311 0040                         u8055 0051  
                       u6471 0009                         u7431 0008                         u6391 000F  
                       u7511 0006                         u9111 0670                         u8160 0089  
                       u8080 0018                         u7360 02D0                         u7192 0156  
                       u8240 0066                         u8232 004E                         u6800 013B  
                       u6720 00E5                         u6640 0045                         u8400 001E  
                       u6560 0018                         u7600 01BD                         u7520 0010  
                       u9120 0689                         u9040 05EA                         u8161 0088  
                       u8145 0076                         u8081 0017                         u7361 02CF  
                       u7281 026A                         u7193 015D                         u7185 0129  
                       u8241 0065                         u8233 0053                         u6801 013A  
                       u6721 00E4                         u6641 0044                         u8401 001D  
                       u6561 0017                         u7505 01D4                         u7601 01BC  
                       u7521 000F                         u9121 0688                         u9041 05E9  
                       u8090 0037                         u7370 02D6                         u7282 0271  
                       u8170 0016                         u8234 0054                         u6810 014A  
                       u6730 00F4                         u6650 004B                         u8330 0053  
                       u8410 0030                         u6490 001C                         u6570 0022  
                       u9130 06A7                         u9050 05F9                         u8091 0036  
                       u7371 02D5                         u7283 0278                         u7275 0259  
                       u8171 0015                         u8251 0075                         u8235 0059  
                       u6811 0149                         u6731 00F3                         u6651 004A  
                       u8331 0052                         u8411 002F                         u6491 001B  
                       u6571 0021                         u6555 000A                         u9131 06A6  
                       u9115 066D                         u9051 05F8                         u9035 05A9  
                       u7380 02E8                         u8500 006F                         u8180 0032  
                       u8260 00A0                         u8252 0076                         u8236 005A  
                       u6900 01F8                         u6660 0050                         u8340 005A  
                       u7700 0013                         u9140 06C6                         u9060 0604  
                       u7381 02E7                         u8501 006E                         u8181 0031  
                       u8261 009F                         u8253 007B                         u6901 01F7  
                       u6661 004F                         u8341 0059                         u8325 0043  
                       u7701 0012                         u6485 000E                         u7445 0026  
                       u9141 06C5                         u9125 0685                         u9061 0603  
                       u9045 05E6                         u7390 02F7                         u8190 004C  
                       u8254 007C                         u8270 0008                         u6910 01FD  
                       u6830 016F                         u6750 010A                         u6670 0069  
                       u8430 004D                         u7710 002D                         u6590 0035  
                       u7470 011E                         u9150 06D8                         u9070 0622  
                       u9207 00EF                         u7295 027A                         u8191 004B  
                       u8255 0081                         u8271 0007                         u6911 01FC  
                       u6831 016E                         u6751 0109                         u6671 0068  
                       u8431 004C                         u8415 002C                         u7711 002C  
                       u6591 0034                         u6575 001E                         u7471 011D  
                       u7455 0082                         u7615 01DF                         u7535 0032  
                       u9151 06D7                         u9071 0621                         u8520 007F  
                       u8440 0008                         u8256 0082                         u6920 0207  
                       u6760 010E                         u6680 006D                         u8360 006B  
                       u8280 000D                         u7800 00A3                         u7640 02AE  
                       u7560 0101                         u9080 063B                         u9217 000E  
                       u8601 003B                         u8521 007E                         u8441 0007  
                       u8265 009C                         u6921 0206                         u6841 0186  
                       u6833 016B                         u6825 014D                         u6761 010D  
                       u6745 00F7                         u6681 006C                         u8361 006A  
                       u8281 000C                         u8425 003F                         u7801 00A2  
                       u6585 0029                         u7465 00D7                         u7641 02AD  
                       u7625 021B                         u7561 0100                         u7545 006E  
                       u9081 063A                         u9065 0600                         u8610 0064  
                       u8602 003C                         u8530 0085                         u8450 000C  
                       u6930 020D                         u6850 019A                         u6842 0187  
                       u6770 0113                         u6690 00C5                         u8370 0070  
                       u8290 0024                         u7730 0066                         u9170 0773  
                       u9090 064D                         u9227 000F                         u8611 0063  
                       u8603 0041                         u7395 02F2                         u8531 0084  
                       u8515 0074                         u8451 000B                         u8195 0048  
                       u6931 020C                         u6851 019B                         u6843 018C  
                       u6771 0112                         u6691 00C4                         u8371 006F  
                       u8355 005D                         u7731 0065                         u7635 0266  
                       u7555 00B9                         u9171 0772                         u9091 064C  
                       u9075 061E                         u8620 0072                         u8604 0042  
                       u8540 0089                         u8460 002C                         u6940 0212  
                       u6860 01B8                         u6852 01A0                         u6844 018D  
                       u8380 000A                         u7900 008B                         u7820 00B4  
                       u9180 078A                         u8700 00EB                         u9237 0016  
                       u8605 0047                         u8541 0088                         u8461 002B  
                       u6941 0211                         u6861 01B7                         u6853 01A1  
                       u6845 0192                         u6781 0125                         u8381 0009  
                       u7901 008A                         u7821 00B3                         u7725 0051  
                       u7485 013B                         u9181 0787                         u9165 06FB  
                       u8701 00EA                         u8630 008B                         u8606 0048  
                       u8550 009E                         u6950 0218                         u6870 01DD  
                       u6846 0193                         u6790 0137                         u6782 012C  
                       u7830 000D                         u7750 007F                         u8710 0132  
                       u6951 0217                         u6871 01DC                         u6791 0136  
                       u6783 0133                         u6695 00C1                         u8295 001F  
                       u7831 000C                         u7815 00A6                         u7751 007E  
                       u7735 0062                         u7495 0188                         u7655 02C1  
                       u7575 0114                         u8711 012F                         u8560 00AE  
                       u8480 004D                         u6960 021F                         u6880 01E2  
                       u7920 009D                         u7840 0021                         u7760 0083  
                       u7680 0008                         u8800 0029                         u8720 0138  
                       u8641 009D                         u8625 006D                         u8561 00AD  
                       u8481 004C                         u6961 021E                         u6881 01E1  
                       u7921 009C                         u7841 0020                         u7761 0082  
                       u7745 0072                         u7681 0007                         u7665 02FD  
                       u7585 0150                         u8801 0028                         u8721 0137  
                       u8650 00CA                         u8642 009E                         u8570 00B2  
                       u6970 0225                         u7930 00A4                         u7770 008A  
                       u7690 000E                         u8810 0050                         u8730 0179  
                       u8651 00C9                         u8643 00A3                         u8635 0086  
                       u8571 00B1                         u8555 0099                         u8475 003F  
                       u6971 0224                         u8395 000F                         u7931 00A3  
                       u7915 008D                         u7771 0089                         u7691 000D  
                       u7675 0339                         u7595 018C                         u8811 004F  
                       u8731 0178                         u8644 00A4                         u8580 0010  
                       u6980 0237                         u7860 0062                         u8900 026D  
                       u8820 005F                         u8740 01C1                         u8660 0014  
                       u8645 00A9                         u6981 0236                         u7861 0061  
                       u8901 026C                         u8821 005E                         u8741 01C0  
                       u8661 0013                         u9197 00F2                         u8646 00AA  
                       u8590 0029                         u6990 0246                         u7950 00B5  
                       u7790 009C                         u8830 0088                         u8750 020C  
                       u8670 003E                         u8495 0061                         u6895 01ED  
                       u7951 00B4                         u7855 0049                         u7791 009B  
                       u8831 0087                         u8751 020B                         u8671 003D  
                       u7960 0006                         u7880 0080                         u8920 0338  
                       u8760 02A3                         u8680 0088                         u8585 000B  
                       u7961 0005                         u7945 00A7                         u7881 007F  
                       u7865 005E                         u7785 008C                         u8921 0337  
                       u8825 005B                         u8761 02A2                         u8681 0087  
                       u7890 0084                         u8930 035F                         u8850 01D7  
                       u8770 02D5                         u8690 0096                         u8595 0024  
                       u6995 0241                         u7891 0083                         u7875 0073  
                       u8931 035E                         u8915 0284                         u8851 01D6  
                       u8771 02D4                         u8691 0095                         u8940 036E  
                       u8860 01E6                         u8780 02EC                         u8941 036D  
                       u8861 01E5                         u8845 0196                         u8781 02EB  
                       u7990 0020                         u8950 0397                         u8870 0215  
                       u8790 0000                         u7991 001F                         u7975 000D  
                       u8951 0396                         u8935 035B                         u8871 0214  
                       u8855 01D3                         u8791 0343                         u8880 022D  
                       u7985 0014                         u8945 036A                         u8881 022C  
                       u8785 02E8                         u8890 0259                         u8891 0258  
                       u8795 033E                         u8980 0537                         u8981 0536  
                       u8965 0428                         u8990 0557                         u8991 0556  
                       u8975 04D8                         u8895 0255                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
                       _data 000B                         _main 0000           __size_of_LCD_Clear 000D  
                       btemp 007E                         start 0000*                _sprintf$1127 0000  
                LCD_Cursor@a 0009                  LCD_Cursor@x 0008                  LCD_Cursor@y 0006  
                      ??_ISR 0000                ___fltol@sign1 0040              __end_of___aldiv 009D  
            __end_of___fladd 0288                        ?_main 0000              __end_of___awdiv 0069  
            __end_of___flneg 000B              __end_of___awmod 0059              __end_of___flmul 0361  
            __end_of___flsub 0050              __end_of___fltol 007C                        _ANSEL 0188  
            __end_of___lldiv 0068              ___awdiv@divisor 0000              __end_of___llmod 0056  
            __end_of___lwdiv 0046                        i1l240 0000                        i1l243 0007  
            __end_of___lwmod 003A              ___awdiv@counter 0005                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISE 0089                        _TXREG 0019                        _vADC1 0009  
                      _vADC2 0008                        _Setup 0000              __end_of_dpowers 00A0  
                      _scale 0000              __end_of_isdigit 0012                  conversion@b 002C  
        __size_of_LCD_Cursor 0024                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0791                  ?_USART_Init 0008  
            __initialization 0000                   _Read_USART 0000                 __end_of_main 00FC  
                     ??_main 004C            __end_of_LCD_Clear 000D             __end_of_ValorADC 00FC  
       __size_of__tdiv_to_l_ 00BD                       ?_Setup 0000                       _ADCON1 009F  
           ___llmod@dividend 000C                       ?_scale 0024                       _ADRESH 001E  
           ___awdiv@dividend 0002                       _ANSELH 0189                       _LCD_ON 0000  
                     i1l3431 0000                       i1l3433 0006                       i1l3871 0006  
                     i1l3881 0022                       i1l3873 0007                       i1l3875 000F  
                     i1l3877 0015                       i1l3869 0000                       i1l3879 001C  
                     u621_20 0006                       u621_21 0005                       u622_20 0015  
                     u622_21 0014                       u623_20 0022                       u623_21 0021  
                     u555_20 0006                       u555_21 0005                       _PUERTO 0000  
                     _TRISC6 043E                       _TRISC7 043F                       _RUSART 0000  
           __end_of___xxtofl 00BC         __size_of_comandosLCD 001B             __end_of__powers_ 0044  
                     ___flge 0000                       ___fleq 0000                    ??___aldiv 0003  
                  ??___fladd 0040                       ___wmul 0000                    ??___awdiv 0004  
                  ??___flneg 0007                    ??___awmod 0007                    ??___flmul 0012  
                  ??___flsub 000A                    ??___fltol 003B                    ??___lldiv 0003  
                  ??___llmod 0009                    ??___lwdiv 0009                    ??___lwmod 0007  
                     _fround 0000             ___awdiv@quotient 0007              ___awmod@divisor 0003  
            ___awmod@counter 0008                    ??_isdigit 0003           __size_of__Umul8_16 0029  
                     saved_w 007E          __size_of_USART_Init 00DD                    ??_sprintf 0013  
                 ___flge@ff1 0000                   ___flge@ff2 0004                 ___xxtofl@arg 0006  
               ___xxtofl@exp 0005                 ___xxtofl@val 0003                   ___fleq@ff1 0000  
                 ___fleq@ff2 0004      __end_of__initialization 000A                   ___flneg@f1 0003  
                 ___fltol@f1 0037                  ?_Read_USART 0000               __pcstackCOMMON 0000  
              __end_of_Setup 001F                 ??_LCD_Cursor 0007                __end_of_scale 0363  
                 __div_to_l_ 0000                      ??_Setup 0003              __div_to_l_@exp1 0009  
            __div_to_l_@cntr 0008                      ??_scale 0028              __div_to_l_@quot 0004  
               sprintf@width 0007                 Write_USART@a 0003                   __pbssBANK1 0000  
                    ?_LCD_ON 0000           __end_of_LCD_Cursor 0024                      ?_PUERTO 0000  
              __div_to_l_@f1 0000                __div_to_l_@f2 0004            __end_of__Umul8_16 0029  
                  ?_ValorADC 0000                   __pmaintext 0000                      ?___flge 0000  
                    ?___fleq 0000                      ?___wmul 0003                      PUERTO@x 0003  
              ??_Write_USART 0003                   __pintentry 0000                      ?_fround 0024  
 __end_of_Write_USART_String 002B                   _config_ADC 0000                    ?___xxtofl 0003  
        __size_of_Read_USART 0008                   __stringtab 0000              __size_of_LCD_ON 002C  
                 _conversion 0000              __size_of_PUERTO 003E                 ??_USART_Init 000C  
          __end_of__npowers_ 0078                   _scale$1126 0032                   ??_ValorADC 0003  
                    ___aldiv 0000              __size_of___flge 00A4              __size_of___fleq 0050  
                    ___fladd 0000                      ___awdiv 0000                      ___flneg 0000  
                    ___awmod 0000                      ___flmul 0000                      ___flsub 0000  
                    ___fltol 0000                      ___lldiv 0000              __size_of___wmul 0025  
                    ___llmod 0000                      ___lwdiv 0000                      ___lwmod 0000  
                  _ANSELbits 0188              __size_of_fround 020D                      __ptext1 0000  
                    __ptext2 0000                      __ptext3 0000                      __ptext4 0000  
                    __ptext5 0000                      __ptext6 0000                      __ptext7 0000  
                    __ptext8 0000                      __ptext9 0000                 __size_of_ISR 002D  
                ?__div_to_l_ 0000                      _dpowers 0078          __end_of_Write_USART 000C  
                    _isdigit 0000                   ??___xxtofl 0000             ___awmod@dividend 0005  
           ___aldiv@dividend 0004                    _LCD_Clear 0000           __end_of_USART_Init 00DD  
                  _LCD_Print 0000*                     _sprintf 0000                      clrloop0 0001  
       end_of_initialization 000A              ___lldiv@divisor 0000              ___lldiv@counter 0008  
           ___aldiv@quotient 0006                      psplit$0 C0033               __tdiv_to_l_@f1 0000  
             __tdiv_to_l_@f2 0004                ??__tdiv_to_l_ 0003                  ___fladd@grs 004B  
                ?_config_ADC 0000                ___xxtofl@sign 0004                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISEbits 0089                   ?_LCD_Clear 0000  
                 ?_LCD_Print 0000                  ___flmul@grs 0019                  ?_conversion 0024  
              ??_comandosLCD 0004               __end_of_LCD_ON 002C               __end_of_PUERTO 003E  
        __size_of__div_to_l_ 00C0                 ??_Read_USART 0000               __end_of___flge 00A4  
             __end_of___fleq 0050                  _Write_USART 0000               __end_of___wmul 0025  
          pnum$text1_split_1 0033                  USART_Init@x 0018               __end_of_fround 020D  
        start_initialization 0000                  __end_of_ISR 002D          __end_of__tdiv_to_l_ 00BD  
         __end_of_Read_USART 0008                     ??_LCD_ON 0006                    ValorADC@x 0005  
                   ??_PUERTO 0003              ___llmod@divisor 0008              ___llmod@counter 0010  
        __size_of_config_ADC 000B                     ??___flge 0003                     ??___fleq 0003  
        __end_of_comandosLCD 001B                     ??___wmul 0007            __size_of_ValorADC 00FC  
                  __Umul8_16 0000                     ??_fround 0028                sprintf@tmpval 0009  
                  ___fladd@a 003C                    ___fladd@b 0038          __size_of_conversion 0038  
                 fround@prec 0037                    ___flmul@a 000E                    ___flmul@b 000A  
                __pbssCOMMON 0000                    ___flsub@a 0000                    ___flsub@b 0004  
                  ___latbits 0002                __pcstackBANK0 0000                __pcstackBANK1 0000  
              __pcstackBANK3 0000                  ??_LCD_Clear 0006            __size_of___xxtofl 00BC  
                ??_LCD_Print 0000                  sprintf@flag 0005                  sprintf@eexp 0011  
                sprintf@fval 0013           _Write_USART_String 0000                  sprintf@prec 0018  
           ___lwdiv@dividend 0002          ?_Write_USART_String 0004                     ?___aldiv 0000  
                   ?___fladd 0038                     ?___awdiv 0000                     ?___flneg 0003  
                   ?___awmod 0003                     ?___flmul 000A                     ?___flsub 0000  
                   ?___fltol 0037                     ?___lldiv 0000                     ?___llmod 0008  
                  __npowers_ 0044                   ?__Umul8_16 0003                     ?___lwdiv 0000  
                   ?___lwmod 0003                    __pstrings 0000                  __tdiv_to_l_ 0000  
               ??__div_to_l_ 0003                     ?_isdigit 0000         ??_Write_USART_String 0006  
             __size_of_Setup 001F             ___lwdiv@quotient 0005                     ?_sprintf 0008  
             __size_of_scale 0363              ___aldiv@divisor 0000            interrupt_function 0000  
            ___aldiv@counter 0004               ___wmul@product 0007                  _comandosLCD 0000  
                  clear_ram0 0000                     _PIE1bits 008C                     _PIR1bits 000C  
         __end_of__div_to_l_ 00C0                   _ADCON0bits 001F                  __stringbase 000F  
          ___wmul@multiplier 0003                  _LCD_Print$0 0000           USART_Init@baudrate 0008  
               ??_config_ADC 0003                 ??_conversion 0028                     _ValorADC 0000  
         __end_of_config_ADC 000B                  ??__Umul8_16 0005                 ?_Write_USART 0000  
           __size_of___aldiv 009D             __size_of___fladd 0288             __size_of___awdiv 0069  
           __size_of___flneg 000B             __size_of___awmod 0059             __size_of___flmul 0361  
           __size_of___flsub 0050             __size_of___fltol 007C             __size_of___lldiv 0068  
           __size_of___llmod 0056             __size_of___lwdiv 0046             __size_of___lwmod 003A  
                _fround$1124 0033                  _fround$1125 002F           __end_of__stringtab 0010  
                _isdigit$944 0003                   _ANSELHbits 0189                   sprintf@val 000D  
         __end_of_conversion 0038                     ___xxtofl 0000             __size_of_isdigit 0012  
            ___lwdiv@divisor 0000              ___lwdiv@counter 0004                     __ptext10 0000  
                   __ptext11 0000                     __ptext20 0000                     __ptext12 0000  
                   __ptext21 0000                     __ptext13 0000                     __ptext30 0000  
                   __ptext22 0000                     __ptext14 0000                     __ptext31 0000  
                   __ptext23 0000                     __ptext15 0000                     __ptext32 0000  
                   __ptext24 0000                     __ptext16 0000                     __ptext33 0000  
                   __ptext25 0000                     __ptext17 0000                     __ptext34 0000  
                   __ptext26 0000                     __ptext18 0000                     __ptext35 0000  
                   __ptext27 0000                     __ptext19 0000                     __ptext36 0000  
                   __ptext28 0000                     __ptext37 0000                     __ptext29 0000  
                   __powers_ 0010                     _contador 000A             __size_of_sprintf 0000  
              __size_of_main 00FC                    pnum$text1 000C                   _LCD_Cursor 0000  
                 _INTCONbits 000B          Write_USART_String@a 0004          Write_USART_String@i 0007  
                   isdigit@c 0004                     scale@scl 0036                     intlevel1 0000* 
                  sprintf@ap 0004             __tdiv_to_l_@exp1 000D             __tdiv_to_l_@cntr 000C  
                  sprintf@sp 0017             __tdiv_to_l_@quot 0008             ___lwmod@dividend 0005  
           ___lldiv@dividend 0004                    stringcode 000A                 ?__tdiv_to_l_ 0000  
     __Umul8_16@multiplicand 0003                     sprintf@c 001A                     sprintf@f 0008  
           ___lldiv@quotient 0004              ___lwmod@divisor 0003              ___lwmod@counter 0008  
                   stringdir 000A                     stringtab 0000                 ___aldiv@sign 0005  
              ___fladd@signs 0048                 ___fladd@aexp 0049                 ___fladd@bexp 004A  
               ?_comandosLCD 0000         __Umul8_16@multiplier 0004                   _USART_Init 0000  
          __Umul8_16@product 0000  
